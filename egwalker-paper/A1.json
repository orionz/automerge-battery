{"kind":"concurrent","endContent":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n#include \"node.h\"\n\n// ========== local headers ==========\n\n#include \"debug_utils-inl.h\"\n#include \"env-inl.h\"\n#include \"memory_tracker-inl.h\"\n#include \"histogram-inl.h\"\n#include \"node_binding.h\"\n#include \"node_errors.h\"\n#include \"node_internals.h\"\n#include \"node_main_instance.h\"\n#include \"node_metadata.h\"\n#include \"node_native_module_env.h\"\n#include \"node_options-inl.h\"\n#include \"node_perf.h\"\n#include \"node_process-inl.h\"\n#include \"node_report.h\"\n#include \"node_revert.h\"\n#include \"node_v8_platform-inl.h\"\n#include \"node_version.h\"\n\n#if HAVE_OPENSSL\n#include \"allocated_buffer-inl.h\"  // Inlined functions needed by node_crypto.h\n#include \"node_crypto.h\"\n#endif\n\n#if defined(NODE_HAVE_I18N_SUPPORT)\n#include \"node_i18n.h\"\n#endif\n\n#if HAVE_INSPECTOR\n#include \"inspector_agent.h\"\n#include \"inspector_io.h\"\n#endif\n\n#if defined HAVE_DTRACE || defined HAVE_ETW\n#include \"node_dtrace.h\"\n#endif\n\n#if NODE_USE_V8_PLATFORM\n#include \"libplatform/libplatform.h\"\n#endif  // NODE_USE_V8_PLATFORM\n#include \"v8-profiler.h\"\n\n#if HAVE_INSPECTOR\n#include \"inspector/worker_inspector.h\"  // ParentInspectorHandle\n#endif\n\n#include \"large_pages/node_large_page.h\"\n\n#if defined(__APPLE__) || defined(__linux__) || defined(_WIN32)\n#define NODE_USE_V8_WASM_TRAP_HANDLER 1\n#else\n#define NODE_USE_V8_WASM_TRAP_HANDLER 0\n#endif\n\n#if NODE_USE_V8_WASM_TRAP_HANDLER\n#if defined(_WIN32)\n#include \"v8-wasm-trap-handler-win.h\"\n#else\n#include <atomic>\n#include \"v8-wasm-trap-handler-posix.h\"\n#endif\n#endif  // NODE_USE_V8_WASM_TRAP_HANDLER\n\n// ========== global C headers ==========\n\n#include <fcntl.h>  // _O_RDWR\n#include <sys/types.h>\n\n#if defined(NODE_HAVE_I18N_SUPPORT)\n#include <unicode/uvernum.h>\n#include <unicode/utypes.h>\n#endif\n\n\n#if defined(LEAK_SANITIZER)\n#include <sanitizer/lsan_interface.h>\n#endif\n\n#if defined(_MSC_VER)\n#include <direct.h>\n#include <io.h>\n#define STDIN_FILENO 0\n#else\n#include <pthread.h>\n#include <sys/resource.h>  // getrlimit, setrlimit\n#include <termios.h>       // tcgetattr, tcsetattr\n#include <unistd.h>        // STDIN_FILENO, STDERR_FILENO\n#endif\n\n// ========== global C++ headers ==========\n\n#include <cerrno>\n#include <climits>  // PATH_MAX\n#include <csignal>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\n#include <string>\n#include <vector>\n\nnamespace node {\n\nusing native_module::NativeModuleEnv;\n\nusing v8::EscapableHandleScope;\nusing v8::Function;\nusing v8::FunctionCallbackInfo;\nusing v8::Isolate;\nusing v8::Local;\nusing v8::MaybeLocal;\nusing v8::Object;\nusing v8::String;\nusing v8::Undefined;\nusing v8::V8;\nusing v8::Value;\n\nnamespace per_process {\n\n// node_revert.h\n// Bit flag used to track security reverts.\nunsigned int reverted_cve = 0;\n\n// util.h\n// Tells whether the per-process V8::Initialize() is called and\n// if it is safe to call v8::Isolate::TryGetCurrent().\nbool v8_initialized = false;\n\n// node_internals.h\n// process-relative uptime base in nanoseconds, initialized in node::Start()\nuint64_t node_start_time;\n\n#if NODE_USE_V8_WASM_TRAP_HANDLER && defined(_WIN32)\nPVOID old_vectored_exception_handler;\n#endif\n\n// node_v8_platform-inl.h\nstruct V8Platform v8_platform;\n}  // namespace per_process\n\n#ifdef __POSIX__\nvoid SignalExit(int signo, siginfo_t* info, void* ucontext) {\n  ResetStdio();\n  raise(signo);\n}\n#endif  // __POSIX__\n\nMaybeLocal<Value> ExecuteBootstrapper(Environment* env,\n                                      const char* id,\n                                      std::vector<Local<String>>* parameters,\n                                      std::vector<Local<Value>>* arguments) {\n  EscapableHandleScope scope(env->isolate());\n  MaybeLocal<Function> maybe_fn =\n      NativeModuleEnv::LookupAndCompile(env->context(), id, parameters, env);\n\n  Local<Function> fn;\n  if (!maybe_fn.ToLocal(&fn)) {\n    return MaybeLocal<Value>();\n  }\n\n  MaybeLocal<Value> result = fn->Call(env->context(),\n                                      Undefined(env->isolate()),\n                                      arguments->size(),\n                                      arguments->data());\n\n  // If there was an error during bootstrap, it must be unrecoverable\n  // (e.g. max call stack exceeded). Clear the stack so that the\n  // AsyncCallbackScope destructor doesn't fail on the id check.\n  // There are only two ways to have a stack size > 1: 1) the user manually\n  // called MakeCallback or 2) user awaited during bootstrap, which triggered\n  // _tickCallback().\n  if (result.IsEmpty()) {\n    env->async_hooks()->clear_async_id_stack();\n  }\n\n  return scope.EscapeMaybe(result);\n}\n\n#if HAVE_INSPECTOR\nint Environment::InitializeInspector(\n    std::unique_ptr<inspector::ParentInspectorHandle> parent_handle) {\n  std::string inspector_path;\n  bool is_main = !parent_handle;\n  if (parent_handle) {\n    inspector_path = parent_handle->url();\n    inspector_agent_->SetParentHandle(std::move(parent_handle));\n  } else {\n    inspector_path = argv_.size() > 1 ? argv_[1].c_str() : \"\";\n  }\n\n  CHECK(!inspector_agent_->IsListening());\n  // Inspector agent can't fail to start, but if it was configured to listen\n  // right away on the websocket port and fails to bind/etc, this will return\n  // false.\n  inspector_agent_->Start(inspector_path,\n                          options_->debug_options(),\n                          inspector_host_port(),\n                          is_main);\n  if (options_->debug_options().inspector_enabled &&\n      !inspector_agent_->IsListening()) {\n    return 12;  // Signal internal error\n  }\n\n  profiler::StartProfilers(this);\n\n  if (inspector_agent_->options().break_node_first_line) {\n    inspector_agent_->PauseOnNextJavascriptStatement(\"Break at bootstrap\");\n  }\n\n  return 0;\n}\n#endif  // HAVE_INSPECTOR\n\n#define ATOMIC_WAIT_EVENTS(V)                                               \\\n  V(kStartWait,           \"started\")                                        \\\n  V(kWokenUp,             \"was woken up by another thread\")                 \\\n  V(kTimedOut,            \"timed out\")                                      \\\n  V(kTerminatedExecution, \"was stopped by terminated execution\")            \\\n  V(kAPIStopped,          \"was stopped through the embedder API\")           \\\n  V(kNotEqual,            \"did not wait because the values mismatched\")     \\\n\nstatic void AtomicsWaitCallback(Isolate::AtomicsWaitEvent event,\n                                Local<v8::SharedArrayBuffer> array_buffer,\n                                size_t offset_in_bytes, int64_t value,\n                                double timeout_in_ms,\n                                Isolate::AtomicsWaitWakeHandle* stop_handle,\n                                void* data) {\n  Environment* env = static_cast<Environment*>(data);\n\n  const char* message = \"(unknown event)\";\n  switch (event) {\n#define V(key, msg)                         \\\n    case Isolate::AtomicsWaitEvent::key:    \\\n      message = msg;                        \\\n      break;\n    ATOMIC_WAIT_EVENTS(V)\n#undef V\n  }\n\n  fprintf(stderr,\n          \"(node:%d) [Thread %\" PRIu64 \"] Atomics.wait(%p + %zx, %\" PRId64\n              \", %.f) %s\\n\",\n          static_cast<int>(uv_os_getpid()),\n          env->thread_id(),\n          array_buffer->GetBackingStore()->Data(),\n          offset_in_bytes,\n          value,\n          timeout_in_ms,\n          message);\n}\n\nvoid Environment::InitializeDiagnostics() {\n  isolate_->GetHeapProfiler()->AddBuildEmbedderGraphCallback(\n      Environment::BuildEmbedderGraph, this);\n  if (options_->heap_snapshot_near_heap_limit > 0) {\n    isolate_->AddNearHeapLimitCallback(Environment::NearHeapLimitCallback,\n                                       this);\n  }\n  if (options_->trace_uncaught)\n    isolate_->SetCaptureStackTraceForUncaughtExceptions(true);\n  if (options_->trace_atomics_wait) {\n    isolate_->SetAtomicsWaitCallback(AtomicsWaitCallback, this);\n    AddCleanupHook([](void* data) {\n      Environment* env = static_cast<Environment*>(data);\n      env->isolate()->SetAtomicsWaitCallback(nullptr, nullptr);\n    }, this);\n  }\n\n#if defined HAVE_DTRACE || defined HAVE_ETW\n  InitDTrace(this);\n#endif\n}\n\nMaybeLocal<Value> Environment::BootstrapInternalLoaders() {\n  EscapableHandleScope scope(isolate_);\n\n  // Create binding loaders\n  std::vector<Local<String>> loaders_params = {\n      process_string(),\n      FIXED_ONE_BYTE_STRING(isolate_, \"getLinkedBinding\"),\n      FIXED_ONE_BYTE_STRING(isolate_, \"getInternalBinding\"),\n      primordials_string()};\n  std::vector<Local<Value>> loaders_args = {\n      process_object(),\n      NewFunctionTemplate(binding::GetLinkedBinding)\n          ->GetFunction(context())\n          .ToLocalChecked(),\n      NewFunctionTemplate(binding::GetInternalBinding)\n          ->GetFunction(context())\n          .ToLocalChecked(),\n      primordials()};\n\n  // Bootstrap internal loaders\n  Local<Value> loader_exports;\n  if (!ExecuteBootstrapper(\n           this, \"internal/bootstrap/loaders\", &loaders_params, &loaders_args)\n           .ToLocal(&loader_exports)) {\n    return MaybeLocal<Value>();\n  }\n  CHECK(loader_exports->IsObject());\n  Local<Object> loader_exports_obj = loader_exports.As<Object>();\n  Local<Value> internal_binding_loader =\n      loader_exports_obj->Get(context(), internal_binding_string())\n          .ToLocalChecked();\n  CHECK(internal_binding_loader->IsFunction());\n  set_internal_binding_loader(internal_binding_loader.As<Function>());\n  Local<Value> require =\n      loader_exports_obj->Get(context(), require_string()).ToLocalChecked();\n  CHECK(require->IsFunction());\n  set_native_module_require(require.As<Function>());\n\n  return scope.Escape(loader_exports);\n}\n\nMaybeLocal<Value> Environment::BootstrapNode() {\n  EscapableHandleScope scope(isolate_);\n\n  Local<Object> global = context()->Global();\n  // TODO(joyeecheung): this can be done in JS land now.\n  global->Set(context(), FIXED_ONE_BYTE_STRING(isolate_, \"global\"), global)\n      .Check();\n\n  // process, require, internalBinding, primordials\n  std::vector<Local<String>> node_params = {\n      process_string(),\n      require_string(),\n      internal_binding_string(),\n      primordials_string()};\n  std::vector<Local<Value>> node_args = {\n      process_object(),\n      native_module_require(),\n      internal_binding_loader(),\n      primordials()};\n\n  MaybeLocal<Value> result = ExecuteBootstrapper(\n      this, \"internal/bootstrap/node\", &node_params, &node_args);\n\n  if (result.IsEmpty()) {\n    return scope.EscapeMaybe(result);\n  }\n\n  // TODO(joyeecheung): skip these in the snapshot building for workers.\n  auto thread_switch_id =\n      is_main_thread() ? \"internal/bootstrap/switches/is_main_thread\"\n                       : \"internal/bootstrap/switches/is_not_main_thread\";\n  result =\n      ExecuteBootstrapper(this, thread_switch_id, &node_params, &node_args);\n\n  if (result.IsEmpty()) {\n    return scope.EscapeMaybe(result);\n  }\n\n  auto process_state_switch_id =\n      owns_process_state()\n          ? \"internal/bootstrap/switches/does_own_process_state\"\n          : \"internal/bootstrap/switches/does_not_own_process_state\";\n  result = ExecuteBootstrapper(\n      this, process_state_switch_id, &node_params, &node_args);\n\n  if (result.IsEmpty()) {\n    return scope.EscapeMaybe(result);\n  }\n\n  Local<String> env_string = FIXED_ONE_BYTE_STRING(isolate_, \"env\");\n  Local<Object> env_var_proxy;\n  if (!CreateEnvVarProxy(context(), isolate_).ToLocal(&env_var_proxy) ||\n      process_object()->Set(context(), env_string, env_var_proxy).IsNothing()) {\n    return MaybeLocal<Value>();\n  }\n\n  return scope.EscapeMaybe(result);\n}\n\nMaybeLocal<Value> Environment::RunBootstrapping() {\n  EscapableHandleScope scope(isolate_);\n\n  CHECK(!has_run_bootstrapping_code());\n\n  if (BootstrapInternalLoaders().IsEmpty()) {\n    return MaybeLocal<Value>();\n  }\n\n  Local<Value> result;\n  if (!BootstrapNode().ToLocal(&result)) {\n    return MaybeLocal<Value>();\n  }\n\n  // Make sure that no request or handle is created during bootstrap -\n  // if necessary those should be done in pre-execution.\n  // Usually, doing so would trigger the checks present in the ReqWrap and\n  // HandleWrap classes, so this is only a consistency check.\n  CHECK(req_wrap_queue()->IsEmpty());\n  CHECK(handle_wrap_queue()->IsEmpty());\n\n  DoneBootstrapping();\n\n  return scope.Escape(result);\n}\n\nvoid MarkBootstrapComplete(const FunctionCallbackInfo<Value>& args) {\n  Environment* env = Environment::GetCurrent(args);\n  env->performance_state()->Mark(\n      performance::NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE);\n}\n\nstatic\nMaybeLocal<Value> StartExecution(Environment* env, const char* main_script_id) {\n  EscapableHandleScope scope(env->isolate());\n  CHECK_NOT_NULL(main_script_id);\n\n  std::vector<Local<String>> parameters = {\n      env->process_string(),\n      env->require_string(),\n      env->internal_binding_string(),\n      env->primordials_string(),\n      FIXED_ONE_BYTE_STRING(env->isolate(), \"markBootstrapComplete\")};\n\n  std::vector<Local<Value>> arguments = {\n      env->process_object(),\n      env->native_module_require(),\n      env->internal_binding_loader(),\n      env->primordials(),\n      env->NewFunctionTemplate(MarkBootstrapComplete)\n          ->GetFunction(env->context())\n          .ToLocalChecked()};\n\n  return scope.EscapeMaybe(\n      ExecuteBootstrapper(env, main_script_id, &parameters, &arguments));\n}\n\nMaybeLocal<Value> StartExecution(Environment* env, StartExecutionCallback cb) {\n  InternalCallbackScope callback_scope(\n      env,\n      Object::New(env->isolate()),\n      { 1, 0 },\n      InternalCallbackScope::kSkipAsyncHooks);\n\n  if (cb != nullptr) {\n    EscapableHandleScope scope(env->isolate());\n\n    if (StartExecution(env, \"internal/bootstrap/environment\").IsEmpty())\n      return {};\n\n    StartExecutionCallbackInfo info = {\n      env->process_object(),\n      env->native_module_require(),\n    };\n\n    return scope.EscapeMaybe(cb(info));\n  }\n\n  if (env->worker_context() != nullptr) {\n    return StartExecution(env, \"internal/main/worker_thread\");\n  }\n\n  std::string first_argv;\n  if (env->argv().size() > 1) {\n    first_argv = env->argv()[1];\n  }\n\n  if (first_argv == \"inspect\") {\n    return StartExecution(env, \"internal/main/inspect\");\n  }\n\n  if (per_process::cli_options->print_help) {\n    return StartExecution(env, \"internal/main/print_help\");\n  }\n\n\n  if (env->options()->prof_process) {\n    return StartExecution(env, \"internal/main/prof_process\");\n  }\n\n  // -e/--eval without -i/--interactive\n  if (env->options()->has_eval_string && !env->options()->force_repl) {\n    return StartExecution(env, \"internal/main/eval_string\");\n  }\n\n  if (env->options()->syntax_check_only) {\n    return StartExecution(env, \"internal/main/check_syntax\");\n  }\n\n  if (!first_argv.empty() && first_argv != \"-\") {\n    return StartExecution(env, \"internal/main/run_main_module\");\n  }\n\n  if (env->options()->force_repl || uv_guess_handle(STDIN_FILENO) == UV_TTY) {\n    return StartExecution(env, \"internal/main/repl\");\n  }\n\n  return StartExecution(env, \"internal/main/eval_stdin\");\n}\n\n#ifdef __POSIX__\ntypedef void (*sigaction_cb)(int signo, siginfo_t* info, void* ucontext);\n#endif\n#if NODE_USE_V8_WASM_TRAP_HANDLER\n#if defined(_WIN32)\nstatic LONG TrapWebAssemblyOrContinue(EXCEPTION_POINTERS* exception) {\n  if (v8::TryHandleWebAssemblyTrapWindows(exception)) {\n    return EXCEPTION_CONTINUE_EXECUTION;\n  }\n  return EXCEPTION_CONTINUE_SEARCH;\n}\n#else\nstatic std::atomic<sigaction_cb> previous_sigsegv_action;\n\nvoid TrapWebAssemblyOrContinue(int signo, siginfo_t* info, void* ucontext) {\n  if (!v8::TryHandleWebAssemblyTrapPosix(signo, info, ucontext)) {\n    sigaction_cb prev = previous_sigsegv_action.load();\n    if (prev != nullptr) {\n      prev(signo, info, ucontext);\n    } else {\n      // Reset to the default signal handler, i.e. cause a hard crash.\n      struct sigaction sa;\n      memset(&sa, 0, sizeof(sa));\n      sa.sa_handler = SIG_DFL;\n      CHECK_EQ(sigaction(signo, &sa, nullptr), 0);\n\n      ResetStdio();\n      raise(signo);\n    }\n  }\n}\n#endif  // defined(_WIN32)\n#endif  // NODE_USE_V8_WASM_TRAP_HANDLER\n\n#ifdef __POSIX__\nvoid RegisterSignalHandler(int signal,\n                           sigaction_cb handler,\n                           bool reset_handler) {\n  CHECK_NOT_NULL(handler);\n#if NODE_USE_V8_WASM_TRAP_HANDLER\n  if (signal == SIGSEGV) {\n    CHECK(previous_sigsegv_action.is_lock_free());\n    CHECK(!reset_handler);\n    previous_sigsegv_action.store(handler);\n    return;\n  }\n#endif  // NODE_USE_V8_WASM_TRAP_HANDLER\n  struct sigaction sa;\n  memset(&sa, 0, sizeof(sa));\n  sa.sa_sigaction = handler;\n  sa.sa_flags = reset_handler ? SA_RESETHAND : 0;\n  sigfillset(&sa.sa_mask);\n  CHECK_EQ(sigaction(signal, &sa, nullptr), 0);\n}\n#endif  // __POSIX__\n\n#ifdef __POSIX__\nstatic struct {\n  int flags;\n  bool isatty;\n  struct stat stat;\n  struct termios termios;\n} stdio[1 + STDERR_FILENO];\n#endif  // __POSIX__\n\n\ninline void PlatformInit() {\n#ifdef __POSIX__\n#if HAVE_INSPECTOR\n  sigset_t sigmask;\n  sigemptyset(&sigmask);\n  sigaddset(&sigmask, SIGUSR1);\n  const int err = pthread_sigmask(SIG_SETMASK, &sigmask, nullptr);\n#endif  // HAVE_INSPECTOR\n\n  // Make sure file descriptors 0-2 are valid before we start logging anything.\n  for (auto& s : stdio) {\n    const int fd = &s - stdio;\n    if (fstat(fd, &s.stat) == 0)\n      continue;\n    // Anything but EBADF means something is seriously wrong.  We don't\n    // have to special-case EINTR, fstat() is not interruptible.\n    if (errno != EBADF)\n      ABORT();\n    if (fd != open(\"/dev/null\", O_RDWR))\n      ABORT();\n    if (fstat(fd, &s.stat) != 0)\n      ABORT();\n  }\n\n#if HAVE_INSPECTOR\n  CHECK_EQ(err, 0);\n#endif  // HAVE_INSPECTOR\n\n  // TODO(addaleax): NODE_SHARED_MODE does not really make sense here.\n#ifndef NODE_SHARED_MODE\n  // Restore signal dispositions, the parent process may have changed them.\n  struct sigaction act;\n  memset(&act, 0, sizeof(act));\n\n  // The hard-coded upper limit is because NSIG is not very reliable; on Linux,\n  // it evaluates to 32, 34 or 64, depending on whether RT signals are enabled.\n  // Counting up to SIGRTMIN doesn't work for the same reason.\n  for (unsigned nr = 1; nr < kMaxSignal; nr += 1) {\n    if (nr == SIGKILL || nr == SIGSTOP)\n      continue;\n    act.sa_handler = (nr == SIGPIPE || nr == SIGXFSZ) ? SIG_IGN : SIG_DFL;\n    CHECK_EQ(0, sigaction(nr, &act, nullptr));\n  }\n#endif  // !NODE_SHARED_MODE\n\n  // Record the state of the stdio file descriptors so we can restore it\n  // on exit.  Needs to happen before installing signal handlers because\n  // they make use of that information.\n  for (auto& s : stdio) {\n    const int fd = &s - stdio;\n    int err;\n\n    do\n      s.flags = fcntl(fd, F_GETFL);\n    while (s.flags == -1 && errno == EINTR);  // NOLINT\n    CHECK_NE(s.flags, -1);\n\n    if (uv_guess_handle(fd) != UV_TTY) continue;\n    s.isatty = true;\n\n    do\n      err = tcgetattr(fd, &s.termios);\n    while (err == -1 && errno == EINTR);  // NOLINT\n    CHECK_EQ(err, 0);\n  }\n\n  RegisterSignalHandler(SIGINT, SignalExit, true);\n  RegisterSignalHandler(SIGTERM, SignalExit, true);\n\n#if NODE_USE_V8_WASM_TRAP_HANDLER\n#if defined(_WIN32)\n  {\n    constexpr ULONG first = TRUE;\n    per_process::old_vectored_exception_handler =\n        AddVectoredExceptionHandler(first, TrapWebAssemblyOrContinue);\n  }\n#else\n  // Tell V8 to disable emitting WebAssembly\n  // memory bounds checks. This means that we have\n  // to catch the SIGSEGV in TrapWebAssemblyOrContinue\n  // and pass the signal context to V8.\n  {\n    struct sigaction sa;\n    memset(&sa, 0, sizeof(sa));\n    sa.sa_sigaction = TrapWebAssemblyOrContinue;\n    sa.sa_flags = SA_SIGINFO;\n    CHECK_EQ(sigaction(SIGSEGV, &sa, nullptr), 0);\n  }\n#endif  // defined(_WIN32)\n  V8::EnableWebAssemblyTrapHandler(false);\n#endif  // NODE_USE_V8_WASM_TRAP_HANDLER\n\n  // Raise the open file descriptor limit.\n  struct rlimit lim;\n  if (getrlimit(RLIMIT_NOFILE, &lim) == 0 && lim.rlim_cur != lim.rlim_max) {\n    // Do a binary search for the limit.\n    rlim_t min = lim.rlim_cur;\n    rlim_t max = 1 << 20;\n    // But if there's a defined upper bound, don't search, just set it.\n    if (lim.rlim_max != RLIM_INFINITY) {\n      min = lim.rlim_max;\n      max = lim.rlim_max;\n    }\n    do {\n      lim.rlim_cur = min + (max - min) / 2;\n      if (setrlimit(RLIMIT_NOFILE, &lim)) {\n        max = lim.rlim_cur;\n      } else {\n        min = lim.rlim_cur;\n      }\n    } while (min + 1 < max);\n  }\n#endif  // __POSIX__\n#ifdef _WIN32\n  for (int fd = 0; fd <= 2; ++fd) {\n    auto handle = reinterpret_cast<HANDLE>(_get_osfhandle(fd));\n    if (handle == INVALID_HANDLE_VALUE ||\n        GetFileType(handle) == FILE_TYPE_UNKNOWN) {\n      // Ignore _close result. If it fails or not depends on used Windows\n      // version. We will just check _open result.\n      _close(fd);\n      if (fd != _open(\"nul\", _O_RDWR))\n        ABORT();\n    }\n  }\n#endif  // _WIN32\n}\n\n\n// Safe to call more than once and from signal handlers.\nvoid ResetStdio() {\n  uv_tty_reset_mode();\n#ifdef __POSIX__\n  for (auto& s : stdio) {\n    const int fd = &s - stdio;\n\n    struct stat tmp;\n    if (-1 == fstat(fd, &tmp)) {\n      CHECK_EQ(errno, EBADF);  // Program closed file descriptor.\n      continue;\n    }\n\n    bool is_same_file =\n        (s.stat.st_dev == tmp.st_dev && s.stat.st_ino == tmp.st_ino);\n    if (!is_same_file) continue;  // Program reopened file descriptor.\n\n    int flags;\n    do\n      flags = fcntl(fd, F_GETFL);\n    while (flags == -1 && errno == EINTR);  // NOLINT\n    CHECK_NE(flags, -1);\n\n    // Restore the O_NONBLOCK flag if it changed.\n    if (O_NONBLOCK & (flags ^ s.flags)) {\n      flags &= ~O_NONBLOCK;\n      flags |= s.flags & O_NONBLOCK;\n\n      int err;\n      do\n        err = fcntl(fd, F_SETFL, flags);\n      while (err == -1 && errno == EINTR);  // NOLINT\n      CHECK_NE(err, -1);\n    }\n\n    if (s.isatty) {\n      sigset_t sa;\n      int err;\n\n      // We might be a background job that doesn't own the TTY so block SIGTTOU\n      // before making the tcsetattr() call, otherwise that signal suspends us.\n      sigemptyset(&sa);\n      sigaddset(&sa, SIGTTOU);\n\n      CHECK_EQ(0, pthread_sigmask(SIG_BLOCK, &sa, nullptr));\n      do\n        err = tcsetattr(fd, TCSANOW, &s.termios);\n      while (err == -1 && errno == EINTR);  // NOLINT\n      CHECK_EQ(0, pthread_sigmask(SIG_UNBLOCK, &sa, nullptr));\n\n      // Normally we expect err == 0. But if macOS App Sandbox is enabled,\n      // tcsetattr will fail with err == -1 and errno == EPERM.\n      CHECK_IMPLIES(err != 0, err == -1 && errno == EPERM);\n    }\n  }\n#endif  // __POSIX__\n}\n\n\nint ProcessGlobalArgs(std::vector<std::string>* args,\n                      std::vector<std::string>* exec_args,\n                      std::vector<std::string>* errors,\n                      OptionEnvvarSettings settings) {\n  // Parse a few arguments which are specific to Node.\n  std::vector<std::string> v8_args;\n\n  Mutex::ScopedLock lock(per_process::cli_options_mutex);\n  options_parser::Parse(\n      args,\n      exec_args,\n      &v8_args,\n      per_process::cli_options.get(),\n      settings,\n      errors);\n\n  if (!errors->empty()) return 9;\n\n  std::string revert_error;\n  for (const std::string& cve : per_process::cli_options->security_reverts) {\n    Revert(cve.c_str(), &revert_error);\n    if (!revert_error.empty()) {\n      errors->emplace_back(std::move(revert_error));\n      return 12;\n    }\n  }\n\n  if (per_process::cli_options->disable_proto != \"delete\" &&\n      per_process::cli_options->disable_proto != \"throw\" &&\n      per_process::cli_options->disable_proto != \"\") {\n    errors->emplace_back(\"invalid mode passed to --disable-proto\");\n    return 12;\n  }\n\n  // TODO(aduh95): remove this when the harmony-import-assertions flag\n  // is removed in V8.\n  if (std::find(v8_args.begin(), v8_args.end(),\n                \"--no-harmony-import-assertions\") == v8_args.end()) {\n    v8_args.push_back(\"--harmony-import-assertions\");\n  }\n\n  auto env_opts = per_process::cli_options->per_isolate->per_env;\n  if (std::find(v8_args.begin(), v8_args.end(),\n                \"--abort-on-uncaught-exception\") != v8_args.end() ||\n      std::find(v8_args.begin(), v8_args.end(),\n                \"--abort_on_uncaught_exception\") != v8_args.end()) {\n    env_opts->abort_on_uncaught_exception = true;\n  }\n\n#ifdef __POSIX__\n  // Block SIGPROF signals when sleeping in epoll_wait/kevent/etc.  Avoids the\n  // performance penalty of frequent EINTR wakeups when the profiler is running.\n  // Only do this for v8.log profiling, as it breaks v8::CpuProfiler users.\n  if (std::find(v8_args.begin(), v8_args.end(), \"--prof\") != v8_args.end()) {\n    uv_loop_configure(uv_default_loop(), UV_LOOP_BLOCK_SIGNAL, SIGPROF);\n  }\n#endif\n\n  std::vector<char*> v8_args_as_char_ptr(v8_args.size());\n  if (v8_args.size() > 0) {\n    for (size_t i = 0; i < v8_args.size(); ++i)\n      v8_args_as_char_ptr[i] = &v8_args[i][0];\n    int argc = v8_args.size();\n    V8::SetFlagsFromCommandLine(&argc, &v8_args_as_char_ptr[0], true);\n    v8_args_as_char_ptr.resize(argc);\n  }\n\n  // Anything that's still in v8_argv is not a V8 or a node option.\n  for (size_t i = 1; i < v8_args_as_char_ptr.size(); i++)\n    errors->push_back(\"bad option: \" + std::string(v8_args_as_char_ptr[i]));\n\n  if (v8_args_as_char_ptr.size() > 1) return 9;\n\n  return 0;\n}\n\nstatic std::atomic_bool init_called{false};\n\nint InitializeNodeWithArgs(std::vector<std::string>* argv,\n                           std::vector<std::string>* exec_argv,\n                           std::vector<std::string>* errors) {\n  return InitializeNodeWithArgs(argv, exec_argv, errors,\n                                ProcessFlags::kNoFlags);\n}\n\nint InitializeNodeWithArgs(std::vector<std::string>* argv,\n                           std::vector<std::string>* exec_argv,\n                           std::vector<std::string>* errors,\n                           ProcessFlags::Flags flags) {\n  // Make sure InitializeNodeWithArgs() is called only once.\n  CHECK(!init_called.exchange(true));\n\n  // Initialize node_start_time to get relative uptime.\n  per_process::node_start_time = uv_hrtime();\n\n  // Register built-in modules\n  binding::RegisterBuiltinModules();\n\n  // Make inherited handles noninheritable.\n  if (!(flags & ProcessFlags::kEnableStdioInheritance))\n    uv_disable_stdio_inheritance();\n\n  // Cache the original command line to be\n  // used in diagnostic reports.\n  per_process::cli_options->cmdline = *argv;\n\n#if defined(NODE_V8_OPTIONS)\n  // Should come before the call to V8::SetFlagsFromCommandLine()\n  // so the user can disable a flag --foo at run-time by passing\n  // --no_foo from the command line.\n  V8::SetFlagsFromString(NODE_V8_OPTIONS, sizeof(NODE_V8_OPTIONS) - 1);\n#endif\n\n  HandleEnvOptions(per_process::cli_options->per_isolate->per_env);\n\n#if !defined(NODE_WITHOUT_NODE_OPTIONS)\n  if (!(flags & ProcessFlags::kDisableNodeOptionsEnv)) {\n    std::string node_options;\n\n    if (credentials::SafeGetenv(\"NODE_OPTIONS\", &node_options)) {\n      std::vector<std::string> env_argv =\n          ParseNodeOptionsEnvVar(node_options, errors);\n\n      if (!errors->empty()) return 9;\n\n      // [0] is expected to be the program name, fill it in from the real argv.\n      env_argv.insert(env_argv.begin(), argv->at(0));\n\n      const int exit_code = ProcessGlobalArgs(&env_argv,\n                                              nullptr,\n                                              errors,\n                                              kAllowedInEnvironment);\n      if (exit_code != 0) return exit_code;\n    }\n  }\n#endif\n\n  if (!(flags & ProcessFlags::kDisableCLIOptions)) {\n    const int exit_code = ProcessGlobalArgs(argv,\n                                            exec_argv,\n                                            errors,\n                                            kDisallowedInEnvironment);\n    if (exit_code != 0) return exit_code;\n  }\n\n  // Set the process.title immediately after processing argv if --title is set.\n  if (!per_process::cli_options->title.empty())\n    uv_set_process_title(per_process::cli_options->title.c_str());\n\n#if defined(NODE_HAVE_I18N_SUPPORT)\n  if (!(flags & ProcessFlags::kNoICU)) {\n    // If the parameter isn't given, use the env variable.\n    if (per_process::cli_options->icu_data_dir.empty())\n      credentials::SafeGetenv(\"NODE_ICU_DATA\",\n                              &per_process::cli_options->icu_data_dir);\n\n#ifdef NODE_ICU_DEFAULT_DATA_DIR\n    // If neither the CLI option nor the environment variable was specified,\n    // fall back to the configured default\n    if (per_process::cli_options->icu_data_dir.empty()) {\n      // Check whether the NODE_ICU_DEFAULT_DATA_DIR contains the right data\n      // file and can be read.\n      static const char full_path[] =\n          NODE_ICU_DEFAULT_DATA_DIR \"/\" U_ICUDATA_NAME \".dat\";\n\n      FILE* f = fopen(full_path, \"rb\");\n\n      if (f != nullptr) {\n        fclose(f);\n        per_process::cli_options->icu_data_dir = NODE_ICU_DEFAULT_DATA_DIR;\n      }\n    }\n#endif  // NODE_ICU_DEFAULT_DATA_DIR\n\n    // Initialize ICU.\n    // If icu_data_dir is empty here, it will load the 'minimal' data.\n    if (!i18n::InitializeICUDirectory(per_process::cli_options->icu_data_dir)) {\n      errors->push_back(\"could not initialize ICU \"\n                        \"(check NODE_ICU_DATA or --icu-data-dir parameters)\\n\");\n      return 9;\n    }\n    per_process::metadata.versions.InitializeIntlVersions();\n  }\n\n# ifndef __POSIX__\n  std::string tz;\n  if (credentials::SafeGetenv(\"TZ\", &tz) && !tz.empty()) {\n    i18n::SetDefaultTimeZone(tz.c_str());\n  }\n# endif\n\n#endif  // defined(NODE_HAVE_I18N_SUPPORT)\n\n  NativeModuleEnv::InitializeCodeCache();\n\n  // We should set node_is_initialized here instead of in node::Start,\n  // otherwise embedders using node::Init to initialize everything will not be\n  // able to set it and native modules will not load for them.\n  node_is_initialized = true;\n  return 0;\n}\n\nInitializationResult InitializeOncePerProcess(int argc, char** argv) {\n  return InitializeOncePerProcess(argc, argv, kDefaultInitialization);\n}\n\nInitializationResult InitializeOncePerProcess(\n  int argc,\n  char** argv,\n  InitializationSettingsFlags flags,\n  ProcessFlags::Flags process_flags) {\n  uint64_t init_flags = flags;\n  if (init_flags & kDefaultInitialization) {\n    init_flags = init_flags | kInitializeV8 | kInitOpenSSL | kRunPlatformInit;\n  }\n\n  // Initialized the enabled list for Debug() calls with system\n  // environment variables.\n  per_process::enabled_debug_list.Parse(nullptr);\n\n  atexit(ResetStdio);\n\n  if (init_flags & kRunPlatformInit)\n    PlatformInit();\n\n  CHECK_GT(argc, 0);\n\n  // Hack around with the argv pointer. Used for process.title = \"blah\".\n  argv = uv_setup_args(argc, argv);\n\n  InitializationResult result;\n  result.args = std::vector<std::string>(argv, argv + argc);\n  std::vector<std::string> errors;\n\n  // This needs to run *before* V8::Initialize().\n  {\n    result.exit_code = InitializeNodeWithArgs(\n        &(result.args), &(result.exec_args), &errors, process_flags);\n    for (const std::string& error : errors)\n      fprintf(stderr, \"%s: %s\\n\", result.args.at(0).c_str(), error.c_str());\n    if (result.exit_code != 0) {\n      result.early_return = true;\n      return result;\n    }\n  }\n\n  if (per_process::cli_options->use_largepages == \"on\" ||\n      per_process::cli_options->use_largepages == \"silent\") {\n    int result = node::MapStaticCodeToLargePages();\n    if (per_process::cli_options->use_largepages == \"on\" && result != 0) {\n      fprintf(stderr, \"%s\\n\", node::LargePagesError(result));\n    }\n  }\n\n  if (per_process::cli_options->print_version) {\n    printf(\"%s\\n\", NODE_VERSION);\n    result.exit_code = 0;\n    result.early_return = true;\n    return result;\n  }\n\n  if (per_process::cli_options->print_bash_completion) {\n    std::string completion = options_parser::GetBashCompletion();\n    printf(\"%s\\n\", completion.c_str());\n    result.exit_code = 0;\n    result.early_return = true;\n    return result;\n  }\n\n  if (per_process::cli_options->print_v8_help) {\n    V8::SetFlagsFromString(\"--help\", static_cast<size_t>(6));\n    result.exit_code = 0;\n    result.early_return = true;\n    return result;\n  }\n\n  if (init_flags & kInitOpenSSL) {\n#if HAVE_OPENSSL && !defined(OPENSSL_IS_BORINGSSL)\n    {\n      std::string extra_ca_certs;\n      if (credentials::SafeGetenv(\"NODE_EXTRA_CA_CERTS\", &extra_ca_certs))\n        crypto::UseExtraCaCerts(extra_ca_certs);\n    }\n    // In the case of FIPS builds we should make sure\n    // the random source is properly initialized first.\n#if OPENSSL_VERSION_MAJOR >= 3\n    // Call OPENSSL_init_crypto to initialize OPENSSL_INIT_LOAD_CONFIG to\n    // avoid the default behavior where errors raised during the parsing of the\n    // OpenSSL configuration file are not propagated and cannot be detected.\n    //\n    // If FIPS is configured the OpenSSL configuration file will have an\n    // .include pointing to the fipsmodule.cnf file generated by the openssl\n    // fipsinstall command. If the path to this file is incorrect no error\n    // will be reported.\n    //\n    // For Node.js this will mean that EntropySource will be called by V8 as\n    // part of its initialization process, and EntropySource will in turn call\n    // CheckEntropy. CheckEntropy will call RAND_status which will now always\n    // return 0, leading to an endless loop and the node process will appear to\n    // hang/freeze.\n    std::string env_openssl_conf;\n    credentials::SafeGetenv(\"OPENSSL_CONF\", &env_openssl_conf);\n\n    bool has_cli_conf = !per_process::cli_options->openssl_config.empty();\n    if (has_cli_conf || !env_openssl_conf.empty()) {\n      OPENSSL_INIT_SETTINGS* settings = OPENSSL_INIT_new();\n      OPENSSL_INIT_set_config_file_flags(settings, CONF_MFLAGS_DEFAULT_SECTION);\n      if (has_cli_conf) {\n        const char* conf = per_process::cli_options->openssl_config.c_str();\n        OPENSSL_INIT_set_config_filename(settings, conf);\n      }\n      OPENSSL_init_crypto(OPENSSL_INIT_LOAD_CONFIG, settings);\n      OPENSSL_INIT_free(settings);\n\n      if (ERR_peek_error() != 0) {\n        result.exit_code = ERR_GET_REASON(ERR_peek_error());\n        result.early_return = true;\n        fprintf(stderr, \"OpenSSL configuration error:\\n\");\n        ERR_print_errors_fp(stderr);\n        return result;\n      }\n    }\n#else  // OPENSSL_VERSION_MAJOR < 3\n    if (FIPS_mode()) {\n      OPENSSL_init();\n    }\n#endif\n  if (!crypto::ProcessFipsOptions()) {\n      result.exit_code = ERR_GET_REASON(ERR_peek_error());\n      result.early_return = true;\n      fprintf(stderr, \"OpenSSL error when trying to enable FIPS:\\n\");\n      ERR_print_errors_fp(stderr);\n      return result;\n  }\n\n  // V8 on Windows doesn't have a good source of entropy. Seed it from\n  // OpenSSL's pool.\n  V8::SetEntropySource(crypto::EntropySource);\n#endif  // HAVE_OPENSSL && !defined(OPENSSL_IS_BORINGSSL)\n}\n  per_process::v8_platform.Initialize(\n      static_cast<int>(per_process::cli_options->v8_thread_pool_size));\n  if (init_flags & kInitializeV8) {\n    V8::Initialize();\n  }\n\n  performance::performance_v8_start = PERFORMANCE_NOW();\n  per_process::v8_initialized = true;\n\n  return result;\n}\n\nvoid TearDownOncePerProcess() {\n  per_process::v8_initialized = false;\n  V8::Dispose();\n\n#if NODE_USE_V8_WASM_TRAP_HANDLER && defined(_WIN32)\n  RemoveVectoredExceptionHandler(per_process::old_vectored_exception_handler);\n#endif\n\n  // uv_run cannot be called from the time before the beforeExit callback\n  // runs until the program exits unless the event loop has any referenced\n  // handles after beforeExit terminates. This prevents unrefed timers\n  // that happen to terminate during shutdown from being run unsafely.\n  // Since uv_run cannot be called, uv_async handles held by the platform\n  // will never be fully cleaned up.\n  per_process::v8_platform.Dispose();\n}\n\nint Start(int argc, char** argv) {\n  InitializationResult result = InitializeOncePerProcess(argc, argv);\n  if (result.early_return) {\n    return result.exit_code;\n  }\n\n  {\n    Isolate::CreateParams params;\n    const std::vector<size_t>* indices = nullptr;\n    const EnvSerializeInfo* env_info = nullptr;\n    bool use_node_snapshot =\n        per_process::cli_options->per_isolate->node_snapshot;\n    if (use_node_snapshot) {\n      v8::StartupData* blob = NodeMainInstance::GetEmbeddedSnapshotBlob();\n      if (blob != nullptr) {\n        params.snapshot_blob = blob;\n        indices = NodeMainInstance::GetIsolateDataIndices();\n        env_info = NodeMainInstance::GetEnvSerializeInfo();\n      }\n    }\n    uv_loop_configure(uv_default_loop(), UV_METRICS_IDLE_TIME);\n\n    NodeMainInstance main_instance(&params,\n                                   uv_default_loop(),\n                                   per_process::v8_platform.Platform(),\n                                   result.args,\n                                   result.exec_args,\n                                   indices);\n    result.exit_code = main_instance.Run(env_info);\n  }\n\n  TearDownOncePerProcess();\n  return result.exit_code;\n}\n\nint Stop(Environment* env) {\n  env->ExitEnv();\n  return 0;\n}\n\n}  // namespace node\n\n#if !HAVE_INSPECTOR\nvoid Initialize() {}\n\nNODE_MODULE_CONTEXT_AWARE_INTERNAL(inspector, Initialize)\n#endif  // !HAVE_INSPECTOR\n","numAgents":204,"txns":[{"parents":[],"numChildren":1,"agent":137,"time":"1970-01-01T00:00:00Z","patches":[[0,0,"#include \"node.h\"\n#define EV_STANDALONE 1\n#include <ev.c>\n\n#include \"node_tcp.h\"\n#include \"node_http.h\"\n#include \"node_timer.h\"\n\n#include <stdio.h>\n#include <assert.h>\n\n#include <string>\n#include <list>\n#include <map>\n\nusing namespace v8;\nusing namespace std;\n\nstatic int exit_code = 0;\n\n// Reads a file into a v8 string.\nstatic Handle<String>\nReadFile (const string& name) \n{\n\n  FILE* file = fopen(name.c_str(), \"rb\");\n  if (file == NULL) return Handle<String>();\n \n  fseek(file, 0, SEEK_END);\n  int size = ftell(file);\n  rewind(file);\n\n  char chars[size+1];\n  chars[size] = '\\0';\n  for (int i = 0; i < size;) {\n    int read = fread(&chars[i], 1, size - i, file);\n    if(read <= 0) {\n      perror(\"read()\");\n    }\n    i += read;\n  }\n\n  uint16_t expanded_base[size+1];\n  expanded_base[size] = '\\0';\n  for(int i = 0; i < size; i++) \n    expanded_base[i] = chars[i];\n\n  fclose(file);\n\n  HandleScope scope;\n  Local<String> result = String::New(expanded_base, size);\n\n  return scope.Close(result);\n}\n\nstatic Handle<Value>\nLog (const Arguments& args) \n{\n  if (args.Length() < 1) return v8::Undefined();\n  HandleScope scope;\n  Handle<Value> arg = args[0];\n  String::Utf8Value value(arg);\n\n  printf(\"%s\\n\", *value);\n  fflush(stdout);\n\n  return Undefined();\n}\n\n\nstatic Handle<Value>\nBlockingFileRead (const Arguments& args)\n{\n  if (args.Length() < 1) return v8::Undefined();\n  HandleScope scope;\n\n  String::Utf8Value filename(args[0]);\n  Handle<String> output = ReadFile (*filename);\n  return scope.Close(output);\n}\n\nstatic void\nOnFatalError (const char* location, const char* message)\n{\n  fprintf(stderr, \"Fatal error. %s %s\\n\", location, message);\n  ev_unloop(node_loop(), EVUNLOOP_ALL);\n}\n\n\n// Extracts a C string from a V8 Utf8Value.\nconst char* ToCString(const v8::String::Utf8Value& value) {\n  return *value ? *value : \"<string conversion failed>\";\n}\n\nvoid ReportException(v8::TryCatch* try_catch) {\n  v8::HandleScope handle_scope;\n  v8::String::Utf8Value exception(try_catch->Exception());\n  const char* exception_string = ToCString(exception);\n  v8::Handle<v8::Message> message = try_catch->Message();\n  if (message.IsEmpty()) {\n    // V8 didn't provide any extra information about this error; just\n    // print the exception.\n    printf(\"%s\\n\", exception_string);\n  } else {\n    message->PrintCurrentStackTrace(stdout);\n\n    // Print (filename):(line number): (message).\n    v8::String::Utf8Value filename(message->GetScriptResourceName());\n    const char* filename_string = ToCString(filename);\n    int linenum = message->GetLineNumber();\n    printf(\"%s:%i: %s\\n\", filename_string, linenum, exception_string);\n    // Print line of source code.\n    v8::String::Utf8Value sourceline(message->GetSourceLine());\n    const char* sourceline_string = ToCString(sourceline);\n    printf(\"%s\\n\", sourceline_string);\n    // Print wavy underline (GetUnderline is deprecated).\n    int start = message->GetStartColumn();\n    for (int i = 0; i < start; i++) {\n      printf(\" \");\n    }\n    int end = message->GetEndColumn();\n    for (int i = start; i < end; i++) {\n      printf(\"^\");\n    }\n    printf(\"\\n\");\n  }\n}\n\nvoid\nnode_fatal_exception (TryCatch &try_catch)\n{\n  ReportException(&try_catch);\n  ev_unloop(node_loop(), EVUNLOOP_ALL);\n  exit_code = 1;\n}\n\n\n// Executes a string within the current v8 context.\nbool ExecuteString(v8::Handle<v8::String> source,\n                   v8::Handle<v8::Value> name,\n                   bool print_result,\n                   bool report_exceptions) {\n  v8::HandleScope handle_scope;\n  v8::TryCatch try_catch;\n  v8::Handle<v8::Script> script = v8::Script::Compile(source, name);\n  if (script.IsEmpty()) {\n    // Print errors that happened during compilation.\n    if (report_exceptions)\n      ReportException(&try_catch);\n    return false;\n  } else {\n    v8::Handle<v8::Value> result = script->Run();\n    if (result.IsEmpty()) {\n      // Print errors that happened during execution.\n      if (report_exceptions)\n        ReportException(&try_catch);\n      return false;\n    } else {\n      if (print_result && !result->IsUndefined()) {\n        // If all went well and the result wasn't undefined then print\n        // the returned value.\n        v8::String::Utf8Value str(result);\n        const char* cstr = ToCString(str);\n        printf(\"%s\\n\", cstr);\n      }\n      return true;\n    }\n  }\n}\n\n// The callback that is invoked by v8 whenever the JavaScript 'load'\n// function is called.  Loads, compiles and executes its argument\n// JavaScript file.\nv8::Handle<v8::Value> Load(const v8::Arguments& args) {\n  for (int i = 0; i < args.Length(); i++) {\n    v8::HandleScope handle_scope;\n    v8::String::Utf8Value file(args[i]);\n    if (*file == NULL) {\n      return v8::ThrowException(v8::String::New(\"Error loading file\"));\n    }\n    v8::Handle<v8::String> source = ReadFile(*file);\n    if (source.IsEmpty()) {\n      return v8::ThrowException(v8::String::New(\"Error loading file\"));\n    }\n    if (!ExecuteString(source, v8::String::New(*file), false, true)) {\n      return v8::ThrowException(v8::String::New(\"Error executing file\"));\n    }\n  }\n  return v8::Undefined();\n}\n\nint\nmain (int argc, char *argv[]) \n{\n  V8::SetFlagsFromCommandLine(&argc, argv, true);\n\n  if(argc != 2)  {\n    fprintf(stderr, \"No script was specified.\\n\");\n    return 1;\n  }\n  string filename(argv[1]);\n\n  HandleScope handle_scope;\n\n  Persistent<Context> context = Context::New(NULL, ObjectTemplate::New());\n  Context::Scope context_scope(context);\n\n  Local<Object> g = Context::GetCurrent()->Global();\n\n  g->Set ( String::New(\"log\")\n         , FunctionTemplate::New(Log)->GetFunction()\n         );\n\n  g->Set ( String::New(\"load\")\n         , FunctionTemplate::New(Load)->GetFunction()\n         );\n\n  g->Set ( String::New(\"blockingFileRead\")\n         , FunctionTemplate::New(BlockingFileRead)->GetFunction()\n         );\n\n  Init_timer(g);\n  Init_tcp(g);\n  Init_http(g);\n\n  V8::SetFatalErrorHandler(OnFatalError);\n\n  v8::Handle<v8::String> source = ReadFile(filename);\n  ExecuteString(source, String::New(filename.c_str()), false, true);\n\n  ev_loop(node_loop(), 0);\n\n  context.Dispose();\n\n  return exit_code;\n}\n\n"],[18,23,""],[28,17,""],[5050,0,"static ev_async thread_pool_watcher;\n\nstatic void \nthread_pool_cb (EV_P_ ev_async *w, int revents)\n{\n  int r = eio_poll();\n  /* returns 0 if all requests were handled, -1 if not, or the value of EIO_FINISH if != 0 */\n  if(r == 0) ev_async_stop(EV_DEFAULT_ w);\n}\n\nstatic void\nthread_pool_want_poll (void)\n{\n  ev_async_send(EV_DEFAULT_ &thread_pool_watcher); \n}\n\nvoid\nnode_eio_submit(eio_req *req)\n{\n  ev_async_start(EV_DEFAULT_ &thread_pool_watcher);\n}\n\n"],[5679,0,"\n\n"],[6372,0,"\n  // start eio thread pool\n  ev_async_init(&thread_pool_watcher, thread_pool_cb);\n  ev_async_start(EV_DEFAULT_ &thread_pool_watcher);\n  eio_init(thread_pool_want_poll, NULL);\n\n"],[19,0,"//"],[32,2,""],[33,1,""],[34,0,".h\"\n#in"],[42,0,"lude \"file.h\"\n#include \""],[67,0,"rocess"],[134,0,"\"natives.h\" \n\n#include "],[273,13,""],[274,1,""],[275,8,""],[278,4,""],[280,27,""],[280,0,"u"],[282,2,""],[285,8,""],[286,2,""],[287,14,""],[288,4,""],[288,0,"m"],[290,8,""],[291,34,""],[292,4,""],[293,3,""],[294,36,""],[295,4,""],[296,54,""],[297,7,""],[298,18,""],[299,6,""],[302,11,""],[303,194,""],[304,29,""],[305,32,""],[306,42,""],[307,4,""],[308,11,""],[309,8,""],[310,10,""],[311,37,""],[313,14,""],[315,14,""],[316,10,""],[317,144,""],[317,0,"_"],[320,9,""],[321,7,""],[322,5,""],[325,5,""],[326,33,""],[329,503,""],[384,1,""],[384,0,"\n"],[430,1,""],[430,0,"\n"],[497,1,""],[497,0,"\n"],[538,1,""],[538,0,"\n"],[1744,142,""],[1796,3,""],[1796,0,"Hand"],[1801,1,""],[1801,0,"e<Value>\n"],[1855,1,""],[1869,4,""],[1890,11,""],[1891,21,""],[1891,0,"f"],[1893,33,""],[1894,2,""],[1895,5,""],[1895,0,"nam"],[1899,9,""],[1900,1,""],[1900,0,"\n"],[1905,4,""],[1917,7,""],[1922,26,""],[1926,4,""],[1933,4,""],[1950,4,""],[1974,0,"file"],[2011,1,""],[2014,2,""],[2015,1,""],[2016,4,""],[2017,9,""],[2018,11,""],[2020,1,""],[2021,1,""],[2022,0,"ThrowEx"],[2030,2,""],[2030,0,"e"],[2032,3,""],[2036,9,""],[2037,4,""],[2037,0,"St"],[2040,8,""],[2041,1,""],[2042,10,""],[2042,0,"g::N"],[2047,1,""],[2047,0,"w(\"Err"],[2055,3,""],[2055,0," "],[2057,1,""],[2057,0,"om"],[2060,1,""],[2061,1,""],[2061,0,"li"],[2064,14,""],[2064,0,"g"],[2066,5,""],[2066,0,"s"],[2068,1,""],[2069,0,"i"],[2071,6,""],[2071,0,"g\"))"],[2080,7,""],[2081,1,""],[2081,0,"\n"],[2084,5,""],[2091,4,""],[2122,1,""],[2124,1,""],[2152,1,""],[2152,0,"return"],[2159,4,""],[2159,0,"Th"],[2162,0,"owExcept"],[2171,0,"o"],[2173,0,"(S"],[2176,1,""],[2176,0,"ring::N"],[2184,0,"w(\"E"],[2192,1,""],[2193,10,""],[2193,0,"run"],[2197,6,""],[2201,5,""],[2201,0,"s"],[2203,0,"r"],[2205,1,""],[2206,1,""],[2206,0,"g\"));"],[2214,2,""],[2214,0,"}\n\n"],[2219,4,""],[2221,0,"turn sco"],[2230,0,"e.Cl"],[2235,0,"se("],[2239,0,"esul"],[2244,0,");\n}\n\nJS"],[2253,4,""],[2253,0,"METHOD("],[2261,1,""],[2261,0,"r"],[2263,1,""],[2264,1,""],[2264,0,"t"],[2266,0," \n{"],[2272,1,""],[2272,0,"if"],[2275,8,""],[2275,0,"(a"],[2278,4,""],[2278,0,"gs.L"],[2283,4,""],[2284,8,""],[2284,0,"g"],[2286,1,""],[2287,0,"("],[2289,2,""],[2290,0,"<"],[2292,3,""],[2292,0,"1)"],[2302,0,"v8::Unde"],[2311,0,"ined();\n  H"],[2323,0,"nd"],[2326,0,"eScope "],[2334,0,"cop"],[2340,1,""],[2342,3,""],[2342,0,"Handl"],[2348,0,"<Va"],[2352,1,""],[2352,0,"u"],[2354,0,">"],[2356,4,""],[2356,0,"arg"],[2360,0,"="],[2362,0,"args[0];\n"],[2373,0,"Str"],[2377,0,"ng::Ut"],[2384,0,"8Value"],[2391,0,"value"],[2397,0,"arg);\n\n  "],[2411,2,""],[2411,0,"f(\"%s\\n\", *valu"],[2427,0,");\n  fflu"],[2437,0,"h(stdo"],[2444,1,""],[2445,0,");\n\n"],[2450,2,""],[2451,1,""],[2453,1,""],[2453,0,"t"],[2455,6,""],[2455,0,"rn "],[2469,0,";\n}\n\n\nJS_METHOD(cat"],[2490,0,"\n"],[2493,4,""],[2494,5,""],[2495,1,""],[2495,0,"i"],[2498,0,"("],[2500,4,""],[2500,0,"rgs.L"],[2507,0,"g"],[2509,5,""],[2509,0,"h()"],[2513,3,""],[2513,0,"<"],[2515,3,""],[2515,0,"1)"],[2520,1,""],[2520,0,"t"],[2522,6,""],[2522,0,"r"],[2524,2,""],[2525,1,""],[2525,0,"v8::U"],[2538,11,""],[2538,0,"();"],[2544,18,""],[2544,0,"Ha"],[2547,0,"dleScop"],[2555,1,""],[2556,4,""],[2556,0,"scop"],[2561,1,""],[2561,0,";\n"],[2564,1,""],[2566,9,""],[2584,3,""],[2584,0,"filename"],[2593,0,"a"],[2595,1,""],[2595,0,"g"],[2597,3,""],[2597,0,"[0]"],[2603,0,"\n"],[2606,7,""],[2606,0,"L"],[2608,4,""],[2609,1,""],[2610,0,"l<St"],[2615,1,""],[2615,0,"ing>"],[2620,3,""],[2620,0,"erro"],[2625,0,"_msg"],[2632,3,""],[2638,0,"::New"],[2644,2,""],[2644,0,"\"File I/O erro"],[2659,0,"\""],[2663,0,"\n"],[2666,0,"FILE*"],[2672,0,"file"],[2677,0,"="],[2679,3,""],[2679,0,"fo"],[2682,2,""],[2682,0,"e"],[2684,1,""],[2684,0,"(*"],[2687,5,""],[2687,0,"ile"],[2691,1,""],[2691,0,"ame"],[2696,3,""],[2696,0,"\""],[2698,0,"b\""],[2705,0,"if (file == NULL) {\n  "],[2729,0,"//"],[2732,0,"Raise"],[2738,1,""],[2738,0,"error"],[2748,0,"perror(\"fopen()\");\n  "],[2778,0,"ThrowExcep"],[2789,0,"ion(er"],[2796,2,""],[2796,0,"or_msg)"],[2805,1,""],[2807,1,""],[2809,1,""],[2810,3,""],[2811,7,""],[2812,8,""],[2813,8,""],[2815,5,""],[2815,0,"t"],[2817,2,""],[2817,0,"r"],[2819,2,""],[2819,0,"="],[2821,2,""],[2821,0,"fs"],[2824,1,""],[2825,1,""],[2825,0,"k(fil"],[2831,1,""],[2831,0,","],[2833,3,""],[2833,0,"0,"],[2836,4,""],[2837,1,""],[2837,0,"EEK_END);\n  if ("],[2854,3,""],[2855,6,""],[2855,0,"< 0) {"],[2862,2,""],[2863,0,"   perror(\""],[2875,0,"seek()\");\n    ret"],[2893,0,"r"],[2895,0," ThrowEx"],[2904,0,"ep"],[2910,0,"(error_msg);\n  }\n\n "],[2931,0,"nt "],[2935,0,"ize ="],[2941,2,""],[2941,0,"ftel"],[2946,0,"(fi"],[2951,2,""],[2951,0,");\n"],[2956,6,""],[2956,0,"if"],[2959,4,""],[2959,0,"(s"],[2962,1,""],[2962,0,"z"],[2964,1,""],[2965,3,""],[2965,0,"< 0) {\n   "],[2976,0,"p"],[2978,4,""],[2978,0,"rror(\"f"],[2987,1,""],[2987,0,"ll()\");\n  "],[2998,3,""],[2999,1,""],[3000,1,""],[3000,0,"et"],[3003,2,""],[3003,0,"r"],[3005,4,""],[3006,6,""],[3006,0,"Th"],[3009,1,""],[3009,0,"owExce"],[3017,2,""],[3018,1,""],[3018,0,"on("],[3022,1,""],[3022,0,"rror_msg);\n  }"],[3037,6,""],[3037,0,"  rewi"],[3045,0,"(fi"],[3050,6,""],[3050,0,");\n\n  ch"],[3059,4,""],[3059,0,"r"],[3061,2,""],[3061,0,"ch"],[3064,5,""],[3064,0,"rs["],[3068,1,""],[3068,0,"ize+1];\n"],[3077,14,""],[3078,0,"ch"],[3082,1,""],[3083,1,""],[3083,0,"[size]"],[3090,1,""],[3090,0,"= '\\0';"],[3120,3,""],[3121,2,""],[3121,0,"iz"],[3124,6,""],[3125,4,""],[3133,5,""],[3133,0,"int re"],[3140,1,""],[3141,1,""],[3141,0," = fr"],[3147,1,""],[3147,0,"ad(&"],[3152,4,""],[3154,5,""],[3154,0,"r"],[3156,6,""],[3156,0,"[i],"],[3161,0,"1,"],[3164,0,"size"],[3169,0,"-"],[3171,7,""],[3172,13,""],[3172,0,","],[3178,8,""],[3187,1,""],[3188,4,""],[3188,0,"r"],[3190,0,"ad"],[3193,1,""],[3193,0,"<"],[3196,4,""],[3196,0,"0"],[3207,0,"perror(\"read()\");\n      "],[3238,4,""],[3253,13,""],[3254,4,""],[3258,0,"_msg);\n   "],[3269,2,""],[3269,0,"}\n    i += re"],[3284,0,";\n  }\n\n  u"],[3296,1,""],[3296,0,"t16_t"],[3302,1,""],[3302,0,"expanded_base[size+1];\n  expanded_base[s"],[3343,1,""],[3343,0,"z"],[3345,3,""],[3345,0,"] = '\\0'"],[3357,0,"for(int i = 0; i < size;"],[3382,0,"i++)"],[3387,1,""],[3392,5,""],[3392,0,"exp"],[3398,0,"ed_base[i] = chars[i];\n\n  fclose(fi"],[3435,0,");\n\n  Local"],[3447,4,""],[3455,1,""],[3455,0,"c"],[3457,3,""],[3457,0,"nt"],[3460,0,"nts"],[3466,1,""],[3466,0,"String::New("],[3479,0,"xp"],[3482,0,"n"],[3484,1,""],[3484,0,"ed_base, s"],[3495,0,"ze);\n\n  return scope.C"],[3518,0,"os"],[3522,4,""],[3522,0,"cont"],[3527,0,"nts"],[3533,0,"}\n\nJS_METHOD(exec)"],[3552,1,""],[3552,0,"\n{\n"],[3561,0,"arg"],[3565,4,""],[3565,0,".L"],[3568,6,""],[3568,0,"ng"],[3571,1,""],[3571,0,"h"],[3573,1,""],[3575,2,""],[3575,0,"<"],[3577,0,"2)"],[3580,0,"\n"],[3592,12,""],[3592,0,"Und"],[3596,2,""],[3596,0,"f"],[3598,1,""],[3599,0,"ed"],[3602,4,""],[3602,0,");\n\n  HandleScope scope;\n\n  Local<"],[3642,8,""],[3642,0,"> sou"],[3648,0,"ce = a"],[3655,0,"gs[0]->T"],[3664,0,"St"],[3667,0,"ing();\n"],[3675,1,""],[3675,0," L"],[3678,0,"c"],[3680,1,""],[3680,0,"l<Str"],[3688,0,">"],[3694,1,""],[3694,0,"name = args[1]->ToString("],[3720,1,""],[3722,5,""],[3725,0,"Handle<Value>"],[3739,0,"result"],[3746,2,""],[3746,0,"="],[3748,2,""],[3770,5,""],[3770,0,"filename);\n  \n  re"],[3789,0,"u"],[3791,1,""],[3792,4,""],[3792,0," scope.Clos"],[3804,1,""],[3805,3,""],[3805,0,"resu"],[3810,1,""],[3810,0,"t"],[3812,1,""],[3812,0,";\n}\n\n\nstatic"],[3825,1,""],[3825,0,"void\nOnFat"],[3837,0,"Error (con"],[3848,1,""],[3848,0,"t char* location"],[3866,0,"cons"],[3871,0," cha"],[3876,1,""],[3876,0,"* messag"],[3885,1,""],[3886,1,""],[3886,0,"\n"],[3891,0,"fprintf(stderr,"],[3907,0,"\"Fatal"],[3914,0,"error."],[3921,0,"%s"],[3924,1,""],[3924,0,"%s\\n\", location, message);\n  "],[3954,1,""],[3954,0,"v_"],[3957,1,""],[3958,0,"loop(node_loop(),"],[3976,0,"EVUNLOOP_ALL);\n}\n\n\n"],[3996,6,""],[3997,2,""],[3997,0,"id\nnode_fatal_e"],[4020,0," "],[4022,5,""],[4022,0,"TryCatch &"],[4034,6,""],[4034,0,"y_catch)\n{\n  R"],[4049,6,""],[4049,0,"p"],[4052,2,""],[4052,0,"tE"],[4055,0,"c"],[4057,2,""],[4057,0,"p"],[4060,0,"o"],[4062,1,""],[4062,0,"(&try_catch);\n"],[4077,2,""],[4077,0," ev_un"],[4084,0,"oop(nod"],[4092,1,""],[4092,0,"_loop("],[4099,0,", EVUNLOOP_ALL"],[4118,0,"exit_code"],[4128,0,"="],[4130,0,"1;\n"],[4135,0,"\nvoid node_exit"],[4151,0,"(int"],[4156,1,""],[4156,0,"code)"],[4162,0,"{\n"],[4166,1,""],[4167,0,"xi"],[4170,3,""],[4170,0,"_code = code;\n "],[4186,0,"e"],[4188,4,""],[4188,0,"_unloop("],[4197,0,"o"],[4200,5,""],[4200,0,"_loop"],[4207,0,", EVUNLOOP_ALL)"],[4227,0,"\n"],[4720,0,"// start eio thread pool\n  ev_async_init(&thread_pool_watcher, thread_pool_cb);\n  eio_init(thread_pool_want_poll, NULL);\n\n  "],[4903,2,""],[4903,0,"<"],[4979,1,""],[5155,0,"  V8::SetFatalErrorHandler(OnFatalError);\n"],[5254,0,"Local<Object> node = Object::New();\n  "],[5298,1,""],[5299,1,""],[5312,1,""],[5312,0,"n"],[5314,1,""],[5314,0,"de"],[5318,10,""],[5320,2,""],[5321,0,"ode);\n\n  Local<Obje"],[5342,0,"> block"],[5350,1,""],[5351,1,""],[5351,0,"g = Obj"],[5359,4,""],[5359,0,"c"],[5361,1,""],[5366,18,""],[5367,11,""],[5370,1,""],[5372,1,""],[5372,0,"node"],[5381,1,""],[5382,1,""],[5395,0,"b"],[5398,2,""],[5398,0,"cking"],[5405,0,", blocking);\n"],[5421,0,"JS_SET_METHOD(blocking, \"exec\","],[5453,0,"exec);\n"],[5462,0,"JS_SET_METHOD(blocking,"],[5486,0,"\"cat\","],[5493,0,"cat);\n"],[5501,0,"JS_SET_METHOD(blocking"],[5525,2,""],[5525,0,"\"pri"],[5530,1,""],[5531,0,"\", pr"],[5537,0,"nt);\n\n  L"],[5547,5,""],[5547,0,"ca"],[5550,0,"<Array> "],[5559,0,"rgumen"],[5566,1,""],[5566,0,"s = Array"],[5581,2,""],[5582,10,""],[5582,0,"rg"],[5585,5,""],[5586,0,";"],[5590,0,"for (int"],[5599,0,"i"],[5601,0,"="],[5603,0,"0;"],[5606,0,"i"],[5608,0,"<"],[5610,0,"argc;"],[5616,0,"i++"],[5620,2,""],[5620,0," {"],[5625,3,""],[5625,0,"  Local<"],[5634,1,""],[5635,0,"ring> arg"],[5645,1,""],[5645,0,"="],[5659,8,""],[5659,0,"ar"],[5662,1,""],[5662,0,"v["],[5665,7,""],[5665,0,"]"],[5667,0,";"],[5669,1,""],[5673,7,""],[5673,0,"arg"],[5677,0,"me"],[5680,1,""],[5681,4,""],[5681,0,"s->S"],[5686,4,""],[5687,0,"(Integ"],[5694,0,"r"],[5701,5,""],[5702,1,""],[5702,0,"), ar"],[5708,8,""],[5709,0,";\n  }\n  g"],[5720,1,""],[5720,0,"S"],[5723,4,""],[5723,0,"(S"],[5726,0,"r"],[5728,1,""],[5729,0,"g::New"],[5736,0,"\"ARGV\"), arguments"],[5755,0,";\n"],[5760,0,"//"],[5763,5,""],[5763,0,"BUILT-IN"],[5772,3,""],[5772,0,"MODULES"],[5799,0,"//Node"],[5810,0,"ne"],[5813,2,""],[5820,0,"Node"],[5829,3,""],[5830,0,"rocess"],[5841,1,""],[5843,15,""],[5843,0,"N"],[5845,4,""],[5846,1,""],[5847,3,""],[5847,0,"I"],[5849,2,""],[5849,0,"i"],[5851,1,""],[5851,0,"_fi"],[5855,5,""],[5855,0,"e(g"],[5860,1,""],[5863,6,""],[5863,0,"I"],[5865,9,""],[5865,0,"it_ht"],[5871,3,""],[5871,0,"p("],[5874,28,""],[5883,5,""],[5883,0,"NATIVE"],[5890,10,""],[5890,0,"JAVASCRIPT"],[5901,4,""],[5901,0,"MODULES"],[5911,17,""],[5911,0,"T"],[5913,10,""],[5913,0,"yC"],[5919,3,""],[5921,1,""],[5922,1,""],[5922,0,"y_c"],[5926,7,""],[5926,0,"t"],[5928,2,""],[5928,0,"h"],[5933,3,""],[5933,0,"H"],[5935,2,""],[5936,9,""],[5936,0,"dle<"],[5941,15,""],[5942,5,""],[5943,6,""],[5943,0,"u"],[5945,5,""],[5945,0,">"],[5947,11,""],[5949,6,""],[5949,0,"su"],[5952,4,""],[5953,6,""],[5954,9,""],[5954,0,"="],[5970,3,""],[5970,0,"St"],[5973,1,""],[5973,0,"ing::New(nativ"],[5988,0,"_main)"],[5996,0,"\n                                       "],[6048,1,""],[6048,0,"\"ma"],[6052,2,""],[6053,0,".js\"));\n  if (try_c"],[6073,2,""],[6073,0,"tch"],[6077,2,""],[6077,0,"Ha"],[6080,0,"Caugh"],[6086,1,""],[6089,1,""],[6090,1,""],[6090,0,"{\n    ReportException(&try_c"],[6119,2,""],[6119,0,"tch);\n    r"],[6131,2,""],[6132,0,"u"],[6134,3,""],[6134,0,"n 1"],[6139,0,"  }\n"],[6215,1,""],[3919,1,""],[3919,0,":"],[2260,225,""],[5270,43,""],[5663,22,""],[5663,0,"\n"],[5665,1,""],[5699,2,""],[5699,0,"f"],[5701,1,""],[5701,0,"le"],[5705,39,""],[5706,1,""],[5719,2,""],[5719,0,"f"],[5721,1,""],[5721,0,"le"],[5760,2,""],[5760,0,"goto"],[5765,0,"native_js_error;"],[5782,0,"\n\n"],[5786,6,""],[5788,0,"e"],[5790,0,"ut"],[5793,1,""],[5793,0,"S"],[5795,0,"r"],[5797,1,""],[5798,0,"g"],[5800,1,""],[5800,0,"S"],[5803,1,""],[5803,0,"ing::New(native"],[5819,1,""],[5819,0,"m"],[5821,0,"in), S"],[5828,2,""],[5828,0,"ring::New(\"main.js\")"],[5851,1,""],[5853,0,"if"],[5856,0,"(t"],[5859,1,""],[5859,0,"y_ca"],[5864,0,"ch.HasCa"],[5873,0,"ght()) goto native_js_erro"],[5900,3,""],[5901,1,""],[5902,2,""],[5974,0,"\nnative_js_error:\n  ReportException(&try_catch);\n  return 1;\n"],[4220,0,"\n  // XXX is this check too heavy? \n  //  it require three"],[4279,0,"locks in eio\n  //  what's the"],[4309,0,"better way?\n  "],[4325,0," "],[4327,0,"eio_n"],[4333,0,"eqs ()"],[4344,0," && eio_nready() == 0 && eio_npending("],[4384,0,"== 0) \n    "],[4526,0,"static "],[4538,1,""],[4538,0,"thread_p"],[4547,0,"ol_"],[4551,0,"on"],[4555,1,""],[4555,0,"poll (vo"],[4564,0,"d)\n{\n}\n\nv"],[4574,5,""],[4575,2,""],[4575,0,"d\nnod"],[4581,0,"_e"],[4586,0,"wa"],[4589,2,""],[4589,0,"mup"],[4593,4,""],[4593,0,"(void"],[87,5,""],[105,5,""],[110,0,"s"],[5706,0,"//Node"],[5717,3,""],[5717,0,"n"],[5719,1,""],[5719,0,"t"],[5727,2,""],[5736,1,""],[5736,0,"tim"],[5740,1,""],[5740,0,"rs"],[5792,0,"Node"],[2252,755,""],[2253,17,""],[2254,220,""],[2255,13,""],[2256,22,""],[2257,30,""],[2258,1,""],[4239,91,""],[4253,2,""],[4253,0,"n"],[4255,5,""],[4255,0,"de"],[4260,3,""],[4261,28,""],[4262,2,""],[4262,0,"mp"],[4265,8,""],[4265,0,"le"],[4271,2,""],[4271,0,"ompile"],[1917,0,"TryCatch try_catch;\n\n  "],[2029,1,""],[2029,0,"R"],[2031,0,"por"],[2035,9,""],[2045,1,""],[2045,0,"&"],[2048,15,""],[2048,0,"y_catch);\n"],[2059,9,""],[2060,1,""],[2060,0,"  exi"],[2066,5,""],[2066,0,"(1"],[2069,1,""],[2146,1,""],[2146,0,"R"],[2148,8,""],[2148,0,"p"],[2150,1,""],[2150,0,"rt"],[2162,1,""],[2162,0,"&"],[2165,15,""],[2165,0,"y_catch);\n "],[2177,4,""],[2177,0,"  ex"],[2182,4,""],[2183,6,""],[2183,0,"(1"],[2510,0,"JS_METHOD(debug) \n{"],[2530,0,"  if (arg"],[2540,0,".Leng"],[2546,0,"h() < 1) \n    return Undefined();\n  HandleScope scope;\n  String::Utf8Value msg(args[0]->ToString());\n  fprintf(stderr, \"DEBUG: %s\\n\", *msg);\n  return Undefined();\n}\n\nst"],[4466,0,"  JS_SET_METHOD(node, \"debug\", debug);\n"],[2226,2,""],[2226,0,"NODE"],[2512,2,""],[2512,0,"NODE"],[4429,2,""],[4429,0,"NODE"],[4474,2,""],[4474,0,"NODE"],[19,2,""],[2850,18,""],[2850,0,"xit"],[2854,15,""],[2854,0,"1"],[4722,2,""],[3618,46,""],[2785,0,"#define"],[2793,0,"FATAL_ERROR"],[2805,0,"\"\\033[1;31mV8 FATAL ERROR.\\033[m\"\n  if (location)\n    "],[2875,1,""],[2876,4,""],[2876,0,"ATAL_ERROR"],[2887,6,""],[2887,0,"\""],[2922,0,"lse \n    fprintf(stderr, FATAL_ERROR \" %s\\n\", message);\n\n  e"],[3087,4,""],[3087,0,"EV"],[3090,7,""],[3090,0,"DEFAULT_UC_"],[3197,4,""],[3197,0,"EV_DEFAULT_UC"],[3211,7,""],[3878,0,"ev_default_loop(EVFLAG_AUTO); // initialize the default ev loop.\n\n  "],[5287,4,""],[5287,0,"EV"],[5290,7,""],[5290,0,"DEFAULT_UC_"],[2060,0,"::"],[2179,0,"::"],[2985,0,"::"],[3009,1,""],[3009,0,"::"],[3148,1,""],[3148,0,"\n"],[3153,1,""],[3153,0,"::"],[3656,0,"UC_"],[3737,0,"UC_"],[3777,1,""],[3777,0,"::"],[3827,0,"UC_"],[4898,1,""],[4898,0,"n"],[4902,0,"::"],[4919,1,""],[4919,0,"n"],[4923,0,"::"],[4943,1,""],[4943,0,"n"],[4947,0,"::"],[4968,1,""],[4968,0,"n"],[4972,0,"::"],[4990,1,""],[4990,0,"n"],[4994,0,"::"],[318,0,"ObjectWrap::ObjectWrap (Handle<Object> handle)\n{\n  v8::HandleScope scope;\n  handle_ = v8::Persistent<v8::Object>::New(handle);\n\n  v8::Handle<v8::External> external = v8::External::New(this);\n  handle_->SetInternalField(0, external);\n  handle_.MakeWeak(this, ObjectWrap::MakeWeak);\n}\n\nObjectWrap::~ObjectWrap ( )\n{\n  handle_->SetInternalField(0, Undefined());\n  handle_.Dispose();\n  handle_.Clear(); \n}\n\nvoid*\nObjectWrap::Unwrap (v8::Handle<v8::Object> handle)\n{\n  v8::HandleScope scope;\n  v8::Handle<v8::External> field = \n    v8::Handle<v8::External>::Cast(handle->GetInternalField(0));\n  return field->Value();\n}\n\nvoid\nObjectWrap::MakeWeak (Persistent<Value> _, void *data)\n{\n  ObjectWrap *w = static_cast<ObjectWrap*> (data);\n  delete w;\n}\n\n\n\n\n\n"],[108,1,""],[5682,1,""],[64,8,""],[65,13,""],[2966,0,"node_exit)\n{\n  int r = 0;\n  if (args.Length() > 0) \n    r = args[0]->IntegerValue();\n  ::exit(r);\n  return Undefined(); \n}\n\nNODE_METHOD("],[3944,1,""],[3945,24,""],[3946,44,""],[3948,13,""],[3949,7,""],[3952,25,""],[3953,27,""],[3953,0,"1"],[3960,1,""],[5379,0,"  NODE_SET_METHOD(g, \"exit\", node_exit);\n"],[5636,0,"\n"],[5698,25,""],[5661,1,""],[5661,0,"S"],[5663,1,""],[5663,0,"ck"],[5666,0,"t"],[5673,2,""],[5673,0,"ializ"],[5679,0,"(g);\n  Server::Ini"],[5698,0,"ialize"],[308,0,"~"],[321,0," )\n{\n  if (!handle_.IsEmpty())  {\n    handle_->SetInternalField(0, Undefined());\n    handle_.Dispose();\n    handle_.Clear(); \n  }\n}\n\nObjectWrap::ObjectWrap ("],[505,4,""],[505,0,"// TODO throw exception if it's already set\n  "],[582,4,""],[593,4,""],[618,4,""],[625,4,""],[646,4,""],[760,119,""],[1104,1,""],[5721,2,""],[5721,0,"Ac"],[5724,1,""],[5725,0,"p"],[5727,0,"or"],[5748,4,""],[5748,0,"Conn"],[5753,1,""],[5753,0,"ction"],[5822,0,"HTTPClie"],[5831,3,""],[5831,0,"t"],[5838,5,""],[5838,0,"ialize"],[1101,3,""],[5824,2,""],[5824,0,"onn"],[5828,1,""],[5828,0,"c"],[5830,0,"ion"],[5940,0,"http), String::New(\"http.js\"));\n  if (try_catch.HasCaught()) goto native_js_error; \n\n  ExecuteString(String::New(native_"],[4033,3,""],[4034,5,""],[4034,0,"i"],[4036,1,""],[4060,5,""],[4060,0,"no"],[4063,0,"e"],[4065,2,""],[4065,0,"ei"],[4068,1,""],[4446,3,""],[4447,5,""],[4447,0,"i"],[4449,1,""],[4501,3,""],[4502,4,""],[4502,0,"i"],[4504,2,""],[4583,3,""],[4584,5,""],[4584,0,"i"],[4586,1,""],[4749,3,""],[4750,5,""],[4750,0,"i"],[4752,1,""],[4762,3,""],[4762,0,"nod"],[4766,2,""],[4767,2,""],[4767,0,"ei"],[4770,1,""],[4787,3,""],[4788,4,""],[4788,0,"i"],[4790,2,""],[5664,6,""],[5664,0,"n"],[5666,1,""],[5666,0,"de"],[5674,0,"_t"],[5677,4,""],[5677,0,"m"],[5679,0,"r"],[5687,2,""],[5688,5,""],[5689,1,""],[5689,0,"de"],[5697,0,"_f"],[5700,1,""],[5701,2,""],[5707,0,"\n"],[5710,3,""],[5710,0,"Acc"],[5714,0,"ptor"],[5724,2,""],[5725,1,""],[5725,0,"aliz"],[5730,1,""],[5737,0,"Con"],[5741,0,"ecti"],[5746,2,""],[5746,0,"n"],[5753,2,""],[5754,0,"a"],[5756,0,"iz"],[5764,0,"\n"],[5798,0,"  HTTPServer::Initialize(g);\n"],[5771,4,""],[5771,0,"Serv"],[5776,5,""],[5776,0,"r"],[5800,1,""],[5800,0,"Conn"],[5805,4,""],[5805,0,"ction"],[328,31,""],[371,1,""],[373,1,""],[392,2,""],[410,2,""],[411,2,""],[718,0,"\n  attach_count_ = 0;\n  weak_ = false;\n}\n\nvoid\nObjectWrap::Attach ()\n{\n  attach_count_ += 1;\n}\n\nvoid\nObjectWrap::Detach ()\n{\n  attach_count_ -= 1;\n  assert(attach_count_ >= 0);\n\n  if(weak_ && attach_count_ == 0)\n    delete this;\n"],[1239,1,""],[1239,0,"obj"],[1280,0,"obj->weak_ = true;\n  if (obj->attach_count_ == 0)\n    "],[1341,1,""],[1341,0,"obj"],[976,4,""],[983,4,""],[1003,4,""],[1024,4,""],[1031,4,""],[1054,4,""],[1061,4,""],[5987,0,"Local<Object> http = Object::New();\n  node->Set(String::New(\"http\"), http);\n  "],[6088,1,""],[6088,0,"http"],[6124,1,""],[6124,0,"http"],[5905,0,"\n"],[5908,3,""],[5908,0,"Fil"],[5918,2,""],[5919,0,"a"],[5921,0,"iz"],[5442,0,"V8::PauseProfiler(); // to be resumed in Connection::on_read\n\n  "],[6663,0,"  V8::Dispose();\n"],[5948,3,""],[5948,0,"Tim"],[5952,0,"r"],[5959,2,""],[5960,1,""],[5960,0,"aliz"],[5965,1,""],[5966,1,""],[5966,0,"node"],[6531,3,""],[6532,0,"ode"],[6551,3,""],[6552,0,"ode"],[845,0,"if ("],[863,2,""],[863,0,">"],[865,2,""],[865,0,"0)"],[870,7,""],[870,0,"  "],[886,1,""],[886,0,"-"],[889,2,""],[889,0,"1"],[3925,0,"\n"],[5998,0,"Local<Object> tcp = Object::New();\n  node->Set(String::New(\"tcp\"), tcp);\n  "],[6094,1,""],[6094,0,"tcp"],[6125,1,""],[6125,0,"tcp"],[1021,1,""],[1021,0,"if(h"],[1030,1,""],[1030,0,".Is"],[1034,1,""],[1034,0,"mp"],[1037,0,"y() || handl"],[1050,0,"->Inte"],[1060,3,""],[1060,0,"F"],[1065,0,"Count()"],[1074,0,"= 0)"],[1079,0,"{"],[1085,1,""],[1085,0,"ThrowException(String::New(\"Tried to unwr"],[1127,0,"p object without i"],[1146,1,""],[1146,0,"terna"],[1152,0," field.\"));\n    r"],[1170,3,""],[1171,1,""],[1171,0,"u"],[1174,0," NULL;\n  }\n  Loc"],[1192,0,"<Value"],[1199,3,""],[1199,0," v"],[1202,3,""],[1202,0,"lue = "],[1235,0,";\n  if (value.IsEmpty()) {\n    ThrowException(String::New(\"Tried to unwrap object with empty internal field.\"));\n    return NULL;\n  }\n  Handle<External> field = Handle<External>::Cast(value"],[1023,0," "],[1041,0,")"],[1043,2,""],[1043,0,"{"],[1045,0,"\n    fprintf(stderr, \"Node: Tried to unwrap empty object.\\n\");\n    return NULL;\n  }\n  if ( "],[1177,2,""],[1177,0,"fp"],[1180,8,""],[1181,1,""],[1182,0,"tf"],[1185,1,""],[1185,0,"s"],[1187,0,"der"],[1191,5,""],[1191,0,", \""],[1195,0,"od"],[1198,3,""],[1198,0,": "],[1245,0,"s"],[1247,0,"\\n"],[1250,1,""],[1355,9,""],[1355,0,"f"],[1357,1,""],[1357,0,"r"],[1359,1,""],[1360,0,"tf"],[1363,1,""],[1363,0,"s"],[1365,7,""],[1365,0,"d"],[1367,2,""],[1367,0,"rr, "],[1421,0,"\\n"],[1424,1,""],[926,0," {"],[933,0,"V8::A"],[939,0,"justAmountOfExt"],[955,0,"rnalAl"],[962,0,"ocatedMemory(-siz"],[980,0,"());\n    dele"],[1002,0,"  }\n"],[1782,0,"void\nObjectWrap::InformV8ofAllocation (ObjectWrap *obj)\n{\n  v8::V8::AdjustAmountOfExternalAllocatedMemory(obj->size());\n}\n\n"],[5621,0,"Initialize();\n  V8::"],[5621,20,""],[5665,0,"  V8::Initialize();\n"],[7353,0,"// The following line when uncommented causes an error.\n  // To reproduce do this:\n  // > node --prof test-http_simple.js \n  // \n  // > curl http://localhost:8000/quit/\n  //\n  //"],[6581,0,"Local<Object> fs = Object::New();\n  node->Set(String::New(\"fs\"), fs);\n  "],[6670,1,""],[6670,0,"fs"],[6229,0," // internal "],[6302,1,""],[6302,0,"node"],[5405,0,"enum encoding\nnode::ParseEncoding (Handle<Value> encoding_v)\n{\n  HandleScope scope;\n\n  if (!encoding_v->IsString())\n    return RAW;\n\n  String::Utf8Value encoding(encoding_v->ToString());\n\n  if(strcasecmp(*encoding, \"utf8\") == 0) {\n    return UTF8;\n  } else if (strcasecmp(*encoding, \"ascii\") == 0) {\n    return ASCII;\n  } else {\n    return RAW;\n  }\n}\n\n"],[4735,1,""],[4735,0,"F"],[4740,2,""],[4740,0,"E"],[91,0,"#include \"constants.h\"\n"],[6985,0,"constants = Object::New();\n  node->Set(String::New(\"constants\"), constants);\n  DefineConstants(constants);\n\n  Local<Object> "],[167,0,"stdlib.h>\n#include <strings.h>\n#include <"],[3711,2,""],[3828,2,""],[3974,2,""],[4767,2,""],[4863,2,""],[333,27,""],[5783,0,"static void\nExecuteNativeJS (const char *filename, const char *data)\n{\n  HandleScope scope;\n  TryCatch try_catch;\n  ExecuteString(String::New(data), String::New(filename));\n  if (try_catch.HasCaught())  {\n    puts(\"There is an error in Node's built-in javascript\");\n    puts(\"This should be reported as a bug!\");\n    ReportException(&try_catch);\n    exit(1);\n  }\n}\n\n"],[7053,0,"r"],[7055,0,"allyE"],[7294,1,""],[7845,54,""],[7857,15,""],[7858,4,""],[7863,8,""],[7863,0,"J"],[7865,10,""],[7875,37,""],[7875,0,","],[7883,3,""],[7884,5,""],[7884,0,"http)"],[7890,1,""],[7891,1,""],[7900,15,""],[7901,4,""],[7906,1,""],[7906,0,"JS(\""],[7914,1,""],[7914,0,".js\""],[7920,1,""],[7920,0,"na"],[7923,1,""],[7924,5,""],[7924,0,"v"],[7926,3,""],[7926,0,"_"],[7931,5,""],[7936,8,""],[7936,0,"Exe"],[7940,1,""],[7940,0,"u"],[7942,7,""],[7942,0,"eN"],[7945,3,""],[7946,0,"iveJS"],[7952,4,""],[7952,0,"\"n"],[7955,2,""],[7955,0,"de.js\","],[7970,2,""],[7970,0,"node);\n\n  ev"],[7983,3,""],[7983,0,"lo"],[7986,2,""],[7986,0,"p(EV_DEFAULT_UC_"],[8003,0,"0);"],[8010,3,""],[8010,0,"// "],[8014,2,""],[8014,0,"all node."],[8024,3,""],[8024,0,"x"],[8026,4,""],[8027,9,""],[8028,1,""],[8028,0,") \n  Local<V"],[8041,0,"lue> exi"],[8050,1,""],[8050,0,"_"],[8052,2,""],[8052,0," = "],[8059,3,""],[8059,0,"->Get("],[8078,3,""],[8079,3,""],[8079,0,"xit"],[8089,3,""],[8089,0,"assert"],[8096,0,"exi"],[8100,2,""],[8101,8,""],[8101,0,"v->I"],[8106,2,""],[8106,0,"F"],[8108,2,""],[8108,0,"nc"],[8111,0,"ion"],[8117,0,";\n"],[8120,4,""],[8121,0,"Ha"],[8124,1,""],[8124,0,"dle<Func"],[8134,1,""],[8134,0,"on> "],[8139,0,"xit"],[8143,3,""],[8143,0,"f = Handl"],[8153,2,""],[8153,0,"<Functi"],[8161,1,""],[8161,0,"n>::Cast(exit_v)"],[8178,2,""],[8182,1,""],[8182,0,"xit"],[8186,0,"f->Cal"],[8193,3,""],[8194,7,""],[8194,0,"g, 0, N"],[8203,7,""],[8203,0,"L"],[8434,70,""],[8434,0,"0"],[8181,0,"TryCatch try_catch;\n  "],[8229,0,"  if (try_catch.HasCaught())\n    node::FatalException(try_catch);\n"],[3848,8,""],[3848,0,"v8::"],[3853,3,""],[3853,0,"a"],[3855,0,"dle<v8::Value>\nn"],[3879,0," (const v8::Arguments& args"],[4019,8,""],[4019,0,"v8::"],[4024,3,""],[4024,0,"andle<v8::Value>\n"],[4048,1,""],[4049,0,"(const v8::Arguments& args)"],[4341,8,""],[4341,0,"v8::"],[4346,3,""],[4346,0,"andle<v8::Value>\n"],[4368,0," (const v8::Arguments& args"],[4396,1,""],[6258,2,""],[6258,0,"s"],[6260,2,""],[6261,6,""],[6262,4,""],[6262,0,"i"],[6264,1,""],[6265,0,"Lo"],[6268,5,""],[6269,23,""],[6270,14,""],[6270,0,"<"],[6272,15,""],[6272,0,"bj"],[6275,1,""],[6275,0,"c"],[6277,19,""],[6277,0,">"],[6279,14,""],[6279,0,"L"],[6281,5,""],[6283,7,""],[6284,13,""],[6285,88,""],[6287,15,""],[6288,6,""],[6289,25,""],[6293,27,""],[6294,4,""],[6295,1,""],[6296,6,""],[6296,0,"h"],[6298,26,""],[6299,5,""],[6300,22,""],[6300,0,"*"],[6306,1,""],[6308,1,""],[6309,0,"{"],[6325,7,""],[6335,12,""],[6335,0,"L"],[6337,7,""],[6338,28,""],[6338,0,"al<"],[6347,19,""],[6347,0,">"],[6349,52,""],[6349,0,"g"],[6351,3,""],[6352,14,""],[6352,0,"b"],[6355,12,""],[6355,0,"_"],[6357,5,""],[6359,6,""],[6389,14,""],[6390,8,""],[6391,2,""],[6394,40,""],[6395,1,""],[6415,0,"_obj"],[6437,0,"\n"],[6441,0,"lobal_obj"],[6467,25,""],[6468,19,""],[6468,0,"y"],[6470,8,""],[6470,0,"b"],[6472,3,""],[6473,34,""],[6474,12,""],[6475,28,""],[6479,2,""],[6480,11,""],[6480,0,")"],[6488,4,""],[6488,0,"obj"],[6670,0,"lobal_obj"],[6696,0,"Symbol"],[6727,2,""],[6727,0,"NODE_SET_METHOD(node_obj, \"compile\", compile);\n "],[6776,7,""],[6777,1,""],[6777,0,"ODE_SET_"],[6786,0,"ETHOD(node_obj, \"debug\", debug);\n  N"],[6824,2,""],[6825,0,"_"],[6827,0,"ET_METHOD(node_obj, \"reallyExit\", node_exit);\n"],[6898,0,"_obj"],[6955,0,"_obj"],[6976,0,"Symbol"],[7082,0,"_obj"],[7103,0,"Symbol"],[7190,0,"_obj"],[7331,0,"_obj"],[7570,0,"return scop"],[7582,2,""],[7582,0,".C"],[7586,2,""],[7586,0,"se"],[7589,2,""],[7589,0,"node"],[7594,13,""],[7594,0,"obj"],[7600,0,"}\n"],[7603,5,""],[7603,0,"stati"],[7609,0," void\nC"],[7619,0,"ExitHandler"],[7631,0,"(Ha"],[7635,1,""],[7636,0,"l"],[7638,1,""],[7638,0,"<Obj"],[7643,2,""],[7643,0,"c"],[7645,1,""],[7645,0,"> node_obj"],[7656,0,"\n{\n"],[7660,0," HandleScope scope;"],[7708,0,"_obj"],[7869,1,""],[7869,0,"Context::GetCurrent()->Global()"],[7978,0,"}\n\nint"],[7985,0,"main"],[7990,3,""],[7990,0,"(i"],[7994,0," argc, char *argv[]) \n{\n  "],[8021,1,""],[8021,0,"v_defaul"],[8030,4,""],[8030,0,"_loo"],[8035,3,""],[8036,0,"EVFLAG_AUTO"],[8049,2,""],[8053,1,""],[8053,0,"initialize t"],[8068,0,"de"],[8071,1,""],[8071,0,"au"],[8074,0,"t ev "],[8081,1,""],[8081,0,"op.\n\n  // start e"],[8099,2,""],[8099,0,"o thread"],[8108,0,"poo"],[8112,0,"\n  ev_async_"],[8126,0,"it(&"],[8131,1,""],[8131,0,"io_"],[8135,0,"atc"],[8140,1,""],[8140,0,"r,"],[8143,1,""],[8144,0,"ode_eio_"],[8153,0,"b);\n  ei"],[8162,2,""],[8162,0,"_init("],[8169,0,"io_wa"],[8176,0,"_poll, NULL);\n\n  V8::S"],[8199,0,"tFlagsFromComman"],[8216,1,""],[8216,0,"Line(&arg"],[8226,0,", "],[8229,0,"rgv, tr"],[8237,1,""],[8238,1,""],[8238,0,");\n "],[8243,1,""],[8243,0,"V8::I"],[8249,0,"itialize();\n "],[8263,0,"V8::S"],[8269,0,"tFatalE"],[8280,1,""],[8280,0,"Handler(OnFatalError);\n\n  if(argc < 2)  {"],[8324,2,""],[8325,2,""],[8326,0,"fp"],[8329,0,"intf(std"],[8338,1,""],[8339,0,"r, \"N"],[8345,2,""],[8345,0," script was spe"],[8361,0,"ifi"],[8365,0,"d.\\n\");\n  "],[8376,2,""],[8377,0,"re"],[8380,4,""],[8380,0,"urn 1;"],[8389,2,""],[8389,0,"}\n\n"],[8393,1,""],[8394,0,"Ha"],[8397,0,"dleSc"],[8403,1,""],[8403,0,"p"],[8406,2,""],[8406,0,"handle_sco"],[8417,0,"e;\n  Pe"],[8425,0,"sistent<C"],[8435,1,""],[8435,0,"ntext>"],[8442,0,"con"],[8447,1,""],[8447,0,"x"],[8449,2,""],[8449,0," = Con"],[8456,0,"ex"],[8459,4,""],[8459,0,"::New(NULL, ObjectTe"],[8482,0,"ate::N"],[8489,4,""],[8489,0,"w());"],[8497,2,""],[8497,0,"Context::Scope"],[8512,0,"context_scope(context);"],[8536,0,"\n "],[8539,0,"Local<Object>"],[8553,2,""],[8553,0,"node_obj"],[8562,1,""],[8562,0,"="],[8564,0,"Load(arg"],[8573,1,""],[8573,0,", a"],[8577,1,""],[8577,0,"gv);\n\n"],[8584,3,""],[8584,0," ev_loo"],[8592,1,""],[8592,0,"(EV_DEFAULT_UC_ 0); "],[8614,0," main event "],[8628,1,""],[8628,0,"op\n\n  C"],[8637,12,""],[8637,0,"lEx"],[8642,1,""],[8642,0,"Handler(node_obj);\n"],[8664,2,""],[8664,0,"context.Dispose();"],[8685,2,""],[6908,9,""],[6908,0,"Defin"],[6914,5,""],[6914,0,"C"],[6923,14,""],[6924,5,""],[6932,77,""],[101,0,"process.h\"\n#include \""],[6926,0,"  Process::Initialize(node_obj);\n"],[5090,302,""],[5173,67,""],[5174,14,""],[7757,0,"  ev_async_start(EV_DEFAULT_UC_ &eio_watcher);\n  ev_unref(EV_DEFAULT_UC);\n"],[1963,0,"static void\nbuf_free (oi_buf *b)\n{\n  V8::AdjustAmountOfExternalAllocatedMemory(-b->len);\n  free(b);\n}\n\noi_buf *\nnode::buf_new (size_t size)\n{\n  size_t total = sizeof(oi_buf) + size;\n  void *p = malloc(total);\n  if (p == NULL) return NULL;\n\n  oi_buf *b = static_cast<oi_buf*>(p);\n  b->base = static_cast<char*>(p) + sizeof(oi_buf);\n\n  b->len = size;\n  b->release = buf_free;\n  V8::AdjustAmountOfExternalAllocatedMemory(total);\n\n  return b;\n}\n\n"],[925,3,""],[926,1,""],[951,0," "],[29,0,"events.h\"\n#i"],[42,0,"clud"],[47,0," \"ne"],[6973,0,"EventEmitter::Initialize(node_obj);\n  "],[7521,0,"events.js\", native_events);\n  ExecuteNativeJS(\""],[7292,3,""],[7292,0,"Serv"],[7297,3,""],[5341,1,""],[7010,0,"Promise::Initialize(node_obj);\n  "],[1716,1,""],[1716,0,"value"],[1790,0,"\n  assert(value == obj->handle_);\n\n"],[5548,0,"atcher"],[5573,0,"assert(watcher == &e"],[5594,1,""],[5594,0,"o_wa"],[5599,0,"cher);\n "],[5608,0,"asse"],[5613,0,"t(revents"],[5624,0,"= EV_ASYNC);\n "],[374,1645,""],[396,2,""],[396,0,"evnet"],[480,2,""],[480,0,"evnet"],[546,2,""],[546,0,"evnet"],[625,2,""],[625,0,"evnet"],[652,2,""],[652,0,"evnet"],[711,2,""],[711,0,"evnet"],[6027,0,"util.js\", native_util);\n  ExecuteNativeJS(\""],[414,0,"size_t total = sizeof(evnet_buf) + b->len;\n  "],[502,3,""],[502,0,"tota"],[507,2,""],[352,21,""],[377,3,""],[377,0,"com"],[417,3,""],[417,0,"com"],[505,3,""],[505,0,"com"],[571,3,""],[571,0,"com"],[650,3,""],[650,0,"com"],[677,3,""],[677,0,"com"],[736,3,""],[736,0,"com"],[49,0,"dns.h\"\n#include \""],[5668,0,"dns = Object::New();\n  node_obj->Set(String::NewSymbol(\"dns\"), dns);\n  DNS::Initialize(dns);\n\n  Local<Object> "],[5109,0,"node_obj->Set(String::NewSymbol(\"version\"), String::New(NODE_VERSION));\n\n  "],[6866,0,"static void\nPrintHelp ( )\n{\n  printf(\"Usage: node [switches] script.js [arguments] \\n\"\n         \"  -v, --vers"],[6976,0,"o"],[6978,0,"    prin"],[6987,0," node's version\\n\""],[7006,0,"         \"  --v8-options     print v8 com"],[7049,0,"nd line opt"],[7061,0,"o"],[7063,0,"s\\n\");\n}\n\nstatic void\nParseArgs"],[7100,0,"*"],[7113,0,"*argv) \n{\n  for (int i = 1; i < *argc; i++) {\n    const char *"],[7178,0," = arg"],[7186,0,"i"],[7188,0,";\n    if (strcmp(arg, \"--version\""],[7223,0,"== 0 || strcmp(arg, \"-v\") == 0) {\n      printf(\"%s\\n\", NODE_VERSION);\n      exit(0);"],[7308,0,"    } else if (strcmp(arg, \"--help\") == 0 || strcmp(arg, \"-h\") == 0) "],[7381,0,"    PrintH"],[7392,0,"lp();\n      exit(0);\n    } else if (strcmp(arg, \"--v8-options\") == 0) {\n      arg"],[7474,0,"[i] = (char*)\"--help\";\n    }\n  }\n}\n\nint\nmain (int argc, char *argv[]) \n{\n  ev"],[7796,0,"ParseArgs(&argc, argv);\n  "],[8006,0,"PrintHelp();\n    "],[7551,0,"com_ignore_sigpipe();\n  ev"],[172,0,"#include \"node_stdio.h\"\n"],[3295,1,""],[3296,21,""],[3297,10,""],[3299,30,""],[3300,8,""],[3301,26,""],[3302,16,""],[3303,30,""],[3304,98,""],[5273,6,""],[5274,39,""],[5371,0,"\n  Stdio::Initialize(node_obj);\n"],[394,504,""],[4798,0,"node_obj->Set(String::NewSymbol(\""],[4843,3,""],[4843,0,"\"),\n              Eve"],[4865,1,""],[4866,3,""],[4866,0,"Em"],[4869,1,""],[4869,0,"tt"],[4872,1,""],[4872,0,"r::co"],[4878,0,"struct"],[4885,1,""],[4885,0,"r_templat"],[4895,1,""],[4895,0,"->GetFuncti"],[4907,2,""],[4907,0,"n()"],[7438,0,"\n  Local<FunctionTemplate> process_template = FunctionTemplate::New();\n\n  // The global object / \"process\" is an instance of EventEmitter.  For\n  // strange reasons we must initialize EventEmitter now!  it will be assign\n  // to it's namespace node.EventEmitter in Load() bellow. \n  EventEmitter::Initialize(process_template);\n\n"],[7816,0,"\n"],[7818,4,""],[7818,0,"     pro"],[7827,0,"ess_template->Ins"],[7845,0,"ance"],[7857,5,""],[7906,0,"context->Global()->Set(String::NewSymbol(\"process\"), context->Global());\n\n  "],[217,1,""],[2398,1,""],[2464,1,""],[2552,1,""],[2753,2,""],[2999,1,""],[3202,1,""],[3419,1,""],[6456,1,""],[6879,1,""],[7706,1,""],[138,0,"child_"],[5008,0,"Child"],[305,0,"#include <dlfcn.h> /* dlopen(), dlsym() */\n"],[2517,0,"typedef void (*extInit)(Handle<Object> exports);\n\nHandle<Value>\nnode_dlopen (const "],[2604,0,"Arguments& args)\n{\n  if (args.Length() < 2) return Undefined();\n\n  "],[2677,0,"Scope scope;\n\n  String::Utf8Value filename(args[0]->ToString());\n  Local"],[2750,0,"Object> target = args[1]->ToObject();\n\n  "],[2792,0,"oid *handle = dlopen(*filename, RTLD_LAZY);\n  if (handle == NULL) {\n    ThrowException(String::New(\"dlopen() failed.\"));\n    return Undefined();\n  }\n\n  void *init_handle = dlsym(handle, \"init\");\n  if (init_handle == NULL) {\n    ThrowException(String::New(\"No 'init' symbol found in module.\"));\n    return Undefined();\n  }\n  extInit init = reinterpret_cast<extInit>(init_handle);\n\n  init(target);\n\n  return Undefined();\n}\n\nv8::Handle<v"],[5532,0,"  NODE_SET_METHOD(node_obj, \"dlopen\", node_dlopen);\n"],[7653,1,""],[7653,0,"node::st"],[7662,2,""],[7662,0,"rt"],[7264,0,"bool cflags = false, libs = false;\n  "],[7514,0,"cflags\") == 0) {\n      cflags = true;\n      continue;\n    } else if (strcmp(arg, \"--libs\") == 0) {\n      libs = true;\n      continue;\n    } else if (strcmp(arg, \"--"],[7847,0,"\n  /* XXX Wow this is terrible code. */\n  bool should_exit = false;\n  if (cflags) {\n    should_exit = true;\n    printf(\"%s \", NODE_CFLAGS);\n  }\n  if (libs) {\n    should_exit = true;\n    printf(\"%s \", NODE_LIBFLAGS);\n  }\n  if (should_exit) {\n    printf(\"\\n\");\n    exit(0);\n  }\n"],[627,4,""],[652,4,""],[680,4,""],[790,4,""],[797,4,""],[967,0,"f"],[975,0,"stderr, "],[1020,46,""],[1075,4,""],[1240,0,"f"],[1248,0,"stderr, "],[1354,4,""],[1473,0,"f"],[1481,0,"stderr, "],[1662,0,"f"],[1670,0,"stderr, "],[1775,0,"f"],[1783,0,"stderr, "],[1807,0,"f"],[1815,0,"stderr, "],[1830,0,"\n    message->PrintCurrentStackTrace(stderr);\n"],[2651,0,"HandleScope scope;\n\n  "],[2714,22,""],[2890,0,"return "],[2943,24,""],[7169,0,"libs           print linker flags for modules\\n\"\n         \"  --cflags         print pre-processor and compiler flags\\n\"\n         \"  --"],[606,0,"static "],[633,0," "],[643,1,""],[644,0,"&"],[666,4,""],[666,0,"<Messag"],[674,0,">"],[676,1,""],[676,0,"mess"],[681,3,""],[681,0,"g"],[683,0," = try"],[690,1,""],[691,2,""],[691,0,"atch.Messag"],[703,0,"()"],[709,1,""],[709,0,"if (message.IsEmp"],[727,0,"y()) {\n    fp"],[743,4,""],[745,1,""],[745,0,"(stderr, \"Error: (no message)\\n\");\n    return;\n  }\n  Handle<"],[810,0,">"],[812,3,""],[813,3,""],[813,0,"rr"],[816,2,""],[816,0,"r = "],[829,2,""],[829,0,"."],[840,1,""],[845,2,""],[845,0,"Handle<Stri"],[857,0,"g> "],[862,3,""],[863,5,""],[864,3,""],[864,0,"k;\n  "],[870,0,"f (err"],[877,2,""],[877,0,"r->I"],[882,0,"Objec"],[888,2,""],[888,0,"()) {\n    Ha"],[901,1,""],[901,0,"dle<Object> obj"],[919,7,""],[919,0,"Ha"],[922,2,""],[922,0,"dl"],[925,2,""],[925,0,"<Obj"],[930,1,""],[930,0,"ct>::Cas"],[939,1,""],[939,0,"(err"],[944,1,""],[944,0,"r"],[950,0,"  "],[959,4,""],[959,0,"V"],[961,1,""],[961,0,"lu"],[966,2,""],[966,0,"raw_"],[971,1,""],[971,0,"t"],[973,2,""],[973,0,"ck"],[978,9,""],[978,0,"obj"],[983,1,""],[983,0,"G"],[985,3,""],[985,0,"t(Strin"],[993,0,"::N"],[997,0,"w"],[999,0,"\"stack\")"],[1012,0,"  "],[1018,2,""],[1018,0,"raw_"],[1023,1,""],[1023,0,"t"],[1025,3,""],[1025,0,"ck->"],[1031,3,""],[1031,0,"S"],[1033,1,""],[1033,0,"ring"],[1041,17,""],[1041,0,"s"],[1043,0,"ack"],[1047,7,""],[1047,0,"="],[1049,0,"H"],[1052,2,""],[1052,0,"dl"],[1055,1,""],[1055,0,"<S"],[1058,7,""],[1059,3,""],[1060,1,""],[1061,1,""],[1061,0,"g>::C"],[1067,8,""],[1068,5,""],[1068,0,"t("],[1071,4,""],[1071,0,"aw_"],[1076,0,"ack);"],[1084,1,""],[1084,0,"}\n"],[1087,2,""],[1088,2,""],[1089,2,""],[1089,0,"f"],[1091,0,"(s"],[1094,5,""],[1094,0,"a"],[1096,1,""],[1096,0,"k.IsEm"],[1104,4,""],[1104,0,"y()) {"],[1115,2,""],[1115,0,"St"],[1120,0,"g::U"],[1126,4,""],[1126,0,"8Valu"],[1132,3,""],[1133,8,""],[1142,3,""],[1142,0,"(erro"],[1148,3,""],[1151,10,""],[1428,0,"*"],[1438,7,""],[2001,0,"\n\n"],[2006,0," else {"],[2014,0,"    String::Utf8Value trace(stack);\n    fprintf(stderr, \"%s\\n\", *trace);\n  }\n"],[2404,1,""],[2520,1,""],[4098,1,""],[5071,1,""],[5954,0,"ExecuteNativeJS(\"util.js\", native_util);\n  ExecuteNativeJS(\"events.js\", native_events);\n\n  "],[6678,1,""],[6679,89,""],[3099,1,""],[3099,0,"Local<Value> exc"],[3116,0,"p"],[3118,2,""],[3118,0,"io"],[3122,5,""],[3122,0,"= "],[3133,0,"::Error"],[3153,1,""],[3155,2,""],[3156,1,""],[3156,0,"rror"],[3162,0,"));\n    return"],[3177,2,""],[3177,0,"ThrowExcept"],[3189,1,""],[3189,0,"on(exc"],[3196,4,""],[3196,0,"ption"],[3287,3,""],[3287,0,"L"],[3289,1,""],[3289,0,"cal<Value> exception =\n      "],[3327,0,"::Error"],[3397,3,""],[3397,0,"ThrowExc"],[3406,1,""],[3406,0,"pt"],[3409,0,"o"],[3411,2,""],[3412,0,"exception"]],"_dtSpan":[0,30126]},{"parents":[0],"numChildren":1,"agent":101,"time":"1970-01-01T00:00:00Z","patches":[[315,0,"unist"],[321,0,".h>\n#inc"],[330,0,"ude <errno.h>\n#include <dl"],[2622,0,"static Handle<Value>\nCwd (const Arguments& args)\n{\n  HandleScope scope;\n\n  char output[PATH_MAX];\n  char *r = getcwd(output, PATH_MAX);\n  if (r == NULL) {\n    return ThrowException(Exception::Error(String::New(strerror(errno))));\n  }\n  Local<String> cwd = String::New(output);\n\n  return scope.Close(cwd);\n}\n\n"],[6220,0,"cwd\", Cwd);\n  NODE_SET_METHOD(node_obj, \""]],"_dtSpan":[30126,30514]},{"parents":[1],"numChildren":1,"agent":137,"time":"1970-01-01T00:00:00Z","patches":[[3418,0,"\n"],[8966,8,""],[8966,0,"m"],[8968,3,""],[8968,0,"in"],[7862,63,""],[8035,13,""],[8036,1,""],[8038,23,""],[8273,10,""],[8273,0,"p"],[8275,14,""],[8277,20,""],[8278,4,""],[8278,0,"f"],[8280,5,""],[8281,5,""],[8281,0,"%"],[8283,0,"\\n"],[8286,1,""],[8286,0,","],[8288,4,""],[8288,0,"NODE_CFLAGS"],[8300,2,""],[8300,0,";"],[8308,1,""],[8308,0,"ex"],[8311,5,""],[8312,19,""],[8312,0,"(0)"],[8511,276,""],[295,0,"limits.h> /* PATH_MAX */\n#include <"],[6474,91,""],[7128,0,"util.js\", native_util);\n  ExecuteNativeJS(\"events.js\", native_events);\n  ExecuteNativeJS(\""],[473,0,"#include <v8-deb"],[490,0,"g.h>\n\nu"],[9485,0,"Debug::EnableAgent(\"node\", 2222);\n\n  "],[9658,0,"\n\n"],[539,0,"Local<Value>\nnode::Encode (const void *buf, size_t len, enum encoding encoding)\n{\n  HandleScope scope;\n\n  if (!len) return scope.Close(Null());\n\n  if (encoding == RAW) {\n    // raw encoding\n    Local<Array> array = Array::New(len);\n    for (size_t i = 0; i < len; i++) {\n      unsigned char val = static_cast<const unsigned char*>(buf)[i];\n      array->Set(Integer::New(i), Integer::New(val));\n    }\n    return scope.Close(array);\n  } \n\n  // utf8 or ascii encoding\n  Local<String> chunk = String::New((const char*)buf, len);\n  return scope.Close(chunk);\n}\n\n// Returns -1 if the handle was not valid for decoding \nssize_t\nnode::DecodeBytes (v8::Handle<v8::Value> val, enum encoding encoding)\n{\n  HandleScope scope;\n\n  if (val->IsArray()) {\n    if (encoding != RAW) return -1;\n    Handle<Array> array = Handle<Array>::Cast(val);\n    return array->Length();\n  }\n\n  if (!val->IsString()) return -1;\n\n  Handle<String> string = Handle<String>::Cast(val);\n\n  if (encoding == UTF8) return string->Utf8Length();\n\n  return string->Length();\n}\n\n#ifndef MIN\n# define MIN(a,b) ((a) < (b) ? (a) : (b))\n#endif\n\n// Returns number of bytes written.\nssize_t\nnode::DecodeWrite (char *buf, size_t buflen, v8::Handle<v8::Value> val, enum encoding encoding)\n{\n  size_t i;\n  HandleScope scope;\n\n  // XXX\n  // A lot of improvement can be made here. See:\n  // http://code.google.com/p/v8/issues/detail?id=270\n  // http://groups.google.com/group/v8-dev/browse_thread/thread/dba28a81d9215291/ece2b50a3b4022c\n  // http://groups.google.com/group/v8-users/browse_thread/thread/1f83b0ba1f0a611\n\n  if (val->IsArray()) {\n    if (encoding != RAW) return -1;\n    Handle<Array> array = Handle<Array>::Cast(val);\n    size_t array_len = array->Length();\n    for (i = 0; i < MIN(buflen, array_len); i++) {\n      Local<Value> int_value = array->Get(Integer::New(i));\n      buf[i] = int_value->IntegerValue();\n    }\n    return i;\n  }\n\n  assert(val->IsString());\n  Handle<String> string = Handle<String>::Cast(val);\n\n  if (encoding == UTF8) {\n    string->WriteUtf8(buf, buflen);\n    return buflen;\n  }\n\n  string->WriteAscii(buf, 0, buflen);\n  return buflen;\n}\n\n"],[978,0,"if (encoding == RAWS) {\n    const unsigned char *cbuf = static_cast<const unsigned char*>(buf);\n    uint16_t twobytebuf[len];\n    for (size_t i = 0; i < len; i++) {\n      // XXX is the following line platform independent? \n      twobytebuf[i] = cbuf[i];\n    }\n    Local<String> chunk = String::New(twobytebuf, len);\n    return scope.Close(chunk);\n  }\n\n  "],[2956,0,"if (encoding == ASCII) {\n    "],[3023,0,"  return buflen;\n  }\n\n  // THIS IS AWFUL!!! FIXME\n\n  uint16_t twobytebuf[buflen];\n\n  string->Write(twobytebuf, 0, buflen);\n\n  for (size_t i = 0; i < buflen; i++) {\n    unsigned char *b = reinterpret_cast<unsigned char*>(&twobytebuf[i]);\n    assert(b[1] == 0);\n    buf[i] = b[0];\n  }\n\n  "],[7735,0,", enum encoding _default"],[8027,0,"if (strcasecmp(*encoding, \"raw\") == 0) {\n    return RAW;\n  } else if (strcasecmp(*encoding, \"raws\") == 0) "],[8149,0,"S;\n  } else {\n    return _default"],[3669,0,"fflush(stderr);\n    "],[4996,0,"  fflush(stderr);\n"],[5949,0,"fflush(stderr);\n  "],[11620,0,"ParseArgs(&argc, argv);\n  V8::SetFlagsFromCommandLine(&argc, argv, true);\n\n  "],[11967,76,""],[12493,37,""],[11043,0,"\\n\"\n         \"Documentation can be found at http://tinyclouds.org/node/api.html\"\n         \" or with 'man node'\\n"],[8926,0,"int i,j;\n  "],[8987,4,""],[9163,0,"Local<Object> env = Object::New();\n  for (i = 0; environ[i]; i++) {\n    for (j = 0; environ[i][j] && environ[i][j] != '='; j++) { ; }\n    Local<String> field = String::New(environ[i], j);\n    Local<String> value = Local<String>();\n    if (environ[i][j] == '=') {\n      value = String::New(environ[i]+j+1);\n    }\n    env->Set(field, value);\n  }\n  global_obj->Set(String::NewSymbol(\"ENV\"), env);\n\n  "],[539,0,"extern char **environ;\n\n"],[0,8,""],[0,0,"//"],[3,2,""],[3,0,"C"],[5,8,""],[5,0,"pyr"],[9,0,"ght 2009 Rya"],[22,1,""],[22,0," Dah"],[27,3,""],[28,5,""],[28,0,"<ry@"],[33,6,""],[35,0,"y"],[38,0,"o"],[40,4,""],[41,1,""],[43,2,""],[43,0,"org>"],[57,1,""],[57,0,"<"],[59,0,"od"],[62,1,""],[64,1,""],[64,0,">\n"],[76,2,""],[76,0,"<std"],[81,2,""],[81,0,"o"],[84,1,""],[84,0,">"],[95,3,""],[95,0,"<s"],[98,1,""],[98,0,"dlib"],[104,1,""],[104,0,">"],[115,1,""],[115,0,"<s"],[118,0,"r"],[120,3,""],[120,0,"ngs"],[125,1,""],[125,0,">"],[136,3,""],[136,0,"<l"],[139,9,""],[139,0,"mit"],[145,1,""],[145,0,"> /* PATH_MAX */"],[171,6,""],[171,0,"<"],[173,2,""],[174,0,"sert"],[180,1,""],[180,0,">"],[191,1,""],[191,0,"<u"],[194,4,""],[194,0,"i"],[198,2,""],[200,2,""],[200,0,">"],[211,6,""],[211,0,"<"],[213,1,""],[213,0,"rrno"],[219,2,""],[219,0,">"],[231,2,""],[232,2,""],[232,0,"lfcn"],[239,0," /* dlopen(), dlsym() */\n"],[275,1,""],[275,0,"even"],[280,4,""],[280,0,"s"],[295,4,""],[295,0,"d"],[297,1,""],[312,4,""],[312,0,"ne"],[315,1,""],[318,15,""],[329,3,""],[329,0,"fil"],[333,2,""],[347,4,""],[347,0,"ht"],[350,1,""],[350,0,"p"],[365,0,"tim"],[369,1,""],[370,2,""],[384,3,""],[385,2,""],[386,5,""],[386,0,"il"],[389,2,""],[389,0,"_"],[391,0,"roc"],[395,7,""],[396,8,""],[396,0,"s.h>"],[411,0,"con"],[416,2,""],[416,0,"a"],[418,1,""],[418,0,"ts.h"],[434,2,""],[434,0,"node_"],[441,0,"dio.h"],[458,1,""],[458,0,"n"],[460,1,""],[460,0,"tives.h"],[469,1,""],[510,22,""],[537,0,"namespace node {\n\n"],[567,7,""],[567,0," "],[574,1,""],[627,1,""],[627,0," "],[982,1,""],[1095,0,"* "],[1107,0," = new uint16_t"],[1224,1,""],[1322,0,"delete twobytebuf;\n    "],[1551,1,""],[1559,7,""],[1559,0," "],[1571,1,""],[1622,1,""],[1622,0," "],[1848,3,""],[1913,3,""],[1942,3,""],[1984,0," "],[2063,7,""],[2063,0," "],[2075,1,""],[2101,0,"\n                   "],[2148,0,"\n                   "],[2192,1,""],[2192,0," "],[2898,3,""],[2962,3,""],[3046,3,""],[3140,0,"* "],[3152,0," = new uint16_t"],[3183,3,""],[3378,0,"delete twobytebuf;\n\n  "],[3437,3,""],[3470,1,""],[3470,0," "],[3516,1,""],[3516,0," "],[3551,3,""],[3587,1,""],[3587,0," "],[3603,1,""],[3613,1,""],[3613,0,"*"],[3624,1,""],[3624,0," "],[3664,1,""],[3664,0,"->"],[3819,1,""],[3819,0,"->"],[5120,3,""],[5165,1,""],[5165,0," "],[5225,0,"              "],[5270,1,""],[5270,0," "],[5424,0,"&"],[5541,0,"&"],[5625,1,""],[5625,0," "],[5629,1,""],[5652,1,""],[5652,0," "],[5933,7,""],[5933,0," E"],[5938,1,""],[5965,1,""],[5965,0," "],[6156,9,""],[6156,0," DLO"],[6163,1,""],[6190,1,""],[6190,0," "],[6885,2,""],[6885,0," C"],[6893,1,""],[6920,1,""],[6920,0," "],[7193,1,""],[7193,0," "],[7206,1,""],[7249,1,""],[7249,0," "],[7251,1,""],[7463,7,""],[7463,0," "],[7478,1,""],[7499,1,""],[7499,0," "],[7520,0,"&"],[7587,4,""],[7588,7,""],[7588,0," EIOCall"],[7597,1,""],[7597,0,"ack"],[7638,1,""],[7638,0," "],[7735,6,""],[7735,0," EIOW"],[7743,2,""],[7743,0,"P"],[7747,1,""],[7753,1,""],[7753,0," "],[7818,7,""],[7818,0," "],[7832,1,""],[7882,1,""],[7882,0," "],[8014,0," "],[8325,1,""],[8325,0," "],[8341,1,""],[8381,1,""],[8381,0," "],[8646,0,"&"],[8699,1,""],[8699,0," "],[8704,1,""],[8728,1,""],[8728,0," "],[8998,0," "],[9664,1,""],[9664,0,"C"],[9716,6,""],[9716,0,"E"],[9802,8,""],[9802,0,"DLO"],[10866,1,""],[10866,0," "],[10882,1,""],[10907,1,""],[10907,0," "],[11243,1,""],[11243,0," "],[11253,1,""],[11254,1,""],[11255,1,""],[11255,0," "],[11281,3,""],[11281,0,"op"],[11284,3,""],[11284,0,"ion"],[11290,0,"[--] "],[11635,1,""],[11635,0," "],[11645,1,""],[11669,1,""],[11669,0," "],[12126,1,""],[12126,0,"reinterpret_cast<const "],[12154,1,""],[12154,0,">("],[12164,0,")"],[12180,0,"}  // namespace node\n\n"],[12205,1,""],[12205,0," "],[12234,1,""],[12234,0," "],[12239,0,"node::"],[12378,0," "],[12459,0,"nod"],[12463,0,"::e"],[12482,5,""],[12482,0,"::EIOCallba"],[12494,1,""],[12494,0,"k"],[12509,2,""],[12509,0,"n"],[12511,2,""],[12511,0,"de::EIOW"],[12522,2,""],[12522,0,"P"],[12568,0,"nod"],[12572,0,"::e"],[12663,0,"node::"],[12689,0," "],[12759,0,"node::"],[13107,0,"node::"],[13401,0,"node::"],[13455,0," "],[13478,0,"node::"],[13565,0,"\n"],[555,0,"static int dash_dash_index = 0;\n\n"],[9077,0," - dash_dash_index + 1"],[9104,0,"\n  arguments->Set(Integer::New(0), String::New(argv[0]));\n  "],[9169,0,"j = 1, "],[9180,1,""],[9180,0,"dash_dash_index + 1"],[9211,0,"j++, "],[9301,1,""],[9301,0,"j"],[11907,0,"\") == 0) {\n      dash_dash_index = i;\n      break;\n    } else if (strcmp(arg, \"--"],[12538,3,""],[12538,0,"fals"],[122,1,""]],"_dtSpan":[30514,36214]},{"parents":[2],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[3818,0,"\n"],[3891,0,"\n"],[4111,24,""],[4112,1,""],[4114,42,""],[4160,1,""],[4162,1,""],[4224,1,""],[4226,1,""],[4277,2,""],[4321,2,""],[4343,4,""],[4372,12,""],[4375,1,""],[4377,1,""],[4407,1,""],[4409,1,""],[4465,1,""],[4467,1,""],[4522,2,""],[4570,2,""],[4624,1,""],[4626,1,""],[4665,2,""],[4705,2,""],[4727,2,""],[4733,2,""],[4768,1,""],[4770,1,""],[4806,1,""],[4810,1,""],[4832,1,""],[4834,1,""],[4836,2,""],[4864,0,"if (stack.IsEmpty()) {\n  "],[4931,2,""],[6863,0,"HandleScope scope;\n\n  "],[6907,0," {"],[6921,1,""],[6921,0,"ThrowExceptio"],[6935,1,""],[6935,0,"(Exc"],[6940,1,""],[6940,0,"pt"],[6943,0,"o"],[6945,0,"::Typ"],[6951,1,""],[6951,0,"Error"],[6957,2,""],[6958,1,""],[6960,2,""],[6960,0,"        Stri"],[6973,2,""],[6973,0,"g::N"],[6978,4,""],[6978,0,"w(\"ne"],[6984,0,"ds"],[6987,2,""],[6987,0,"tw"],[6990,1,""],[6990,0," argum"],[6997,0,"nts.\")))"],[7007,0,"  }\n"],[7116,0,"Script> script = Script::Compile(source, filename);\n  if (script.IsEmpty()) return Undefined();\n\n  Handle<"],[7238,3,""],[7238,0,"s"],[7240,5,""],[7242,0,"pt->Ru"],[7249,1,""],[7250,0,");\n  if (re"],[7262,1,""],[7263,0,"lt.IsEmpty()) "],[7278,1,""],[7279,1,""],[7279,0,"turn"],[7284,0,"Unde"],[7290,2,""],[7291,2,""],[7292,0,"d("],[9138,0,"  node_obj->Set(String::NewSymbol(\"installPrefix\"), String::New(NODE_PREFIX));\n"],[587,1,""],[587,0,"enum enc"],[596,0,"ding ParseEn"],[609,0,"oding(H"],[617,0,"nd"],[620,0,"e"],[629,1,""],[629,0,"e"],[634,10,""],[635,17,""],[636,0,"g_v"],[655,0,"_d"],[658,7,""],[658,0,"fault"],[696,1,""],[698,0,"coding_v->IsString()"],[727,4,""],[727,0,"_d"],[730,8,""],[730,0,"fa"],[734,0,"t;\n\n  String::Utf8Va"],[755,0,"ue encoding"],[767,0,"encoding_v->ToString("],[799,0,"strcasecmp(*"],[819,0,", \"utf8\")"],[832,3,""],[832,0,"0"],[841,2,""],[841,0,"return"],[848,0,"UTF8;\n  } else if (st"],[870,0,"c"],[872,2,""],[872,0,"secmp(*"],[887,0,", \"ascii\") == 0) {"],[910,4,""],[910,0,"return ASCII;\n  } e"],[930,2,""],[930,0,"se if (st"],[940,1,""],[940,0,"c"],[942,2,""],[942,0,"secmp(*encoding,"],[959,0,"\"bin"],[964,1,""],[965,1,""],[966,0,"\")"],[970,0,"= 0) {\n   "],[981,1,""],[982,0,"etu"],[986,4,""],[986,0,"n BI"],[991,0,"ARY;\n  } else if (strcas"],[1016,1,""],[1016,0,"cmp"],[1020,1,""],[1020,0,"*"],[1023,0,"coding, \"raw\") == 0"],[1043,1,""],[1043,0," {"],[1051,1,""],[1051,0,"p"],[1053,1,""],[1053,0,"intf"],[1059,4,""],[1060,0,"derr,"],[1066,1,""],[1066,0,"\"'raw'"],[1073,1,""],[1073,0,"(array"],[1080,2,""],[1080,0,"of"],[1084,0,"ntegers)"],[1093,1,""],[1093,0,"has"],[1097,1,""],[1097,0,"be"],[1101,1,""],[1102,4,""],[1102,0,"removed."],[1111,1,""],[1111,0,"\""],[1119,2,""],[1119,0,"              \"U"],[1136,3,""],[1137,1,""],[1138,2,""],[1138,0,"'bin"],[1144,0,"y'.\\n\");\n    return BINARY;\n"],[1173,2,""],[1173,0," } e"],[1178,0,"se"],[1181,1,""],[1181,0,"if"],[1184,0,"("],[1186,2,""],[1187,3,""],[1187,0,"r"],[1191,2,""],[1191,0,"ecmp(*en"],[1201,0,"di"],[1204,0,"g, \"raw"],[1212,1,""],[1212,0,"\")"],[1215,1,""],[1215,0,"== 0) {\n    fpri"],[1232,0,"tf("],[1236,0,"tderr, \"'raws' encod"],[1257,0,"n"],[1259,0," has bee"],[1268,0," renam"],[1277,2,""],[1277,0,"to 'bin"],[1286,4,""],[1286,0,"y'. \"\n                    \"Please "],[1321,1,""],[1321,0,"pdate your code.\\n\""],[1341,3,""],[1347,0,"return BINARY;\n  } else {\n  "],[1377,1,""],[1378,0,"etu"],[1382,0,"n _default;\n  }\n}\n\nLoc"],[1405,2,""],[1405,0,"l<Value"],[1413,1,""],[1413,0," Encod"],[1420,1,""],[1421,1,""],[1421,0,"co"],[1424,0,"s"],[1426,2,""],[1426,0," void *buf, siz"],[1442,4,""],[1442,0,"_t l"],[1447,4,""],[1447,0,"n"],[1450,1,""],[1450,0,"e"],[1452,1,""],[1452,0,"um "],[1456,0,"ncodin"],[1463,0," "],[1465,10,""],[1465,0,"ncoding"],[1473,2,""],[1473,0," {"],[1478,1,""],[1478,0,"HandleScope"],[1490,1,""],[1490,0,"scope;\n"],[1500,0,"if"],[1503,0,"(!len)"],[1529,5,""],[1529,0,"Null()"],[1538,3,""],[1539,1,""],[1557,1,""],[1557,0,"BIN"],[1561,2,""],[1561,0,"RY"],[1897,0," // TODO use ExternalTwoByteString?"],[2267,0,"fpr"],[2271,0,"nt"],[2274,0,"(stderr,"],[2283,1,""],[2283,0,"\"'raw' "],[2299,2,""],[2299,0,"(array of"],[2309,3,""],[2309,0,"integers"],[2319,1,""],[2319,0,"has be"],[2326,3,""],[2328,3,""],[2328,0,"removed. \""],[2343,13,""],[2344,5,""],[2345,1,""],[2346,26,""],[2350,1,""],[2350,0,"         \"Us"],[2363,3,""],[2363,0," 'bi"],[2368,1,""],[2370,2,""],[2371,4,""],[2371,0,"'.\\"],[2375,4,""],[2375,0,"\""],[2381,3,""],[2382,3,""],[2383,3,""],[2384,4,""],[2385,2,""],[2385,0,"se"],[2388,3,""],[2388,0,"t"],[2390,0,"0"],[2392,1,""],[2392,0,";\n   "],[2409,0,"  }\n"],[2416,1,""],[2416,0,"Loc"],[2420,2,""],[2421,1,""],[2436,1,""],[2436,0,"v"],[2438,2,""],[2439,2,""],[2439,0,"->To"],[2449,7,""],[2450,3,""],[3124,0,"fpr"],[3128,0,"nt"],[3131,1,""],[3132,0,"std"],[3136,0,"rr, \"'raw' e"],[3155,3,""],[3156,30,""],[3156,0,"("],[3158,4,""],[3163,1,""],[3163,0,"of"],[3166,2,""],[3166,0,"i"],[3168,2,""],[3168,0,"teg"],[3172,2,""],[3173,8,""],[3174,5,""],[3175,3,""],[3176,2,""],[3176,0,"ha"],[3179,5,""],[3180,7,""],[3180,0,"be"],[3185,3,""],[3186,6,""],[3187,7,""],[3187,0,"moved. \""],[3200,3,""],[3201,2,""],[3202,1,""],[3203,2,""],[3204,1,""],[3205,1,""],[3206,11,""],[3207,11,""],[3208,4,""],[3209,2,""],[3215,10,""],[3215,0," \"Us"],[3220,1,""],[3221,0,"'b"],[3225,10,""],[3227,2,""],[3228,7,""],[3228,0,"'.\\"],[3232,12,""],[3232,0,"\""],[3234,1,""],[3236,1,""],[3240,15,""],[3241,10,""],[3241,0,"ss"],[3245,5,""],[3245,0,"t"],[3247,0,"0"],[3255,6,""],[3262,1,""],[3262,0,"-1"],[3273,28,""],[3273,0,"Loc"],[3277,2,""],[3278,1,""],[3293,1,""],[3293,0,"v"],[3295,2,""],[3296,2,""],[3296,0,"->To"],[3306,7,""],[3307,3,""],[3513,0,"assert(encoding == BINARY);\n\n  "],[8331,509,""],[1886,0,"[] "],[3801,0,"[] "],[7106,9,""],[7106,0,"("],[7108,8,""],[7114,1,""],[7114,0,")"],[10911,43,""],[11042,23,""],[11075,0,"Object> process = Context::GetCurrent()->Global();\n  Local<"],[11142,1,""],[11142,0,"m"],[11150,1,""],[11150,0,"pr"],[11153,1,""],[11153,0,"c"],[11155,4,""],[11155,0,"ss"],[11174,0,"Symbol"],[11183,1,""],[11183,0,"m"],[11193,6,""],[11193,0,"if "],[11197,0,"!"],[11199,1,""],[11199,0,"m"],[11219,0," {\n    exit(10)"],[11235,0,"  // could not emit exit event so exit with error code 10.\n  }"],[11300,1,""],[11300,0,"Loc"],[11304,2,""],[11305,1,""],[11317,1,""],[11317,0,"m"],[11320,2,""],[11323,1,""],[11323,0,"Loc"],[11327,2,""],[11328,1,""],[11346,1,""],[11346,0,"m"],[11354,0,"\n"],[11377,0,"\n"],[11380,9,""],[11380,0,"Loc"],[11385,0,"<Va"],[11389,5,""],[11389,0,"u"],[11391,1,""],[11391,0,"> argv[2] = { S"],[11407,0,"ring"],[11413,1,""],[11413,0,"N"],[11415,0,"w(\"exit\"), In"],[11429,3,""],[11429,0,"ege"],[11433,0,"::N"],[11437,2,""],[11437,0,"w"],[11439,0,"0"],[11441,0," };\n  emit"],[11453,4,""],[11453,0,"C"],[11456,0,"l"],[11458,1,""],[11458,0,"process"],[11467,1,""],[11467,0,"2"],[11470,4,""],[11470,0,"argv"],[11477,0,"\n"],[11506,0," {"],[11546,0,"  }\n"],[13903,8,""],[890,0,"utf-8\") == 0) {\n    return UTF8;\n  } else if (strcasecmp(*encoding, \""],[12771,0,"node::d"],[12779,3,""],[12779,0,"sh_dash_index"]],"_dtSpan":[36214,39171]},{"parents":[3],"numChildren":1,"agent":26,"time":"1970-01-01T00:00:00Z","patches":[[364,0,"signal_handler.h>\n#include <"],[10326,0,"SignalHandler::Initialize(node_obj);\n  "]],"_dtSpan":[39171,39238]},{"parents":[4],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[12709,0,"  dash_dash_index = i+1;\n    "],[486,0,"ode_n"],[619,0,"static bool use_debug_agent = false;\n"],[8471,0,"e"],[8473,0,"_async debug_watcher;\n\nstatic v"],[8508,0,"DebugMessageCallback("],[8530,0,"V_P_ ev_async *watcher, int revents) {\n  HandleScope scope;\n  assert(watcher == &debug_watcher);\n  assert(revents == EV_ASYNC);\n  E"],[8667,0,"String(String::New(\"1+1;\"),\n                String::"],[8720,0,"ew(\"debug_poll\"));\n}\n\nst"],[8747,0,"c "],[8750,0,"oid D"],[8756,0,"bugMessageDispatch(void) {\n  ev_async_send(EV_DEFAULT_UC_ &debug_watcher);\n}\n\n\nstatic void ExecuteNative"],[12258,0,"debug          enable remote debugging\\n\" // TODO specify port\n         \"  --"],[12621,0,"// TODO use parse opts\n  "],[12815,0,"debug\") == 0) {\n      argv[i] = reinterpret_cast<const char*>(\"\");\n      use_debug_agent = true;\n      dash_dash_index = i;\n    } else if (strcmp(arg, \"--"],[14080,0,"#define AUTO_BREAK_FLAG \"--debugger_auto_break\"\n  if (node::use_debug_agent) {\n    V8::SetFlagsFromString(AUTO_BREAK_FLAG, sizeof(AUTO_BREAK_FLAG));\n    ev_async_init(&node::debug_watcher, node::DebugMessageCallback);\n    Debug::SetDebugMessageDispatchHandler(node::DebugMessageDispatch);\n    ev_async_start(EV_DEFAULT_UC_ &node::debug_watcher);\n    ev_unref(EV_DEFAULT_UC);\n\n    bool r = Debug::EnableAgent(\"node \" NODE_VERSION, 5858);\n    assert(r);\n    printf(\"debugger listening on port 5858\\n\"\n           \"Use 'd8 --remote_debugger' to access it.\\n\");\n  }\n\n"],[6607,0,"// DLOpen is node.dlopen(). Used to load 'module.node' dynamically shared\n// objects.\n"],[6861,0," // Cast"],[6915,0," // Cast\n\n  // Actually call dlopen().\n  // FIXME: This is a blocking function and should be called asynchronously!\n  // This function should be moved to file.cc and use libeio to make this"],[7105,0,"  // system call."],[7173,0,"// Handle errors.\n  "],[7331,0,"// Get the init() function from the dynamically shared object.\n  "],[7441,0,"// Error out if not found.\n  "],[7682,0," // Cast\n"],[7692,0,"  // Execute the C++ module"],[8686,0,"// Called from the main thread.\n"],[8850,0,"// Giv"],[8857,0," control to EIO to process responses. In nearly every case\n  // EIOPromise::After() (f"],[8944,0,"le.cc) is called once EIO receives the resp"],[8988,0,"nse.\n  eio"],[9010,0,"// EIOWantPoll() is called from the EIO thread pool each time an EIO\n// request (that is, one of the node.fs.* functions) has completed.\n"],[9181,0,"// Signal the main thread that EIO callbacks need to be processed.\n  "],[9294,0,"  // EIOCallback() will be called from the main thread in the next event\n  // loop.\n"],[9702,0,"// This function is called from V8's debug thread when a debug TCP client\n  // has s"],[9787,0,"nt a message.\n\n  // Send a signal to our main thread saying that it should enter V8 to\n  // handle the message.\n  e"],[10125,0,"// There should not be any syntax errors "],[10167,0,"n these "],[10176,0,"ile!\n"],[10182,0," // If there are exit the process.\n  if "],[10486,0,"// Reference to 'process'\n  "],[10528,7,""],[10528,0,"pr"],[10531,2,""],[10531,0,"cess"],[10571,0,"\n"],[10613,2,""],[10614,0,"//"],[10617,2,""],[10617,0,"Create the 'process.n"],[10639,4,""],[10639,0,"de' "],[10646,0,"ect\n  process"],[10702,0," // and assign it."],[10724,0,"// node.version\n  "],[10816,0,"// node.installPrefix\n  "],[10920,0,"// process.ARGV\n  "],[11015,1,""],[11016,1,""],[11017,1,""],[11227,0,"// assi"],[11235,1,""],[11235,0,"n it\n  pr"],[11245,7,""],[11245,0,"cess"],[11297,0,"// create process.ENV\n  "],[11393,0,"// skip entries without a '=' character\n    "],[11503,0,"// create the v8 objects\n    "],[11710,0,"// assign them\n    "],[11759,0,"// assi"],[11767,1,""],[11767,0,"n pr"],[11772,4,""],[11772,0,"cess.ENV\n  pr"],[11786,2,""],[11786,0,"cess"],[11831,0,"// define various internal methods\n  "],[12055,0,"// Assign the EventEmitter. It was created in main().\n  "],[12226,0,"\n "],[12229,0,"// Initialize the C++"],[12251,0,"modules..................filename of module\n  "],[12327,1,""],[12327,0,"                // events.cc"],[12386,0,"                  // stdio.cc"],[12446,0,"                  // timer.cc"],[12514,0,"          // signal_handler.cc"],[12582,1,""],[12582,0,"           // child_process.cc"],[12641,0,"                    // constants.cc"],[12677,0,"  // Create node.dns"],[12806,1,""],[12806,0,"                         // dns.cc"],[12946,0,"                         // file.cc\n  // Create node.tcp. Note this separate from lib/tcp.js which is the public"],[13059,0,"  // frontend."],[13179,0,"                      // tcp.cc"],[13241,0,"                  // tcp.cc\n  // Create node.http.  Note this separate from lib/http.js which is the"],[13342,0,"  // public frontend."],[13477,0,"                 // http.cc"],[13540,0,"             // http.cc"],[13567,0,"// Compile, execute the src/*.js files. (Which were included a static C\n  // strings in node_natives.h)\n  "],[13806,0,"// In node.js we actually load the file specified in ARGV[1]\n  // so your next reading stop should be node.js!\n  "],[14008,4,""],[14009,0,"mitE"],[14016,5,""],[14016,0,"Ev"],[14019,1,""],[14019,0,"nt"],[14047,0,"\n  // Get reference to 'process' object.\n"],[14149,0,"// Get the 'emit' function from it.\n  "],[14285,11,""],[14321,0,"\n "],[14324,4,""],[14325,5,""],[14326,3,""],[14327,1,""],[14327,0,"xit("],[14333,1,""],[14333,0,");"],[14342,0,"// Cast\n  "],[14432,0,"// Arguments for the emit('exit')\n  "],[14535,0,"// Emit!\n  "],[15121,0,"// Parse node command line arguments.\n"],[16026,0,"\n"],[16064,0,"// Parse a few arguments which are specific to Node.\n  "],[16151,0,"// Parse the rest of the args (up to the 'dash_dash_index' (where '--' was\n  // in the command line))\n  "],[16324,0,"// Error out if w"],[16342,0," don't ha"],[16352,0,"e a script argument.\n  if (argc < 2) {\n    fprintf(stderr, \"No s"],[16417,0,"ript was specified.\\n\");\n    n"],[16448,0,"de::PrintHelp();\n    return 1;\n  }\n\n  // Ignore the SIGPIPE\n  evco"],[16534,0,"\n  // Initialize the default ev loop.\n"],[16603,0,"\n\n  // Start the EIO thread pool:\n"],[16642,1,""],[16642,0,"1. I"],[16660,1,""],[16661,1,""],[16661,0,"v_async w"],[16671,2,""],[16672,1,""],[16672,0,"ch"],[16675,1,""],[16675,0,"r"],[16677,0,"which al"],[16687,0,"ws f"],[16692,3,""],[16692,0,"r notification from"],[16717,1,""],[16718,4,""],[16718,0,"h"],[16720,2,""],[16732,0," (in node::EIOWantPoll) to poll for updates (in"],[16782,0,"// nod"],[16789,0,"::EIOCallback).\n  e"],[16863,0,"// 2. Actaully start th"],[16887,0," thread pool.\n  e"],[16940,0,"// 3. Start watcher.\n  "],[17016,0,"// 4. Remove a reference to the async watcher. This means we'll drop out\n  // of the ev_loop even though eio_watcher is active.\n  "],[17194,0,"HandleScope handle_scope;\n\n  "],[17270,0,"#define"],[17278,0,"AUTO_BREAK_FLAG"],[17294,4,""],[17294,0,"\"--debugger_"],[17307,0,"uto_b"],[17313,10,""],[17313,0,"eak\""],[17320,1,""],[17320,0,"//"],[17323,6,""],[17323,0,"I"],[17325,2,""],[17325,0," "],[17327,0,"he --"],[17334,7,""],[17334,0,"bug"],[17338,6,""],[17338,0,"flag"],[17356,2,""],[17356,0," the"],[17361,6,""],[17362,1,""],[17362,0,"i"],[17364,7,""],[17365,1,""],[17366,2,""],[17366,0,"ia"],[17369,5,""],[17369,0,"ize"],[17373,0,"the"],[17377,0,"debug"],[17383,1,""],[17383,0,"th"],[17387,7,""],[17387,0,"ad."],[17393,4,""],[17393,0,"if"],[17396,2,""],[17396,0,"("],[17398,5,""],[17399,6,""],[17400,1,""],[17401,1,""],[17401,0,"::u"],[17405,3,""],[17406,4,""],[17406,0,"_"],[17409,2,""],[17409,0,"bug_age"],[17417,1,""],[17417,0,"t) {\n    //"],[17429,11,""],[17430,3,""],[17430,0,"irst apply"],[17441,1,""],[17462,1,""],[17462,0," setting to V8. This is so we can"],[17498,2,""],[17499,1,""],[17499,0," // e"],[17505,2,""],[17505,0,"t"],[17507,2,""],[17507,0,"r V8 by j"],[17518,0,"t "],[17521,2,""],[17521,0,"x"],[17523,1,""],[17523,0,"c"],[17525,0,"tin"],[17529,1,""],[17529,0," "],[17531,2,""],[17532,0,"y bi"],[17537,1,""],[17538,1,""],[17538,0,"of javascript"],[17626,0,"// Initialize the async watcher for receiving messages from the debug\n    // thread and marshal it into the main thread. DebugMessageCallback()\n    // is called from the main thread to execute a random bit of javascript\n    // - which will give V8 control so it can handle whatever new message\n    // had been received on the debug thread.\n    "],[18039,0,"// Set the callback DebugMessageDispatch which is called from the debug\n    // thread.\n    "],[18201,0,"// Start the async watcher.\n    "],[18290,0,"// unref it so that we exit the event loop despite it b"],[18346,0,"ing acti"],[18355,0,"e.\n    ev"],[18392,0,"// Start the debug thread and it's associated TCP server on port 5858.\n    "],[18528,0,"// Crappy check that everything went well. FIXME\n    "],[18596,0,"// Print out some information. REMOVEME\n    "],[18748,0,"// Create the global 'process' object's FunctionTemplate.\n  "],[18899,2,""],[18900,1,""],[18900,0,"("],[18908,1,""],[18908,0,")"],[18941,1,""],[18945,0," some"],[18964,0,"and fo"],[18971,0,"gott"],[18976,0,"n re"],[19021,1,""],[19021,0,"\n  //"],[19027,0,"before"],[19034,0,"creat"],[19040,0,"ng "],[19044,0,"he"],[19047,0,"Context. EventEmitter "],[19083,5,""],[19083,0,"ed"],[19093,0,"\n  //"],[19200,0,"// Create the one and only Context.\n  "],[19374,1,""],[19374,0,"  // Actually assign the global object to it's place as 'process'"],[19518,0,"// Create all the objects, load modules, do everything.\n  // so your next reading stop should be node::Load()!\n  "],[19683,0,"// All our arguments are loaded. We've evaluated all of the scripts. We\n  // might even have created TCP s"],[19790,0,"r"],[19792,0,"ers. Now we enter the main event loop.\n  // If there are no watchers on the loop (except for the ones that were\n  // ev"],[19912,0,"unref'd) then this function exits. As "],[19952,0,"ng as there are active\n  // watchers, it bl"],[19996,0,"cks.\n  ev_loo"],[20053,0,"// Once we've dropped out, emit the 'exit' event from 'process'\n  "],[20125,4,""],[20126,0,"mitE"],[20133,2,""],[20133,0,"Event();\n\n#if"],[20148,1,""],[20149,0,"f NDEBUG\n  p"],[20162,0,"intf"],[20167,0,"\"clean up\\n\""],[20182,0,"  // Clean up."],[20235,0,"#endif  // NDEBUG"],[523,0,"#include <node_version.h>\n"]],"_dtSpan":[39238,45892]},{"parents":[5],"numChildren":1,"agent":26,"time":"1970-01-01T00:00:00Z","patches":[[6583,0,"v8::Handle<v8::Value> Kill(const v8::Arguments& args) {\n  HandleScope scope;\n  \n  if (args.Length() != 2 || !args[0]->IsNumber() || !args[1]->IsInt32()) {\n    return ThrowException(Exception::Error(S"],[6783,0,"ring::New(\"Bad argument.\")));\n  }\n  \n  pid_t pid = args[0]->IntegerValue();\n  int sig = args[1]->Int32Value();\n  \n  int r = kill(pid, sig);\n\n  if (r != 0) {\n    return ThrowException(Exception::Error(String::New(strerror(errno))));\n  }\n\n  return Undefined();\n}\n\nt"],[12316,0,"  process->Set(String::NewSymbol(\"pid\"), Integer::New(getpid()));\n"],[12606,0,"  NODE_SET_METHOD(node_obj, \"kill\", Kill);\n"]],"_dtSpan":[45892,46463]},{"parents":[6],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[6683,2,""],[6683,0,"<"],[6685,1,""],[6685,0,"1"],[6710,22,""],[6711,1,""],[6835,0,"\n  int sig = SIGTERM;\n\n"],[6861,0,"f (args.Le"],[6872,0,"g"],[6874,0,"h() >= 2) {\n    if (args[1]->IsNumber()) {\n     "],[6954,0,"  } else if (args[1]->IsString()) {\n      Local<String> signame = args[1]->ToString();\n      Local<Object> process = Context::GetCurrent()->Global();\n      Local<Object> node_obj = process->Get(String::NewSymbol(\"node\"))->ToObject();\n\n      Local<Value> sig_v = node_obj->Get(signame);\n      if (!sig_v->IsNumber()) {\n        return ThrowException(Exception::Error(String::New(\"Unknown signal\")));\n      }\n      sig = sig_v->Int32Value();\n    }\n  }\n"],[274,0,"node_"],[299,0,"node_"],[322,0,"ode_n"],[343,0,"node_"],[366,0,"node_"],[389,0,"node_"],[422,0,"node_"],[446,0,"node_"],[478,0,"node_"],[556,0,"node_"],[562,3,""],[563,3,""],[563,0,"rsion"],[572,0,"\n"],[583,5,""],[584,0,"8-d"],[588,5,""],[588,0,"bug"],[666,0,"Pers"],[671,0,"ste"],[676,0,"<Object>"],[685,0,"process;\n\nstatic int "],[7112,66,""],[7113,51,""],[7119,30,""],[7151,1,""],[7151,0,"pr"],[7154,1,""],[7154,0,"c"],[7156,4,""],[7156,0,"ss"],[11415,4,""],[11415,0,"Local<FunctionT"],[11431,1,""],[11431,0,"mplat"],[11437,0,"> p"],[11441,0,"ocess_templat"],[11455,0," = Fu"],[11462,0,"tionT"],[11468,1,""],[11468,0,"mpla"],[11473,1,""],[11473,0,"e::New();\n"],[11484,1,""],[11484,0," node::EventEmitter::Initialize("],[11523,1,""],[11523,0,"_template);\n"],[11538,1,""],[11538,0,"pr"],[11542,2,""],[11542,0,"ess = Persistent"],[11566,1,""],[11566,0,"::New("],[11579,6,""],[11579,0,"_"],[11582,1,""],[11582,0,"mpla"],[11587,2,""],[11587,0,"e->"],[11593,1,""],[11593,0,"F"],[11595,3,""],[11596,0,"c"],[11598,0,"ion"],[11605,4,""],[11605,0,"NewInst"],[11613,1,""],[11613,0,"nce"],[11618,0,")"],[11624,0,"// Assign the process object to its place.\n  "],[11683,5,""],[11683,0,"gl"],[11687,1,""],[11687,0,"al"],[11692,3,""],[11692,0,"Cont"],[11697,1,""],[11697,0,"x"],[11701,1,""],[11701,0,"G"],[11703,8,""],[11703,0,"t"],[11705,0,"u"],[11707,11,""],[11708,2,""],[11709,3,""],[11710,0,"t()->Gl"],[11718,5,""],[11719,4,""],[11719,0,"al();"],[11727,2,""],[11727,0,"gl"],[11730,4,""],[11730,0,"bal"],[11758,1,""],[11758,0,"pr"],[11761,1,""],[11761,0,"c"],[11763,0,"ss"],[11769,1,""],[11769,0,"pr"],[11772,1,""],[11772,0,"c"],[11774,15,""],[11776,7,""],[11776,0,");"],[11800,1,""],[11800,0,"pr"],[11803,1,""],[11803,0,"c"],[11805,4,""],[11805,0,"ss"],[11897,1,""],[11897,0,"pr"],[11900,1,""],[11900,0,"c"],[11902,4,""],[11902,0,"ss"],[13006,1,""],[13006,0,"pr"],[13009,1,""],[13009,0,"c"],[13011,4,""],[13011,0,"ss"],[13054,1,""],[13054,0,"pr"],[13057,1,""],[13057,0,"c"],[13059,4,""],[13059,0,"ss"],[13102,1,""],[13102,0,"pr"],[13105,1,""],[13105,0,"c"],[13107,4,""],[13107,0,"ss"],[13142,1,""],[13142,0,"pr"],[13145,1,""],[13145,0,"c"],[13147,4,""],[13147,0,"ss"],[13188,1,""],[13188,0,"pr"],[13191,1,""],[13191,0,"c"],[13193,4,""],[13193,0,"ss"],[13271,1,""],[13271,0,"pr"],[13274,1,""],[13274,0,"c"],[13276,4,""],[13276,0,"ss"],[13333,0," "],[13477,1,""],[13477,0,"pr"],[13480,1,""],[13480,0,"c"],[13482,4,""],[13482,0,"ss"],[13535,1,""],[13535,0,"pr"],[13538,1,""],[13538,0,"c"],[13540,4,""],[13540,0,"ss"],[13594,1,""],[13594,0,"pr"],[13597,1,""],[13597,0,"c"],[13599,4,""],[13599,0,"ss"],[13661,1,""],[13661,0,"pr"],[13664,1,""],[13664,0,"c"],[13666,4,""],[13666,0,"ss"],[13728,1,""],[13728,0,"pr"],[13731,1,""],[13731,0,"c"],[13733,4,""],[13733,0,"ss"],[13786,1,""],[13786,0,"pr"],[13789,1,""],[13789,0,"c"],[13791,4,""],[13791,0,"ss"],[13891,1,""],[13891,0,"pr"],[13894,1,""],[13894,0,"c"],[13896,4,""],[13896,0,"ss"],[14032,1,""],[14032,0,"pr"],[14035,1,""],[14035,0,"c"],[14037,4,""],[14037,0,"ss"],[14265,1,""],[14265,0,"pr"],[14268,1,""],[14268,0,"c"],[14270,4,""],[14270,0,"ss"],[14555,1,""],[14555,0,"pr"],[14558,1,""],[14558,0,"c"],[14560,4,""],[14560,0,"ss"],[15107,33,""],[15163,41,""],[15164,58,""],[15199,3,""],[15199,0,"'process'"],[19786,7,""],[19787,7,""],[19787,0,"GLOBAL"],[19848,2,""],[19848,0,"gl"],[19851,4,""],[19851,0,"bal"],[19896,60,""],[19897,105,""],[19898,19,""],[19899,7,""],[19900,1,""],[19901,12,""],[19902,16,""],[19904,83,""],[19905,18,""],[19987,2,""],[19987,0,"gl"],[19990,4,""],[19990,0,"bal"],[20124,7,""],[20124,0,"GLOBAL"],[20176,7,""],[20176,0,"GLOBAL"],[20320,15,""],[20321,10,""],[11785,1,""],[11785,0,"pr"],[11788,1,""],[11788,0,"c"],[11790,0,"ss"],[11879,1,""],[11879,0,"pr"],[11882,1,""],[11882,0,"c"],[11884,0,"ss"],[11993,0,"platform\n#define xstr(s) str(s)\n#define str(s) #s\n  process->Set(String::NewSymbol(\"platform\"), String::New(xstr(PLATFORM)));\n\n  // process."],[6665,0,"#ifdef __APPLE__\n/* Researched by Tim Becker and Michael Knight\n * http://blog.kuriositaet.de/?p=257\n * http://blog.kuriositaet.de/?p=257\n */\n\n#include <mach/task.h>\n#include <mach/mach_init.h>\n\nv8::Handle<v8::Value> MacGetMemory(const v8::Arguments& args) {\n  HandleScope scope;\n\n  task_t task = MACH_PORT_NULL;\n  struct task_basic_info t_info;\n  mach_msg_type_number_t t_info_count = TASK_BASIC_INFO_COUNT;\n\n  int r = task_info(mach_task_self(),\n                    TASK_BASIC_INFO,\n                    (task_info_t)&t_info,\n                    &t_info_count);\n\n  if (KERN_SUCCESS != r) {\n    return ThrowException(Exception::Error(String::New(strerror(errno))));\n  }\n\n  size_t rss = t_info.resident_size;\n  size_t vs  = t_info.virtual_size;\n\n  Local<Object> info = Object::New();\n\n  info->Set(String::NewSymbol(\"rss\"), Integer::NewFromUnsigned(rss));\n  info->Set(String::NewSymbol(\"vsize\"), Integer::NewFromUnsigned("],[7585,0,"s));\n\n  return scope.Close(info);\n}\n#endif  // __APPLE__\n\nv"],[14336,0,"#ifdef __APPLE__\n  NODE_SET_METHOD(process, \"macGetMemory\", MacGetMemory);\n#endif\n"],[6682,0,"#define HAVE_GETMEM 1\n"],[6790,27,""],[6791,6,""],[6792,3,""],[6793,1,""],[6845,6,""],[6845,0,"i"],[6847,14,""],[6847,0,"t"],[6849,4,""],[6849,0,"g"],[6852,1,""],[6852,0,"m"],[6855,3,""],[6856,3,""],[6857,0,"ize_"],[6863,5,""],[6863,0,"*"],[6865,6,""],[6866,5,""],[6867,5,""],[6867,0,","],[6869,5,""],[6869,0,"siz"],[6873,5,""],[6873,0,"_t"],[6876,0,"*v"],[6879,3,""],[6879,0,"iz"],[6882,2,""],[6882,0,") {"],[7175,0,"r != "],[7192,0,") return -1;\n\n  *rss = t_info.resident_size;\n "],[7239,1,""],[7239,0,"*vsize  "],[7249,0,"t_info.virtual_size;\n\n  return 0;\n}\n#endif  // __APPLE__\n\n#ifdef __linux__\n# define HAVE_GETMEM 1\n# include <sys/param.h> /* for MAXPATHLEN */\n# include <sys/user.h> /* for PAGE_SIZE */\n\nint getmem(size_t *"],[7456,0,"ss, size_t *vsize"],[7479,0,"FILE"],[7484,0,"*f"],[7487,0,"= fopen(\"/proc/self/stat\", \"r\");\n  if (!f) "],[7537,0,"-1;\n\n  int itmp;\n  char ctmp;\n  char buffer[MAXPA"],[7587,1,""],[7587,0,"HLEN];\n\n  /* PID */\n  if (fscanf(f, \"%d \", &itmp) == 0) goto er"],[7652,1,""],[7652,0,"r;\n  /* "],[7662,0,"e"],[7664,0," fil"],[7669,0," */\n  if (fscanf (f, \"%s \", &buffer[0]) == 0) goto error;\n  /* State */\n  if (fscanf (f, \"%c \", &ctm"],[7770,0,") == 0) go"],[7781,0,"o error;\n  /* Parent process */\n  if (fscanf (f, \"%d \", &"],[7839,0,"tmp) == 0) goto error;\n  /* Process group */\n  if (fscanf (f, \"%d \", &itmp) == 0) goto error;\n  /* Sessi"],[7945,0," id */\n  if "],[7958,2,""],[7958,0,"fs"],[7961,0,"anf (f, \"%d \", &itmp) == 0) goto "],[7995,0,"rror;\n  /* TTY */\n  if (fscanf (f, \"%d \", &itm"],[8042,0,") == 0) go"],[8053,0,"o error;\n  /* TTY owner process group */\n  if (fscanf (f, \"%d \", &"],[8120,0,"tmp) == 0) goto err"],[8140,0,"r;\n  /* Flags */\n  if (fsca"],[8168,3,""],[8168,0,"f (f, \"%u \", &itmp) == 0) goto er"],[8202,0,"o"],[8204,0,";\n  /* Min"],[8216,0," faults "],[8225,1,""],[8225,0,"no memory page) */\n  if (fscanf (f, \"%u \", &itmp) == 0) go"],[8284,0,"o er"],[8289,0,"or;\n  /* Minor faults, children */\n  "],[8327,0,"f (fsca"],[8335,0,"f (f, \"%u \", &itmp) == 0) "],[8362,3,""],[8362,0,"oto "],[8367,1,""],[8367,0,"rror;\n  /* Major faults (memory page faults) */\n  if "],[8421,0,"f"],[8423,0,"canf (f, \"%u \", &i"],[8442,0,"mp) == 0) goto er"],[8460,0,"or;\n  /* Major faults, children */\n  if (fscanf (f, \"%u \", &itmp) == 0) goto error;\n  /* utime */\n  if (fscanf (f, \"%d \", &itmp) == 0) goto error;\n  /* stime */\n  if (fscanf (f, \"%d \", &itmp) == 0) goto "],[8668,0,";\n  /* utime, children */\n  if (fscanf "],[8708,0,"f, \"%d \", &itmp) == 0) goto "],[8739,0,"or;\n  /* stime, childre"],[8763,0," */\n  if (fscanf (f, \"%d \", &itmp) == 0) goto err"],[8813,0,"r;\n  /* jiffies remaining in current time slice */\n  if (fscanf (f, \"%d \", &itmp"],[8894,0," == 0"],[8900,0," goto error;\n  /* 'nice' value */\n  if (fscanf (f, \"%d \", &itmp"],[8964,0," == 0"],[8970,0," goto error"],[8985,1,""],[8985,0,"/* jiffies until next timeout */"],[9018,0,"  if (fscanf (f, \"%u \", &itmp) == 0) goto error;"],[9069,0,"/* jiffie"],[9079,0," unt"],[9084,1,""],[9084,0,"l n"],[9088,1,""],[9088,0,"xt SIGALRM */\n  if (fscanf (f, \"%u \", &itmp) == 0) go"],[9142,0,"o"],[9144,0,"erro"],[9149,0,";\n  /* "],[9157,0,"tart time (jiffies since sy"],[9185,0,"tem"],[9189,0,"boot) */\n  if (fscanf (f, \"%d \", &itmp) ="],[9232,0,"0) goto error;\n\n  /* Vir"],[9257,1,""],[9257,0,"ual memory s"],[9270,0,"ze */\n  if (fsca"],[9288,0," (f, \"%u \", &itmp) == 0) goto err"],[9322,1,""],[9323,0,";\n  *vsize = (size_t) itmp;\n\n  /* R"],[9365,1,""],[9365,0," set "],[9374,0," */\n  if (fscanf (f, \"%u \", &itmp) == 0) goto error"],[9429,0,"*rss = ("],[9443,0,") itmp *"],[9452,1,""],[9452,0,"PAGE_SIZE;\n\n  /* rlim */\n  if (fscanf (f, \"%u \", &itmp) == 0) goto error;\n  /* Start of text */\n  if (fscanf (f, \"%u \", &itmp) == 0) goto error;\n  /* End of text */\n  if (f"],[9625,0,"canf (f,"],[9634,0,"\"%u \", &itmp)"],[9649,0,"= 0) goto error;\n  /*"],[9671,0,"S"],[9673,1,""],[9673,0,"art of stack */\n  "],[9692,0,"f (fscanf (f, \"%u \", &itmp) == 0) goto error;\n\n  fclose (f);\n\n  retur"],[9762,0," 0;\n\nerror:\n  "],[9777,0,"cl"],[9780,1,""],[9780,0,"se (f);\n  return -1;\n}\n#endif  // __linux__\n\nv8::Handle<"],[9837,0,"8::Value> MemoryUsage(const v8::Arguments& args) {\n  HandleScope scope;\n\n#ifndef HAVE_GETMEM\n  return ThrowException(Except"],[9961,0,"on::Er"],[9968,0,"or(S"],[9973,0,"ring::New(\"Not support on yo"],[10002,0,"r pl"],[10007,0,"tform. (Talk to Ryan.)\")));\n#e"],[10038,0,"se\n  size"],[10048,0,"t rss, v"],[10065,0,"int r = getmem(&rss, &vsize);\n\n  if (r != 0) {\n    return ThrowException(Exception::Error(String::New(strerror(errno))));\n  }\n\n  "],[10368,0,"ize"],[10403,2,""],[10410,14,""],[10411,0,"}\n\n"],[17107,17,""],[17137,6,""],[17142,0,"Usage"],[17150,6,""],[17156,0,"Usage"],[17163,7,""]],"_dtSpan":[46463,52710]},{"parents":[7],"numChildren":1,"agent":26,"time":"1970-01-01T00:00:00Z","patches":[[6199,0,"hdir(const Arguments& args) {\n  HandleScope scope;\n  \n  if (args.Length() != 1 || !args[0]->IsString()) {\n    return ThrowException(Exception::Error(String::New(\"Bad argument.\")));\n  }\n  \n  String::Utf8Value path(args[0]->ToString());\n  \n  int r = chdir(*path);\n  \n  if (r != 0) {\n    return ThrowException(Exception::Error(String::New(strerror(errno))));\n  }\n\n  return Undefined();\n}\n\nstatic Handle<Value> C"],[17417,0,"hdir\", Chdir);\n  NODE_SET_METHOD(process, \"c"]],"_dtSpan":[52710,53162]},{"parents":[8],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[19227,133,""]],"_dtSpan":[53162,53295]},{"parents":[9],"numChildren":1,"agent":49,"time":"1970-01-01T00:00:00Z","patches":[[6198,0,"ByteLength(const Arguments& args) {\n  HandleScope scope;\n\n  if (args.Length() < 1 || !args[0]->IsString()) {\n    return ThrowException(Exception::Error(String::New(\"Bad argument.\")));\n  }\n\n  Local<Integer> length = Integer::New(DecodeBytes(args[0], ParseEncoding(args[1], UTF8)));\n\n  return scope."],[6496,0,"lose(lengt"],[6507,0,");\n}\n\nstatic Handle<Value> Ch"],[17704,0,"_byteLength\", ByteLength);\n  NODE_SET_METHOD(process, \""]],"_dtSpan":[53295,53686]},{"parents":[10],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[25488,24,""]],"_dtSpan":[53686,53710]},{"parents":[11],"numChildren":1,"agent":49,"time":"1970-01-01T00:00:00Z","patches":[[13991,0,"static int uncaught_exception_counter = 0;\n\n"],[14080,0,"HandleScope scope;\n\n  // Check if uncaught_exception_counter indicates a recursion\n  if (uncaught_exception_counter > 0) {\n    "],[14238,0,"  exit(1);\n  }\n\n  Local<Value> listeners_v = process->Get(String::NewSymbol(\"listeners\"));\n  assert(listeners_v->IsFunction());\n\n  Local<Function> listeners = Local<Function>::Cast(listeners_v);\n\n  Local<String> uncaught_exception = String::NewSymbol(\"uncaughtException\");\n\n  Local<Value> argv[1] = { uncaught_"],[14550,0,"cept"],[14555,0,"on };\n  Local<Value> re"],[14579,0," = listeners->Call"],[14598,0,"process, "],[14608,0,", argv"],[14617,0,"\n  assert(ret->IsArray());\n\n  Local<Array> listener_array = Local<Array>::Cast(ret);\n\n  uint32_t length = listener_array->Length();\n  // Report and exit if process has no \"uncaughtException\" listener\n  if (length == 0) {\n    ReportException(&try_catch);\n    exit(1);\n  }\n\n  // Otherwise fire the process \"uncaughtException\" event\n  Local<Value> emit_v = process->Get(String::NewSymbol(\"emit\"));\n  assert(emit_v->IsFunction());\n\n  Local<Function> emit = Local<Function>::Cast(emit_v);\n\n  Local<Value> error = try_catch.Exception();\n  Local<Value> event_argv[2] = { uncaught_exception, error };\n\n  uncaught_exception_counter++;\n  emit->Call(process, 2, event_argv);\n  // Decrement so we know if the next exception is a recursion or not\n  uncaught_exception_counter--;\n"]],"_dtSpan":[53710,55017]},{"parents":[12],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[427,0,"sta"],[431,0,".h>\n#"],[437,0,"nclude <node_ti"],[19828,0,"Stat::Initialize(process);                   // stat.cc\n  "]],"_dtSpan":[55017,55098]},{"parents":[13],"numChildren":1,"agent":52,"time":"1970-01-01T00:00:00Z","patches":[[7251,0,"static Handle<Value> Umask(const Arguments& args){\n  HandleScope scope;\n\n  if(args.Length() < 1 || !args[0]->IsInt32()) {\t\t\n    return ThrowException(Exception::TypeError(\n          String::New(\"argument must be an integer.\")));\n  }\n  unsigned int mask = args[0]->Uint32Value();\n  unsigned int old = umask((mode_t)mask);\n  \n  return scope.Close(Uint32::New(old));\n}\n\n"],[19588,0,"umask\", Umask);\n  NODE_SET_METHOD(process, \""]],"_dtSpan":[55098,55509]},{"parents":[14],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[6557,0,"Loop(const Arguments& args) {\n  HandleScope scope;\n  ev_loop(EV_DEFAULT_UC_ 0);\n  return Undefined();\n}\n\nstatic Handle<Value> Unloop(const Arguments& args) {\n  HandleScope scope;\n  int how = EVUNLOOP_ONE;\n  if (args[0]->IsString()) {\n    String::Utf8Value how_s(args[0]->ToString());\n    if (0 == strcmp(*how_s, \"all\")) {\n      how = EVUNLOOP_ALL;\n    }\n  }\n  ev_unloop(EV_DEFAULT_ how);\n  return Undefined();\n}\n\nstatic Handle<Value> "],[19787,0,"loop\", Loop);\n  NODE_SET_METHOD(process, \"unloop\", Unloop);\n  NODE_SET_METHOD(process, \""],[22108,563,""],[26758,21,""],[26762,26,""],[26763,415,""]],"_dtSpan":[55509,57056]},{"parents":[15],"numChildren":1,"agent":185,"time":"1970-01-01T00:00:00Z","patches":[[4107,0,"#define DEV_SYMBOL         String::NewSymbol(\"dev\")\n#define INO_SYMBOL         String::NewSymbol(\"ino\")\n#define MODE_SYMBOL        String::NewSymbol(\"mode\")\n#define NLINK_SYMBOL       String::NewSymbol(\"nlink\")\n#define UID_SYMBOL         String::NewSymbol(\"uid\")\n#define GID_SYMBOL         String::NewSymbol(\"gid\")\n#define RDEV_SYMBOL        String::NewSymbol(\"rdev\")\n#define SIZE_SYMBOL        String::NewSymbol(\"size\")\n#define BLKSIZE_SYMBOL     String::NewSymbol(\"blksize\")\n#define BLOCKS_SYMBOL      String::NewSymbol(\"blocks\")\n#define ATIME_SYMBOL       String::NewSymbol(\"atime\")\n#define MTIME_SYMBOL       String::NewSymbol(\"mtime\")\n#define CTIME_SYMBOL       String::NewSymbol(\"ctime\")\n\nstatic Persistent<FunctionTemplate> stats_constructor_template;\n\nLocal<Object> BuildStatsObject(struct stat * s) {\n  HandleScope scope;\n\n  Local<Object> stats =\n    stats_constructor_template->GetFunction()->NewInstance();\n\n  /* ID of device containing file */\n  stats->Set(DEV_SYMBOL, Integer::New(s->st_dev));\n\n  /* inode number *"],[5135,0,"\n  stats->Set(INO_SYMBOL, Integer::New(s->st_ino));\n\n  /* protection *"],[5206,0,"\n "],[5209,0,"stats->Set(MOD"],[5224,0,"_SYMBOL, Integer::New(s->st_mode));\n\n  /* number of hard links */\n  stats->Set(NLINK_SYMBOL, Integer::New(s->st_nlink));\n\n  /* user ID of owner */\n  stats->Set(UID_SYMBOL, Integer::New(s->st_uid));\n\n  /* group ID of owner */\n  stats->Set(GID_SYMBOL, Integer::New(s->st_gid));\n\n  /* device ID (if special file) */\n  stats->Set(RDEV_SYMBOL, Integer::New(s->st_rdev));\n\n  /* total size, in bytes */\n  stats->Set(SIZE_SYMBOL, Integer::New(s->st_size));\n\n  /* blocksize for filesystem I/O */\n  stats->Set(BLKSIZE_SYMBOL, Integer::New(s->st_blksize));\n\n  /* number of blocks allocated */\n  stats->Set(BLOCKS_SYMBOL, Integer::New(s->st_blocks));\n\n  /* time of last access */\n  stats->Set(ATIME_SYMBOL, NODE_UNIXTIME_V8(s->st_atime));\n\n  /* time of last modification */\n  stats->Set(MTIME_SYMBOL, NODE_UNIXTIME_V8(s->st_mtime));\n\n  /* time of last status change */\n  stats->Set(CTIME_SYMBOL, NODE_UNIXTIME_V8(s->st_ctime));\n\n  return scope.Close(stats);\n}\n\n\n// E"],[22532,0,"stats object\n  Local<FunctionTemplate> stat_templ = FunctionTemplate::New();\n  stats_constructor_template = Persistent<FunctionTemplate>::New(stat_templ);\n  process->Set(String::NewSymbol(\"Stats\"),\n      stats_constructor_template->GetFunction());\n\n\n  // Initialize the "]],"_dtSpan":[57056,59393]},{"parents":[16],"numChildren":2,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[14013,0,"// V8 memory usage\n  HeapStatistics v8_heap_stats;\n  V8::GetHeapStatistics(&v8_heap_stats);\n  info->Set(String::NewSymbol(\"heapTotal\"),\n            Integer::NewFromUnsigned(v8_heap_stats.total_heap_size()));\n  info->Set(String::NewSymbol(\"heapUsed\"),\n            Integer::NewFromUnsigned(v8_heap_stats.used_heap_size()));\n\n  "],[20438,0,"Object> global = Context::GetCurrent()->Global();\n\n  // Assign the global object to it's place as 'GLOBAL'\n  global->Set(String::NewSymbol(\"GLOBAL\"), global);\n\n  Local<"],[20851,58,""],[28977,9,""],[28979,15,""],[28980,1,""],[28981,9,""],[28982,3,""],[28983,4,""],[28984,81,""],[29045,46,""],[29046,1,""],[29086,140,""],[23287,60,""],[725,0,"Persistent<String> dev_symbol;\nstatic Persistent<String> ino_symbol;\nstatic Persistent<String> mode_symbol;\nstatic Persistent<String> nlink_symbol;\nstatic Persistent<String> uid_symbol;\nstatic Persistent<String> gid_symbol;\nstatic Persistent<String> rdev_symbol;\nstatic Persistent<String> size_symbol;\nstatic Persistent<String> blksize_symbol;\nstatic Persistent<String> blocks_symbol;\nstatic Persistent<String> atime_symbol;\nstatic Persistent<String> mtime_symbol;\nstatic Persistent<String> ctime_symbol;\n\nstatic Persistent<String> rss_symbol;\nstatic Persistent<String> vsize_symbol;\nstatic Persistent<String> heap_total_symbol;\nstatic Persistent<String> heap_used_symbol;\n\nstatic Persistent<String> listeners_symbol;\nstatic Persistent<String> uncaught_except"],[1485,0,"o"],[1487,0,"_symbol;\ns"],[1498,0,"atic"],[1503,0,"Persistent<String> emit_symbol;\n\nstatic int "],[4925,2,""],[4925,0,"static P"],[4934,1,""],[4934,0,"rs"],[4937,0,"ste"],[4941,0,"t<FunctionTemplat"],[4959,0,">"],[4961,3,""],[4961,0,"stats"],[4967,3,""],[4967,0,"constructor_template;\n\nLocal<Object> "],[5005,0,"uildStats"],[5015,1,""],[5015,0,"bject(struct"],[5028,0,"stat"],[5033,0,"*"],[5035,0,"s)"],[5038,0,"{\n"],[5042,0,"HandleScope"],[5054,0,"scope;\n\n"],[5064,3,""],[5065,5,""],[5065,0,"f (d"],[5070,2,""],[5070,0,"v_s"],[5078,0,".IsEmpty"],[5087,5,""],[5088,0,") {"],[5092,1,""],[5092,0,"    "],[5097,4,""],[5098,0,"v_symbol ="],[5109,1,""],[5111,0,"DE"],[5114,0,"P"],[5121,5,""],[5121,0,"(\"dev\");\n"],[5134,3,""],[5136,7,""],[5136,0,"o_s"],[5144,15,""],[5145,1,""],[5145,0,"= N"],[5152,0,"P"],[5159,3,""],[5159,0,"(\"ino\");\n"],[5172,10,""],[5172,0,"mod"],[5176,2,""],[5176,0,"_s"],[5183,0," = NODE_PSYMBOL"],[5206,0,";"],[5208,4,""],[5208,0,"    nl"],[5216,1,""],[5216,0,"k_symbol ="],[5227,3,""],[5228,1,""],[5228,0,"ODE"],[5232,0,"P"],[5239,24,""],[5248,0,";"],[5250,7,""],[5251,12,""],[5254,7,""],[5254,0,"u"],[5256,8,""],[5256,0,"d_s"],[5264,15,""],[5265,2,""],[5265,0,"= NO"],[5270,0,"E"],[5272,0,"P"],[5279,5,""],[5279,0,"(\"uid\");\n"],[5292,3,""],[5292,0,"g"],[5294,8,""],[5294,0,"d_s"],[5302,15,""],[5303,1,""],[5303,0,"= NO"],[5309,1,""],[5310,0,"P"],[5317,3,""],[5317,0,"(\"gid\");\n"],[5330,3,""],[5331,6,""],[5331,0,"d"],[5333,2,""],[5333,0,"v_s"],[5341,16,""],[5342,3,""],[5342,0,"= NOD"],[5349,0,"P"],[5356,4,""],[5356,0,"(\"rdev\");\n"],[5370,3,""],[5370,0,"s"],[5372,5,""],[5372,0,"z"],[5374,2,""],[5374,0,"_s"],[5381,0," = NODE_PSYMBOL"],[5404,0,";"],[5406,4,""],[5406,0,"    blks"],[5415,1,""],[5415,0,"z"],[5417,0,"_symbol"],[5425,6,""],[5425,0,"= NOD"],[5432,0,"P"],[5439,22,""],[5450,0,";"],[5452,21,""],[5456,14,""],[5456,0,"blocks_s"],[5469,0," = NODE_PSYMBOL"],[5494,0,";"],[5496,7,""],[5497,12,""],[5500,5,""],[5500,0,"a"],[5502,1,""],[5503,5,""],[5503,0,"m"],[5505,2,""],[5505,0,"_s"],[5512,0," = NODE_PSYMBOL"],[5536,0,";"],[5538,7,""],[5539,12,""],[5542,5,""],[5542,0,"m"],[5544,1,""],[5545,5,""],[5545,0,"m"],[5547,2,""],[5547,0,"_s"],[5554,17,""],[5555,4,""],[5555,0,"= NOD"],[5562,0,"P"],[5569,24,""],[5571,1,""],[5571,0,"m"],[5578,1,""],[5578,0,";"],[5580,6,""],[5581,14,""],[5581,0,"   "],[5587,4,""],[5588,4,""],[5589,7,""],[5590,3,""],[5591,10,""],[5591,0,"y"],[5593,9,""],[5593,0,"b"],[5595,2,""],[5596,8,""],[5597,5,""],[5597,0,"= NODE_P"],[5606,4,""],[5606,0,"YMB"],[5610,5,""],[5610,0,"L"],[5612,4,""],[5612,0,"\""],[5615,9,""],[5615,0,"ime\""],[5620,2,""],[5620,0,";"],[5624,18,""],[5624,0,"}"],[5764,3,""],[5764,0,"dev"],[5768,6,""],[5768,0,"symbol"],[5837,3,""],[5837,0,"ino"],[5841,6,""],[5841,0,"symbol"],[5908,4,""],[5908,0,"mode"],[5913,6,""],[5913,0,"symbol"],[5991,5,""],[5991,0,"nlink"],[5997,6,""],[5997,0,"symbol"],[6072,3,""],[6072,0,"uid"],[6076,6,""],[6076,0,"symbol"],[6150,3,""],[6150,0,"gid"],[6154,6,""],[6154,0,"symbol"],[6238,4,""],[6238,0,"rdev"],[6243,6,""],[6243,0,"symbol"],[6321,4,""],[6321,0,"size"],[6326,6,""],[6326,0,"symbol"],[6412,7,""],[6412,0,"blksize"],[6420,6,""],[6420,0,"symbol"],[6507,6,""],[6507,0,"blocks"],[6514,6,""],[6514,0,"symbol"],[6593,5,""],[6593,0,"atime"],[6599,6,""],[6599,0,"symbol"],[6687,5,""],[6687,0,"mtime"],[6693,6,""],[6693,0,"symbol"],[6782,5,""],[6782,0,"ctime"],[6788,6,""],[6788,0,"symbol"],[14557,1,""],[14558,0," (rss_symb"],[14569,4,""],[14569,0,"l.IsEmp"],[14577,0,"y"],[14579,0,")) {\n    rss_symbol = NODE_P"],[14608,1,""],[14608,0,"YMBOL(\""],[14616,0,"ss\");\n    vs"],[14629,4,""],[14629,0,"ze_symbol = "],[14642,0,"ODE_PSYMBOL(\"vsize\");\n    h"],[14670,2,""],[14670,0,"ap_total_s"],[14685,0," = NODE_PSYMBOL"],[14702,1,""],[14702,0,"heapTotal\");\n    heap_u"],[14726,0,"ed_"],[14730,0,"ymbol = NODE_PSYMBOL(\"heapUsed"],[14762,0,";\n  }\n\n  info->Set(rss_symbol"],[14837,3,""],[14837,0,"vs"],[14840,5,""],[14840,0,"z"],[14842,2,""],[14842,0,"_s"],[14849,9,""],[14992,19,""],[14996,1,""],[14996,0,"_t"],[15002,2,""],[15002,0,"_symbol"],[15094,18,""],[15095,1,""],[15099,1,""],[15099,0,"_u"],[15104,2,""],[15104,0,"_symbol"],[18321,0,"if (listeners_symbol.IsEmpty()) {\n    listeners_symbol = NODE_PSYMBOL(\"listeners\");\n    uncaught_exception_symbol = NODE_PSYMBOL(\"uncaughtException\");\n    emit_symbol = NODE_PSYMBOL(\"emit\");\n  }\n\n  "],[18559,19,""],[18568,2,""],[18568,0,"_symbol"],[18717,0,"_symbol_l"],[18729,0,"Local<"],[18741,0,">"],[18747,6,""],[18748,1,""],[18756,1,""],[18756,0,"_e"],[18766,1,""],[18766,0,"_symbol"],[18775,1,""],[18821,0,"_symbol_l "],[19258,3,""],[19258,0,"em"],[19261,8,""],[19261,0,"t_s"],[19269,7,""],[19270,1,""],[19459,0,"_symbol_l"],[28152,0,"Don't handle more than 10 reqs on each eio_poll(). This is to avoid\n  // race conditions. See test/mjsunit/test-eio-race.js\n  eio_set_max_poll_reqs(10);\n  // "],[7526,0,"if (stack.IsEmpty()) {\n    "],[7601,0,"  "],[7667,0,"  "],[7722,0,"  "],[7766,0,"  "],[7824,0,"  "],[7858,0,"  "],[7918,0,"  "],[7977,0,"  "],[8025,0,"  "],[8083,0,"  "],[8126,0,"  "],[8166,0,"  "],[8192,0,"  "],[8198,0,"  "],[8237,0,"  "],[8279,0,"  "],[8305,0,"  "],[8311,0,"  "],[8339,2,""],[8340,17,""],[8341,6,""],[17887,7,""],[17888,25,""],[17889,22,""],[17902,0," {"],[17925,0,"\""],[17931,1,""],[17931,0," "],[17937,0,":"],[17939,2,""],[17971,0,"} "],[17977,0," {"],[18000,0,"\""],[18006,1,""],[18006,0," "],[18012,0,":"],[18014,2,""],[18031,0,"  }"]],"_dtSpan":[59393,63277]},{"parents":[17],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[279,0,"blob.h>\n#include <node_"],[24356,0,"InitBlob(process);                           // stdio.cc\n  "],[280,3,""],[280,0,"uffer"],[24363,3,""],[24363,0,"uffer"],[24378,1,""],[24403,1,""],[24406,5,""],[24406,0,"buffer"],[304,0,"io_watcher.h>\n#include <node_"],[24445,0,"\n"],[24448,1,""],[24448,0,"IOWa"],[24453,3,""],[24453,0,"cher"],[24479,2,""],[24493,2,""],[24496,3,""],[24498,0,"_watcher"],[24572,0,"tat::In"],[24580,0,"tialize(process);                   // stat.cc\n  Si"],[24695,0,"\n"],[24700,2,""],[24700,0,"dio"],[24725,1,""],[24747,2,""],[24748,0,"dio"],[333,0,"net2.h>\n#include <node_"],[24721,0,"InitNet2(process);                           // net2.cc\n\n  "]],"_dtSpan":[63277,63597]},{"parents":[17],"numChildren":1,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[19987,0,"if (-1 == "],[20007,0," && !ev_async_pending(&eio_watcher)) {\n    ev_async_send(EV_DEFAULT_UC_ &eio_watcher)"],[20094,0,"  }\n"],[1606,0,"\nstatic ev_async eio_want_poll_notifier;\nstatic ev_async eio_done_poll_notifier;\nstatic ev_idle  eio_poller;\n\n\nstatic void DoPoll(EV_P_ ev_idle *watcher, int revents) {\n  assert(watcher == &eio_poller);\n  assert(revents == EV_IDLE);\n\n  if (eio_poll() != -1) ev_idle_stop(EV_DEFAULT_UC_ watcher);\n}\n\n\n// Called from the main thread.\nstatic void WantPollNotifier(EV_P_ ev_async *watcher, int revents) {\n  assert(watcher == &eio_want_poll_notifier);\n  assert(revents == EV_ASYNC);\n\n  if (eio_poll() == -1) ev_idle_start(EV_DEFAULT_UC_ &eio_poller);\n}\n\n\nstatic void DonePollNotifier(EV_P_ ev_async *watcher, int rev"],[2219,0,"ts) {\n  assert(watcher == &eio_done_poll_notifier);\n  assert(revents == EV_ASYNC);\n\n  ev_idle_stop(EV_DEFAULT_UC_ &eio_poller);\n}\n\n\n// EIOWantPoll() is called from the EIO thread pool each time an EIO\n// req"],[2427,0,"est (that is, one of the node.fs.* functions) has completed.\nstatic void EIOWantPoll(void) {\n  // Signal the "],[2537,0,"ain thread that"],[2554,0,"io_poll "],[2563,0,"eed to be pro"],[2577,0,"essed.\n  ev_async_send(EV_DEFAULT_UC_ &ei"],[2619,0,"_want_poll_notifier);\n}\n\n\nstatic voi"],[2656,0," EIODonePoll(void) {\n  // Signal the main thread that we should stop call"],[2733,0,"eio_poll().\n  // from the idle watcher.\n  ev_async_send(EV_DEFAULT_UC_ &eio_done_poll_notifier);\n}\n\n\nenum encoding "],[10629,0,"\n  if (eio_poll() =="],[10650,0,"-1)"],[10657,0,"id"],[10660,0,"e_start(EV_DEFAULT_UC_ &ei"],[10687,0,"_p"],[10690,0,"ller);\n\n  ev_loo"],[20939,349,""],[20940,100,""],[20941,4,""],[20945,68,""],[20946,8,""],[20948,99,""],[20949,2,""],[20950,5,""],[20951,42,""],[20952,8,""],[20961,20,""],[20962,47,""],[20963,18,""],[20964,53,""],[28386,0,"e"],[28388,3,""],[28388,0,"up"],[28410,1,""],[28413,0,"{ "],[28417,3,""],[28419,2,""],[28420,3,""],[28420,0," requ"],[28426,1,""],[28426,0,"r"],[28428,0,"s"],[28430,3,""],[28430,0,"3,"],[28433,0,"y"],[28435,3,""],[28436,3,""],[28437,0,"3, "],[28447,0,"s.\n"],[28451,5,""],[28452,6,""],[28453,3,""],[28454,3,""],[28454,0,"ev_"],[28458,1,""],[28458,0,"dle_in"],[28465,2,""],[28466,0,"(&node::e"],[28477,0,"_poller, "],[28487,3,""],[28488,1,""],[28488,0,"de::DoPoll);\n"],[28504,2,""],[28505,3,""],[28506,3,""],[28507,0,"v_"],[28510,0,"sync_init(&no"],[28524,2,""],[28524,0,"e::ei"],[28530,0,"_want_p"],[28539,2,""],[28539,0,"l_not"],[28545,1,""],[28545,0,"fier,"],[28557,3,""],[28565,0,"Notifier"],[28574,0,";\n "],[28578,0,"  ev_async_s"],[28591,0,"art(EV_DEFAULT_UC_ &node::ei"],[28620,1,""],[28620,0,"_want_"],[28630,2,""],[28630,0,"_n"],[28633,6,""],[28634,0,"ifi"],[28638,5,""],[28638,0,"r);"],[28644,2,""],[28645,0," ev_u"],[28651,2,""],[28651,0,"r"],[28653,2,""],[28653,0,"f(EV_D"],[28660,2,""],[28660,0,"FAULT_U"],[28668,7,""],[28669,1,""],[28669,0,";\n"],[28674,0,"  "],[28701,2,""],[28701,0,"done_poll_no"],[28714,2,""],[28714,0,"ifi"],[28727,5,""],[28727,0,"DonePo"],[28735,4,""],[28735,0,"Notifier"],[28748,2,""],[28749,2,""],[28750,3,""],[28750,0,"ev_"],[28754,3,""],[28754,0,"s"],[28756,1,""],[28756,0,"nc_"],[28764,0,"(EV_DEFAULT_UC_"],[28780,2,""],[28780,0,"&nod"],[28785,4,""],[28785,0,"::"],[28788,1,""],[28788,0,"io_"],[28792,1,""],[28792,0,"one_"],[28798,0,"ll_n"],[28803,2,""],[28803,0,"tifier);"],[28814,0,"  ev_unr"],[28823,0,"f(EV_DEFAULT_UC);\n\n    e"],[28874,4,""],[28874,0,"node::EIODonePoll"],[28896,0,"  "],[28971,0,"  "],[29029,0,"  "],[29058,4,""],[29059,2,""],[29060,224,""],[29060,0,"}"],[10632,0,"// TODO Probably don't need to start th"],[10672,1,""],[10672,0,"s"],[10674,1,""],[10675,0,"ach t"],[10681,0,"me.\n  // Av"],[10693,4,""],[10693,0,"ids fai"],[10701,2,""],[10701,0,"ing"],[10705,2,""],[10705,0,"on"],[10708,0,"test/mjsunit/test"],[10726,2,""],[10726,0,"eio-race3.js though\n "]],"_dtSpan":[63597,66612]},{"parents":[19],"numChildren":1,"agent":173,"time":"1970-01-01T00:00:00Z","patches":[[12417,0,"\n#ifdef __FreeBSD__\n#define HAVE_GETMEM 1\n#include <kvm.h>\n#include <sys/param.h>\n#include <sys/sysctl.h>\n#include <sys/user.h>\n#include <fcntl.h>\n#include <unistd.h>\n\nint getmem(size_t *rss, size_t *vsize) {\n  kvm_t *kd = NULL;\n  struct kinfo_proc *kinfo = NULL;\n  pid_t pid;\n  int nprocs;\n\n  pid = getpid();\n\n  kd = kvm_open(NULL, NULL, NULL, O_RDONLY, \"kvm_open\");\n  if (kd == NULL) goto error;\n\n  kinfo = kvm_getprocs(kd, KERN_PROC_PID, pid, &nprocs);\n  if (kinfo == NULL) goto error;\n\n  *rss = kinfo->ki_rssize * PAGE_SIZE;\n  *vsize = kinfo->ki_size;\n\n  kvm_close(kd);\n\n  return 0;\n\nerror:\n  if (kd) kvm_close(kd);\n  return -1;\n}\n#endif  // __FreeBSD__\n\n\n"]],"_dtSpan":[66612,67272]},{"parents":[20],"numChildren":2,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[1842,0,"//printf(\"eio_poller\\n\");\n\n  "],[1893,0,"{\n    //printf(\""],[1910,0,"io_poller stop\\n\");\n    e"],[1972,0,"  }\n"],[2161,0,"//pr"],[2166,0,"nt"],[2169,0,"(\"want poll"],[2181,0,"notifier\\n\");\n\n  if "],[2220,0,"{\n    //printf(\""],[2237,0,"io_poller start\\n\");\n    e"],[2305,0,"  }\n"],[2462,0,"//printf(\"done poll notifier\\n\");\n\n  if (eio_poll() != -1) {\n    //printf(\"eio_poller stop\\n\");\n    "],[2604,0,"  }\n"],[8556,0,", bool show_line = false"],[9044,14,""],[9044,0,"how_line"],[9843,0,"  }\n\n  if (stack.IsEmpty()) {"],[19647,4,""],[19654,4,""],[19675,4,""],[19942,1,""],[19942,0,"TryC"],[19947,2,""],[19947,0,"tch try_catch;\n\n  Loca"],[19970,1,""],[20029,1,""],[20029,0,"try_"],[20034,3,""],[20034,0,"a"],[20036,0,"ch"],[20039,1,""],[20039,0,"Ha"],[20042,3,""],[20042,0,"Caugh"],[20048,1,""],[20052,0,"{\n    // Hack because I can't get a p"],[20090,0,"op"],[20093,0,"r s"],[20097,1,""],[20097,0,"ackt"],[20102,0,"ace o"],[20109,1,""],[20109,0,"Sy"],[20112,1,""],[20112,0,"taxError\n    ReportExc"],[20135,1,""],[20135,0,"pt"],[20138,0,"o"],[20140,0,"(&try_catch, true);\n    "],[20165,1,""],[20165,0,"xit"],[20169,0,"1"],[20173,0,"  }\n"],[20180,1,""],[20180,0,"Loc"],[20184,2,""],[20185,1,""],[20223,0,"t"],[20225,4,""],[20225,0,"y_ca"],[20230,0,"ch"],[20233,1,""],[20233,0,"Ha"],[20236,3,""],[20236,0,"Caugh"],[20242,1,""],[20253,7,""],[20253,0,"try_catch.R"],[20265,1,""],[20265,0,"Throw"],[371,0,"idle_watcher."],[385,0,">\n#include <node_h"],[26131,0,"IdleWatcher::Initialize(process);            // idle_watcher.cc\n  "],[12756,0,"#ifdef __sun\n#define HAVE_GETMEM 1\n#include <unistd.h> /* getpagesize() */\n\n#if (!defined(_LP64)) && (_FILE_OFFSET_BITS - 0 == 64)\n#define PROCFS_FILE_OFFSET_BITS_HACK 1\n#undef _FILE_OFFSET_BITS\n#else\n#define PROCFS_FILE_OFFSET_BITS_HACK 0\n#endif\n\n#include <procfs.h>\n\n#if (PROCFS_FILE_OFFSET_BITS_HACK - 0 == 1)\n#define _FILE_OFFSET_BITS 64\n#endif\n\nint getmem(size_t *rss, size_t *vsize) {\n  pid_t pid = getpid();\n\n  size_t page_size = getpagesize();\n  char pidpath[1024];\n  sprintf(pidpath, \"/proc/%d/psinfo\", pid);\n\n  psinfo_t psinfo;\n  FILE *f = fopen(pidpath, \"r\");\n  if (!f) return -1;\n\n  if (fread(&psinfo, sizeof(psinfo_t), 1, f) != 1) {\n    fclose (f);\n    return -1;\n  }\n\n  /* XXX correct? */\n\n  *vsize = (size_t) psinfo.pr_size * page_size;\n  *rss = (size_t) psinfo.pr_rssize * 1024;\n\n  fclose (f);\n\n  return 0;\n}\n#endif\n\n"]],"_dtSpan":[67272,68772]},{"parents":[18,21],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[27099,1,""],[27103,6,""],[27144,0,"  "],[27150,3,""],[27150,0,"o"],[27165,0,"IdleWa"],[27210,2,""],[27214,1,""],[27214,0,"dle"],[502,0,"http_parser.h>\n#include <node_"],[27503,0,"  InitHttpParser(process);                     // http_parser.cc\n"],[27071,4,""],[27077,0,"::Initialize"],[27099,8,""]],"_dtSpan":[68772,68916]},{"parents":[21],"numChildren":1,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[5383,12,""],[10095,1,""],[10095,0,"Loc"],[10099,2,""],[10100,1,""],[10122,5,""],[10122,0,"Loc"],[10126,2,""],[10127,1,""],[10128,4,""],[10143,8,""],[10144,25,""],[10144,0,"Loc"],[10148,2,""],[10149,1,""],[10150,4,""],[10215,1,""],[10215,0,"Loc"],[10219,2,""],[10220,1,""],[10352,1,""],[10352,0,"Loc"],[10356,2,""],[10357,1,""],[23173,6,""],[23174,10,""],[23588,21,""],[23588,0,"}"],[23590,58,""],[23591,11,""],[23592,8,""],[23593,4,""],[23594,6,""],[23595,63,""],[23596,10,""],[23597,14,""],[23598,52,""],[23599,28,""],[23600,45,""],[23601,56,""],[23601,0,"d"],[23664,168,""],[23871,4,""],[23871,0,"dd a refere"],[23883,0,"ce to"],[23893,2,""],[23893,0,"gl"],[23896,4,""],[23896,0,"bal"],[23906,0,"\n"],[23908,1,""],[23908,0," L"],[23911,2,""],[23911,0,"cal<Objec"],[23921,1,""],[23921,0,">"],[23923,1,""],[23923,0,"g"],[23925,0,"ob"],[23928,4,""],[23928,0,"l"],[23930,0,"="],[23932,1,""],[23932,0,"Context::GetCurrent()->G"],[23961,0,"();\n  process"],[23999,2,""],[23999,0,"gl"],[24002,4,""],[24002,0,"bal"],[24009,2,""],[24009,0,"gl"],[24012,4,""],[24012,0,"bal"],[27721,0,"\n\n"],[27753,1,""],[27753,0,"node"],[27765,1,""],[27775,3,""],[27775,0,"as"],[27788,0,"s"],[27810,1,""],[27828,0,". 'natve_node' is the string containing that\n  // source code."],[27894,0,"\n  "],[27900,2,""],[27900,0,"The"],[27912,1,""],[27912,0,"file returns a function 'f'\n \n#ifnd"],[27948,0,"f NDEBUG\n "],[27959,0,"TryC"],[27964,0,"tch try_"],[27973,0,"a"],[27975,1,""],[27975,0,"ch;\n#endif \n\n  Loc"],[27995,0,"<Va"],[27999,1,""],[27999,0,"ue>"],[28003,0,"f_va"],[28008,1,""],[28008,0,"ue = ExecuteString(String::New(n"],[28041,0,"tive_no"],[28049,0,"e),\n                                     "],[28091,0," S"],[28094,1,""],[28094,0,"ring::New(\"nod"],[28109,1,""],[28109,0,".js\"));\n#i"],[28120,2,""],[28120,0,"nd"],[28123,0,"f NDEBUG\n"],[28133,0," if (try_catch.Ha"],[28151,1,""],[28151,0,"Caught())  {\n    R"],[28170,0,"portEx"],[28177,0,"ept"],[28181,1,""],[28181,0,"on(&try_catch);\n    ex"],[28204,0,"t(10);\n  }\n#"],[28217,0,"n"],[28219,0,"if \n"],[28224,0," assert(f_value->IsFunct"],[28249,0,"o"],[28251,0,"());\n"],[28257,7,""],[28257,0," Local<Function> f = Local<Function>::Cast(f_value);\n"],[28316,1,""],[28316,0,"N"],[28318,0,"w we"],[28323,1,""],[28323,0,"call 'f' with the 'pr"],[28345,0,"cess' variable that we've b"],[28373,0,"ilt up with\n  // all ou"],[28398,0,"bindings. Inside "],[28416,0,"od"],[28419,1,""],[28419,0,".js we'll "],[28430,0,"ake"],[28434,0,"ca"],[28438,0," of "],[28443,1,""],[28443,0,"ssign"],[28452,0,"thing"],[28458,0," "],[28461,0,"\n  // their "],[28474,0,"laces.\n  \n "],[28486,0,"// We "],[28493,0,"tart t"],[28500,0,"e pr"],[28505,0,"cess this way in order to be more mod"],[28544,0,"ar. Developers\n  // who "],[28569,0,"o"],[28571,1,""],[28571,0,"not lik"],[28580,0,"how 'src/"],[28596,2,""],[28596,0,"'"],[28598,0,"setups the module"],[28616,2,""],[28616,0,"syst"],[28621,1,""],[28621,0,"m b"],[28626,0," do lik"],[28634,0,"\n  // "],[28641,0,"ode's I/O bindings may w"],[28666,0,"nt to replace 'f' with their own func"],[28705,1,""],[28705,0,"on.\n\n  f->Call(global, 1, &Local<Valu"],[28743,2,""],[28743,0,">::New"],[28750,2,""],[28750,0,"pr"],[28753,0,"cess));\n\n#ifn"],[28768,0,"f NDEBUG\n  if (try_catch"],[28793,1,""],[28793,0,"Ha"],[28796,2,""],[28796,0,"Caught())  {\n  "],[28812,0," ReportExceptio"],[28828,0,"(&try_c"],[28837,0,"ch);\n    ex"],[28849,1,""],[28849,0,"t(11);\n  }\n#"],[28862,1,""],[28863,1,""],[28864,3,""],[28864,0,"if "],[24372,4,""],[24372,0,"argv"],[24735,0,"  process->Set(String::NewSymbol(\"argv\"), arguments);\n"],[24810,3,""],[24810,0,"env"],[25357,0,"env\"), env);\n\n  process->Set(String::NewSymbol(\""],[33451,0,"  node::Stdio::Flush();\n\n"],[12572,1,""],[12572,0,"Ha"],[12575,5,""],[12575,0,"dleScope"],[12584,1,""],[12584,0,"scope"],[12593,1,""],[12594,1,""],[12594,0,"flush"],[12600,3,""],[12601,2,""],[12601,0,"td"],[12604,2,""],[12604,0,"rr);\n  S"],[12613,0,"dio::Flus"],[12625,5,""],[12625,0,";"],[12627,2,""],[12629,4,""],[12629,0,"exit("],[12655,12,""],[12656,6,""],[12657,10,""]],"_dtSpan":[68916,70911]},{"parents":[23],"numChildren":1,"agent":101,"time":"1970-01-01T00:00:00Z","patches":[[263,0,"#include <sys/types.h>\n#include <unistd.h> /* setuid, getuid */\n"],[12578,0,"\nstatic Handle<Value> GetUid(const Arguments& args) {\n  HandleScope scope;\n  int uid = getuid();\n  return scope.Close(Integer::New(uid));\n}\n\n\nstatic Handle<Value> SetUid(const Arguments& args) {\n  HandleScope scope;\n\n  if (args.Length() < 1) {\n    return ThrowException(Exception::Error(\n          String::New(\"setuid requires 1 argument\")));\n  }\n\n  Local<Integer> given_uid = args[0]->ToInteger();\n  int uid = given_uid->Int32Value();\n  int result;\n  if ((result = setuid(uid)) != 0) {\n    return ThrowException(Exception::Error(String::New(strerror(errno))));\n  }\n  return Undefined();\n}\n\n\n"],[26472,0,"getuid\", GetUid);\n  NODE_SET_METHOD(process, \"setuid\", SetUid);\n  NODE_SET_METHOD(process, \""]],"_dtSpan":[70911,71659]},{"parents":[24],"numChildren":1,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[8629,1,""],[8629,0,"&"],[8704,2,""],[8704,0,"."],[8859,2,""],[8859,0,"."],[10381,1,""],[10496,1,""],[11565,2,""],[11697,2,""],[11745,2,""],[11770,2,""],[12320,2,""],[12518,2,""],[19131,2,""],[19262,2,""],[21570,1,""],[22200,1,""],[23043,1,""],[24132,94,""],[28615,2,""],[28661,1,""],[28705,1,""],[28903,1,""],[28939,1,""],[29198,2,""],[29427,4,""],[29427,0,"Loc"],[29432,6,""],[29432,0,"<V"],[29436,1,""],[29436,0,"ue>"],[29440,0,"args["],[29446,1,""],[29446,0,"] = {"],[29452,1,""],[29478,0," };\n  f->Call(global, 1, args"],[29578,1,""],[29614,1,""],[30019,2,""],[30020,3,""],[30021,1,""],[30022,0,"ej"],[30029,5,""],[15041,32,""]],"_dtSpan":[71659,71897]},{"parents":[25],"numChildren":1,"agent":85,"time":"1970-01-01T00:00:00Z","patches":[[15513,42,""],[15514,1,""],[15672,0,"  size_t page_size = getpagesize();\n"],[17566,4,""],[17566,0,"page"],[17571,4,""],[17571,0,"size"]],"_dtSpan":[71897,71992]},{"parents":[26],"numChildren":1,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[23723,2,""],[23723,0,"D"],[23725,1,""],[23725,0,"b"],[23727,14,""],[23730,15,""],[23730,0,"P"],[23732,6,""],[23732,0,"oc"],[23735,4,""],[23735,0,"ssD"],[23742,7,""],[23742,0,"Messages("],[32272,7,""],[32273,15,""],[32274,26,""],[32375,200,""],[32793,0,"ev_set_priority(&node::debug_watcher, EV_MAXPRI);\n    "],[1811,0,"static ev_idle  gc_idle_watcher;\nstatic ev_timer  gc_timer;\n#define GC_INTERVAL 1.0\n\n\n// Node calls this every GC_INTERVAL seconds in order to try\n// and turn on the gc_idle_watcher, which will eventually (when the process\n// isn't busy) call the GC\nstatic void GCTimeout(EV_P_ ev_timer *watcher, int revents) {\n  assert(watcher == &gc_timer);\n  assert(revents == EV_TIMER);\n\n  if (ev_pending_count() == 0 && !ev_is_active(&gc_idle_watcher)) {\n    ev_idle_start(EV_DEFAULT_UC_ &gc_idle_watcher);\n    ev_unref(EV_DEFAULT_UC);\n  }\n}\n\n\nstatic void DoGC(EV_P_ ev_idle *watcher, int revents) {\n  assert(watcher == &gc_idle_watcher);\n  assert(revents == EV_IDLE);\n  if (V8::IdleNotification()) {\n    ev_ref(EV_DEFAULT_UC);\n    ev_idle_stop(EV_DEFAULT_UC_ watcher);\n  }\n}\n\n"],[32257,0,"\n  // The idle watcher which will call GC\n  ev_idle_init(&node::gc_idle_watcher, node::DoGC);\n  ev_set_priority(&node::gc_idle_watcher, EV_MINPRI);\n  // The check for pending events (will start the idle watcher)\n  ev_timer_init(&node::gc_timer, node::GCTimeout, GC_INTERVAL, GC_INTERVAL);\n  ev_set_priority(&node::gc_timer, EV_MINPRI);\n  ev_timer_start(EV_DEFAULT_UC_ &node::gc_timer);\n  ev_unref(EV_DEFAULT_UC);\n\n\n"],[1821,33,""],[1858,1,""],[1858,0,"2"],[1924,3,""],[1929,13,""],[1930,7,""],[1931,15,""],[1934,4,""],[1935,8,""],[1937,13,""],[1940,17,""],[1941,4,""],[1943,12,""],[1943,0,"."],[1945,2,""],[1946,17,""],[1946,0,"h"],[1948,3,""],[1948,0,"s"],[1950,1,""],[1957,1,""],[1959,2,""],[1959,0,"s"],[1962,3,""],[1962,0,"u"],[1964,7,""],[1965,7,""],[1966,1,""],[1966,0,"i"],[1968,1,""],[1969,5,""],[1970,5,""],[1970,0,"max"],[1975,6,""],[1975,0,"um"],[1978,4,""],[1978,0,"p"],[1980,2,""],[1980,0,"io"],[1983,4,""],[1983,0,"i"],[1985,18,""],[1985,0,"y,"],[1988,2,""],[1988,0,"so"],[1991,1,""],[2014,3,""],[2014,0,"\n//"],[2018,4,""],[2020,1,""],[2020,0," "],[2022,0,"n effe"],[2033,8,""],[2033,0," m"],[2036,2,""],[2037,4,""],[2037,0,"su"],[2040,2,""],[2040,0,"e"],[2042,3,""],[2042,0,"of"],[2045,5,""],[2049,49,""],[2050,1,""],[2051,21,""],[2051,0,"ss."],[2055,4,""],[2067,2,""],[2069,0,"Timeout"],[2086,0,"t"],[2088,2,""],[2088,0,"m"],[2090,0,"r"],[2141,0,"t"],[2143,9,""],[2143,0,"m"],[2172,0,"T"],[2174,2,""],[2174,0,"M"],[2176,0,"R"],[2186,0,"ev_pending_count() == 0) "],[2231,49,""],[2232,22,""],[2235,2,""],[2237,1,""],[2239,1,""],[31921,10,""],[31922,31,""],[31924,0,"t"],[31926,2,""],[31926,0,"m"],[31928,0,"r"],[31945,0,"t"],[31947,9,""],[31947,0,"m"],[31958,1,""],[31958,0,"GCTime"],[31965,0,"ut, "],[31971,0,"_INTERVAL, GC_INTERVAL"],[31998,0,"// Set th"],[32008,1,""],[32008,0," gc"],[32012,1,""],[32012,0,"tim"],[32016,0,"r "],[32019,1,""],[32019,0,"o max "],[32033,2,""],[32033,0," so that it ru"],[32048,0,"s bef"],[32054,1,""],[32054,0,"r"],[32056,7,""],[32056,0," al"],[32060,0," oth"],[32065,1,""],[32065,0,"r\n  // "],[32079,1,""],[32079,0,"s."],[32082,4,""],[32083,7,""],[32083,0,"n"],[32085,0,"this"],[32090,2,""],[32090,0,"way"],[32094,3,""],[32094,0,"it can"],[32107,0,"i"],[32109,0," the 'tick' has "],[32126,0,"the"],[32138,0,"\n "],[32141,0,"// watchers by using "],[32164,0,"_p"],[32168,0,"ding_coun"],[32178,2,""],[32179,1,""],[32179,0,") - "],[32184,2,""],[32184,0,"f"],[32186,1,""],[32186,0,"i"],[32188,0," r"],[32191,0,"n with lowe"],[32203,0," priority\n  // "],[32219,0,"hen"],[32227,3,""],[32227,0,"oth"],[32231,0,"r"],[32240,2,""],[32240,0,"s might"],[32248,0,"run"],[32252,6,""],[32252,0,"b"],[32254,0,"fo"],[32257,1,""],[32257,0,"e "],[32260,0,"t - "],[32265,1,""],[32265,0,"o"],[32267,2,""],[32267,0," givi"],[32273,0,"g us go"],[32282,7,""],[32282,0," "],[32284,1,""],[32284,0,"d"],[32286,2,""],[32286,0,"a\n  // of"],[32296,1,""],[32296,0,"lo"],[32299,0,"p i"],[32303,0,"l"],[32305,7,""],[32305,0,"n"],[32307,17,""],[32307,0,"ss."],[32311,13,""],[32351,2,""],[32351,0,"AX"]],"_dtSpan":[71992,74455]},{"parents":[27],"numChildren":1,"agent":75,"time":"1970-01-01T00:00:00Z","patches":[[1642,4,""],[1642,0,"option"],[1649,0,"en"],[1652,3,""],[25320,4,""],[25320,0,"option"],[25327,0,"en"],[25330,3,""],[25418,4,""],[25418,0,"option"],[25425,0,"en"],[25428,3,""],[30033,5,""],[30633,17,""],[30634,12,""],[30635,13,""],[30636,39,""],[30736,4,""],[30736,0,"option"],[30743,0,"en"],[30746,3,""],[31199,0,"option_en"],[31209,0,"_index = i+1;\n    } else if ("],[31239,2,""],[31239,0,"rgv[i][0] != '-') {\n      option"],[31272,0,"en"],[31275,3,""],[31285,1,""],[31285,0,"-"],[31293,0,"  break;\n    "],[31504,4,""],[31504,0,"option"],[31511,0,"en"],[31514,3,""],[31602,4,""],[31602,0,"option"],[31609,0,"en"],[31612,3,""],[32310,1,""]],"_dtSpan":[74455,74724]},{"parents":[28],"numChildren":1,"agent":183,"time":"1970-01-01T00:00:00Z","patches":[[1701,0,"static bool debug_wait_connect = false;\nstatic int debug_port=5858;\n"],[24054,0,"volatile static bool debugger_msg_pending = false;\n"],[24546,0,"debugger_msg_pending = true;\n  "],[24626,0,"static Handle<Value> CheckBreak(const Arguments& args) {\n  HandleScope scope;\n\n  // TODO FIXME This function is a hack to wait until V8 is ready to accept\n  // commands. There seems to be a bug in EnableAgent( _ , _ , true) which\n  // makes it unusable here. Ideally we'd be able to bind EnableAgent and\n  // get it to halt until Eclipse connects.\n\n  if (!debug_wait_connect)\n    return Undefined();\n\n  printf(\"Waiting for remote debugger connection...\\n\");\n\n  const int halfSecond = 50;\n  const int tenMs=10000;\n  debugger_msg_pending = false;\n  for (;;) {\n    if (debugger_msg_pending) {\n      Debug::DebugBreak();\n      Debug::ProcessDebugMessages();\n      debugger_msg_pending = false;\n\n      // wait for 500 msec of silence from remote debugger\n      int cnt = halfSecond;\n        while (cnt --) {\n        debugger_msg_pending = false;\n        usleep(tenMs);\n        if (debugger_msg_pending) {\n          debugger_msg_pending = false;\n          cnt = halfSecond;\n        }\n      }\n      break;\n    }\n    usleep(tenMs);\n  }\n  return Undefined();\n}\n\n"],[28169,0,"  NODE_SET_METHOD(process, \"checkBreak\", CheckBreak);\n"],[31098,0,"\n"],[31258,0,";\n\nstatic void ParseDebugOpt(const char* arg) {\n  const char *p = 0;\n\n  use_debug_agent = true;\n  if (!strcmp (arg, \"--debug-brk\")) {\n    debug_wait_connect = true;\n    return;\n  } else if (!strcmp(arg, \"--debug\")) {\n    return;\n  } else if (strstr(arg, \"--debug-brk=\") == arg) {\n    debug_wait_connect = true;\n    p = 1 + strchr(arg, '=');\n    debug_port = atoi(p);\n  } else if (strstr(arg, \"--debug=\") == arg) {\n    p = 1 + strchr(arg, '=');\n    debug_port = atoi(p);\n  }\n  if (p && debug_port > 1024 && debug_port <  65536)\n      return;\n\n  fprintf(stderr, \"Bad debug option.\\n\");\n  if (p) fprintf(stderr, \"Debug port must be in range 1025 to 65535.\\n\");\n\n  PrintHelp();\n  exit(1);\n}\n\nstatic void PrintHelp()"],[32059,0,"  "],[32104,5,""],[32104,0,"[=port]"],[32139,0," via given TCP port"],[32161,0,"\n   "],[32166,2,""],[32167,4,""],[32168,1,""],[32168,0,"   \"  --debug-brk[="],[32188,0,"ort] as above, but break in nod"],[32220,1,""],[32220,0,".js and\\n\"\n         \"                     wa"],[32265,0,"t "],[32268,1,""],[32268,0,"or"],[32271,1,""],[32271,0,"rem"],[32275,0,"te debugge"],[32286,0," to connec"],[32297,0,"\\n\""],[32330,0,"  "],[32403,0,"  "],[32735,3,""],[32735,0,"str"],[32758,1,""],[32758,0,"arg"],[32771,0,"P"],[32774,0,"seDebugOpt(arg);\n      ar"],[32840,30,""],[36383,4,""],[36383,0,"node::debug_port"],[36402,0,"\n"],[36505,9,""],[36545,4,""],[36545,0,"%d"],[36549,13,""],[36550,7,""],[36550,0,","],[36552,5,""],[36552,0,"n"],[36554,1,""],[36554,0,"d"],[36556,1,""],[36556,0,"::"],[36562,1,""],[36563,5,""],[36563,0,"_p"],[36566,9,""],[36566,0,"r"],[36568,4,""]],"_dtSpan":[74724,77024]},{"parents":[29],"numChildren":1,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[4697,4,""],[4697,0,"String::Empty"]],"_dtSpan":[77024,77041]},{"parents":[30],"numChildren":1,"agent":85,"time":"1970-01-01T00:00:00Z","patches":[[2272,0,"EV_DEFAULT_UC"]],"_dtSpan":[77041,77054]},{"parents":[31],"numChildren":1,"agent":68,"time":"1970-01-01T00:00:00Z","patches":[[13221,0,"static Handle<Value> GetGid(const Arguments& args) {\n  HandleScope scope;\n  int gid = getgid();"],[13317,0,"  return "],[13327,0,"cope.Close(In"],[13341,0,"eger::New(gid));\n}\n\n\nst"],[13386,0,"Gid(const Arguments& args) {\n  HandleScope scope;\n  \n  if (args.Length() < 1) {\n    return ThrowException(Exception::Error(\n\t  String::New(\"setgid requires 1 argument\")));\n  }\n\n  Local<Integer> given_gid = args[0]->ToInteger();\n  int gid = given_gid->Int32Value();\n  int result;\n  if ((result == setgid(gid)) != 0) {\n    return ThrowException(Exception::Error(String::New(strerror(errno))));\n  }\n  return "],[13792,0,"ndef"],[13797,0,"ne"],[13801,0,");\n}\n\nstatic Handle<Value> SetUid("],[28588,0,"\n  NODE_SET_METHOD(process, \"setgid\", SetGid);\n  NODE_SET_METHOD(process, \"getgid\", GetGid);\n\n"]],"_dtSpan":[77054,77733]},{"parents":[32],"numChildren":1,"agent":79,"time":"1970-01-01T00:00:00Z","patches":[[33508,3,""],[33508,0,"co"],[33511,6,""],[33511,0,"s"],[33519,6,""],[33953,3,""],[33953,0,"co"],[33956,6,""],[33956,0,"s"],[33964,6,""]],"_dtSpan":[77733,77769]},{"parents":[33],"numChildren":1,"agent":183,"time":"1970-01-01T00:00:00Z","patches":[[32875,0,"                   without stopping the execution\\n\"\n         \"  "],[32982,4,""],[32982,0,"script"]],"_dtSpan":[77769,77844]},{"parents":[34],"numChildren":1,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[34741,0,"#ifdef __sun\n  // TODO(Ryan)"],[34770,0,"I'm"],[34775,0,"xperiencing abnormally high load using Solaris's\n  // EVBACKEND_PORT. Temporarally forcing select() until I debug.\n  e"],[34910,0,"BACKEND_SELECT);\n#else\n  ev_default_loop(EV"],[34965,0,"#endif\n"]],"_dtSpan":[77844,78043]},{"parents":[35],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[13680,1,""]],"_dtSpan":[78043,78044]},{"parents":[36],"numChildren":1,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[34743,0," "],[34747,1,""],[34747,0,"ined("],[34757,0,")"],[34935,0,"if defined(__APPLE__)\n  ev_default_loop(EVBACKEND_KQUEUE);\n#el"],[11723,308,""],[27900,46,""],[11723,0,"Unloop(const Arguments& args) {\n  HandleScope scope;\n  int how = EVUNLOOP_ONE;\n  if (args[0]->IsString()) {\n    String::Utf8Value how_s(args[0]->ToString());\n    if (0 == strcmp(*how_s, \"all\")) {\n      how = EVUNLOOP_ALL;\n    }\n  }\n  ev_unloop(EV_DEFAULT_ how);\n  return Undefined();\n}\n\nstatic Handle<Value> "],[28242,0,"unloop\", Unloop);\n  NODE_SET_METHOD(process, \""],[34743,1,""],[34746,5,""],[34746,0," "],[34752,1,""],[34923,62,""],[11757,0,"fprintf(stderr, \"Node.js Depreciation: Don't use process.unloop(). It will be removed soon.\\n\");\n  "]],"_dtSpan":[78044,78991]},{"parents":[37],"numChildren":1,"agent":124,"time":"1970-01-01T00:00:00Z","patches":[[12888,0,"  unsigned int old;"],[12930,0,") {\n    old = umask(0);\n "],[12956,2,""],[12957,0," umask((mode_t)old);\n  }\n  else if("],[13126,2,""],[13126,0,"el"],[13129,3,""],[13130,0," {\n    ol"],[13141,3,""],[13141,0,"="],[13143,0,"u"],[13148,3,""],[13148,0,"((mode_t)"],[13179,0,")"],[13184,40,""],[13184,0,"}"]],"_dtSpan":[78991,79147]},{"parents":[38],"numChildren":2,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[32889,0,"Options:\\n\"\n         \""],[33374,0,"\"\n         \"\\n\"\n         \"Enviromental variables:\\n\"\n         \"NODE_PATH            ':'-separated list of directories\\n\"\n         \"                     prefixed to the module search path,\\n\"\n         \"                     require.paths.\\n\"\n         \"NODE_DEBUG           Print additional debugging output.\\n\"\n         \""],[33253,5,""],[33253,0,"v8-option"],[33263,2,""],[33270,2,""],[33276,7,""],[33276,0,"v8 "],[33280,3,""],[33281,2,""],[33281,0,"mm"],[33287,4,""],[33287,0,"l"],[33289,1,""],[33289,0,"n"],[33291,1,""],[33292,4,""],[33292,0,"option"],[33318,8,""],[33318,0,"ar"],[33328,0,"      "],[33341,1,""],[33341,0,"arious"],[33350,1,""],[33351,2,""],[33351,0,"pile"],[33356,2,""],[33356,0,"-"],[33359,1,""],[33360,3,""],[33360,0,"var"],[33364,2,""],[33364,0,"able"],[34267,3,""],[34267,0,"v"],[34269,1,""],[34269,0,"r"],[34296,0,"NODE_PREFIX: %s\\n\", NODE_PREFIX);\n      printf(\"NODE_LIBRARIES_PREFIX: %s/%s\\n\", NODE_PREFIX, \"lib/node/libraries\");\n      printf(\"NODE_CFLAGS: "]],"_dtSpan":[79147,79737]},{"parents":[22,39],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[9341,26,""],[9342,19,""],[9343,11,""],[9344,53,""],[9649,0," && !message.IsEmpty()"]],"_dtSpan":[79737,79868]},{"parents":[39],"numChildren":2,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[9234,26,""],[9235,19,""],[9236,11,""],[9237,53,""],[9542,0," && !message.IsEmpty()"]],"_dtSpan":[79868,79999]},{"parents":[40,41],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[9671,22,""],[77,0,"locale.h>\n\n#include <"],[14445,0,"Handle<Value>\nNowGetter (Local<String> property, const AccessorInfo& info)\n{\n  HandleScope scope;\n  return scope.Close(Integer::New(ev_now(EV_DEFAULT_UC)));\n}\n\n"],[26833,0,"_template->InstanceTemplate()->SetAccessor(String::NewSymbol(\"now\"), NowGetter, NULL);\n\n  process"]],"_dtSpan":[79999,80299]},{"parents":[41],"numChildren":1,"agent":173,"time":"1970-01-01T00:00:00Z","patches":[[15613,0,"  size_t page_size = getpagesize();\n"],[15876,4,""],[15876,0,"page"],[15881,4,""],[15881,0,"size"]],"_dtSpan":[80299,80351]},{"parents":[43],"numChildren":1,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[11687,8,""],[11693,1,""]],"_dtSpan":[80351,80360]},{"parents":[44],"numChildren":1,"agent":161,"time":"1970-01-01T00:00:00Z","patches":[[22228,0,"// evalcx(code, sandbox={})\n// Executes code in a new context\n"],[22304,0,"Eval"],[22309,0,"X(c"],[22313,0,"nst Argu"],[22322,0,"ents& args) {\n  HandleSco"],[22348,0,"e scope;\n\n  Local<String> code = args[0]->ToStr"],[22396,0,"ng();\n  Loca"],[22409,0,"<Obj"],[22414,0,"ct> sandbox = args.Length() > 1 ? args[1]->ToObject()\n                                            : Object::New"],[22526,0,");\n  // Create the new "],[22552,0,"text\n  Per"],[22563,0,"istent<Contex"],[22577,0,">"],[22579,0,"context = Context::New();\n\n  // Copy objects from global context, to our brand new context\n  Handle<"],[22681,0,"ray> keys = sandbox->GetPropertyNames();\n\n  int i;\n  for (i = 0; i < keys->Length(); i++) {\n    Handle<String> key = keys->Get(Integer::New(i))->ToStrin"],[22834,0,"();\n    Handle<Val"],[22853,0,"e> value = sandbox->Get(key);\n    context->Global()->Set(key, value->ToObject()->Clone());\n  }\n\n  // Enter and compile script\n  context->Enter();\n\n  // Catch errors\n  TryCatch try_catch;\n\n  Local<Script> script = Script::Compile(code, String::New(\"evalcx\"));\n  Handle<Value> result;\n\n  if (script.IsEmpty()) {\n    result = ThrowException(try_catch.Exception());\n  } else {\n    result = script->Run();\n    if (result.IsEmpty()) {\n      result = ThrowException(try_catch.Exception());\n    }\n  }\n\n  // Clean up, clean up, everybody everywhere!\n  context->DetachGlobal();\n  context->Exit();\n  context.Dispose();\n\n  return scope.Close(result);\n}\n\nHandle<Value> Co"],[23512,0,"pile(const Argum"],[29644,0,"evalcx\", EvalCX);\n  NODE_SET_METHOD(process, \""]],"_dtSpan":[80360,81673]},{"parents":[45],"numChildren":2,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[32163,0,"  Local<Object> natives = Object::New();\n  process->Set(String::New(\"natives\"), natives);\n  // Explicitly define native sources.\n  natives->Set(String::New(\"assert\"),       String::New(native_assert));\n  natives->Set(String::New(\"dns\"),          String::New(native_dns));\n  natives->Set(String::New(\"file\"),         String::New(native_file));\n  natives->Set(String::New(\"fs\"),           String::New(native_fs));\n  natives->Set(String::New(\"http\"),         String::New(native_http));\n  natives->Set(String::New(\"ini\"),          String::New(native_ini));\n  natives->Set(String::New(\"mjsunit\"),      String::New(native_mjsunit));\n  natives->Set(String::New(\"multipart\"),    String::New(native_multipart));\n  natives->Set(String::New(\"posix\"),        String::New(native_posix));\n  natives->Set(String::New(\"querystring\"),  String::New(native_querystring));\n  natives->Set(String::New(\"repl\"),         String::New(native_repl));\n  natives->Set(String::New(\"sys\"),          String::New(native_sys));\n  natives->Set(String::New(\"tcp\"),          String::New(native_tcp));\n  natives->Set(String::New(\"uri\"),          String::New(native_uri));\n  natives->Set(String::New(\"url\"),          String::New(native_url));\n  natives->Set(String::New(\"utils\"),        String::New(native_utils));\n\n"],[36857,83,""],[11398,0,"  assert(args.Length() == 0);\n"],[12514,0,"  assert(args.Length() == 0);\n"],[13270,0,"assert(args.Length() == 0);\n  "],[13440,0,"assert(args.Length() == 0);\n  "],[13609,2,""],[13681,1,""],[13683,0,"    "],[19335,0,"  assert(args.Length() == 0);\n"],[22876,0,"unsigned "],[26826,0,"  assert(args.Length() == 0);\n"],[27831,0,"Persistent<Object> binding_cache;\n\nstatic Handle<Value> Binding(const Arguments& args) {\n  HandleScope scope;\n\n  Local<String> module = args[0]->ToString();\n  String::Utf8Value module_v(module);\n\n  if (binding_cache.IsEmpty()) {\n    binding_cache = Persistent<Object>::New(Object::New());\n  }\n\n  Local<Object> exports;\n\n  if (!strcmp(*module_v, \"http\")) {\n    if (binding_cache->Has(module)) {\n      exports = binding_cache->Get(module)->ToObject();\n    } else {\n      // Warning: When calling requireBinding('http') from javascript then\n      // be sure that you call requireBinding('tcp') before it.\n      assert(binding_cache->Has(String::New(\"tcp\")));\n      exports = Object::New();\n      HTTPServer::Initialize(exports);\n      HTTPConnection::Initialize(exports);\n      binding_cache->Set(module, exports);\n    }\n\n  } else if (!strcmp(*module_v, \"tcp\")) {\n    if (binding_cache->Has(module)) {\n      exports = binding_cache->Get(module)->ToObject();\n    } else {\n      exports = Object::New();\n      Server::Initialize(exports);\n      Connection::Initialize(exports);\n      binding_cache->Set(module, exports);\n    }\n\n  } else if (!strcmp(*module_v, \"dns\")) {\n    if (binding_cache->Has(module)) {\n      exports = binding_cache->Get(module)->ToObject();\n    } else {\n      exports = Object::New();\n      DNS::Initialize(exports);\n      binding_cache->Set(module, exports);\n    }\n\n  } else if (!strcmp(*module_v, \"fs\")) {\n    if (binding_cache->Has(module)) {\n      exports = binding_cache->Get(module)->ToObject();\n    } else {\n      exports = Object::New();\n\n      // Initialize the stats object\n      Local<FunctionTemplate> stat_templ = FunctionTemplate::New();\n      stats_constructor_template = Persistent<FunctionTemplate>::New(stat_templ);\n      exports->Set(String::NewSymbol(\"Stats\"),\n                   stats_constructor_template->GetFunction());\n      Stat::Initialize(exports);\n      File::Initialize(exports);\n      binding_cache->Set(module, exports);\n    }\n\n  } else if (!strcmp(*module_v, \"signal_handler\")) {\n    if (binding_cache->Has(module)) {\n      exports = binding_cache->Get(module)->ToObject();\n    } else {\n      exports = Object::New();\n      SignalHandler::Initialize(exports);\n      binding_cache->Set(module, exports);\n    }\n\n  } else {\n    assert(0);\n    return ThrowException(Exception::Error(String::New(\"No such module\")));\n  }"],[30198,0,"\n  return scope.Clo"],[30218,0,"e(expor"],[30226,0,"s);\n}\n\n\nst"],[32920,0,"NODE_SET_METHOD(process, \"binding\", Binding);\n\n  "],[33125,66,""],[33126,13,""],[33127,7,""],[33135,13,""],[33137,77,""],[33140,42,""],[33141,50,""],[33389,91,""],[33390,2,""],[33391,33,""],[33476,206,""],[33477,18,""],[33478,3,""],[33479,14,""],[33480,5,""],[33485,28,""],[33486,5,""],[33489,1,""],[33491,21,""],[33509,8,""],[33510,58,""],[33511,6,""],[33512,18,""],[33513,8,""],[33515,50,""],[33516,27,""],[33517,20,""],[33518,188,""],[33520,51,""],[33521,148,""],[496,1,""],[496,0,"w"],[498,3,""],[498,0,"tch"],[526,0,"_watcher"],[29711,0,"Watcher"],[29864,1,""],[29864,0,"w"],[29866,3,""],[29866,0,"tch"],[30027,1,""],[30027,0,"W"],[30029,3,""],[30029,0,"tch"],[30116,0,"if (!strcmp(*module_v, \"natives\")) {\n    if (binding_cache->Has(module)) {\n      exports = binding_cache->Get(module)->ToObject();\n    } else {\n      exports = Object::New();\n      // Explicitly define native sources.\n      // TODO DRY/automate this?\n      exports->Set(String::New(\"assert\"),       String::New(native_assert));\n      exports->Set(String::New(\"dns\"),          String::New(native_dns));\n      exports->Set(String::New(\"file\"),         String::New(native_file));\n      exports->Set(String::New(\"fs\"),           String::New(native_fs));\n      exports->Set(String::New(\"http\"),         String::New(native_http));\n      exports->Set(String::New(\"ini\"),          String::New(native_ini));\n      exports->Set(String::New(\"mjsunit\"),      String::New(native_mjsunit));\n      exports->Set(String::New(\"multipart\"),    String::New(native_multipart));\n      exports->Set(String::New(\"posix\"),        String::New(native_posix));\n      exports->Set(String::New(\"querystring\"),  String::New(native_querystring));\n      exports->Set(String::New(\"repl\"),         String::New(native_repl));\n      exports->Set(String::New(\"sys\"),          String::New(native_sys));\n      exports->Set(String::New(\"tcp\"),          String::New(native_tcp));\n      exports->Set(String::New(\"uri\"),          String::New(native_uri));\n      exports->Set(String::New(\"url\"),          String::New(native_url));\n      exports->Set(String::New(\"utils\"),        String::New(native_utils));\n      binding_cache->Set(module, exports);\n    }\n\n  } else "],[35051,60,""],[35052,22,""],[35053,9,""],[35054,31,""],[35055,1,""],[35056,10,""],[35058,895,""],[35059,34,""],[35060,217,""],[30550,0,"events\"),       String::New(native_events));\n      exports->Set(String::New(\""]],"_dtSpan":[81673,89873]},{"parents":[42,46],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[31138,0,"http2\"),        Str"],[31159,0,"g::New(nat"],[31170,0,"ve_http2));\n      exports->Set(String::New("],[31214,0,"ini\""],[31446,0,"net\"),          String::New(native_net));\n      exports->Set(String::New(\""],[35602,0,"er.cc\n  S"],[35612,2,""],[35612,0,"dio"],[35619,0,"i"],[35637,1,""],[35660,2,""],[35660,0,"dio"],[35669,3,""],[35786,15,""],[28473,0,"stdio\")) {\n    if (binding_cac"],[28504,0,"e->Has(module)) {\n      expor"],[28534,0,"s = binding_cache->Ge"],[28556,0,"(module)->ToObject();\n    } else {\n      ex"],[28600,0,"orts = Object::New();\n      Stdio::Initialize(exports);\n      binding_cache->Set(module, exports);\n    }\n\n  } else if (!strcmp(*module_v, "],[28739,0,"http\""],[35870,59,""],[30695,0,"et\")) {\n    if (binding_cache->Has(module)) {\n      exports = binding_cache->Get(module)->ToObject();\n    } else {\n      exports = Object::New();\n      InitNet2(exports);\n      binding_c"],[30882,0,"che->Se"],[30890,0,"(module, exports);\n    }\n\n  } else "],[30926,0,"f (!strcmp(*module_"],[30946,0,", \"http_pars"],[30959,0,"r\")) {\n    if (binding_cache->Has(module)) {\n      export"],[31017,0," = binding_cache->Get(module)->ToObject();\n    } else {\n      exports = Object::New();\n      InitHttpParser(exports);\n      binding_cache->Set(module, exports);\n    }\n\n  } else if (!strcmp(*module_v, \"natives"],[36392,123,""],[28449,0,"// TODO DRY THIS UP!\n\n  "],[31242,0,"child_process\")) {\n    if (binding_cache->Has(module)) {\n      exports = binding_cache->Get(module)->ToObject();\n    } else {\n      exports = Object::New();\n      ChildProcess::Initialize(exports);\n      binding_cache->Set(module, exports);\n    }\n\n  } else if (!strcmp(*module_v, \""],[31859,0,"child_process\"),String::New(native_child_process));\n      exports->Set(String::New(\""],[36781,17,""],[36782,16,""],[36783,34,""]],"_dtSpan":[89873,91490]},{"parents":[46],"numChildren":2,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[22770,0,"Enter and compile script\n  context->Enter();\n\n  // "],[23106,0,"if (value->IsFunction()) "],[23135,0,"inu"],[23139,8,""],[23139,0,";\n    if (v"],[23152,2,""],[23152,0,"ue"],[23156,1,""],[23156,0,"IsObj"],[23162,0,"c"],[23165,1,""],[23165,0,")) {\n      valu"],[23181,2,""],[23182,0,"= "],[23209,1,""],[23214,4,""],[23215,2,""],[23216,9,""],[23216,0,"}\n"],[23219,7,""],[23220,7,""],[23231,3,""],[23231,0,"Global()->S"],[23243,1,""],[23243,0,"t"],[23245,0,"key, value"],[23258,0,"  }\n"],[23604,0," else {\n      // success! copy changes back onto the sandbox object.\n      keys = context->Global()->GetPropertyNames();\n      for (i = 0; i < keys->Length(); i++) {\n        Handle<String> key = keys->Get(Integer::New(i))->ToString();\n        Handle<Value> value = context->Global()->Get(key);\n        if (value->IsFunction()) continue;\n        if (value->IsObject()) {\n          value = value->ToObject()->Clone();\n        }\n        sandbox->Set(key, value);\n      }\n    }"],[23106,116,""],[23779,113,""],[23780,9,""],[23781,10,""]],"_dtSpan":[91490,92402]},{"parents":[47,48],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[32641,1,""],[32641,0,"_old"],[32648,2,""],[32653,1,""],[32676,1,""],[32676,0,"_old"],[31843,0,"buffer\")) {\n    if (bindi"],[31869,0,"g_c"],[31873,0,"che->Has(module)) {\n      expor"],[31905,0,"s = b"],[31911,0,"nding_cache->Get(module)->ToObject();\n    } else {\n      exports = Object::New();\n      Buffer::Initialize(exports);\n      binding_cache->Set(module, exports);\n    }\n\n  } else if (!strcmp(*module_"],[32108,0,", \"nativ"],[32447,0,"buffer\"),       String::New(native_buffer));\n      exports->Set(String::New(\""],[37204,8,""],[37205,52,""],[33748,0,"tcp_old\"),     String::New(native_tcp_old));\n      exports->Set(String::New(\""]],"_dtSpan":[92402,92897]},{"parents":[48],"numChildren":1,"agent":161,"time":"1970-01-01T00:00:00Z","patches":[[22690,0,"Local<String> filename = args.Length() > 2 ? args[2]->ToString()\n                                             : String::New(\"evalcx\");\n  "],[23372,3,""],[23372,0,"f"],[23374,0,"le"],[23377,8,""],[23377,0,"am"],[23380,7,""]],"_dtSpan":[92897,93057]},{"parents":[49,50],"numChildren":2,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[14565,13,""],[14566,147,""],[34341,22,""],[34349,13,""],[34350,5,""],[34355,49,""],[34356,1,""],[34357,7,""]],"_dtSpan":[93057,93314]},{"parents":[51],"numChildren":1,"agent":127,"time":"1970-01-01T00:00:00Z","patches":[[826,0,"#ifdef HAVE_OPENSSL\n#include <node_crypto.h>"],[872,0,"end"],[876,0,"f\n\n#i"],[32093,0,"  #ifdef HAVE_OPENSSL\n  } else if (!strcmp(*module_v, \"crypto\")) {\n    if (binding_cache->Has(module)) {\n      exports = binding_cache->Get(module)->ToObject();\n    } else {\n      exports = Object::New();\n      InitCrypto(exports);\n      binding_cache->Set(module, exports);\n    }\n  #endif"],[33366,0,"crypto\"),       String::New(native_crypto));\n      exports->Set(String::New(\""]],"_dtSpan":[93314,93732]},{"parents":[51],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[5990,0,"\n                   "],[33197,80,""],[2016,0,"// We need to notify V8 when we're idle "],[2057,0,"o "],[2060,0,"h"],[2063,0," "],[2065,0,"t "],[2068,0,"an run the garbage\n//"],[2090,0,"coll"],[2095,2,""],[2095,0,"c"],[2097,0,"or. The "],[2106,1,""],[2106,0,"nt"],[2110,0,"face"],[2115,0,"to"],[2118,1,""],[2118,0,"this is V8::IdleNotifi"],[2141,1,""],[2141,0,"a"],[2144,1,""],[2144,0,"on(). It r"],[2155,0,"tu"],[2158,1,""],[2158,0,"ns"],[2161,1,""],[2161,0,"// true if the heap hasn't be fully compacte"],[2206,0,", and needs to be run again.\n// R"],[2240,0,"turning "],[2249,0,"alse means that "],[2266,0,"t does"],[2273,0,"'t hav"],[2281,0,"anymore work to do.\n//\n// We try to wait for a period of "],[2350,0,"("],[2352,3,""],[2352,0," seconds) of idleness, where"],[2381,0,"// idleness means that no libev watchers have been executed. Since"],[2451,1,""],[2451,0,"everything in n"],[2470,0,"uses libev wat"],[2485,0,"hers, this is a pretty good me"],[2516,0,"sure of\n// id"],[2530,0,"eness. This is done with gc_check, which records the timestamp\n// "],[2597,0,"a"],[2599,0,"t_active on every tick of"],[2627,0,"e event loop, and w"],[2647,0,"th gc_timer which\n// execute"],[2683,0,"few seconds to measure if\n//   last_active + "],[2740,1,""],[2740,0,"< ev_now()\n// If w"],[2759,1,""],[2759,0," d"],[2762,0," fi"],[2767,1,""],[2768,0,"a per"],[2774,1,""],[2774,0,"od"],[2778,1,""],[2778,0,"f i"],[2782,0,"len"],[2786,0,"ss, then we sta"],[2802,0,"t"],[2805,1,""],[2805,0,"he"],[2808,0,"gc_idle "],[2817,0,"imer which\n// will ve"],[2841,0,"rep"],[2845,1,""],[2845,0,"i"],[2847,0,"ly"],[2855,0,"IdleNotification until "],[2881,0," heap is fully"],[2899,0,"compacted.\nstatic ev_tstamp last_active;\nstatic ev_timer  gc_timer;\nstatic ev_check gc_check;\nstatic ev_idle  gc_idle;\nstatic bool needs_gc;\n#define "],[3050,0,"_INTERVAL 2"],[3062,0,"0\n\n\nstatic"],[3073,2,""],[3073,0,"vo"],[3076,0,"d CheckIdlenes"],[3091,0,"(EV_P_ ev_timer"],[3107,0,"*"],[3115,0,","],[3118,1,""],[3118,0,"nt"],[3122,1,""],[3122,0,"eve"],[3126,0,"ts) {\n "],[3134,0,"assert("],[3142,1,""],[3142,0,"a"],[3144,0,"c"],[3146,0,"er =="],[3152,0,"&gc_ti"],[3159,0,"er);\n  "],[3167,5,""],[3167,0,"ssert(revents == EV_TIMER);\n\n "],[3198,0,"//f"],[3204,3,""],[3204,0,"ntf(s"],[3210,1,""],[3210,0,"derr"],[3216,2,""],[3216,0,"\"check idle\\n\");\n\n "],[3239,0,"tstam"],[3245,0," idl"],[3250,0,"_time = ev_"],[3262,0,"ow() - last_active;\n\n  if (i"],[3291,0,"le_time > GC_INTERVAL) {\n    "],[3321,0,"f ("],[3325,0,"eeds_"],[3331,0,"c) {\n      needs"],[3348,0,"gc = false;\n      if (!V8::IdleNotifi"],[3386,0,"ati"],[3390,1,""],[3391,0,"()) {\n        ev_idle_star"],[3419,0,"EV_DEFAULT_UC_ &gc_idle"],[3443,0,";\n  "],[3448,2,""],[3449,1,""],[3449,0,"  }\n    }"],[3459,0,"    "],[3466,0,"reset the timer\n    gc_t"],[3491,1,""],[3491,0,"mer.repeat = GC_INTERVAL;\n   "],[3521,0,"ev_timer_ag"],[3533,0,"i"],[3535,0,"(EV_DEFAULT_UC_"],[3551,0,"watch"],[3557,0,"r);\n  }\n}\n\n\nstatic void Noti"],[3586,1,""],[3586,0,"yIdleness(EV_P_ "],[3603,0,"v_idle *wat"],[3615,1,""],[3615,0,"her, "],[3621,0,"nt re"],[3628,0,"nts) {\n "],[3637,1,""],[3637,0,"ass"],[3641,0,"rt(w"],[3646,0,"tcher == &gc_idle);\n  as"],[3671,1,""],[3671,0,"ert(revents == EV_IDLE);\n\n  //fp"],[3704,0,"intf(std"],[3713,0,"rr,"],[3717,0,"\"n"],[3720,0,"ti"],[3723,0,"y"],[3729,0,"\\"],[3731,0,"\");\n\n  if (V8::Idl"],[3750,0,"Notification()) {\n    ev_idle_"],[3781,0,"top(EV_A_ watcher);\n  }\n  needs_gc = fal"],[3822,1,""],[3822,0,"e;\n}\n\n"],[3841,3,""],[3841,0,"Activ"],[3847,4,""],[3848,0,"y"],[3859,3,""],[3859,0,"ch"],[3862,1,""],[3862,0,"ck"],[3914,3,""],[3914,0,"ch"],[3917,1,""],[3917,0,"ck"],[3945,3,""],[3945,0,"CH"],[3948,1,""],[3948,0,"CK"],[3953,0,"\n"],[3957,1,""],[3957,0,"nt"],[3960,1,""],[3960,0,"p"],[3962,0,"nding = e"],[4001,0,";\n\n  // Don't count GC watchers as activity.\n\n"],[4048,0," pending -"],[4059,0," ev_is_pending(&gc_timer);\n  pending -"],[4099,1,""],[4099,0,"ev_is_pending(&gc_idle);\n  //if (ev_is_pending(&gc_check)"],[4158,3,""],[4158,0,"pending--; // This probably never happens?\n\n  //fprintf(stderr, \"activity, pending"],[4241,1,""],[4241,0," %"],[4244,0,"\\n\", pending);\n\n  if (pending) {\n    "],[4282,0,"ast_activ"],[4292,1,""],[4292,0," = ev_n"],[4300,0,"w();\n    ev_idle_s"],[4319,0,"op(EV_DEFAULT_UC_ &gc_idle);\n\n    "],[4355,1,""],[4355,0," (!needs_gc) {\n      g"],[4378,0,"_timer.repe"],[4391,0," = GC_INTERVAL;\n      ev_t"],[4418,1,""],[4418,0,"mer_agai"],[4428,0,"EV_DEFAULT_UC_ &gc_timer"],[4455,0,"    "],[4462,0,"    needs_gc = true;"],[4483,0,"  }\n}\n\n\n"],[43990,1,""],[43991,5,""],[44018,1,""],[44019,3,""],[44019,0,"h"],[44021,8,""],[44021,0,"ck"],[44024,20,""],[44024,0,"dleness"],[44036,4,""],[44036,0,"nod"],[44040,6,""],[44040,0,"::"],[44050,28,""],[44050,0,"."],[44052,5,""],[44053,3,""],[44053,0,"p"],[44055,1,""],[44056,4,""],[44057,8,""],[44058,9,""],[44058,0,"="],[44060,0,"GC_"],[44064,13,""],[44064,0,"NTERVAL;\n"],[44074,3,""],[44075,2,""],[44076,11,""],[44076,0,"v_"],[44080,11,""],[44080,0,"m"],[44083,7,""],[44083,0,"_a"],[44086,7,""],[44087,12,""],[44089,1,""],[44089,0,"(EV_DEFAULT_UC_"],[44105,5,""],[44105,0,"&"],[44107,0,"o"],[44109,2,""],[44109,0,"e::"],[44113,1,""],[44114,13,""],[44114,0,"_"],[44116,6,""],[44117,6,""],[44117,0,"m"],[44120,9,""],[44120,0,");"],[44125,10,""],[44126,23,""],[44126,0,"v_"],[44130,2,""],[44130,0,"r"],[44133,32,""],[44133,0,"(EV_DEFAULT_UC);"],[44150,22,""],[44156,1,""],[44156,0,"ch"],[44159,1,""],[44159,0,"ck"],[44162,2,""],[44163,2,""],[44163,0,"n"],[44166,1,""],[44177,3,""],[44177,0,"ch"],[44180,1,""],[44180,0,"ck"],[44184,4,""],[44184,0,"node::"],[44191,4,""],[44191,0,"ctivity"],[44206,3,""],[44206,0,"ch"],[44209,1,""],[44209,0,"ck"],[44243,3,""],[44243,0,"ch"],[44246,1,""],[44246,0,"ck"],[44279,0,"  ev_idle_init(&node::gc_idle, node::NotifyIdleness);\n\n"],[3265,0,"EV_DEFAULT_UC"],[4315,0,"EV_DEFAULT_UC"],[8995,0,"Flatten();\n  str->"]],"_dtSpan":[93732,96552]},{"parents":[53],"numChildren":1,"agent":173,"time":"1970-01-01T00:00:00Z","patches":[[17806,0,"paths.h>\n#include <"],[18056,0,"_PATH_DEV"]],"_dtSpan":[96552,96580]},{"parents":[54],"numChildren":1,"agent":89,"time":"1970-01-01T00:00:00Z","patches":[[488,0,"cares.h>\n#include <node_"],[32269,0,"cares\")) {\n    if (binding_cache->Has(module)) {\n      exports = binding_cache->Get(module)->ToObject();\n    } else {\n      exports = Object::New();\n      Cares::Initialize(exports);\n      binding_cache->Set(module, exports);\n    }\n\n  } else if (!strcmp(*module_v, \""],[35062,0,"dns_cares\"),    String::New(native_dns_cares));\n      exports->Set(String::New(\""]],"_dtSpan":[96580,96950]},{"parents":[55],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[466,10,""],[467,12,""],[31875,92,""],[31876,35,""],[31877,37,""],[31878,8,""],[31879,90,""],[34740,29,""],[34741,51,""]],"_dtSpan":[96950,97314]},{"parents":[56],"numChildren":1,"agent":104,"time":"1970-01-01T00:00:00Z","patches":[[34931,0,"reelist\"),     String::New(native_freelist));\n      exports->Set(String::New(\"f"]],"_dtSpan":[97314,97393]},{"parents":[57],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[1908,0,"static ev_prepare next_tick_watcher;\nstatic ev_idle tick_spinner;\nstatic bool need_tick_cb;\nstatic Persistent<String> tick_callback_sym;\n"],[4278,0,"pending -= ev_is_pending(&next_tick_watcher);\n  "],[4711,0,"Handle<Value> NeedTickCallback(const Arguments& args) {\n  HandleScope scope;\n  need_tick_cb = true;\n  ev_idle_start(EV_DEFAULT_UC_ &tick_spinner);\n  return Undefined();\n}\n\n\nstatic void Spin(EV_P_ ev_idle *watcher, int revents) {\n  assert(watcher == &tick_spinner);\n  assert(revents == EV_IDLE);\n}\n\n\nstatic void Tick(EV_P_ ev_prepare *watcher, int revents) {\n  assert(watcher == &next_tick_watcher);\n  assert(revents == EV_PREPARE);\n\n  // Avoid entering a V8 scope.\n  if (!need_tick_cb) return;\n\n  need_tick_cb = false;\n  ev_idle_stop(EV_DEFAULT_UC_ &tick_spinner);\n\n  HandleScope scope;\n\n  if (tick_callback_sym.IsEmpty()) {\n    // Lazily set the symbol\n    tick_callback_sym =\n      Persistent<String>::New(String::NewSymbol(\"_tickCallback\"));\n  }\n\n  Local<Value> cb_v = process->Get(tick_callback_sym);\n  if (!cb_v->IsFunction()) return;\n  Local<Function> cb = Local<Function>::Cast(cb_v);\n\n  TryCatch try_catch;\n\n  cb->Call(process, 0, NULL);\n\n  if (try_catch.HasCaught()) {\n    FatalException(try_catch);\n  }\n}\n\n\nstatic "],[39664,0,"_needTickCallback\", NeedTickCallback);\n  NODE_SET_METHOD(process, \""],[40485,1,""],[45416,0,"  ev_prepare_init(&node::next_tick_watcher, node::Tick);\n  ev_prepare_start(EV_DEFAULT_UC_ &node::next_tick_watcher);\n  ev_unref(EV_DEFAULT_UC);\n\n  ev_idle_init(&node::tick_spinner, node::Spin);\n"],[522,0,"f 0\n// not i"],[535,0," use\n# in"],[573,0,"endif\n#"],[40650,0,"// Not in use at the moment.\n  //"],[10003,0,", NULL, String::HINT_MANY_WRITES_EXPECTED"],[10132,0,", String::HINT_MANY_WRITES_EXPECTED"],[10301,1,""],[10302,17,""],[10337,0,", String::HINT_MANY_WRITES_EXPECTED"],[3185,0,"#define GC_INTERVAL 1.0\n\n"],[3217,1,""],[3217,0,"v"],[3219,2,""],[3219,0,"id gc_timer_start () {\n "],[3244,1,""],[3244,0,"if (!"],[3250,0,"v_is_activ"],[3261,1,""],[3261,0,"(&gc_timer)) {\n    ev_timer_"],[3290,0,"tart(EV_DEFAULT_UC"],[3309,0," &"],[3313,0,"_timer);\n    ev_unref(EV_DEFAULT_UC)"],[3351,1,""],[3351,0,"  }\n}\n\nstatic voi"],[3369,0," gc_tim"],[3377,0,"r_stop () {\n  i"],[3393,0," (ev_is_act"],[3405,1,""],[3405,0,"v"],[3407,0,"(&gc_timer))"],[3420,1,""],[3420,0,"{\n    ev_ref(EV_DEFAULT_U"],[3446,0,");\n    ev_timer"],[3462,3,""],[3462,0,"stop("],[3468,1,""],[3469,0,"_DEF"],[3474,0,"U"],[3476,0,"T_UC_"],[3482,3,""],[3482,0,"&gc_timer);"],[3494,0,"  }\n}\n"],[3761,20,""],[3768,13,""],[3769,13,""],[3806,2,""],[3845,8,""],[3851,23,""],[3863,2,""],[3864,10,""],[3865,17,""],[3865,0,"s"],[3867,10,""],[3867,0,"op"],[3870,22,""],[4115,2,""],[4117,2,""],[4117,0,"gc_tim"],[4124,1,""],[4124,0,"r_"],[4127,3,""],[4127,0,"top();\n"],[4135,1,""],[4136,6,""],[4136,0,"}"],[4362,4,""],[4363,2,""],[4363,0,"f"],[4365,3,""],[4365,0,"("],[4390,2,""],[4390,0,")"],[4392,1,""],[4399,1,""],[4400,1,""],[4400,0,"-;\n  if"],[4408,0,"("],[4432,2,""],[4432,0,")"],[4434,1,""],[4441,1,""],[4442,35,""],[4442,0,"-"],[4447,2,""],[4487,0,"\n\n"],[4490,2,""],[4491,9,""],[4492,5,""],[4492,0,"ss"],[4495,2,""],[4496,4,""],[4496,0,"t("],[4501,2,""],[4501,0,"ding >= 0);"],[4672,1,""],[4673,1,""],[4676,2,""],[4677,8,""],[4679,12,""],[4685,12,""],[4686,19,""],[4686,0,"s"],[4688,7,""],[4689,2,""],[4689,0,"rt"],[4692,24,""],[4697,2,""],[4698,1,""],[4699,23,""],[4701,2,""],[45742,0,"t"],[45744,0,"mer_i"],[45789,26,""],[45789,0,","],[45791,2,""],[45791,0,"2*"],[45804,3,""],[45804,0,","],[45806,27,""],[45806,0,"2*G"],[45811,30,""],[45811,0,"INT"],[45815,0,"R"],[45817,4,""],[45818,1,""],[45819,4,""]],"_dtSpan":[97393,99870]},{"parents":[52,58],"numChildren":1,"agent":64,"time":"1970-01-01T00:00:00Z","patches":[[908,0,"#include <node_script.h>\n"],[14328,0,"v8::"],[14349,0,"v8::"],[26975,0,"v8::"],[26996,0,"v8::"],[28081,0,"v8::"],[28102,0,"v8::"],[35898,0,"evals\")) {\n    if (bindi"],[35923,0,"g_c"],[35927,0,"che->Has(module)) {\n      expor"],[35959,0,"s = bind"],[35968,0,"ng_cache->Get(module)->ToObject();\n    } else {\n      exports = Object::New();\n      node::Script::Initialize(exports);\n      binding_cache->Set(module, exports);\n    }\n\n  } else if (!strcmp(*module_v, \"nati"],[40319,0,"// "]],"_dtSpan":[99870,100195]},{"parents":[59],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[26029,1693,""],[26030,34,""],[38589,49,""]],"_dtSpan":[100195,101971]},{"parents":[60],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[36172,0," "],[36433,0,"exports->Set(String::New(\"events\"),       String::New(native_events));\n      exports->Set(String::New(\"path\"),         String::New(native_path));\n      "],[36459,4,""],[36459,0,"pa"],[36462,1,""],[36462,0,"h"],[36473,0,"  "],[36494,4,""],[36494,0,"pa"],[36497,1,""],[36497,0,"h"],[36534,4,""],[36534,0,"module"],[36543,2,""],[36569,4,""],[36569,0,"module"]],"_dtSpan":[101971,102164]},{"parents":[61],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[36644,15,""],[1082,0,"errno_symbol;\nstatic Persistent<String> syscall_symbol;\n\nstatic Persistent<String> "],[7265,0,"static inline const char *errno_string(int errorno) {\n#define ERRNO_CASE(e)  case e: return #e;\n  switch (errorno) {\n\n#ifdef EACCES\n  ERRNO_CASE(EACCES);\n#endif\n\n#ifdef EADDRINUSE\n  ERRNO_CASE(EADDRINUSE);\n#endif\n\n#ifdef EADDRNOTAVAIL\n  ERRNO_CASE(EADDRNOTAVAIL);\n#endif\n\n#ifdef EAFNOSUPPORT\n  ERRNO_CASE(EAFNOSUPPORT);\n#endif\n\n#ifdef EAGAIN\n  ERRNO_CASE(EAGAIN);\n#else\n# ifdef EWOULDBLOCK\n  ERRNO_CASE(EWOULDBLOCK);\n# endif\n#endif\n\n#ifdef EALREADY\n  ERRNO_CASE(EALREADY);\n#endif\n\n#ifdef EBADF\n  ERRNO_CASE(EBADF);\n#endif\n\n#ifdef EBADMSG\n  ERRNO_CASE(EBADMSG);\n#endif\n\n#ifdef EBUSY\n  ERRNO_CASE(EBUSY);\n#endif\n\n#ifdef ECANCELED\n  ERRNO_CASE(ECANCELED);\n#endif\n\n#ifdef ECHILD\n  ERRNO_CASE(ECHILD);\n#endif\n\n#ifdef ECONNABORTED\n  ERRNO_CASE(ECONNABORTED);\n#endif\n\n#ifdef ECONNREFUSED\n  ERRNO_CASE(ECONNREFUSED);\n#endif\n\n#ifdef ECONNRESET\n  ERRNO_CASE(ECONNRESET);\n#endif\n\n#ifdef EDEADLK\n  ERRNO_CASE(EDEADLK);\n#endif\n\n#ifdef EDESTADDRREQ\n  ERRNO_CASE(EDESTADDRREQ);\n#endif\n\n#ifdef EDOM\n  ERRNO_CASE(EDOM);\n#endif\n\n#ifdef EDQUOT\n  ERRNO_CASE(EDQUOT);\n#endif\n\n#ifdef EEXIST\n  ERRNO_CASE(EEXIST);\n#endif\n\n#ifdef EFAULT\n  ERRNO_CASE(EFAULT);\n#endif\n\n#ifdef EFBIG\n  ERRNO_CASE(EFBIG);\n#endif\n\n#ifdef EHOSTUNREACH\n  ERRNO_CASE(EHOSTUNREACH);\n#endif\n\n#ifdef EIDRM\n  ERRNO_CASE(EIDRM);\n#endif\n\n#ifdef EILSEQ\n  ERRNO_CASE(EILSEQ);\n#endif\n\n#ifdef EINPROGRESS\n  ERRNO_CASE(EINPROGRESS);\n#endif\n\n#ifdef EINTR\n  ERRNO_CASE(EINTR);\n#endif\n\n#ifdef EINVAL\n  ERRNO_CASE(EINVAL);\n#endif\n\n#ifdef EIO\n  ERRNO_CASE(EIO);\n#endif\n\n#ifdef EISCONN\n  ERRNO_CASE(EISCONN);\n#endif\n\n#ifdef EISDIR\n  ERRNO_CASE(EISDIR);\n#endif\n\n#ifdef ELOOP\n  ERRNO_CASE(ELOOP);\n#endif\n\n#ifdef EMFILE\n  ERRNO_CASE(EMFILE);\n#endif\n\n#ifdef EMLINK\n  ERRNO_CASE(EMLINK);\n#endif\n\n#ifdef EMSGSIZE\n  ERRNO_CASE(EMSGSIZE);\n#endif\n\n#ifdef EMULTIHOP\n  ERRNO_CASE(EMULTIHOP);\n#endif\n\n#ifdef ENAMETOOLONG\n  ERRNO_CASE(ENAMETOOLONG);\n#endif\n\n#ifdef ENETDOWN\n  ERRNO_CASE(ENETDOWN);\n#endif\n\n#ifdef ENETRESET\n  ERRNO_CASE(ENETRESET);\n#endif\n\n#ifdef ENETUNREACH\n  ERRNO_CASE(ENETUNREACH);\n#endif\n\n#ifdef ENFILE\n  ERRNO_CASE(ENFILE);\n#endif\n\n#ifdef ENOBUFS\n  ERRNO_CASE(ENOBUFS);\n#endif\n\n#ifdef ENODATA\n  ERRNO_CASE(ENODATA);\n#endif\n\n#ifdef ENODEV\n  ERRNO_CASE(ENODEV);\n#endif\n\n#ifdef ENOENT\n  ERRNO_CASE(ENOENT);\n#endif\n\n#ifdef ENOEXEC\n  ERRNO_CASE(ENOEXEC);\n#endif\n\n#ifdef ENOLCK\n  ERRNO_CASE(ENOLCK);\n#endif\n\n#ifdef ENOLINK\n  ERRNO_CASE(ENOLINK);\n#endif\n\n#ifdef ENOMEM\n  ERRNO_CASE(ENOMEM);\n#endif\n\n#ifdef ENOMSG\n  ERRNO_CASE(ENOMSG);\n#endif\n\n#ifdef ENOPROTOOPT\n  ERRNO_CASE(ENOPROTOOPT);\n#endif\n\n#ifdef ENOSPC\n  ERRNO_CASE(ENOSPC);\n#endif\n\n#ifdef ENOSR\n  ERRNO_CASE(ENOSR);\n#endif\n\n#ifdef ENOSTR\n  ERRNO_CASE(ENOSTR);\n#endif\n\n#ifdef ENOSYS\n  ERRNO_CASE(ENOSYS);\n#endif\n\n#ifdef ENOTCONN\n  ERRNO_CASE(ENOTCONN);\n#endif\n\n#ifdef ENOTDIR\n  ERRNO_CASE(ENOTDIR);\n#endif\n\n#ifdef ENOTEMPTY\n  ERRNO_CASE(ENOTEMPTY);\n#endif\n\n#ifdef ENOTSOCK\n  ERRNO_CASE(ENOTSOCK);\n#endif\n\n#ifdef ENOTSUP\n  ERRNO_CASE(ENOTSUP);\n#else\n# ifdef EOPNOTSUPP\n  ERRNO_CASE(EOPNOTSUPP);\n# endif\n#endif\n\n#ifdef ENOTTY\n  ERRNO_CASE(ENOTTY);\n#endif\n\n#ifdef ENXIO\n  ERRNO_CASE(ENXIO);\n#endif\n\n\n#ifdef EOVERFLOW\n  ERRNO_CASE(EOVERFLOW);\n#endif\n\n#ifdef EPERM\n  ERRNO_CASE(EPERM);\n#endif\n\n#ifdef EPIPE\n  ERRNO_CASE(EPIPE);\n#endif\n\n#ifdef EPROTO\n  ERRNO_CASE(EPROTO);\n#endif\n\n#ifdef EPROTONOSUPPORT\n  ERRNO_CASE(EPROTONOSUPPORT);\n#endif\n\n#ifdef EPROTOTYPE\n  ERRNO_CASE(EPROTOTYPE);\n#endif\n\n#ifdef ERANGE\n  ERRNO_CASE(ERANGE);\n#endif\n\n#ifdef EROFS\n  ERRNO_CASE(EROFS);\n#endif\n\n#ifdef ESPIPE\n  ERRNO_CASE(ESPIPE);\n#endif\n\n#ifdef ESRCH\n  ERRNO_CASE(ESRCH);\n#endif\n\n#ifdef ESTALE\n  ERRNO_CASE(ESTALE);\n#endif\n\n#ifdef ETIME\n  ERRNO_CASE(ETIME);\n#endif\n\n#ifdef ETIMEDOUT\n  ERRNO_CASE(ETIMEDOUT);\n#endif\n\n#ifdef ETXTBSY\n  ERRNO_CASE(ETXTBSY);\n#endif\n\n#ifdef EXDEV\n  ERRNO_CASE(EXDEV);\n#endif\n\n  default: return \"\";\n  }\n}\n\n\nLocal<Value> ErrnoException(int errorno,\n                            const char *syscall,\n                            const char *msg) {\n  Local<String> estring = String::NewSymbol(errno_string(errorno));\n  if (!msg[0]) msg = strerror(errorno);\n  Local<String> message = String::NewSymbol(msg);\n\n  Local<String> cons1 = String::Concat(estring, String::NewSymbol(\", \"));\n  Local<String> cons2 = String::Concat(cons1, message);\n\n  Local<Value> e = Exception::Error(cons2);\n\n  Local<Object> obj = e->ToObject();\n\n  if (errno_symbol.IsEmpty()) {\n    syscall_symbol = NODE_PSYMBOL(\"syscall\");\n    errno_symbol = NODE_PSYMBOL(\"errno\");\n  }\n\n  obj->Set(errno_symbol, Integer::New(errorno));\n  if (syscall) obj->Set(syscall_symbol, String::NewSymbol(syscall));\n  return e;\n}\n\n\n"],[490,22,""],[576,18,""],[577,3,""],[578,2,""],[35465,5,""],[35466,235,""],[35467,21,""],[35468,3,""],[35469,14,""],[35470,4,""],[35471,13,""],[35472,76,""],[35473,42,""],[35474,4,""],[35475,87,""],[35621,35,""],[35622,116,""],[35625,32,""],[35626,103,""],[35628,20,""],[39199,9,""],[39200,70,""],[39816,37,""],[39820,37,""],[39848,4,""],[47973,51,""],[7586,3,""],[7586,0,"ndif\n"],[7593,1,""],[7611,0,"# if EAGAIN != EWOULDBLOCK\n"]],"_dtSpan":[102164,107939]},{"parents":[62],"numChildren":1,"agent":49,"time":"1970-01-01T00:00:00Z","patches":[[11056,0,"const char *signo_string(int signo) {\n#define SIGNO_CASE(e)  case e: return #e;\n  switch (signo) {\n\n#ifdef SIGHUP\n  SIGNO_CASE(SIGHUP);\n#endif\n\n#ifdef SIGINT\n  SIGNO_CASE(SIGINT);\n#endif\n\n#ifdef SIGQUIT\n  SIGNO_CASE(SIGQUIT);\n#endif\n\n#ifdef SIGILL\n  SIGNO_CASE(SIGILL);\n#endif\n\n#ifdef SIGTRAP\n  SIGNO_CASE(SIGTRAP);\n#endif\n\n#ifdef SIGABRT\n  SIGNO_CASE(SIGABRT);\n#endif\n\n#ifdef SIGIOT\n# if SIGABRT != SIGIOT\n  SIGNO_CASE(SIGIOT);\n# endif\n#endif\n\n#ifdef SIGBUS\n  SIGNO_CASE(SIGBUS);\n#endif\n\n#ifdef SIGFPE\n  SIGNO_CASE(SIGFPE);\n#endif\n\n#ifdef SIGKILL\n  SIGNO_CASE(SIGKILL);\n#endif\n\n#ifdef SIGUSR1\n  SIGNO_CASE(SIGUSR1);\n#endif\n\n#ifdef SIGSEGV\n  SIGNO_CASE(SIGSEGV);\n#endif\n\n#ifdef SIGUSR2\n  SIGNO_CASE(SIGUSR2);\n#endif\n\n#ifdef SIGPIPE\n  SIGNO_CASE(SIGPIPE);\n#endif\n\n#ifdef SIGALRM\n  SIGNO_CASE(SIGALRM);\n#endif\n\n  SIGNO_CASE(SIGTERM);\n  SIGNO_CASE(SIGCHLD);\n\n#ifdef SIGSTKFLT\n  SIGNO_CASE(SIGSTKFLT);\n#endif\n\n\n#ifdef SIGCONT\n  SIGNO_CASE(SIGCONT);\n#endif\n\n#ifdef SIGSTOP\n  SIGNO_CASE(SIGSTOP);\n#endif\n\n#ifdef SIGTSTP\n  SIGNO_CASE(SIGTSTP);\n#endif\n\n#ifdef SIGTTIN\n  SIGNO_CASE(SIGTTIN);\n#endif\n\n#ifdef SIGTTOU\n  SIGNO_CASE(SIGTTOU);\n#endif\n\n#ifdef SIGURG\n  SIGNO_CASE(SIGURG);\n#endif\n\n#ifdef SIGXCPU\n  SIGNO_CASE(SIGXCPU);\n#endif\n\n#ifdef SIGXFSZ\n  SIGNO_CASE(SIGXFSZ);\n#endif\n\n#ifdef SIGVTALRM\n  SIGNO_CASE(SIGVTALRM);\n#endif\n\n#ifdef SIGPROF\n  SIGNO_CASE(SIGPROF);\n#endif\n\n#ifdef SIGWINCH\n  SIGNO_CASE(SIGWINCH);\n#endif\n\n#ifdef SIGIO\n  SIGNO_CASE(SIGIO);\n#endif\n\n#ifdef SIGPOLL\n  SIGNO_CASE(SIGPOLL);\n#endif\n\n#ifdef SIGLOST\n  SIGNO_CASE(SIGLOST);\n#endif\n\n#ifdef SIGPWR\n  SIGNO_CASE(SIGPWR);\n#endif\n\n#ifdef SIGSYS\n  SIGNO_CASE(SIGSYS);\n#endif\n\n#ifdef SIGUNUSED\n  SIGNO_CASE(SIGUNUSED);\n#endif\n\n  default: return \"\";\n  }\n}\n\n"]],"_dtSpan":[107939,109657]},{"parents":[63],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[9560,1,""],[9560,0,"IN"],[9581,1,""],[9581,0,"IN"],[9606,0,"CK\n# if ENOL"],[9621,0," != ENOLCK"],[9649,2,""],[9649,0,"C"],[9655,0," endif\n#"],[12561,0,"# if SIGPOLL"],[12574,0,"!="],[12580,0,"IO\n  SIG"],[12607,0," endif\n#"],[12744,19,""],[12745,31,""],[49732,0,"\n  // Ignore SIGPIPE\n  struct sigaction sa;\n  bzero(&sa, sizeof(sa));\n  sa.sa_handler = SIG_IGN;\n  sigaction(SIGPIPE, &sa, NULL);\n\n\n"],[2589,2,""],[2589,0,"A"],[2591,1,""],[2592,6,""],[2593,1,""],[2594,8,""],[2594,0,"h"],[2597,21,""],[2598,2,""],[2601,4,""],[2601,0,"v"],[2603,4,""],[2604,11,""],[2604,0,"ut"],[2607,5,""],[2608,6,""],[2609,2,""],[2610,11,""],[2611,0,"gor"],[2615,6,""],[2616,1,""],[2617,3,""],[2617,0,"m"],[2621,2,""],[2621,0,"s"],[2628,0,"d"],[2630,5,""],[2630,0,"vis"],[2635,1,""],[2636,8,""],[2636,0,"to"],[2639,0,"d"],[2641,1,""],[2641,0,"t"],[2644,3,""],[2644,0,"m"],[2647,1,""],[2647,0,"e"],[2649,1,""],[2649,0,"whe"],[2654,1,""],[2654,0,"N"],[2659,1,""],[2659,0,"i"],[2661,0,"\n// idl"],[2669,1,""],[2669,0,"."],[2671,0,"You'l"],[2677,4,""],[2678,1,""],[2678,0,"h"],[2680,3,""],[2680,0,"v"],[2682,3,""],[2684,3,""],[2684,0,"o"],[2686,0,"f"],[2688,5,""],[2688,0,"gu"],[2692,1,""],[2692,0," i"],[2695,1,""],[2696,1,""],[2697,0,"ut f"],[2702,1,""],[2702,0,"r"],[2704,4,""],[2704,0,"yo"],[2708,0,"s"],[2710,2,""],[2710,0,"l"],[2712,0,"."],[2714,9,""],[2715,5,""],[2715,0,"tat"],[2719,4,""],[2719,0,"c"],[2721,3,""],[2722,4,""],[2722,0,"v_c"],[2726,0,"eck"],[2738,4,""],[2738,0,";\nstat"],[2746,1,""],[2747,1,""],[2748,3,""],[2748,0,"v_i"],[2752,1,""],[2752,0,"le"],[2755,3,""],[2756,1,""],[2756,0,"gc_"],[2760,1,""],[2760,0,"dl"],[2763,5,""],[2763,0,";"],[2765,5,""],[2767,1,""],[2768,1,""],[2770,5,""],[2770,0,"c"],[2774,4,""],[2774,0,"_"],[2777,8,""],[2777,0,"m"],[2779,12,""],[2779,0,"r"],[2781,9,""],[2789,6,""],[2789,0,";"],[2791,2,""],[2791,0,"bool"],[2796,0,"n"],[2798,1,""],[2799,0,"d_g"],[2803,5,""],[2803,0,";\n\n\n#d"],[2810,1,""],[2810,0,"fin"],[2814,2,""],[2815,3,""],[2815,0,"FAST_TICK"],[2825,5,""],[2825,0,"0.7\n#"],[2831,6,""],[2832,7,""],[2833,14,""],[2834,1,""],[2834,0,"n"],[2837,2,""],[2840,0,"WA"],[2843,1,""],[2844,10,""],[2845,9,""],[2845,0,"T"],[2847,1,""],[2847,0,"ME"],[2850,1,""],[2850,0,"5.\n#d"],[2856,4,""],[2859,1,""],[2859,0,"e"],[2861,1,""],[2861,0,"RPM_SAMPLES"],[2873,1,""],[2873,0,"100\n#d"],[2880,6,""],[2881,1,""],[2882,3,""],[2884,3,""],[2885,3,""],[2885,0,"TICK_TIME("],[2896,9,""],[2896,0,")"],[2899,4,""],[2899,0,"i"],[2901,0,"k"],[2903,5,""],[2907,4,""],[2907,0,"s[(t"],[2913,6,""],[2913,0,"k_t"],[2917,4,""],[2917,0,"m"],[2919,4,""],[2919,0,"_h"],[2922,1,""],[2923,1,""],[2924,2,""],[2925,4,""],[2925,0,"-"],[2927,15,""],[2927,0,"("],[2929,15,""],[2929,0,"))"],[2932,11,""],[2932,0,"%"],[2934,10,""],[2934,0,"RPM_SAMPLES]"],[2964,16,""],[2967,3,""],[2967,0,"k"],[2973,5,""],[2973,0,"s[RPM"],[2979,5,""],[2979,0,"SAMPLES]"],[2996,8,""],[2996,0,"int"],[3000,1,""],[3000,0,"ti"],[3003,0,"k"],[3005,8,""],[3006,2,""],[3007,2,""],[3007,0,"m"],[3009,1,""],[3010,3,""],[3010,0,"h"],[3012,6,""],[3012,0,"a"],[3014,2,""],[3016,24,""],[3029,3,""],[3029,0,"Star"],[3034,0,"GCT"],[3041,6,""],[3175,3,""],[3175,0,"S"],[3177,0,"opGCT"],[3186,5,""],[3270,15,""],[3287,1,""],[3301,5,""],[3305,4,""],[3315,1,""],[3316,1,""],[3316,0,"dl"],[3319,1,""],[3369,1,""],[3370,1,""],[3370,0,"dl"],[3373,1,""],[3399,1,""],[3400,1,""],[3400,0,"DL"],[3403,1,""],[3428,6,""],[3441,97,""],[3445,1,""],[3471,2,""],[3485,3,""],[3485,0,"op"],[3491,3,""],[3492,3,""],[3493,3,""],[3494,2,""],[3494,0,"wat"],[3498,4,""],[3498,0,"h"],[3500,0,"r"],[3505,5,""],[3508,4,""],[3508,0,"S"],[3510,0,"opGCT"],[3519,5,""],[3531,2,""],[3531,0,"// C"],[3536,3,""],[3536,0,"lled"],[3541,3,""],[3542,4,""],[3543,7,""],[3543,0,"r"],[3545,14,""],[3545,0,"ct"],[3548,1,""],[3548,0,"y"],[3550,2,""],[3551,0,"f"],[3553,2,""],[3555,5,""],[3556,1,""],[3558,13,""],[3560,12,""],[3560,0,"y"],[3562,2,""],[3563,10,""],[3564,29,""],[3564,0,"ll"],[3567,7,""],[3568,12,""],[3569,4,""],[3570,3,""],[3570,0,"s"],[3572,19,""],[3574,6,""],[3575,1,""],[3576,3,""],[3577,1,""],[3578,5,""],[3579,0,"(or"],[3584,4,""],[3584,0,"pol"],[3588,4,""],[3588,0,", "],[3591,7,""],[3591,0,"r"],[3594,0,"h"],[3597,2,""],[3598,14,""],[3598,0,"v"],[3601,6,""],[3602,8,""],[3603,1,""],[3615,1,""],[3615,0,"Che"],[3619,6,""],[3619,0,"k"],[3727,0,"tick_times[t"],[3740,1,""],[3740,0,"ck_"],[3744,2,""],[3744,0,"im"],[3747,1,""],[3747,0,"_hea"],[3752,3,""],[3752,0,"]"],[3759,5,""],[3760,3,""],[3761,3,""],[3761,0,"w"],[3763,13,""],[3766,1,""],[3768,7,""],[3769,1,""],[3769,0,"i"],[3771,3,""],[3771,0,"k_"],[3774,0,"ime_head"],[3783,2,""],[3783,0,"="],[3785,2,""],[3785,0,"("],[3787,0,"i"],[3789,0,"k_time_"],[3798,2,""],[3798,0,"ad +"],[3803,2,""],[3803,0,"1) %"],[3808,0,"RPM_SAMPLES;\n\n  St"],[3827,1,""],[3827,0,"r"],[3829,0,"GCT"],[3833,5,""],[3833,0,"mer();"],[3843,1,""],[3844,0,"or"],[3848,3,""],[3849,4,""],[3850,1,""],[3850,0,"t "],[3853,0," = 0; i < (i"],[3866,1,""],[3866,0,"t)"],[3869,3,""],[3869,0,"GC"],[3872,5,""],[3872,0,"WAIT_TIME/FAST_TICK"],[3892,0,"; i++"],[3899,1,""],[3899,0,"{\n    doubl"],[3911,1,""],[3911,0," "],[3913,0," = TICK_TIME("],[3927,2,""],[3927,0,"+1) "],[3932,1,""],[3932,0," TICK_TIME(i+2)"],[3951,2,""],[3952,7,""],[3952,0," //"],[3956,3,""],[3956,0,"r"],[3959,1,""],[3959,0,"tf"],[3962,5,""],[3962,0,"\""],[3964,4,""],[3965,2,""],[3965,0,"= %f\\"],[3971,0,"\", "],[3975,5,""],[3975,0,")"],[3980,0,"  // If "],[3989,1,""],[3989,0,"n"],[3991,1,""],[3991,0,"th"],[3994,2,""],[3994,0," last 5 t"],[4004,0,"ck"],[4007,2,""],[4007,0," th"],[4011,1,""],[4011,0," "],[4014,0,"ffere"],[4020,6,""],[4021,1,""],[4022,4,""],[4023,1,""],[4023,0,"b"],[4025,3,""],[4025,0,"twee"],[4030,4,""],[4031,1,""],[4033,1,""],[4033,0,"  // tick"],[4043,0," wa"],[4047,0," l"],[4050,1,""],[4050,0,"ss "],[4054,2,""],[4054,0,"han 0.7 s"],[4064,0,"co"],[4068,0,"s, then cont"],[4082,1,""],[4082,0,"ue.\n    if"],[4093,2,""],[4093,0,"(d <"],[4098,1,""],[4098,0,"FAST_TICK"],[4108,2,""],[4108,0," {"],[4113,0,"    "],[4119,1,""],[4126,8,""],[4127,21,""],[4127,0,"---"],[4133,9,""],[4136,1,""],[4138,2,""],[4139,2,""],[4139,0,"   r"],[4144,0,"tur"],[4148,5,""],[4148,0,";\n   "],[4154,1,""],[4154,0,"}"],[4158,0,"}\n\n"],[4163,2,""],[4163,0,"// Otherwise "],[4178,1,""],[4179,1,""],[4179,0,"r"],[4181,0," the gc!\n\n  //fpr"],[4199,1,""],[4199,0,"ntf(std"],[4207,0,"rr,"],[4211,1,""],[4211,0,"\"start"],[4218,0,"idl"],[4222,2,""],[4222,0," 2\\"],[4226,16,""],[4226,0,"\""],[4230,1,""],[4232,1,""],[4242,2,""],[4242,0,"art"],[4249,3,""],[4250,3,""],[4251,3,""],[4262,26,""],[28723,0,"\nstatic void CheckStatus(EV_P_ ev_timer *watcher, int revents) {\n  assert(watcher == &gc_timer);\n  assert(re"],[28832,0,"ents == EV_TIMER);\n\n#if HAVE_GETMEM\n  // check memory\n  size_t rss, vsize;\n  if (!ev_is_active(&gc_idle) && getmem(&rss, &vsize) == 0) {\n    if (rss > 1024*1024*128) {\n      // larger than 128 megs, just start the idle watcher\n      ev_idle_start(EV_A_ &gc_idle);\n      return;\n    }\n  }\n#endif // HAVE_GETMEM\n\n  double d = ev_now() - TICK_TIME(3);\n\n  //printfb(\"timer d = %f\\n\", d);\n\n  if (d  >= GC_WAIT_TIME - 1.) {\n    //fprintf(stderr, \"start idle\\n\");\n    ev_idle_start(EV_A_ &gc_idle);\n  }\n}\n\n\nv"],[50392,86,""],[50426,1,""],[50426,0,"Che"],[50430,6,""],[50430,0,"k"],[50549,6,""],[50553,0,");\n  ev_timer_i"],[50569,0,"it(&node::gc_timer, node::Ch"],[50598,0,"ckStatu"],[50606,1,""],[50606,0,", 5., 5."]],"_dtSpan":[109657,112510]},{"parents":[64],"numChildren":1,"agent":197,"time":"1970-01-01T00:00:00Z","patches":[[17860,5,""],[17860,0,"Numb"]],"_dtSpan":[112510,112519]},{"parents":[65],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[18608,8,""],[19421,0,"\n    // HACK HACK HACK\n    //\n    // FIXME\n    //\n    // Because of how CommonJS modules work, all scripts are wrapped with a\n    // \"function (function (exports, __filename, ...) {\"\n    // to provide script local variables.\n    //\n    // When reporting errors on the first line of a script, this wrapper\n    // function is leaked to the user. This HACK is to remove it. The length\n    // of the wrapper is 62. That wrapper is defined in lib/module.js\n    //\n    // If that wrapper is ever changed, then this number also has to be\n    // updated. Or - someone could clean this up so that the two peices\n    // don't need to be changed.\n    //\n    // Even better would be to get support into V8 for wrappers that\n    // shouldn't be reported to users.\n    int offset = linenum == 1 ? 62 : 0;\n\n"],[20258,0," + offset"],[20388,1,""],[20388,0,"offset"],[21062,0,", true"],[21183,0,", true"],[33876,0,"{\n    Repo"],[33887,0,"tExc"],[33892,0,"p"],[33894,2,""],[33894,0,"io"],[33897,1,""],[33897,0,"("],[33907,2,""],[33907,0,", fals"],[33914,5,""],[33914,0,");\n    exit"],[33926,0,"1"],[33930,0,"  }\n"],[34441,0,", true"],[35290,0,", true"],[46569,15,""],[46592,7,""],[46721,15,""],[46783,0,", true"],[46809,7,""],[47381,15,""],[47443,0,", true"],[47469,7,""],[143,0,"s"],[137,21,""],[331,0,"fdef HAVE_STRINGS_H\n# include <strings.h>\n#else\n# include <string.h>\n#endif\n\n#i"],[137,0,"strings.h>\n#include <"],[348,79,""],[158,0,"string.h>\n#include <"]],"_dtSpan":[112519,113708]},{"parents":[66],"numChildren":1,"agent":85,"time":"1970-01-01T00:00:00Z","patches":[[3291,0,"EV_DEFAULT_UC_ "],[3799,0,"EV_DEFAULT_UC"],[30021,0,"EV_DEFAULT_UC"]],"_dtSpan":[113708,113749]},{"parents":[67],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[18713,38,""],[18714,34,""],[18717,8,""],[18718,212,""],[20352,0,"Str"],[20356,0,"ng::Ut"],[20363,0,"8Value"],[20370,2,""],[20371,0,"r"],[20374,20,""],[20375,11,""],[20375,0,"("],[20377,3,""],[20378,2,""],[20378,0,"y_ca"],[20383,0,"ch."],[20397,6,""],[20398,0,")"],[20401,10,""],[20404,5,""],[20405,6,""],[20406,6,""],[20407,0,"("],[20413,2,""],[20413,0,".leng"],[20419,3,""],[20419,0,"h() > 0"],[20427,1,""],[20427,0," {"]],"_dtSpan":[113749,114158]},{"parents":[68],"numChildren":1,"agent":200,"time":"1970-01-01T00:00:00Z","patches":[[1114,0,"static Persistent<String> errpath_symbol;\n"],[12459,0,",\n                            const char *path"],[12517,0,"Value> e;\n  Local<"],[12817,14,""],[12818,3,""],[12819,6,""],[12820,60,""],[12939,0,"  errpath_symbol = NODE_PSYMBOL(\"path\");\n  }\n\n  if (path) {\n    Local<String> cons3 = String::Concat(cons2, String::NewSymbol(\" '\"));\n    Local<String> cons4 = String::Concat(cons3, String::New(path));\n    Local<String> cons5 = String::Concat(cons4, String::NewSymbol(\"'\"));\n    e = Exception::Error(cons5);\n  } else {\n    e = Exception::Error(cons2);\n  "],[13298,0,"Local<Object> "],[13315,0," = e->ToObject();\n\n  obj"],[13389,0,"path) obj->Set(errpath_symbol, String::New(path));\n  if ("]],"_dtSpan":[114158,114796]},{"parents":[69],"numChildren":1,"agent":49,"time":"1970-01-01T00:00:00Z","patches":[[43105,0,"exports->Set(String::New(\"utf8decoder\"),  String::New(native_utf8decoder));\n      "]],"_dtSpan":[114796,114878]},{"parents":[70],"numChildren":1,"agent":118,"time":"1970-01-01T00:00:00Z","patches":[[369,0,"#include <pwd.h> /* getpwnam() */"],[413,0,"grp.h> /* getgrnam() */\n\n#include <"],[2432,0,"Buffer for getpwnam_r(), getgrpam_r(); keep this scoped at file-level rather\n// than method-level to avoid excess stack usage.\nstatic char getbuf[1024];\n\n// "],[24409,7,""],[24409,0,"i"],[24412,5,""],[24413,6,""],[24416,0,";\n"],[24419,1,""],[24419,0,"\n  if"],[24425,0,"("],[24435,2,""],[24436,4,""],[24436,0,"sNumb"],[24445,1,""],[24445,0,") {"],[24451,3,""],[24452,0," "],[24459,0,"ar"],[24462,8,""],[24462,0,"s[0]"],[24484,0,"} else if (args[0]->IsString()) {\n    Str"],[24527,0,"g::U"],[24532,0,"f8Value"],[24540,0,"g"],[24542,1,""],[24542,0,"pnam(arg"],[24551,0,"[0]->ToString());\n    struct gro"],[24584,1,""],[24584,0,"p grp, *grpp = NULL;\n    in"],[24612,0," err"],[24618,0,"\n  "],[24628,0,"e"],[24630,0,"r = g"],[24636,0,"tgrnam_r(*grpnam, &grp, getbuf, "],[24669,0,"izeof(getb"],[24680,2,""],[24680,0,"f), &grpp)) ||\n        grpp"],[24709,0,"="],[24711,1,""],[24711,0,"NULL) {\n      return ThrowExc"],[24741,0,"p"],[24743,0,"ion(ErrnoException(errno, \"getgrnam_r\"));\n    }\n\n    "],[24799,1,""],[24799,0," = grpp->"],[24809,0,"r_g"],[24814,2,""],[24814,0,";\n "],[24818,2,""],[24818,0,"}"],[24820,2,""],[24820,0,"else"],[24870,0,"\n      "],[24889,0,"\""],[24891,0,"e"],[24893,0,"gid a"],[24899,0,"gument must be a numb"],[24922,0," or a st"],[24931,0,"ing\")));\n  }\n\n  int result;\n  if ((result = setgid(gid)) != 0) {\n    return ThrowExcepti"],[25020,0,"n(E"],[25024,0,"rnoException"],[25042,0,", \"setgid\""],[25054,2,""],[25293,7,""],[25293,0,"i"],[25296,5,""],[25297,6,""],[25300,0,";\n\n "],[25305,1,""],[25305,0,"if"],[25308,0,"("],[25318,2,""],[25319,4,""],[25319,0,"sNumb"],[25328,1,""],[25328,0,") {"],[25334,3,""],[25335,0," "],[25342,0,"ar"],[25345,8,""],[25345,0,"s[0]"],[25367,0,"} else "],[25375,0,"f (args[0]->IsStri"],[25394,0,"g()) {\n    String::U"],[25415,0,"f8Value"],[25423,0,"pwnam(args[0]->ToSt"],[25443,1,""],[25443,0,"ing());\n    "],[25456,0,"tr"],[25459,1,""],[25459,0,"c"],[25461,0," passwd pwd, *pwdp = NULL;\n    int err"],[25501,0,"\n  "],[25511,0,"e"],[25513,0,"r = g"],[25519,3,""],[25520,0,"pwnam_r(*pwnam,"],[25536,1,""],[25536,0,"&pwd,"],[25542,1,""],[25542,0,"g"],[25545,0,"b"],[25547,0,"f, s"],[25552,1,""],[25552,0,"zeof"],[25557,0,"getb"],[25562,1,""],[25562,0,"f), &pw"],[25570,0,"p"],[25574,1,""],[25574,0,"||\n        pwdp ="],[25593,1,""],[25593,0,"NULL"],[25605,0,"  "],[25630,0,"rrnoException(errno, \"getpwnam_r\"));\n    }\n\n    uid = pwdp->pw_uid;\n  } else {\n    return ThrowE"],[25734,0,"(Exception"],[25752,0,"\n      "],[25771,0,"\""],[25773,0,"e"],[25775,0,"uid a"],[25781,0,"gum"],[25785,0,"nt must be a numbe"],[25804,0," o"],[25807,0," a string\")));\n  }\n\n  int result;\n  if ((result = setuid(uid)) != 0) {\n    return ThrowExcepti"],[25902,0,"n(Er"],[25907,0,"noException"],[25924,2,""],[25924,0,", \"setuid\""]],"_dtSpan":[114878,116173]},{"parents":[71],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[510,1,""],[40738,1,""],[30940,1,""],[30940,0,"OUT"],[30940,3,""],[30940,0,"R"]],"_dtSpan":[116173,116183]},{"parents":[72],"numChildren":1,"agent":118,"time":"1970-01-01T00:00:00Z","patches":[[45406,4,""],[50651,0,"int i;\n\n  "],[50692,2,""],[50693,2,""],[50853,2,""],[50857,26,""],[51339,30,""],[51377,0,"break;\n    }\n  }\n\n  "],[51417,15,""],[51418,10,""]],"_dtSpan":[116183,116304]},{"parents":[73],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[30940,1,""],[30940,0,"OUT"],[19409,0,"node::Stdio::DisableRawMode(STDIN_FILENO);\n  fpr"],[19458,0,"nt"],[19461,0,"(stderr,"],[19470,0,"\"\\n\\n\");\n\n  if "],[26114,15,""],[26115,3,""],[26119,18,""],[43737,0,"readline\"),     String::New(native_readline));\n      exports->Set(String::New(\""],[51540,0,"\nstatic void AtExit() {\n  node::Stdio::Flush();\n  node::Stdio::DisableRawMode(STDIN_FILENO);\n  fprintf(stderr, \"\\n\");\n}\n\n\n"],[55130,0,"atexit(node::AtExit);\n\n  "],[55289,25,""],[51987,163,""],[51633,25,""]],"_dtSpan":[116304,116856]},{"parents":[74],"numChildren":1,"agent":123,"time":"1970-01-01T00:00:00Z","patches":[[12446,0,"# if SIGPWR != SIGLOST\n"],[12492,0," endif\n#"],[55235,1,""]],"_dtSpan":[116856,116888]},{"parents":[75],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[43997,74,""]],"_dtSpan":[116888,116962]},{"parents":[76],"numChildren":1,"agent":115,"time":"1970-01-01T00:00:00Z","patches":[[42780,0,"gram\"),        String::New(native_dgram));\n      exports->Set(String::New(\"d"]],"_dtSpan":[116962,117038]},{"parents":[77],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[44373,1,""],[44373,0,"s"],[44375,2,""],[44375,0,"ring_"],[44390,1,""],[44410,1,""],[44410,0,"s"],[44412,2,""],[44412,0,"ring_"],[447,0,"\"platform.h\"\n\n#include "],[26229,12,""],[26230,35,""],[26231,11,""],[26232,1,""],[26233,401,""],[26234,14,""],[26235,18,""],[26236,721,""],[26237,33,""],[26238,36,""],[26239,7,""],[26240,20,""],[26241,1,""],[26242,8,""],[26243,373,""],[26244,9,""],[26245,9,""],[26246,64,""],[26247,260,""],[26248,4,""],[26249,64,""],[26250,13,""],[26251,43,""],[26252,144,""],[26253,17,""],[26254,63,""],[26255,2297,""],[26358,1,""],[26359,15,""],[26432,1,""],[26432,0,"OS::G"],[26439,1,""],[26439,0,"M"],[26442,0,"ory"],[26618,22,""],[26937,7,""],[26938,12,""],[26939,112,""],[26969,1,""],[26969,0,"OS::G"],[26976,1,""],[26976,0,"M"],[26979,0,"ory"],[27792,7,""]],"_dtSpan":[117038,121956]},{"parents":[78],"numChildren":1,"agent":97,"time":"1970-01-01T00:00:00Z","patches":[[41635,0,"size_t size = 2*PATH_MAX;\n  char execPath[size];\n  if (OS::GetExecutablePath(execPath, &size) != 0) {\n    // as a last ditch effort, fallback on argv[0] ?\n    process->Set(String::NewSymbol(\"execPath\"), String::New(argv[0]));\n  } else {\n    process->Set(String::NewSymbol(\"execPath\"), String::New(execPath));\n  }\n\n\n  "]],"_dtSpan":[121956,122273]},{"parents":[79],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[22308,2,""],[22309,2,""],[22310,1,""],[22310,0,"mple"],[38602,70,""],[38603,7,""],[38605,1,""],[48866,2,""],[48867,2,""],[48868,1,""],[48868,0,"mple"],[38567,74,""]],"_dtSpan":[122273,122443]},{"parents":[80],"numChildren":1,"agent":134,"time":"1970-01-01T00:00:00Z","patches":[[37352,0,"Context::Initialize(exports);\n      node::"],[40018,0,"v8::"],[50293,0,"v8::"],[50316,0,"v8::"],[50338,0,"v8::"]],"_dtSpan":[122443,122501]},{"parents":[81],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[47733,2,""],[47733,0,"POL"],[47737,3,""]],"_dtSpan":[122501,122509]},{"parents":[82],"numChildren":1,"agent":23,"time":"1970-01-01T00:00:00Z","patches":[[24543,1,""]],"_dtSpan":[122509,122510]},{"parents":[83],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[44333,1,""],[44339,5,""],[44339,0,"Fa"],[44342,0,"al"],[44363,20,""],[44333,0," "],[44340,2,""],[44340,0,"Repor"],[44346,2,""],[44365,0,", true);\n    exit(11"]],"_dtSpan":[122510,122570]},{"parents":[84],"numChildren":1,"agent":118,"time":"1970-01-01T00:00:00Z","patches":[[1023,0,"#define ARRAY_SIZE(a) (sizeof(a) / sizeof(*(a)))\n\n"],[2541,0," and other misc callers"],[2575,0,"\n//"],[2606,3,""],[2673,0,"PATH_MAX + "],[2685,3,""],[23419,1,""],[23420,24,""],[23440,2,""],[23440,0,"ge"],[23443,1,""],[23443,0,"b"],[23445,1,""],[23445,0,"f"],[23448,1,""],[23449,2,""],[23449,0,"RRAY"],[23454,3,""],[23454,0,"SIZE(getbuf"],[23466,0," - 1)"],[23571,0,"\n"],[23574,0,"getbuf[ARRAY_SIZE(getbuf) - 1] = '\\0';\n  "],[23647,6,""],[23647,0,"r"],[24899,6,""],[24899,0,"ARRAY_SIZE"],[25785,6,""],[25785,0,"ARRAY_SIZE"],[29671,0,"dlclose(handle);\n    "],[29930,0,"// Tell coverity that 'handle' should not be freed when we return.\n  // coverity[leaked_storage]\n  "],[43449,0,"// coverity[stack_use_callee]\n  "]],"_dtSpan":[122570,122955]},{"parents":[85],"numChildren":1,"agent":115,"time":"1970-01-01T00:00:00Z","patches":[[29501,0,"String::Utf8Value symbol(args[0]->ToString());\n  char *symstr = NULL;\n  {\n    char *sym = *symbol;\n    char *p = strrchr(sym, '"],[29629,0,"');\n    if (p != NULL) {\n      sym = p+1;\n    }\n\n    p = strrchr(sym, '.');\n    if (p != NULL) {\n      *p = NULL;\n    }\n\n    size_t slen = strlen(sym);\n    symstr = static_cast<char*>(calloc(1, slen + sizeof(\"_module\") + 1));\n    memcpy(symstr, sym, slen);\n    memcpy(symstr+slen, \"_module\", sizeof(\"_module\") + 1);\n  }\n\n  /"],[30017,1,""],[30017,0,"node_m"],[30024,1,""],[30025,0,"ule_struct"],[30037,3,""],[30037,0,"mod = s"],[30045,0,"atic"],[30050,1,""],[30050,0,"c"],[30052,0,"st<"],[30056,0,"ode_mo"],[30063,0,"u"],[30066,2,""],[30066,0,"_struct"],[30074,0,"*>("],[30091,4,""],[30091,0,"syms"],[30096,1,""],[30096,0,"r)"],[30103,0,"free(symstr);\n  "],[30152,0,"mod == NULL) {\n    /* Start Compatibility hack: Remove once everyone is using NODE_MODULE macro */\n    node_module_struct compat_mod;\n    mod = &compat_mod;\n    mod->version = NODE_MODULE_VERSION;\n\n    void *init_handle = dlsym(handle, \"init\");\n    if ("],[30432,0,"  "],[30455,0,"  "],[30488,0,"  "],[30523,6,""],[30523,0,"module"],[30562,0,"  "],[30600,0,"  "],[30606,0,"  mod->r"],[30615,4,""],[30615,0,"g"],[30617,0,"s"],[30619,2,""],[30619,0,"er_fu"],[30625,2,""],[30625,0,"c"],[30652,0,"\n   "],[30658,0,"* End Compatibility hack *"],[30685,0,"\n  }\n\n  if (mod->version != NODE_MODULE_VERSION) {\n    Local<Value> exception =\n    "],[30770,1,""],[30770,0," Exception::Error(String::New(\"Module version mism"],[30821,0,"tch, refu"],[30831,0,"ing "],[30836,0,"o load.\"));"],[30848,0,"    return ThrowException(exception);\n  }\n"],[30921,2,""],[30921,0,"mod->reg"],[30930,0,"s"],[30932,0,"er_func"],[35496,0,"  node_module_struct* modp;\n"],[35651,2,""],[35651,0,"if"],[35654,0,"(binding_cache->Has(module)) {\n    exports = binding_cache->Get(module)->"],[35728,0,"o"],[35730,1,""],[35730,0,"bject();\n  }\n  else if ((modp = get_builtin_module(*module_v)) != NULL) {\n    exports = "],[35819,0,"bject::New();\n  "],[35836,3,""],[35837,3,""],[35837,0,"modp->register_func(exports);\n    binding_cache->"],[35887,0,"et(module,"],[35898,3,""],[35898,0,"exports);"],[35908,0,"  }"],[35914,0,"else "],[37263,124,""],[37264,113,""],[37265,17,""],[38081,194,""],[38082,5,""],[38083,5,""],[38084,77,""],[38141,9,""],[35958,40,""],[35968,30,""],[35974,39,""],[35983,2,""],[36015,2,""],[36055,6,""],[36101,1,""],[36104,2,""],[36105,13,""],[36106,93,""],[36134,2,""],[36162,2,""],[36203,5,""],[36204,1,""],[36240,84,""],[36241,11,""],[36242,7,""],[36243,5,""],[36245,1,""],[36249,1,""],[36275,1,""],[36279,1,""],[36310,2,""],[36376,2,""],[36460,2,""],[36501,2,""],[36566,2,""],[36600,1,""],[36604,1,""],[36631,1,""],[36635,1,""],[36671,6,""],[36672,1,""],[36729,16,""],[36730,24,""],[36739,30,""],[36745,39,""],[36754,1,""],[36758,1,""],[36794,1,""],[36798,1,""],[36835,2,""],[36838,2,""],[36839,3,""],[36880,38,""],[36885,1,""],[36889,1,""],[36899,30,""],[36905,39,""],[36914,1,""],[36918,1,""],[36943,1,""],[36947,1,""],[36983,6,""],[36984,1,""],[37040,28,""],[37041,12,""],[37050,30,""],[37056,39,""],[37065,1,""],[37069,1,""],[37104,1,""],[37108,1,""],[37145,2,""],[37148,2,""],[37149,3,""],[37185,84,""],[37186,11,""],[37187,4,""],[37188,8,""],[37190,1,""],[37194,1,""],[37219,2,""],[37252,2,""],[37295,2,""],[37296,2,""],[37297,2,""],[37340,3,""],[37341,106,""],[37370,2,""],[37406,2,""],[37449,2,""],[37485,7,""],[37527,38,""],[37529,59,""],[37530,10,""],[37532,2,""],[37561,2,""],[37606,2,""],[37633,2,""],[37712,2,""],[37783,1,""],[37787,1,""],[37865,1,""],[37869,1,""],[37939,1,""],[37943,1,""],[38011,1,""],[38015,1,""],[38086,2,""],[38159,2,""],[38240,2,""],[38307,2,""],[38384,2,""],[38455,1,""],[38459,1,""],[38527,1,""],[38531,1,""],[38601,1,""],[38605,1,""],[38681,1,""],[38685,1,""],[38754,2,""],[38831,2,""],[38907,2,""],[38975,2,""],[39051,2,""],[39121,1,""],[39125,1,""],[39194,1,""],[39198,1,""],[39269,1,""],[39273,1,""],[39354,1,""],[39358,1,""],[39394,7,""],[35911,149,""],[35941,147,""],[36409,621,""],[1323,415,""],[1325,1,""],[1326,18,""],[1361,79,""],[16818,880,""],[16819,16,""],[16820,2,""],[16821,783,""],[16822,255,""],[33405,19,""],[33406,5,""],[33407,444,""],[33492,193,""]],"_dtSpan":[122955,130043]},{"parents":[86],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[41852,0,"NODE_MODULE_CONTEXTS Set to 1 to load modules in their own\\n\"\n         \"                     global contexts.\\n\"\n         \""],[43532,0," "],[43536,1,""],[43536,0,"ined("],[43546,0,")"],[43722,0,"if defined(__APPLE_CC__) && __APPLE_CC__ >= 5659\n  ev_default_loop(EVBACKEND_KQUEUE);\n#el"],[17159,2,""]],"_dtSpan":[130043,130265]},{"parents":[87],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[13814,0,"ase64\") == 0) {\n    return BASE64;\n  } else if (strcasecmp(*encoding, \"b"]],"_dtSpan":[130265,130337]},{"parents":[88],"numChildren":1,"agent":34,"time":"1970-01-01T00:00:00Z","patches":[[31267,51,""],[31705,31,""],[31764,3,""],[31764,0,"voi"],[31768,9,""],[31769,2,""],[31769,0,"D"],[31771,2,""],[31771,0,"bug"],[31779,4,""],[31779,0,"Me"],[31782,10,""],[31783,2,""],[31784,1,""],[31785,7,""],[31785,0,"e"],[31792,1,""],[31792,0,"r("],[31796,2,""],[31796,0,"nst"],[31800,0,"Debug::Me"],[31810,3,""],[31810,0,"sag"],[31814,2,""],[31814,0,"&"],[31816,2,""],[31816,0,"me"],[31820,4,""],[31821,1,""],[31822,3,""],[31823,5,""],[31825,7,""],[31825,0,"{"],[31831,11,""],[31832,4,""],[31832,0,"do"],[31835,2,""],[31836,1,""],[31836,0,"o"],[31838,0,"h"],[31840,1,""],[31841,13,""],[31841,0,"g"],[31844,1,""],[31846,9,""],[31846,0,"h"],[31848,6,""],[31849,8,""],[31850,3,""],[31850,0,"bug"],[31854,6,""],[31855,11,""],[31856,1,""],[31857,3,""],[31858,7,""],[31859,3,""],[31860,9,""],[31861,26,""],[31861,0,"s."],[31869,0,"The "],[31874,2,""],[31876,7,""],[31878,2,""],[31878,0,"g"],[31882,21,""],[31883,9,""],[31885,5,""],[31886,3,""],[31887,26,""],[31887,0,"r"],[31889,3,""],[31889,0,"w"],[31892,3,""],[31893,4,""],[31894,22,""],[31895,20,""],[31897,76,""],[31898,1,""],[31899,9,""],[31901,6,""],[31902,40,""],[31904,9,""],[31905,5,""],[31906,17,""],[31906,0,"by"],[31909,11,""],[31909,0,"D"],[31917,3,""],[31917,0,"A"],[31919,2,""],[31921,19,""],[31921,0,"t"],[31924,6,""],[31924,0,"C"],[31928,22,""],[31928,0,"t"],[31930,8,""],[31930,0,"S"],[31933,4,""],[31934,25,""],[31934,0,"io"],[31937,1,""],[31937,0," "],[31940,11,""],[31941,2,""],[31943,2,""],[31945,34,""],[31946,7,""],[31951,0,"-a"],[31955,9,""],[31957,1,""],[31957,0,"."],[31959,11,""],[31960,5,""],[31961,0,"of"],[31964,5,""],[31964,0,"v8/src"],[31973,2,""],[31974,3,""],[31975,1,""],[31976,9,""],[31976,0,"a"],[31978,22,""],[31979,8,""],[31980,6,""],[31980,0,"w"],[31982,4,""],[31983,6,""],[31984,2,""],[31985,25,""],[31986,6,""],[31987,0,"o"],[31989,9,""],[31990,22,""],[31991,8,""],[31992,10,""],[31993,14,""],[31994,30,""],[31997,20,""],[31999,27,""],[32000,3,""],[37610,52,""],[37611,2,""],[42391,1,""],[42391,0,"int v"],[42397,0,"argc = node"],[42410,1,""],[42410,0,"option_end_ind"],[42425,0,"x;\n  char **v8argv = argv;\n\n  if (node::debug_wait_connec"],[42483,1,""],[42483,0,") {\n    // v8argv is a copy of argv up to the script fi"],[42539,0,"e "],[42542,0,"rgument +2 if --debu"],[42563,0,"-brk\n    // to expo"],[42583,1,""],[42583,0,"e the v8 debugge"],[42600,0," js "],[42605,0,"bject so that "],[42620,1,""],[42621,0,"dule.js can set\n    // a breakpoint on the first line of the startup script\n    v8argc += 2;\n    v8argv = new char*[v8argc];\n    "],[42751,0,"e"],[42753,0,"cpy(v8argv, "],[42766,0,"rgv, sizeof(argv) * node::option_end_i"],[42806,1,""],[42806,0,"ex);\n    v8argv[node::opt"],[42832,0,"o"],[42834,0,"_"],[42836,0,"nd_index] = const_cast<char*>"],[42866,1,""],[42866,0,"\"--expose_debug_as\");\n    v8argv["],[42921,0," + 1] = const_cast<char*>(\"v8debug\");\n  }\n  V8::SetFlagsFromCommandLine(&v8argc"],[43002,0,"v8"],[45792,0,"    if (node::debug_wait_connect) {\n      // Set up an empty handler so v8 will not continue until a debugger\n      // attaches. This is the same behavior as Debug::EnableAgent(_,_,true)\n      // except we don't break at the beginning of the script.\n      // see Debugger::StartAgent in debug.cc of v8/src\n      Debug::SetMessageHandler2(node::DebugBreakMessageHandler);\n    }\n"]],"_dtSpan":[130337,132408]},{"parents":[89],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[39168,0,"process->Set(String::NewSymbol(\"_debugWaitConnect\"),\n               node::debug_wait_connect ? True() : False());\n\n  "],[42568,1,""],[42569,33,""],[42572,2,""],[42633,15,""],[42636,2,""],[42701,1,""],[42703,1,""],[42759,2,""],[42776,2,""],[42804,1,""],[42806,1,""],[42867,2,""],[42944,2,""],[43011,3,""],[39168,117,""],[42455,0,"if (node::debug_wait_connect) {\n    "],[42552,0," if --debug-brk"],[42570,0,"  "],[42639,0,"  "],[42699,0,"  "],[42716,0,"  "],[42748,0,"  "],[42813,0,"  "],[42890,0,"  "],[42959,0,"  }"],[18141,3,""],[18141,0,"src"],[18145,1,""],[18145,0,"n"],[18148,2,""],[34347,75,""],[42542,1,""],[42542,0,"n"],[42545,2,""],[34577,0,"Handle<Value> ProcessTitleGetter(Local<String> property,\n                                        const AccessorInfo& info) {\n  HandleScope scope;\n  int len;\n  const char *s = OS::GetProcessTitle(&len);\n  return scope.Close(s ? String::New(s, len) : String::Empty());\n}\n\n\nstatic void ProcessTitleSetter(Local<String> property,\n                               Local<Value> value,\n                               const AccessorInfo& info) {\n  HandleScope scope;\n  String::Utf8Value title("],[35061,0,"alue->T"],[35069,0,"Str"],[35073,0,"ng());\n  OS::SetProcessTitle(*title);\n}\n\n\nstatic voi"],[35389,0,"\n  process->SetAccessor(String::New(\"title\"),\n                       ProcessTitleGetter,\n                       ProcessTitleSetter);\n\n\n"],[42805,0,"Hack aroung with the argv pointer. Used for process.title = \"blah\".\n  argv = node::OS::SetupArgs(argc, argv);\n\n  // "],[35776,0,"\n"],[35885,0,"Local<Object> versions = Object::New();\n  char buf[20];\n  process->Set(String::NewSymbol(\"versions\"), versions);\n  // +1 to get rid of the leading 'v'\n  versions->Set(String::NewSymbol(\"node\"), String::New(NODE_VERSION+1));\n  versions->Set(String::NewSymbol(\"v8\"), String::New(V8::GetVersion()));\n  versions->Set(String::NewSymbol(\"ares\"), String::New(ARES_VERSION_STR));\n  snprintf(buf, 20, \"%d.%d\", ev_version_major(), ev_version_minor());\n  versions->Set(String::NewSymbol(\"ev\"), String::New(buf));\n\n\n\n  "],[27356,4,""],[27356,0,"'\\0'"],[36412,7,""],[36413,7,""],[36414,27,""],[36470,5,""],[36478,1,""],[1751,0,"check check_tick_watcher;\nstatic ev_"],[1795,1,""],[1795,0,"prepar"],[1802,2,""],[4321,0,"// TODO: this tick_spinner shouldn't be necessary. An ev_prepare should be\n  // sufficent, the problem is only in the case of the very last \"tick\" -\n  // there is nothing left to do in the event loop and libev will exit. The\n  // ev_prepare callback isn't called before exiting. Thus we start this\n  // tick_spinner to keep the event loop alive long enough to handle it.\n  "],[4908,7,""],[4909,19,""],[4909,0,"o"],[4911,10,""],[4911,0,"d"],[4916,1,""],[4917,14,""],[4918,60,""],[5512,0,"PrepareTick(EV_P_ ev_prepare *watcher, int revents) {\n  assert(watcher == &prepare_tick_watcher);\n  assert(revents == EV_PREPARE);\n  Tick();\n}\n\n\nstatic void CheckTick(EV_P_ ev_check *watcher, int revents) {\n  assert(watcher == &check_tick_watcher);\n  assert(revents == EV_CHECK);\n  Tick();\n}\n\n\nstatic void "],[45324,1,""],[45324,0,"prepar"],[45331,2,""],[45352,0,"Prepare"],[45407,0,"prepare_tick_watcher);\n  ev_u"],[45437,0,"ref(EV_DEFAULT_UC);\n\n  ev_ch"],[45466,1,""],[45466,0,"ck_ini"],[45473,0,"(&node::check_tick_watcher, node::CheckTick);\n  ev_check_start(EV_DEFAULT_UC_ &node::check"]],"_dtSpan":[132408,135233]},{"parents":[90],"numChildren":1,"agent":115,"time":"1970-01-01T00:00:00Z","patches":[[45180,0,"M"],[45182,3,""],[45182,0,"C_OS_X_V"],[45191,0,"RSION"],[45197,3,""],[45197,0,"MIN"],[45201,0,"REQUIRED"],[45216,0,"M"],[45218,3,""],[45218,0,"C_OS_X_V"],[45227,0,"RSION"],[45233,3,""],[45233,0,"MIN"],[45237,0,"REQUIRED"],[45249,1,""],[45249,0,"10"],[45252,2,""],[45252,0,"0"]],"_dtSpan":[135233,135301]},{"parents":[91],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[26138,4,""],[26145,4,""],[26163,4,""],[26224,1,""],[26224,0,"!="],[26227,1,""],[26227,0,"2"],[26252,0," || !args[1]->IsNumber()"],[26398,1,""],[26406,17,""],[26407,11,""],[26408,4,""],[26409,1,""],[26410,8,""],[26411,5,""],[26421,35,""],[26434,1,""],[26435,8,""],[26437,18,""],[26438,20,""],[26439,5,""],[26440,23,""],[26441,32,""],[26443,28,""],[26444,89,""],[26445,80,""],[26475,6,""],[26498,0,"rrnoE"],[26511,28,""],[26517,0,", \"kill\""],[26527,2,""],[26529,4,""],[26555,0,"\n"],[32650,0,"\n"],[32654,2,""],[32818,0,"\n"],[32852,0,"co"],[32855,0,"st"],[32858,0,"n"],[32860,0,"s\")) {\n    exports = Object::New();\n    DefineConstants(exports);\n    binding_cache->Set(module, exports);\n\n  } else if (!strcmp(*module_v, \"nat"],[34813,0,"\n"],[38968,0,"_"],[39585,63,""],[33377,0,"constants\"),    String::New(native_constants));\n    exports->Set(String::New(\""],[35961,1,""],[35965,101,""],[35973,57,""],[40449,0,"// Add a reference to the global object\n  Local<Object> global = v8::Context::GetCurrent()->Global();\n  "],[20749,52,""],[20750,10,""],[20752,13,""],[20755,17,""],[20756,44,""],[20757,1,""],[20762,11,""],[20763,249,""],[37832,46,""],[32604,0,"io_watcher\")) {\n    exports = Object::New();\n    IOWatcher::Initialize(exports);\n    binding_cache->Set(module, exports);\n\n  } else if (!strcmp(*module_v, \"timer\")) {\n    exports = Object::New();\n    Timer::I"],[32813,0,"iti"],[32817,0,"lize(expor"],[32828,0,"s);\n    b"],[32838,0,"nding_cache->Set(module, exports);\n\n  } else if (!strcmp(*module_"],[32904,0,", \"nativ"],[39040,324,""],[20095,208,""],[20096,55,""],[20097,42,""],[20098,30,""],[37851,55,""],[42670,23,""],[42674,1,""],[42674,0,"St"],[42677,2,""],[42677,0,"rt"],[47571,0,"\n\n}  // namespace node\n"]],"_dtSpan":[135301,137854]},{"parents":[92],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[13980,0,"Handle<Value> FromConstructorTemplate(Persistent<FunctionTemplate>& t,\n                                      const Arguments& args) {\n  HandleScope scope;\n\n  const int argc = args.Length();\n  Local<Value> argv[argc];\n\n  for (int i = 0; i < argc; ++i) {\n    argv[i] = args[i];\n  }\n\n  Local<Object> instance = t->GetFunction()->NewInstance(argc, argv);\n  return scope.Close(instance);\n}\n\n\n"]],"_dtSpan":[137854,138241]},{"parents":[93],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[19989,0," else {\n    // this really only happens for RangeErrors, since they're the only\n    // kind that won't have all this info in the trace.\n    Local<Value> er = try_catch.Exception();\n    String::Utf8Value msg(!er->IsObject() ? er->ToString()\n                         : er->ToObject()->Get(String::New(\"message\"))->ToString());\n    fprintf(stderr, \"%s\\n\", *msg);\n  }\n"]],"_dtSpan":[138241,138605]},{"parents":[94],"numChildren":1,"agent":156,"time":"1970-01-01T00:00:00Z","patches":[[1602,0,"\n"],[1610,0,"char *eval_str"],[1626,0,"g = NULL;\ns"],[1638,0,"atic"],[1643,0,"int "],[38197,0,"// -e, --eval\n  if (eval_string) {\n    process->Set(String::NewSymbol(\"_eval\"), String::New(eval_string));\n  }\n\n  "],[43319,0,"eval\") == 0 || strcmp(arg, \"-e\") == 0) {\n      if (*argc <= i + 1) {\n        fprintf(stderr, \"Error: --eval requires an argument\\n\");\n        exit(1);\n      }\n      argv[i] = const_cast<char*>(\"\");\n      eval_string = argv[++i];\n    } else if (strcmp(arg, \"--"]],"_dtSpan":[138605,139012]},{"parents":[95],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[42503,0,"NODE_DISABLE_COLORS  Set to 1 to disable colors in the REPL\\n\"\n         \""],[14218,0,"*"],[14224,0," = new Local<Value>"],[14385,0,"\n  delete[] argv;\n\n"],[35238,0,"exports->Set(String::New(\"stream\"),       String::New(native_stream));\n    "],[34888,72,""]],"_dtSpan":[139012,139271]},{"parents":[96],"numChildren":1,"agent":124,"time":"1970-01-01T00:00:00Z","patches":[[1094,0,"# ifdef __APPLE__\n# include <crt_"],[1133,0,"s.h>\n# define"],[1147,0,"environ (*_NSGetEnviron())\n# else\nextern "],[1204,0,"# endif\n"]],"_dtSpan":[139271,139366]},{"parents":[97],"numChildren":1,"agent":104,"time":"1970-01-01T00:00:00Z","patches":[[35059,1,""],[35070,0,"  "],[35095,1,""],[34167,50,""],[34168,5,""],[34169,11,""],[34170,7,""],[34500,74,""]],"_dtSpan":[139366,139517]},{"parents":[98],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[885,1,""],[885,0,"j"],[887,2,""],[888,1,""],[888,0,"a"],[890,0,"cript"],[33535,41,""],[33540,5,""],[33541,89,""],[33542,39,""],[33543,15,""],[33545,4,""],[33546,536,""],[33546,0,"J"],[33548,2,""],[33549,67,""],[33550,30,""],[33551,12,""],[33552,612,""],[33553,12,""],[33554,3,""],[33555,1,""],[33556,33,""],[33557,60,""],[33563,20,""],[33564,6,""],[33565,35,""],[33608,0,"\n"],[38214,1,""],[38214,0,"M"],[38216,1,""],[38217,3,""],[38218,0,"S"],[38220,1,""],[38220,0,"urc"],[38224,0,"()"]],"_dtSpan":[139517,141165]},{"parents":[99],"numChildren":1,"agent":167,"time":"1970-01-01T00:00:00Z","patches":[[42275,0,"static void SignalExit(int signal) {\n  ev_unloop(EV_DEFAULT_ EVUNLOOP_ALL);\n}\n\n\nstatic int RegisterSignalHandler(int signal, void (*handler)(int)) {\n  struct sigaction sa;\n\n  memset(&sa, 0, sizeof(sa));\n  sa.sa_handler = handler;\n  sigfillset(&sa.sa_mask);\n  return sigaction(signal, &sa, NULL);\n}\n\n\n"],[43569,0,"Regi"],[43575,0,"e"],[43577,5,""],[43577,0,"S"],[43580,5,""],[43581,2,""],[43582,6,""],[43582,0,"lHandl"],[43590,1,""],[43591,3,""],[43591,0,"SIGPIPE"],[43600,10,""],[43600,0,"SIG_IGN"],[43612,0,"Regi"],[43617,3,""],[43617,0,"terSign"],[43625,2,""],[43625,0,"lH"],[43633,3,""],[43633,0,"("],[43637,1,""],[43638,1,""],[43639,0,"T, SignalExit)"],[43657,0,"Regi"],[43662,0,"terS"],[43668,0,"nalH"],[43673,4,""],[43674,0,"dler"],[43682,3,""],[43682,0,"T"],[43684,0,"RM"],[43688,2,""],[43688,0,"Sign"],[43693,6,""],[43693,0,"lExit"],[1872,0,"static int max_stack_size = 0;\n"],[40027,0,"  "],[40084,0,"  "],[40163,0,"  "],[40230,0,"  "],[40303,0,"  "],[40375,0,"  "],[40441,0,"  "],[40492,0,"  --max-stack-size=val set max v8 stack size (bytes)\\n\"\n         \""],[40630,0,"  "],[40700,0,"  "],[40772,0,"  "],[40823,0,"  "],[40894,0,"  "],[40968,0,"  "],[41772,0,"str(arg, \"--max-stack-size=\") == arg) {\n      const char *p = 0;\n      p = 1 + str"],[41855,0,"hr(arg, '=');\n      "],[41876,0,"ax_stack_size = atoi(p);\n      argv[i] = const_cast<char*>(\"\");\n    } else if (strcm"],[43800,0,"\n  // For the normal stack which moves from high to low addresses when frames\n  // are pushed, we can compute the limit as stack_size bytes below the\n  // the address of a stack variable (e.g. &stack_var) as an approximation\n  // of the start of the stack (we're assuming that we haven't pushed a lot\n  // of frames yet).\n  if (node::max_stack_size != 0) {\n    uint32_t stack_var;\n    ResourceConstraints constraints;\n\n    uint32_t *stack_limit = &stack_var - (node::max_stack_size / sizeof(uint32_t));\n    constraints.set_stack_limit(stack_limit);\n    SetResourceConstraints(&constraints); // Must be done before V8::Initialize\n  }\n"]],"_dtSpan":[141165,142546]},{"parents":[100],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[42623,0,"AtExit();\n  "],[42636,8,""],[42636,0,"xit"],[42640,24,""],[42640,0,"1"],[42623,12,""]],"_dtSpan":[142546,142606]},{"parents":[101],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[34320,0,"Handle<Value> EnvGetter(Local<String> property,\n                               const AccessorInfo& info) {\n  String::Utf8Value key(property);\n  const char* val = getenv(*key);\n  if (val) {\n    HandleScope scope;\n    return scope.Close(String::New(val));\n  }\n  return Undefined();\n}\n\n\nstatic Handle<Value> EnvSetter(Local<String> property,\n                               Local<Value> value,\n                               const AccessorInfo& info) {\n  String::Utf8Value key(property);\n  String::Utf8Value val(value);\n  setenv(*key, *val, 1);\n  return value;\n}\n\n\nstatic Handle<Integer> EnvQuery(Local<String> property,\n                                const AccessorInfo& info) {\n  String::Utf8Value key(property);\n  if (getenv(*key)) {\n    HandleScope scope;\n    return scope.Close(Integer::New(None));\n  }\n  return Handle<Integer>();\n}\n\n\nstatic Handle<Boolean> EnvDeleter(Local<String> property,\n                                  const AccessorInfo& info) {\n  String::Utf8Value key(property);\n  if (getenv(*key)) {\n    unsetenv(*key);\t// prototyped as `"],[35377,0,"unsetenv(const char*)` on some platforms\n    return True();\n  }\n  return False();\n}\n\n\nstatic Handle<Array> EnvEnumerator(const AccessorInfo& info) {\n  HandleScope scope;\n\n  int size = 0;\n  while (environ[size]) size++;\n\n  "],[35601,0,"cal<Array> env = Array::New(size);\n\n  for (int i = 0; i < size; ++i) {\n    const char* var = environ[i];\n    const ch"],[35719,0,"r* s = strchr(var, '=');\n    const int length = s ? s - var : strlen(var);\n    env->Set(i, String::New(var, length));\n  }\n\n  return scope.Close(env);\n}\n\n\nstatic void Loa"],[37549,0,"Template"],[37562,0,"Template"],[37579,0,"Template"],[37596,5,""],[37597,4,""],[37598,3,""],[37601,26,""],[37601,0,"Tem"],[37605,3,""],[37605,0,"la"],[37608,2,""],[37609,8,""],[37609,0,"->Se"],[37614,1,""],[37614,0,"N"],[37616,12,""],[37616,0,"m"],[37618,0,"dP"],[37621,6,""],[37622,10,""],[37622,0,"p"],[37624,3,""],[37625,1,""],[37625,0,"tyHa"],[37630,10,""],[37630,0,"dl"],[37633,3,""],[37634,1,""],[37634,0,"(E"],[37637,35,""],[37637,0,"vG"],[37640,1,""],[37641,2,""],[37642,1,""],[37643,0,"r,"],[37646,0,"En"],[37649,5,""],[37649,0,"S"],[37651,1,""],[37652,13,""],[37653,8,""],[37654,2,""],[37654,0,"r,"],[37657,6,""],[37657,0,"E"],[37659,7,""],[37659,0,"vQu"],[37663,3,""],[37664,5,""],[37664,0,"y"],[37666,7,""],[37667,11,""],[37667,0,"E"],[37669,3,""],[37670,1,""],[37670,0,"De"],[37673,1,""],[37674,10,""],[37675,0,"e"],[37677,8,""],[37677,0,","],[37679,8,""],[37679,0,"E"],[37682,3,""],[37682,0,"E"],[37684,26,""],[37685,0,"m"],[37687,4,""],[37687,0,"ra"],[37690,0,"o"],[37692,0,", Undef"],[37701,4,""],[37702,1,""],[37702,0,"d"],[37704,14,""],[37705,0,")"],[37708,5,""],[37709,1,""],[37711,1,""],[37721,2,""],[37721,0,"proc"],[37726,1,""],[37726,0,"ss.ENV"],[37735,0,"Local<Object> env"],[37753,0,"="],[37758,3,""],[37758,0,"T"],[37760,5,""],[37760,0,"mp"],[37763,4,""],[37764,2,""],[37764,0,"te->N"],[37770,14,""],[37770,0,"wIn"],[37774,2,""],[37774,0,"ta"],[37777,4,""],[37779,6,""],[37779,0,"();"]],"_dtSpan":[142606,144628]},{"parents":[102],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[21070,319,""],[38092,26,""],[38093,16,""],[49300,0,"  // TODO Probably don't need to start this each time.\n  // Avoids failing on test/simple/test-eio-race3.js though\n  ev_idle_start(EV_DEFAULT_UC_ &eio_poller);\n\n  // All our arguments are loaded. We've evaluated all of the scripts. We\n  // might even have created TCP servers. Now we enter the main eventloop. If\n  // there are no watchers on the loop (except for the ones that were\n  // ev_unref'd) then this function exits. As long as there are active\n  // watchers, it blocks.\n  ev_loop(EV_DEFAULT_UC_ 0);\n\n\n  // process.emit('exit')\n  Local<Value> emit_v = process->Get(String::New(\"emit\"));\n  assert(emit_v->IsFunction());\n  Local<Function> emit = Local<Function>::Cast(emit_v);\n  Local<Value> args[] = { String::New(\"exit\") };\n  TryCatch try_catch;\n  emit->Call(process, 1, args);\n  if (try_catch.HasCaught()) {\n    FatalException(try_catch);\n  }\n\n\n"],[38047,0,", size"],[1987,29,""],[4446,134,""],[4448,5,""],[4449,220,""],[4450,59,""],[4451,2,""],[4467,26,""],[4469,7,""],[4470,3,""],[4471,72,""],[4472,18,""],[4590,45,""],[4591,1,""],[45691,50,""],[48796,0,"\n  do {\n  "],[48882,0,"  "],[48962,0,"  "],[49034,0,"  "],[49107,0,"  "],[49135,0,"  "],[49165,0,"    Tick();\n\n  } while (need_tick_cb || ev_activecnt(EV_DEFAULT_UC) > 0);\n\n"],[49180,0,"  IOWatcher::Dump();\n\n  "],[49180,24,""],[28185,0,"// TODO remove me before 0.4\n"],[28283,0,"\n"],[28415,0,"static bool shown_error_message = false;\n\n  if (!shown_error_message) {\n    shown_error_message = true;\n    fprintf(stderr, \"(node) process.compile should not be used. \"\n                    \"Use require('vm').runInThisContext instead.\\n\");\n  }\n\n  "]],"_dtSpan":[144628,146941]},{"parents":[103],"numChildren":1,"agent":167,"time":"1970-01-01T00:00:00Z","patches":[[36406,0,"\""],[36415,0,"\""]],"_dtSpan":[146941,146943]},{"parents":[104],"numChildren":2,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[17467,40,""],[17468,13,""],[17468,0,"v"],[17470,4,""],[17471,8,""],[17471,0,"d"],[17473,7,""],[17473,0,"D"],[17475,63,""],[17476,7,""],[17476,0,"p"],[17478,11,""],[17479,15,""],[17479,0,"y"],[17489,0,"Line "],[17514,1,""],[17514,0,") {\n"],[17519,3,""],[17519,0," Hand"],[17525,0,"eScope"],[17533,1,""],[17533,0,"c"],[17535,5,""],[17535,0,"p"],[17537,3,""],[17537,0,";\n"],[17667,13,""],[17839,10,""],[17839,0,"*"],[17848,1,""],[18082,10,""],[18082,0,"*"],[18093,1,""],[19264,0,"}\n\n\nstatic void ReportException(TryCatch &try_catch, bool show_line) {\n  HandleScope scope;\n  Handle<Message> message = try_catch.Message();\n\n  if (show_line) DisplayExceptionLine(try_catch);\n"],[43279,0,"Stdio::DisableRawMode(STDIN_FILENO);\n  _"],[45481,2,""],[45481,0,"pol"],[45485,3,""],[45487,14,""],[33955,0,"bool ENV_warning = false;\nstatic Handle<Value> EnvGetterWarn(Local<String> property,\n                                   const AccessorInfo& info) {\n  if (!ENV_warning) {\n    ENV_warning = true;\n    fprintf(stderr, \"(node) Use process.env instead of process.ENV\\r\\n\");\n  }\n  return EnvGetter(property, info);\n}\n\n\nstatic "],[37310,0,"\n                                      "],[37360,0,"\n                                      "],[37409,0,"\n                                      "],[37460,0,"\n                                      "],[37514,0,"\n                                      "],[37567,25,""],[37652,0,"env\"), env);\n\n  // create process.ENV\n  // TODO: remove me at some point.\n  Local<ObjectTemplate> "],[37753,1,""],[37753,0,"Template = ObjectTemplate::New("],[37785,0,";\n  ENVTemplate->SetNamedPropertyHandler(EnvGetterWarn,\n                                       EnvSetter,\n                                       EnvQuery"],[37939,0,"\n                                    "],[37977,0,"  EnvDel"],[37986,0,"ter,\n                                       E"],[38033,0,"Enumerator,\n                                       Undefined());\n  Local<Object> ENV = ENVTemplate->NewInstance("],[38182,3,""],[38182,0,"ENV"],[38189,3,""],[38189,0,"ENV"],[1987,0,"ev_idle tick_spinner;\nstatic "],[4484,0,"// TODO: this tick_spinner shouldn't be necessary. An ev_prepare should be\n  // sufficent, the problem is only in the case of the very last \"tick\" -\n  // there is nothing left to do in the event loop and libev will exit. The\n  // ev_prepare callback isn't called before exiting. Thus we start this\n  // tick_spinner to keep the event loop alive long enough to handle it.\n  ev_idle_start(EV_DEFAULT_UC_ &tick_spinner);\n  "],[4940,0,"Spin(EV_P_ ev_idle *watcher, int revents) {\n  assert(watcher == &tick_spinner);\n  assert(revents == EV_IDLE);\n}\n\n\nstatic void "],[5165,0,"  ev_idle_stop(EV_DEFAULT_UC_ &tick_spinner);\n"],[47603,0,"idle_init(&node::tick_spinner, node::Spin);\n\n  ev_"],[50749,9,""],[50751,1,""],[50823,2,""],[50903,2,""],[50971,1,""],[50973,1,""],[51042,2,""],[51070,2,""],[51092,75,""]],"_dtSpan":[146943,149246]},{"parents":[105],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[272,3,""],[272,0,"sys/types.h>\n#in"],[289,0,"lude <u"],[297,0,"istd"],[308,4,""],[308,0,"s"],[310,3,""],[310,0,"tuid"],[316,0,"getui"],[322,6,""],[326,0,"\n"],[336,5,""],[336,0,"\"pla"],[341,4,""],[341,0,"form"],[347,1,""],[347,0,"\"\n"],[352,0,"fdef __MINGW32__\n# i"],[379,2,""],[379,0,"\"platform_win32.h\" /* wi"],[404,0,"ap"],[407,0,"_perror() */\n#el"],[424,1,""],[424,0,"e // __POSIX__\n# inclu"],[447,0,"e <dlfcn"],[462,5,""],[463,0,"lopen()"],[472,5,""],[473,0,"lsym()"],[484,0," "],[519,0," "],[552,1,""],[554,1,""],[554,0,"e"],[556,3,""],[557,7,""],[557,0,"i"],[559,6,""],[2290,0,"#ifdef __MINGW32__\nWSAData winsockData;\n#endif\n\n"],[47053,0,"#ifdef __MINGW32__\n  // On windows, to use winsock it must be initialized\n  WORD winsockVersion = MAKEWORD(2, 2);\n  if (WSAStartup(winsockVersion, &winsockData)) {\n    winapi_perror(\"WSAStartup\");\n  }\n#endif // __MINGW32__\n"],[12194,0,"\n#ifdef SIGCHLD\n"],[12233,0,"#endif\n"],[21990,0,"\n#ifdef __POSIX__\n\n"],[24533,0,"#endif // __POSIX__\n\n"],[26257,0,"#ifdef __POSIX__\n"],[29040,0,"#endif // __POSIX__\n\n"],[35369,0,"#ifdef __POSIX__\n"],[35411,0,"#else  // __WIN32__\n  NO_IMPL_MSG(setenv)\n#endif\n"],[35933,0,"#ifdef __POSIX__\n"],[36034,0,"#else\n    NO_IMPL_MSG(unsetenv)\n#endif\n"],[39976,0,"\n#ifdef"],[39984,0,"__POSIX__\n "],[40313,0,"#endif // __POSIX__\n\n"],[45334,0,"#ifdef __POSIX__"],[45569,0,"#endif // __POSIX__\n"],[47196,0,"#ifdef __POSIX__\n"],[47367,0,"#endif // __POSIX__\n"],[26257,0,"\n"],[45335,0,"\n"],[379,1,""],[379,0,"<"],[396,1,""],[396,0,">"],[421,0," include <platform_win32_winsock.h> /* wsa_init() */\n#"],[2341,41,""],[2343,7,""],[47420,39,""],[47420,0,"I"],[47430,3,""],[47431,5,""],[47438,26,""],[47439,10,""],[47440,7,""],[47441,0,"d "],[47445,3,""],[47446,6,""],[47446,0,"m"],[47448,9,""],[47448,0,"rel"],[47453,0,"ed c"],[47458,4,""],[47458,0,"ches"],[47463,1,""],[47465,1,""],[47466,0,"sa_"],[47471,2,""],[47472,13,""],[47473,6,""],[47473,0,"("],[47476,4,""]],"_dtSpan":[149246,150332]},{"parents":[105],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[26137,48,""]],"_dtSpan":[150332,150380]},{"parents":[107],"numChildren":2,"agent":27,"time":"1970-01-01T00:00:00Z","patches":[[24682,2,""],[24682,0,"Platform"],[25225,2,""],[25225,0,"Platform"],[33879,2,""],[33879,0,"Platform"],[34215,2,""],[34215,0,"Platform"],[39031,2,""],[39031,0,"Platform"],[45251,2,""],[45251,0,"Platform"]],"_dtSpan":[150380,150440]},{"parents":[108],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[36200,0,"int i, j;\n\n  "],[37259,0,"#ifdef HAVE_OPENSSL\n  // Stupid code to slice out the version string.\n  int c, l = strlen(OPENSSL_VERSION_TEXT);\n  for (i = 0; i < l; i++) {\n    c = OPENSSL_VERSION_TEXT[i];\n    if ('0' <= c && c <= '9') {\n      for (j = i + 1; j < l; j++) {\n        c = OPENSSL_VERSION_TEXT[j];\n        if (c == ' ') break;\n      }\n      break;\n    }\n  }\n  versions->Set(String::NewSymbol(\"openssl\"),\n                String::New(OPENSSL_VERSION_TEXT + i, j - i));\n#endif\n"],[37829,12,""]],"_dtSpan":[150440,150920]},{"parents":[108],"numChildren":1,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[2098,0,"nable_debug;\nstatic ev_async e"],[44944,0,"void EnableDebugSignalHandler(int signal) {\n  // can't do much here, marshal this back into the main thread where we'll\n  // enable the debugger.\n  ev_async_send(EV_DEFAULT_UC_ &enable_debug);\n}\n\n\nstatic void EnableDebug(bool wait_connect) {\n  // Start the debug thread and it's associated TCP server on port 5858.\n  bool r = Debug::EnableAgent(\"node \" NODE_VERSION, debug_port);\n\n  if (wait_connect) {\n    // Set up an empty handler so v8 will not continue until a debugger\n    // attaches. This is the same behavior as Debug::EnableAgent(_,_,true)\n    // except we don't break at the beginning of the script.\n    // see Debugger::StartAgent in debug.cc of v8/src\n    Debug::SetMessageHandler2(node::DebugBreakMessageHandler);\n  }\n\n  // Crappy check that everything went well. FIXME\n  assert(r);\n\n  // Print out some information.\n  fprintf(stderr, \"debugger listening on port %d\\r\\n\", debug_port);\n}\n\n\nstatic void EnableDebug2(EV_P_ ev_async *watcher, int revents) {\n  assert(watcher == &enable_debug);\n  assert(revents == EV_ASYNC);\n  EnableDebug(false);\n}\n\n\n\nstatic "],[49746,73,""],[49747,30,""],[49748,2,""],[49822,2,""],[49892,2,""],[49968,2,""],[50038,2,""],[50084,2,""],[50149,1,""],[50151,1,""],[50201,1,""],[50203,1,""],[50275,1,""],[50277,1,""],[50288,1,""],[50290,1,""],[50357,1,""],[50359,1,""],[50387,1,""],[50389,1,""],[50442,1,""],[50444,1,""],[50512,2,""],[50540,1,""],[50540,0,"\n"],[50543,1,""],[50546,5,""],[50546,0,"If"],[50553,0,"--"],[50561,4,""],[50561,0,"fl"],[50564,1,""],[50564,0,"g"],[50566,0,"w"],[50568,6,""],[50570,1,""],[50571,2,""],[50571,0,"pe"],[50575,2,""],[50575,0,"fi"],[50580,8,""],[50580,0,"th"],[50583,3,""],[50585,32,""],[50585,0,"i"],[50587,0,"iti"],[50591,1,""],[50592,0,"iz"],[50595,4,""],[50595,0," "],[50597,5,""],[50597,0,"h"],[50599,2,""],[50600,16,""],[50602,4,""],[50605,3,""],[50605,0," th"],[50609,3,""],[50609,0,"ead."],[50614,1,""],[50616,1,""],[50626,0,"use_"],[50636,1,""],[50637,5,""],[50637,0,"ge"],[50640,3,""],[50645,1,""],[50648,11,""],[50649,1,""],[50649,0,"E"],[50651,8,""],[50652,2,""],[50652,0,"b"],[50655,24,""],[50655,0,"D"],[50657,1,""],[50657,0,"b"],[50659,7,""],[50659,0,"g("],[50665,1,""],[50666,15,""],[50666,0,"_w"],[50669,11,""],[50670,2,""],[50671,14,""],[50671,0,"_c"],[50674,13,""],[50675,7,""],[50676,6,""],[50676,0,"ec"],[50679,3,""],[50680,0,";"],[50682,3,""],[50684,3,""],[50684,0,"}"],[50686,3,""],[50687,4,""],[50687,0,"ls"],[50691,5,""],[50691,0,"{\n"],[50694,5,""],[50695,2,""],[50696,3,""],[50697,1,""],[50697,0,"R"],[50701,13,""],[50702,4,""],[50703,13,""],[50704,8,""],[50705,2,""],[50706,5,""],[50706,0,"i"],[50708,5,""],[50709,40,""],[50710,2,""],[50710,0,"l"],[50718,1,""],[50719,0,"SIGUSR1, E"],[50730,2,""],[50730,0,"abl"],[50734,2,""],[50739,9,""],[50739,0,"Sign"],[50744,2,""],[50744,0,"l"],[50754,7,""],[50758,3,""],[50759,9,""],[50760,5,""],[50760,0,"v_"],[50763,6,""],[50763,0,"s"],[50765,2,""],[50765,0,"nc_"],[50770,3,""],[50770,0,"it(&"],[50776,3,""],[50776,0,"able_d"],[50783,3,""],[50783,0,"bug,"],[50788,4,""],[50789,5,""],[50789,0,"n"],[50791,2,""],[50791,0,"bl"],[50794,4,""],[50794,0,"Debug2"],[50807,6,""],[50807,0,"ev_asy"],[50814,0,"c_s"],[50818,3,""],[50818,0,"ar"],[50821,0,"(EV_DEFAULT_UC_"],[50837,3,""],[50837,0,"&"],[50839,2,""],[50840,4,""],[50841,18,""],[50841,0,"ble_"],[50850,13,""],[50850,0,");\n"],[50854,2,""],[50855,4,""],[50856,6,""],[50857,3,""],[50858,7,""],[50858,0,"v"],[50860,2,""],[50860,0,"un"],[50863,1,""],[50863,0,"ef(EV_DEFAULT_UC"],[438,0,"// waitpid\n"],[458,0,"<sys/types.h>\n#include <sys/wait.h>\n\n\n#include "],[46284,0,"static bool debugger_slave_running = false;\n\nstatic vo"],[46339,0,"d HandleDebugEvent(DebugEvent event,\n                             Handle<Object> exec_state,\n                             Handle<Object> eve"],[46481,0,"_data,\n                         "],[46514,0,"   Handle<Value> data) {\n  Handle"],[46548,0,"cope scope;\n\n  if (debugger_slave_running) return;\n\n  if (event != Break) {\n    return;\n  }\n\n  // Then we take one of two actions\n  // 1. Inspect the environ variable NODE_DEBUG_PROG; if i"],[46737,0," is not empty //\n  //    then st"],[46772,0," it. "],[46778,0,"TODO)\n  // 2. Start the built-"],[46810,0," debugger.\n\n\n  size_"],[46832,0,"size = 2*PATH_MAX;\n  ch"],[46857,0," node_path[size];\n  OS::GetExecutablePath(node_path, &size);\n\n  int pid = vfork();\n\n  if (pid == -1) {\n    perror(\"vfork()\");\n    return;\n  }\n\n  if (pid == 0) {\n    // Child process\n    char *argv[] =  { node_path, \"debu"],[47078,0,"\", NULL };\n    exe"],[47097,0,"vp(node_path"],[47111,0,"argv);\n    perror(\"exe"],[47134,0,"vp()\");\n    _exit(127);\n  }\n\n  debugger_slave_running = true;\n\n  // We've "],[47209,0,"it some debugger event. First we will enable the debugger agent.\n  EnableDebug(true);\n\n  // TODO prob"],[47311,0,"bly need to waitpid he"],[47334,0,"e or something to avoid zombies.\n  // int status;\n"],[47385,0," // waitpid(pid, &status, 0);\n  Debug::DebugBreak();\n}\n\n\nint Start(int argc, char "],[51865,1,""],[51865,0,"// XXX: only use if debug flag e"],[51902,0,"d?\n    "],[51914,2,""],[51914,0,"::SetD"],[51924,3,""],[51924,0,"EventL"],[51931,0,"s"],[51933,3,""],[51933,0,"e"],[51935,0,"er(Ha"],[51941,0,"dl"],[51944,1,""],[51944,0,"DebugEven"],[47417,0,"//"],[438,58,""],[2098,30,""],[44907,41,""],[44908,18,""],[44909,20,""],[44910,2,""],[44911,1,""],[44912,4,""],[44913,10,""],[44914,2,""],[44916,1,""],[44917,5,""],[44918,252,""],[44919,204,""],[44920,22,""],[44921,3,""],[44922,10,""],[44923,4,""],[44924,10,""],[44925,9,""],[44926,2,""],[44927,10,""],[44928,6,""],[44929,44,""],[44930,13,""],[44931,283,""],[44932,93,""],[45124,2,""],[45125,43,""],[45127,9,""],[45128,180,""],[45129,13,""],[45130,5,""],[45131,7,""],[45132,45,""],[45133,24,""],[45134,9,""],[45135,1,""],[45136,656,""],[45137,57,""],[45139,2,""],[45140,1,""],[45142,79,""],[45143,27,""],[48648,0,"  // If the --debug flag was specified then initialize the debug thread.\n  if (node::use_debug_agent) {"],[48754,0,"  "],[48828,0,"  "],[48902,0,"  "],[48978,0,"  "],[49052,0,"  "],[49098,0,"  "],[49167,0,"  "],[49221,0,"  "],[49297,0,"  "],[49312,0,"  "],[49383,0,"  "],[49415,0,"  "],[49472,0,"  "],[49544,0,"  "],[49572,1,""],[49574,0,"  "],[49579,2,""],[49579,0,"Start"],[49589,2,""],[49595,2,""],[49595,0,"thre"],[49600,1,""],[49600,0,"d"],[49602,1,""],[49603,0,"nd it'"],[49611,0,"as"],[49614,2,""],[49614,0,"o"],[49617,2,""],[49617,0,"at"],[49622,2,""],[49622,0,"TCP serv"],[49631,0,"r o"],[49636,1,""],[49636,0,"port 5858.\n    bool r = Debug::E"],[49669,3,""],[49670,0,"b"],[49672,2,""],[49673,1,""],[49673,0,"Agen"],[49678,1,""],[49678,0,"(\"nod"],[49685,0,"\" NODE_VERSION, node::"],[49712,1,""],[49712,0,"_por"],[49717,6,""],[49717,0,");"],[49722,0,"  "],[49734,4,""],[49740,0,"w"],[49742,2,""],[49742,0,"it_con"],[49749,0,"ec"],[49760,0,"  "],[49765,4,""],[49765,0,"Set"],[49769,1,""],[49769,0,"up an empty ha"],[49784,0,"d"],[49786,1,""],[49786,0,"er"],[49789,1,""],[49790,0,"o v8 will not continu"],[49813,0,"unt"],[49817,1,""],[49817,0,"l a"],[49826,0,"ger\n     "],[49836,2,""],[49836,0,"// att"],[49843,1,""],[49843,0,"ches."],[49849,0,"This is th"],[49860,1,""],[49860,0," s"],[49863,0,"me "],[49867,1,""],[49868,3,""],[49868,0,"havior"],[49875,0,"as"],[49878,2,""],[49885,1,""],[49885,0,"EnableAgent(_,_,true)\n      // exc"],[49920,0,"p"],[49922,1,""],[49922,0," w"],[49925,0," don't "],[49933,4,""],[49933,0,"r"],[49935,1,""],[49935,0,"ak a"],[49940,3,""],[49940,0," "],[49942,0,"he b"],[49947,0,"ginni"],[49953,0,"g of th"],[49961,0," sc"],[49965,6,""],[49965,0,"ipt.\n      // se"],[49982,0," "],[49988,2,""],[49988,0,"ger::StartAg"],[50003,4,""],[50004,1,""],[50004,0,"in"],[50007,3,""],[50007,0,"d"],[50009,0,"bug.cc"],[50016,1,""],[50016,0,"of v8/src"],[50030,1,""],[50030,0,"  D"],[50034,0,"bu"],[50037,2,""],[50037,0,"::Se"],[50042,0,"M"],[50044,3,""],[50044,0,"ssa"],[50048,3,""],[50048,0,"e"],[50056,0,"2"],[50058,10,""],[50059,3,""],[50059,0,"od"],[50062,0,"::"],[50069,2,""],[50069,0,"BreakMessa"],[50080,3,""],[50080,0,"e"],[50095,0,"}\n\n    // Crappy check that "],[50125,3,""],[50125,0,"er"],[50128,3,""],[50128,0,"th"],[50132,4,""],[50132,0,"g w"],[50137,2,""],[50137,0,"t wel"],[50143,8,""],[50143,0,"."],[50145,0,"FIXM"],[50150,1,""],[50150,0,"\n    "],[50156,4,""],[50156,0,"ss"],[50159,4,""],[50159,0,"rt(r"],[50170,6,""],[50170,0,"// Pri"],[50177,3,""],[50178,2,""],[50178,0," ou"],[50182,15,""],[50183,1,""],[50183,0,"som"],[50187,0," i"],[50190,0,"form"],[50195,4,""],[50195,0,"tion.\n    printf(\""],[50218,3,""],[50218,0,"ger"],[50222,0,"listening on"],[50235,0,"port"],[50240,0,"%d\\n\","],[50247,0,"node::d"],[50255,1,""],[50255,0,"bug"],[50259,2,""],[50259,0,"po"],[50262,16,""],[50262,0,"t"],[2098,0,"nable_debug;\nstatic ev_async e"],[44944,0,"void EnableDebugSignalHandler(int signal) {\n  // can't do much here, marshal this back into the main thread where we'll\n  // enable the debugger.\n  ev_async_send(EV_DEFAULT_UC_ &enable_debug);\n}\n\n\nstatic void EnableDebug(bool wait_connect) {\n  // Start the debug thread and it's associated TCP server on port 5858.\n  bool r = Debug::EnableAgent(\"node \" NODE_VERSION, debug_port);\n\n  if (wait_connect) {\n    // Set up an empty handler so v8 will not continue until a debugger\n    // attaches. This is the same behavior as Debug::EnableAgent(_,_,true)\n    // except we don't break at the beginning of the script.\n    // see Debugger::StartAgent in debug.cc of v8/src\n    Debug::SetMessageHandler2(node::DebugBreakMessageHandler);\n  }\n\n  // Crappy check that everything went well. FIXME\n  assert(r);\n\n  // Print out some information.\n  fprintf(stderr, \"debugger listening on port %d\\r\\n\", debug_port);\n}\n\n\nstatic void EnableDebug2(EV_P_ ev_async *watcher, int revents) {\n  assert(watcher == &enable_debug);\n  assert(revents == EV_ASYNC);\n  EnableDebug(false);\n}\n\n\n\nstatic "],[49746,73,""],[49747,30,""],[49748,2,""],[49822,2,""],[49892,2,""],[49968,2,""],[50038,2,""],[50084,2,""],[50149,1,""],[50151,1,""],[50201,1,""],[50203,1,""],[50275,1,""],[50277,1,""],[50288,1,""],[50290,1,""],[50357,1,""],[50359,1,""],[50387,1,""],[50389,1,""],[50442,1,""],[50444,1,""],[50512,2,""],[50540,1,""],[50540,0,"\n"],[50543,1,""],[50546,5,""],[50546,0,"If"],[50553,0,"--"],[50561,4,""],[50561,0,"fl"],[50564,1,""],[50564,0,"g"],[50566,0,"w"],[50568,6,""],[50570,1,""],[50571,2,""],[50571,0,"pe"],[50575,2,""],[50575,0,"fi"],[50580,8,""],[50580,0,"th"],[50583,3,""],[50585,32,""],[50585,0,"i"],[50587,0,"iti"],[50591,1,""],[50592,0,"iz"],[50595,4,""],[50595,0," "],[50597,5,""],[50597,0,"h"],[50599,2,""],[50600,16,""],[50602,4,""],[50605,3,""],[50605,0," th"],[50609,3,""],[50609,0,"ead."],[50614,1,""],[50616,1,""],[50626,0,"use_"],[50636,1,""],[50637,5,""],[50637,0,"ge"],[50640,3,""],[50645,1,""],[50648,11,""],[50649,1,""],[50649,0,"E"],[50651,8,""],[50652,2,""],[50652,0,"b"],[50655,24,""],[50655,0,"D"],[50657,1,""],[50657,0,"b"],[50659,7,""],[50659,0,"g("],[50665,1,""],[50666,15,""],[50666,0,"_w"],[50669,11,""],[50670,2,""],[50671,14,""],[50671,0,"_c"],[50674,13,""],[50675,7,""],[50676,6,""],[50676,0,"ec"],[50679,3,""],[50680,0,";"],[50682,3,""],[50684,3,""],[50684,0,"}"],[50686,3,""],[50687,4,""],[50687,0,"ls"],[50691,5,""],[50691,0,"{\n"],[50694,5,""],[50695,2,""],[50696,3,""],[50697,1,""],[50697,0,"R"],[50701,13,""],[50702,4,""],[50703,13,""],[50704,8,""],[50705,2,""],[50706,5,""],[50706,0,"i"],[50708,5,""],[50709,40,""],[50710,2,""],[50710,0,"l"],[50718,1,""],[50719,0,"SIGUSR1, E"],[50730,2,""],[50730,0,"abl"],[50734,2,""],[50739,9,""],[50739,0,"Sign"],[50744,2,""],[50744,0,"l"],[50754,7,""],[50758,3,""],[50759,9,""],[50760,5,""],[50760,0,"v_"],[50763,6,""],[50763,0,"s"],[50765,2,""],[50765,0,"nc_"],[50770,3,""],[50770,0,"it(&"],[50776,3,""],[50776,0,"able_d"],[50783,3,""],[50783,0,"bug,"],[50788,4,""],[50789,5,""],[50789,0,"n"],[50791,2,""],[50791,0,"bl"],[50794,4,""],[50794,0,"Debug2"],[50807,6,""],[50807,0,"ev_asy"],[50814,0,"c_s"],[50818,3,""],[50818,0,"ar"],[50821,0,"(EV_DEFAULT_UC_"],[50837,3,""],[50837,0,"&"],[50839,2,""],[50840,4,""],[50841,18,""],[50841,0,"ble_"],[50850,13,""],[50850,0,");\n"],[50854,2,""],[50855,4,""],[50856,6,""],[50857,3,""],[50858,7,""],[50858,0,"v"],[50860,2,""],[50860,0,"un"],[50863,1,""],[50863,0,"ef(EV_DEFAULT_UC"]],"_dtSpan":[150920,159130]},{"parents":[106,109,110],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[607,2,""],[608,1,""],[608,0,"e"],[610,3,""],[611,2,""],[611,0,"i"],[45807,1,""],[45809,16,""],[46878,0,"#ifdef __POSIX__\n"],[47113,0,"\n"],[47133,1,""],[51743,0,"#ifdef"],[51750,0,"__POSIX__\n "],[51949,0,"#endif // __POSIX__\n"]],"_dtSpan":[159130,159213]},{"parents":[111],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[38205,1,""],[38213,1,""],[43116,13,""],[43123,16,""],[43124,15,""],[43126,5,""],[43127,15,""],[43128,7,""],[43133,4,""],[43133,0," sc"],[43137,0,"ip"],[43140,7,""],[43140,0,".js"],[43144,2,""],[43144,0,"["],[43146,4,""],[43147,1,""],[43147,0,"gu"],[43150,2,""],[43151,19,""],[43152,8,""],[43153,0,"s] "],[43170,9,""],[43170,0,"\\n\"\n"],[43183,16,""],[43183,0,"\"O"],[43186,5,""],[43187,9,""],[43190,0,"s:"],[43209,0,"v, "],[43213,5,""],[43214,19,""],[43216,7,""],[43217,7,""],[43218,2,""],[43219,10,""],[43219,0,"o"],[43221,4,""],[43223,6,""],[43229,19,""],[43229,0,"pr"],[43232,0,"n"],[43235,7,""],[43235,0,"n"],[43237,3,""],[43239,4,""],[43239,0,"'s v"],[43245,5,""],[43245,0,"si"],[43249,4,""],[43716,71,""],[43859,0,"  "],[43975,39,""]],"_dtSpan":[159213,159622]},{"parents":[112],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[48,0,"\n"],[78,0,"v8-debug.h>\n\n#include <"],[110,1,""],[352,12,""],[353,11,""],[476,2,""],[476,0,"ndif\n\n#ifd"],[487,3,""],[487,0,"f"],[631,0,"platform.h>\n#i"],[646,0,"clude <n"],[1128,0," "],[1181,23,""],[11375,0,"#ifdef WSAEINTR\n  ERRNO_CASE(WSAEINTR);\n#endif\n\n#ifdef WSAEBADF\n  ERRNO_CASE(WSAEBADF);\n#endif\n\n#ifdef WSAEACCES\n  ERRNO_CASE(WSAEACCES);\n#endif\n\n#ifdef WSAEFAULT\n  ERRNO_CASE(WSAEFAULT);\n#endif\n\n#ifdef WSAEINVAL\n  ERRNO_CASE(WSAEINVAL);\n#endif\n\n#ifdef WSAEMFILE\n  ERRNO_CASE(WSAEMFILE);\n#endif\n\n#ifdef WSAEWOULDBLOCK\n  ERRNO_CASE(WSAEWOULDBLOCK);\n#endif\n\n#ifdef WSAEINPROGRESS\n  ERRNO_CASE(WSAEINPROGRESS);\n#endif\n\n#ifdef WSAEALREADY\n  ERRNO_CASE(WSAEALREADY);\n#endif\n\n#ifdef WSAENOTSOCK\n  ERRNO_CASE(WSAENOTSOCK);\n#endif\n\n#ifdef WSAEDESTADDRREQ\n  ERRNO_CASE(WSAEDESTADDRREQ);\n#endif\n\n#ifdef WSAEMSGSIZE\n  ERRNO_CASE(WSAEMSGSIZE);\n#endif\n\n#ifdef WSAEPROTOTYPE\n  ERRNO_CASE(WSAEPROTOTYPE);\n#endif\n\n#ifdef WSAENOPROTOOPT\n  ERRNO_CASE(WSAENOPROTOOPT);\n#endif\n\n#ifdef WSAEPROTONOSUPPORT\n  ERRNO_CASE(WSAEPROTONOSUPPORT);\n#endif\n\n#ifdef WSAESOCKTNOSUPPORT\n  ERRNO_CASE(WSAESOCKTNOSUPPORT);\n#endif\n\n#ifdef WSAEOPNOTSUPP\n  ERRNO_CASE(WSAEOPNOTSUPP);\n#endif\n\n#ifdef WSAEPFNOSUPPORT\n  ERRNO_CASE(WSAEPFNOSUPPORT);\n#endif\n\n#ifdef WSAEAFNOSUPPORT\n  ERRNO_CASE(WSAEAFNOSUPPORT);\n#endif\n\n#ifdef WSAEADDRINUSE\n  ERRNO_CASE(WSAEADDRINUSE);\n#endif\n\n#ifdef WSAEADDRNOTAVAIL\n  ERRNO_CASE(WSAEADDRNOTAVAIL);\n#endif\n\n#ifdef WSAENETDOWN\n  ERRNO_CASE(WSAENETDOWN);\n#endif\n\n#ifdef WSAENETUNREACH\n  ERRNO_CASE(WSAENETUNREACH);\n#endif\n\n#ifdef WSAENETRESET\n  ERRNO_CASE(WSAENETRESET);\n#endif\n\n#ifdef WSAECONNABORTED\n  ERRNO_CASE(WSAECONNABORTED);\n#endif\n\n#ifdef WSAECONNRESET\n  ERRNO_CASE(WSAECONNRESET);\n#endif\n\n#ifdef WSAENOBUFS\n  ERRNO_CASE(WSAENOBUFS);\n#endif\n\n#ifdef WSAEISCONN\n  ERRNO_CASE(WSAEISCONN);\n#endif\n\n#ifdef WSAENOTCONN\n  ERRNO_CASE(WSAENOTCONN);\n#endif\n\n#ifdef WSAESHUTDOWN\n  ERRNO_CASE(WSAESHUTDOWN);\n#endif\n\n#ifdef WSAETOOMANYREFS\n  ERRNO_CASE(WSAETOOMANYREFS);\n#endif\n\n#ifdef WSAETIMEDOUT\n  ERRNO_CASE(WSAETIMEDOUT);\n#endif\n\n#ifdef WSAECONNREFUSED\n  ERRNO_CASE(WSAECONNREFUSED);\n#endif\n\n#ifdef WSAELOOP\n  ERRNO_CASE(WSAELOOP);\n#endif\n\n#ifdef WSAENAMETOOLONG\n  ERRNO_CASE(WSAENAMETOOLONG);\n#endif\n\n#ifdef WSAEHOSTDOWN\n  ERRNO_CASE(WSAEHOSTDOWN);\n#endif\n\n#ifdef WSAEHOSTUNREACH\n  ERRNO_CASE(WSAEHOSTUNREACH);\n#endif\n\n#ifdef WSAENOTEMPTY\n  ERRNO_CASE(WSAENOTEMPTY);\n#endif\n\n#ifdef WSAEPROCLIM\n  ERRNO_CASE(WSAEPROCLIM);\n#endif\n\n#ifdef WSAEUSERS\n  ERRNO_CASE(WSAEUSERS);\n#endif\n\n#ifdef WSAEDQUOT\n  ERRNO_CASE(WSAEDQUOT);\n#endif\n\n#ifdef WSAESTALE\n  ERRNO_CASE(WSAESTALE);\n#endif\n\n#ifdef WSAEREMOTE\n  ERRNO_CASE(WSAEREMOTE);\n#endif\n\n#ifdef WSASYSNOTREADY\n  ERRNO_CASE(WSASYSNOTREADY);\n#endif\n\n#ifdef WSAVERNOTSUPPORTED\n  ERRNO_CASE(WSAVERNOTSUPPORTED);\n#endif\n\n#ifdef WSANOTINITIALISED\n  ERRNO_CASE(WSANOTINITIALISED);\n#endif\n\n#ifdef WSAEDISCON\n  ERRNO_CASE(WSAEDISCON);\n#endif\n\n#ifdef WSAENOMORE\n  ERRNO_CASE(WSAENOMORE);\n#endif\n\n#ifdef WSAECANCELLED\n  ERRNO_CASE(WSAECANCELLED);\n#endif\n\n#ifdef WSAEINVALIDPROCTABLE\n  ERRNO_CASE(WSAEINVALIDPROCTABLE);\n#endif\n\n#ifdef WSAEINVALIDPROVIDER\n  ERRNO_CASE(WSAEINVALIDPROVIDER);\n#endif\n\n#ifdef WSAEPROVIDERFAILEDINIT\n  ERRNO_CASE(WSAEPROVIDERFAILEDINIT);\n#endif\n\n#ifdef WSASYSCALLFAILURE\n  ERRNO_CASE(WSASYSCALLFAILURE);\n#endif\n\n#ifdef WSASERVICE_NOT_FOUND\n  ERRNO_CASE(WSASERVICE_NOT_FOUND);\n#endif\n\n#ifdef WSATYPE_NOT_FOUND\n  ERRNO_CASE(WSATYPE_NOT_FOUND);\n#endif\n\n#ifdef WSA_E_NO_MORE\n  ERRNO_CASE(WSA_E_NO_MORE);\n#endif\n\n#ifdef WSA_E_CANCELLED\n  ERRNO_CASE(WSA_E_CANCELLED);\n#endif\n\n"],[16761,0,"{\n#ifdef __POSIX__\n    "],[16809,0,"#else // __MINGW32__\n    msg = winapi_strerror(errorno);\n#endif\n  }\n"]],"_dtSpan":[159622,163143]},{"parents":[113],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[90,0,"#include <node_dtrace.h>\n"],[45635,0,"InitDTrace(global);\n\n  "],[1579,0,"static Persistent<String> code_symbol;\n"],[17288,0,"  code_symbol = NODE_PSYMBOL(\"code\");\n  "],[17731,0,"obj->Set(code_symbol, estring);\n  "]],"_dtSpan":[163143,163304]},{"parents":[114],"numChildren":1,"agent":88,"time":"1970-01-01T00:00:00Z","patches":[[18845,0,"ucs2\") == 0) {\n    return UCS2;\n  } else if (strcasecmp(*encoding, \"ucs-2\") == 0) {\n    return UCS2;\n  } else if (strcasecmp(*encoding, \""],[20538,0,"  else if (encoding == UCS2) return str->Length() * 2;\n"]],"_dtSpan":[163304,163496]},{"parents":[115],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[25884,0,"\n"],[25907,0," || args[0]->IsUndefined()"],[25981,0,"\n"],[25985,1,""],[25986,1,""],[26013,0," && !args[0]->IsString()"],[26139,0," or octal string"],[26162,0,"\n"],[26166,2,""],[26178,0,"int "],[26183,2,""],[26183,0,"ct;\n  "],[26190,1,""],[26191,2,""],[26191,0,"if("],[26195,0,"rg"],[26198,2,""],[26198,0,"[0]->IsInt32"],[26211,1,""],[26211,0,")) {\n      "],[26223,3,""],[26223,0,"c"],[26225,1,""],[26225,0," = "],[26250,0,";\n    } else {\n      oct = 0;\n      String::Utf8Value str(args[0]);\n\n      // Parse the octal string.\n      for (int i = 0; i < str.length(); i++) {\n        char c = (*str)[i];\n        if (c > '7' || c < '0') {\n          return ThrowException(Exception::TypeError(\n                String::New(\"invalid octal string\")));\n        }\n        oct *= 8;\n        oct += c - '0';\n      }\n    }\n    old = umask(static_cast<mode_t>(oct)"],[26683,0,"\n"]],"_dtSpan":[163496,164050]},{"parents":[116],"numChildren":2,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[46460,0,"#ifdef HAVE_DTRACE\n"],[46501,0,"#endif\n"]],"_dtSpan":[164050,164076]},{"parents":[117],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[19054,0,"hex\") == 0) {\n    return HEX;\n  } else if (strcasecmp(*encoding, \""],[20659,0,"  else if (encoding == HEX) return str->Length() / 2;\n"]],"_dtSpan":[164076,164196]},{"parents":[118],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[53199,176,""]],"_dtSpan":[164196,164372]},{"parents":[119],"numChildren":1,"agent":167,"time":"1970-01-01T00:00:00Z","patches":[[29713,0,"static Handle<Value> Uptime(const Arguments& args) {\n  HandleScope scope;\n  assert(args.Length() == 0);\n\n  double uptime =  Platform::GetUptime(true);\n\n  if (uptime < 0) {\n    return Undefined();\n  }\n\n  return scope.Close(Number::New(uptime));\n}\n"],[45470,0,"uptime\", Uptime);\n  NODE_SET_METHOD(process, \""]],"_dtSpan":[164372,164664]},{"parents":[117],"numChildren":1,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[2322,30,""],[36887,0,"\n"],[49759,204,""],[50481,0,"latile bool hit_s"],[50499,0,"gnal;\n\n\nstatic voi"],[50530,1,""],[50530,0,"SignalHandler"],[50544,4,""],[50544,0,"int signal) {\n  // This is signal safe.\n  hit"],[50590,0,"signal"],[50597,0,"= tru"],[50603,0,";\n  "],[50608,1,""],[50608,0,"8::Debug::DebugBre"],[50627,0,"k();\n}\n\n\n"],[50637,6,""],[50637,0,"t"],[50640,0,"i"],[50642,1,""],[50642,0," void D"],[50650,3,""],[50650,0,"bugS"],[50655,0,"gnalCB(co"],[50665,0,"s"],[50668,1,""],[50668,0,"D"],[50670,0,"bug::E"],[50680,0,"Details& detail"],[50702,2,""],[50702,0,"if (hit_"],[50711,0,"ignal && d"],[50722,1,""],[50723,2,""],[50724,0,"ils.Ge"],[50731,2,""],[50731,0,"Ev"],[50734,1,""],[50734,0,"nt()"],[50742,1,""],[50742,0,"v8::Br"],[50749,0,"ak) {\n    hit_sig"],[50768,1,""],[50769,3,""],[50769,0," = fals"],[50777,4,""],[50781,2,""],[50781,0,"  fprintf("],[50792,0,"td"],[50796,0,"r, \"Hit SIGUSR1 - s"],[50816,1,""],[50816,0,"a"],[50818,0,"ting d"],[50825,1,""],[50825,0,"bugger ag"],[50837,13,""],[50837,0,".\\n\""],[50846,0,"  "],[50868,0,"  }\n"],[55824,23,""],[55824,0,"D"],[55829,7,""],[55829,0,"::S"],[55833,0,"t"],[55839,8,""],[55839,0,"Ev"],[55842,5,""],[55843,6,""],[55844,9,""],[55845,7,""],[55845,0,"ist"],[55850,3,""],[55851,2,""],[55851,0,"r2(D"],[55859,11,""],[55859,0,"Sig"],[55863,16,""],[55863,0,"al"],[55866,0,"B"]],"_dtSpan":[164664,165364]},{"parents":[121],"numChildren":1,"agent":168,"time":"1970-01-01T00:00:00Z","patches":[[1134,0,"nclude <node_string.h>\n#i"],[24609,3,""],[24609,0,"H"],[24611,0,"nd"],[24614,0,"e"],[24632,3,""],[24632,0,"H"],[24634,0,"nd"],[24637,0,"e"],[45632,12,""],[45644,1,""],[45685,0,"IMMUTABLE_"],[45696,7,""],[45696,0,"TRI"],[45700,2,""],[45700,0,"G"]],"_dtSpan":[165364,165439]},{"parents":[122],"numChildren":2,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[53111,176,""],[13,4,""],[13,0,"Joyent, Inc. and other Node contributors.\n//\n//"],[61,1,""],[61,0,"Permission is hereb"],[81,0," gr"],[86,0,"ted, free"],[96,1,""],[96,0,"of ch"],[102,0,"rge, to any person obtaining a\n// copy of t"],[146,0,"is software and associated documentation files (the\n// \"Software\"), to dea"],[222,1,""],[222,0,"in the Softwa"],[236,2,""],[236,0,"e without restric"],[255,0,"o"],[257,0,", including\n// without limitation the rights to use, copy, modif"],[322,0,", merge, publish,\n// distribute, subli"],[361,0,"ense, and/or sel"],[378,0," c"],[381,0,"pies of the Software, and to permit\n// persons to whom the Software is f"],[454,0,"rnished to "],[466,0,"o so, subject to the\n// following condition"],[510,1,""],[510,0,":\n//\n// The ab"],[525,0,"ve copy"],[533,0,"i"],[535,1,""],[535,0,"ht notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE."]],"_dtSpan":[165439,166722]},{"parents":[120,123],"numChildren":1,"agent":38,"time":"1970-01-01T00:00:00Z","patches":[[42259,2,""],[42259,0,"H"],[42261,0,"ndle<Objec"],[42272,2,""],[42272,0,">"],[42274,6,""],[42274,0,"SetupPr"],[42282,2,""],[42282,0,"cessObject"],[46870,0,"return process;\n}\n\n\nstatic void AtExit() {\n  node::Stdio::Flush();\n  node::Stdio::DisableRawMode(STDIN_FILENO);\n}\n\n\nstatic void SignalExit(int signal) {\n  Stdio::DisableRawMode(STDIN_FILENO);\n  _exit(1);\n}\n\n\nvoid Load(Handle<Object> process) {\n  "],[47332,0,"atexit(AtExit);\n\n  "],[50135,1,""],[50209,1,""],[51012,1,""],[51365,181,""],[51366,3,""],[51367,4,""],[52741,6,""],[52741,0,"ch"],[52745,0,"** Ini"],[52974,1,""],[56127,21,""],[56128,28,""],[57280,0,"return argv;\n}\n\n\nvoid EmitExit(v8::Handle<v8::Object> process) {\n  // process.emit('exit')\n  Local<Value> emit_v = process->Get(String::New(\"emit\"));\n  assert(emit_v->IsFunction());\n  Local<Function> emit = Local<Function>::Cast(emit_v);\n  Local<Value> args[] = { String::New(\"exit\") };\n  TryCatch try_catch;\n  emit->Call(process, 1, args);\n  if (try_catch.HasCaught()) {\n    FatalException(try_catch);\n  }\n}\n\n\nint Start(int argc, char *argv[]) {\n  v8::V8::Initialize();\n  v8::HandleScope handle_scope;\n\n  argv = Init(argc, argv);\n\n  "],[57954,0,"H"],[57956,0,"ndle<Objec"],[57967,0,"> proc"],[57974,2,""],[57974,0,"ss = Se"],[57982,2,""],[57982,0,"upPr"],[57987,1,""],[57987,0,"cessObj"],[57995,3,""],[57995,0,"c"],[57997,4,""],[57997,0,"(argc, argv"],[58127,6,""],[58132,1,""],[58132,0,"p"],[58134,1,""],[58134,0,"o"],[58136,6,""],[58136,0,"ess"],[58649,87,""],[58652,31,""],[58655,46,""],[58655,0,"E"],[58659,45,""],[58659,0,"E"],[58663,40,""],[58671,9,""],[58673,67,""]],"_dtSpan":[166722,168222]},{"parents":[124],"numChildren":1,"agent":27,"time":"1970-01-01T00:00:00Z","patches":[[28794,0,"if (errno == 0)\n        return ThrowException(Exception::Error(\n          String::New(\"setgid group id does not exist\")));\n      else\n        "],[29822,0,"if (errno == 0)\n        return ThrowException(Exception::Error(\n          String::New(\"setuid user id does not exist\")));\n      else\n        "]],"_dtSpan":[168222,168505]},{"parents":[123],"numChildren":2,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[30228,21,""],[30255,0,") {\n  "],[30262,2,""],[30263,2,""],[30263,0,"HeapSt"],[30271,4,""],[30271,0,"istics stats;\n    V8"],[30296,1,""],[30296,0,"H"],[30298,7,""],[30298,0,"apStati"],[30306,0,"tic"],[30310,2,""],[30310,0,"("],[30312,1,""],[30313,9,""],[30313,0,"tats"],[30318,2,""],[30318,0,";"],[30328,1,""],[30329,0,"tat"],[30333,0,".total_heap_size()"],[30358,0," "],[30360,0," "],[30365,0," "],[30367,0," "]],"_dtSpan":[168505,168631]},{"parents":[125,126],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[3185,0,"bool cov = false;\nstatic "],[45786,0,"  process->Set(String::NewSymbol(\"cov\"), cov ? True() : False());\n"],[49950,0,"  --cov                code coverage; writes node-cov.json \\n\"\n         \""],[50843,0,"!strcmp(arg, \"--cov\")) {\n      cov = true;\n      argv[i] = const_cast<char*>(\"\");\n    } else if ("]],"_dtSpan":[168631,168892]},{"parents":[127],"numChildren":1,"agent":110,"time":"1970-01-01T00:00:00Z","patches":[[44203,0,"arch\n  process->Set(String::NewSymbol(\"arch\"), String::New(ARCH));\n\n  // process."]],"_dtSpan":[168892,168973]},{"parents":[126],"numChildren":1,"agent":192,"time":"1970-01-01T00:00:00Z","patches":[[25166,0,"// range errors have a trace member set to undef"],[25215,0,"ned\n  i"],[25243,0," && !try_catch.StackTrace()->IsUndefined()"],[25463,0,", or when non-Error\n    // objects are thrown manually"],[25568,0,"bool isErrorObject = er->IsObject() &&\n      !(er->ToObject()->Get("],[25643,0,"New(\"message\"))->Is"],[25663,0,"ndefined()) &&\n      !(er->ToObjec"],[25698,0,"()->Get(String::New(\"name\"))->IsUndefined());\n\n    if (isErrorObject) {\n      String::Ut"],[25794,0,"na"],[25797,2,""],[25797,0,"e"],[25799,1,""],[25803,2,""],[25803,0,"To"],[25813,0,"->Get(String::New(\"name\")));\n      fprintf(stderr, \"%s: \", *name);\n    }\n\n    String::Utf8Value msg(!isErrorObject"]],"_dtSpan":[168973,169456]},{"parents":[129],"numChildren":2,"agent":96,"time":"1970-01-01T00:00:00Z","patches":[[52047,4,""]],"_dtSpan":[169456,169460]},{"parents":[128,130],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[1163,0,"u"],[1165,0,".h>\n\n#include <v"],[58824,0,"uv_buf UVAlloc(uv_handle_t* handle, size_t suggested_size) {\n  char* base = (char*)malloc(suggested_size);\n  uv_buf buf;\n  buf.base = base;\n  buf.len = suggested_size;\n  return buf;\n}\n\n\n"],[59048,0,"uv_init(UVAlloc);\n  "],[59964,1,""],[59964,0,"u"],[59967,4,""],[59967,0,"run"],[59971,16,""],[3363,1,""],[3363,0,"u"],[3366,1,""],[3366,0,"han"],[3372,0,"_t"],[5762,0,"void Spin(uv_handle_t* handle, int status) {\n  assert(handle == &tick_spinner);\n  assert(status == 0);\n}\n\n\nstatic "],[6351,1,""],[6351,0,"u"],[6365,15,""],[6378,0,", Spin"],[6401,26,""],[6403,7,""],[6404,3,""],[6405,36,""],[6406,24,""],[6409,30,""],[6526,1,""],[6526,0,"u"],[6539,15,""],[56268,1,""],[56268,0,"u"],[56302,10,""],[56302,0,"NULL, NULL"],[3323,1,""],[3323,0,"u"],[3326,4,""],[3326,0,"h"],[3328,1,""],[3328,0,"ndl"],[3332,0,"_t"],[7032,7,""],[7032,0,"u"],[7035,4,""],[7035,0,"h"],[7037,1,""],[7037,0,"ndl"],[7041,4,""],[7041,0,"_"],[7043,1,""],[7043,0,"* "],[7046,0,"andl"],[7051,1,""],[7057,5,""],[7057,0,"sta"],[7061,0,"u"],[7076,4,""],[7077,0,"andl"],[7082,1,""],[7119,5,""],[7119,0,"sta"],[7123,0,"u"],[7129,10,""],[7129,0,"0"],[55943,1,""],[55943,0,"u"],[55988,17,""],[55988,0,"NULL, NULL"],[56003,1,""],[56003,0,"u"],[56020,15,""],[56047,0,", PrepareTick"],[56065,1,""],[56065,0,"u"],[3287,1,""],[3287,0,"u"],[3290,1,""],[3291,0,"andl"],[3296,2,""],[3296,0,"_t"],[7172,7,""],[7172,0,"u"],[7175,1,""],[7176,6,""],[7177,0,"ndle_"],[7183,1,""],[7183,0,"* "],[7186,0,"andl"],[7191,1,""],[7197,5,""],[7197,0,"sta"],[7201,0,"u"],[7216,4,""],[7217,0,"andl"],[7222,1,""],[7257,5,""],[7257,0,"sta"],[7261,0,"u"],[7267,8,""],[7267,0,"0"],[56063,13,""],[56069,1,""],[56069,0,"u"],[56110,15,""],[56110,0,"NULL, NULL"],[56125,1,""],[56125,0,"u"],[56140,15,""],[56165,0,", node::CheckTick"],[56187,1,""],[56187,0,"u"],[56196,13,""]],"_dtSpan":[169460,170324]},{"parents":[130],"numChildren":2,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[23034,23,""]],"_dtSpan":[170324,170347]},{"parents":[131,132],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[55701,208,""],[58501,0,"_t"],[58612,0,"_t"],[58501,2,""],[58610,2,""],[6393,0,"uv_ref();\n  "],[6571,0,"  uv_unref();\n"],[56044,0,"  uv_unref();\n"],[58541,0,"_t"],[58652,0,"_t"],[6355,0,"if (!uv_is_active(&tick_spinner)) {\n    "],[6433,0,"  "],[6447,0,"}\n  "],[6588,0,"if (uv_is_active(&tick_spinner)) {\n    "],[6658,0,"  "],[6672,0,"  }\n"],[56412,7,""],[56412,0,"."],[56448,0,"{\n  "],[56501,0,"    // TODO Probably don't need to start this each time.\n    // Avoids failing on test/simple/test-eio-race3.js though\n    ev_idle_start(EV_DEFAULT_UC_ &eio_poller);\n"],[59448,161,""]],"_dtSpan":[170347,171037]},{"parents":[133],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[1249,0,"ignal.h>\n#include <s"],[3492,1,""],[3492,0,"u"],[3495,0,"h"],[3497,2,""],[3498,1,""],[3498,0,"dle_t"],[3535,1,""],[3535,0,"u"],[3538,0,"h"],[3540,2,""],[3541,1,""],[3541,0,"dle_t"],[3578,1,""],[3578,0,"u"],[3581,1,""],[3581,0,"han"],[3587,1,""],[3587,0,"_t"],[4214,1,""],[4214,0,"u"],[4217,1,""],[4218,0,"andl"],[4223,2,""],[4223,0,"_t"],[4243,1,""],[4243,0,"u"],[4246,1,""],[4246,0,"han"],[4252,1,""],[4252,0,"_t"],[4271,1,""],[4271,0,"u"],[4274,3,""],[4274,0,"handl"],[4280,1,""],[4280,0,"_t"],[4456,2,""],[4456,0,"int64"],[4463,5,""],[4529,0,"CheckStatus(uv_handle_t* watcher, int status);\n\nstatic void "],[4614,1,""],[4614,0,"u"],[4645,1,""],[4645,0,"u"],[4660,15,""],[4661,0,"node::"],[4675,4,""],[4675,0,","],[4677,6,""],[4678,1,""],[4678,0,"od"],[4681,14,""],[4681,0,"::"],[4684,0,"heckStatus, 5., 5."],[4747,1,""],[4747,0,"u"],[4778,28,""],[4778,0,"u"],[4792,15,""],[4828,7,""],[4828,0,"u"],[4831,1,""],[4831,0,"han"],[4837,0,"_t*"],[4841,1,""],[4854,5,""],[4854,0,"sta"],[4858,0,"u"],[4891,14,""],[4892,16,""],[4964,1,""],[4964,0,"u"],[4977,6,""],[5104,7,""],[5104,0,"u"],[5107,1,""],[5108,0,"andl"],[5113,2,""],[5113,0,"_t*"],[5117,1,""],[5130,5,""],[5130,0,"sta"],[5134,0,"u"],[5169,31,""],[5204,1,""],[5204,0,"u"],[5211,13,""],[5680,1,""],[5680,0,"u"],[5694,6,""],[5695,0,"node::"],[5708,0,", node::Idle"],[7389,7,""],[7389,0,"u"],[7392,1,""],[7392,0,"han"],[7398,0,"_t*"],[7402,1,""],[7415,5,""],[7415,0,"sta"],[7419,0,"u"],[7459,30,""],[7511,0," && uv_is_active(&eio_poller)"],[7583,1,""],[7583,0,"u"],[7596,15,""],[7608,0,"  uv_unref();\n  "],[7691,7,""],[7691,0,"u"],[7694,0,"h"],[7696,2,""],[7697,2,""],[7697,0,"dle_t"],[7703,0," "],[7717,5,""],[7717,0,"sta"],[7721,0,"u"],[7768,10,""],[7769,3,""],[7770,18,""],[7833,0," && !uv_is_active(&eio_poller)"],[7907,1,""],[7907,0,"u"],[7921,15,""],[7932,0,", node::DoPoll"],[7951,0,"  uv_ref();\n  "],[8000,7,""],[8000,0,"u"],[8003,0,"h"],[8005,2,""],[8006,2,""],[8006,0,"dle_t"],[8012,0," "],[8080,31,""],[8143,0," && uv_is_active(&eio_poller)"],[8215,1,""],[8215,0,"u"],[8228,15,""],[8244,0,"  uv_unref();\n  "],[8501,1,""],[8501,0,"u"],[8515,15,""],[8675,1,""],[8675,0,"u"],[8689,15,""],[30993,4,""],[30993,0,"uv"],[30996,1,""],[30996,0,"handl"],[31002,1,""],[31004,4,""],[31004,0,"*"],[31006,1,""],[31019,5,""],[31019,0,"sta"],[31023,0,"u"],[31058,33,""],[31087,1,""],[31087,0,"u"],[31294,1,""],[31294,0,"u"],[31308,6,""],[31309,0,"node::"],[31322,0,", node::Idle"],[31375,1,""],[31375,0,"u"],[31382,13,""],[31512,1,""],[31512,0,"u"],[31526,6,""],[31527,0,"node::"],[31540,0,", node::Idle"],[38371,1,""],[38371,0,"u"],[38374,0,"h"],[38376,2,""],[38377,1,""],[38377,0,"dle_t"],[38432,7,""],[38432,0,"u"],[38435,0,"h"],[38437,2,""],[38438,2,""],[38438,0,"dle_t"],[38444,0," "],[38458,5,""],[38458,0,"sta"],[38462,0,"u"],[38523,31,""],[38804,1,""],[38804,0,"u"],[38818,15,""],[44021,2,""],[44021,0,"UV"],[44024,7,""],[44024,0,"VERSION"],[44032,7,""],[44032,0,"MAJOR"],[44039,2,""],[44039,0,"UV"],[44042,7,""],[44042,0,"VERSION"],[44050,7,""],[44050,0,"MINOR"],[44093,1,""],[44093,0,"u"],[56014,1,""],[56014,0,"u"],[56045,11,""],[56045,0,"NULL, NULL"],[56060,1,""],[56060,0,"u"],[56075,15,""],[56090,0,", node::Check"],[56108,1,""],[56108,0,"u"],[56117,13,""],[56123,1,""],[56123,0,"u"],[56152,0,"NULL, NULL);\n  uv_u"],[56172,2,""],[56172,0,"r"],[56174,6,""],[56174,0,"f("],[56179,0,"\n"],[56182,1,""],[56182,0,"u"],[56213,17,""],[56213,0,"NULL"],[56219,3,""],[56219,0,"NULL);\n "],[56228,2,""],[56228,0,"uv_unref("],[56239,1,""],[56313,1,""],[56313,0,"u"],[56345,12,""],[56345,0,"NULL, NULL"],[56357,57,""],[56358,13,""],[56359,7,""],[56360,2,""],[56361,29,""],[56362,3,""],[56363,8,""],[56376,15,""],[56387,0,", node::DoPoll"],[56409,1,""],[56409,0,"u"],[56476,3,""],[56476,0,","],[56478,0,"NULL,"],[56484,24,""],[56484,0,"N"],[56487,35,""],[56487,0,"L"],[56495,1,""],[56495,0,"u"],[56504,13,""],[56512,1,""],[56512,0,"u"],[56579,6,""],[56579,0,","],[56581,22,""],[56581,0,"N"],[56584,5,""],[56584,0,"L,"],[56587,29,""],[56587,0,"NULL"],[56598,1,""],[56598,0,"u"],[56607,13,""],[56886,3,""],[56886,0,"Se"],[56889,6,""],[56894,0,"callb"],[56900,3,""],[56901,0,"k"],[56903,1,""],[56903,0,"DebugMessageDisp"],[56923,2,""],[56924,3,""],[56924,0,"which"],[56930,4,""],[56931,4,""],[56931,0,"s"],[56933,4,""],[56933,0,"c"],[56935,1,""],[56935,0,"ll"],[56938,1,""],[56938,0,"d"],[56966,0,".\n"],[56969,0," Debug::SetDebugMess"],[56990,0,"geDispatchHa"],[57004,3,""],[57004,0,"le"],[57007,0,"(node::DebugMes"],[57023,1,""],[57024,2,""],[57024,0,"geD"],[57028,0,"spa"],[57032,0,"ch);\n  //"],[57042,0,"In"],[57045,1,""],[57046,1,""],[57046,0,"ialize"],[57057,1,""],[57058,1,""],[57058,0,"sy"],[57061,0,"c"],[57063,0,"wa"],[57066,0,"c"],[57068,1,""],[57069,2,""],[57069,0,"r"],[57094,5,""],[57113,0,"\n "],[57116,0,"// "],[57168,5,""],[57189,0,"\n  //"],[57240,2,""],[57241,3,""],[57265,0,"\n  //"],[57287,1,""],[57287,0,"u"],[57349,41,""],[57351,222,""],[57351,0,"N"],[57354,5,""],[57354,0,"L,"],[57357,20,""],[57357,0,"NULL"],[57436,1,""],[57436,0,"u"],[57445,13,""],[59058,1,""],[59058,0,"u"]],"_dtSpan":[171037,173148]},{"parents":[134],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[19449,0,"// MakeCallback may only be made directly off the event loop.\n// That is there can be no JavaScript stack frames underneath it.\n// (Is there any way to assert that?)\n//\n// Maybe make this a method of a node::Handle super class\n//\nvoid MakeCallback(Handle<Object> object,\n                  const char* method,\n                  int argc,\n                  Handle<Value> argv[]) {\n  HandleScope scope;\n\n  Local<Value> callback_v = object->Get(String::New(method)); \n  assert(callback_v->IsFunction());\n  Local<Function> callback = Local<Function>::Cast(callback_v);\n\n  // TODO Hook for long stack traces to be made here.\n\n  TryCatch try_catch;\n\n  callback->Call(object, argc, argv);\n\n  if (try_catch.HasCaught()) {\n    FatalException(try_catch);\n  }\n}\n\n\nvoid SetErrno(uv_err_code code) {\n  uv_err_t err;\n  err.code = code;\n  Context::GetCurrent()->Global()->Set(String::NewSymbol(\"errno\"),\n                                       String::NewSymbol(uv_err_name(err)));\n}\n\n\n"],[3310,0,"c"],[3312,4,""],[3313,0,"ck"],[3348,1,""],[3348,0,"prep"],[3353,3,""],[3353,0,"r"],[3390,3,""],[3390,0,"i"],[3493,1,""],[3494,0,"sy"],[3497,3,""],[3497,0,"c"],[3535,1,""],[3536,0,"sy"],[3539,3,""],[3539,0,"c"],[3577,3,""],[3577,0,"i"],[4211,0,"c"],[4213,4,""],[4214,0,"ck"],[4239,3,""],[4239,0,"i"],[4265,5,""],[4265,0,"tim"],[4269,0,"r"],[4617,0,"(uv_handle_t*) "],[4765,0,"(uv_handle_t*) "],[4893,0,"(uv_idle_t*) "],[5010,3,""],[5010,0,"&g"],[5013,1,""],[5013,0,"_idl"],[5018,1,""],[5183,0,"(uv_check_t*) "],[5836,0,"(uv_idle_t*) "],[6402,0,"(uv_handle_t*) "],[6649,0,"(uv_handle_t*) "],[7255,0,"(uv_prepare_t*) "],[7408,0,"(uv_c"],[7414,0,"eck_t*) h"],[7555,0,"(uv_idle_t*) "],[7662,0,"(uv_handle_t*) "],[7745,5,""],[7745,0,"&eio_poll"],[7889,0,"(uv_async_t*) "],[8018,0,"(uv_handle_t*) "],[8228,0,"(uv_async_t*) "],[8356,0,"(uv_handle_t*) "],[32218,0,"(uv_timer_t*) "],[32294,0,"(uv_handle_t*) "],[39583,1,""],[39584,0,"sy"],[39587,3,""],[39587,0,"c"],[39706,0,"(uv_async_t*) "],[59391,56,""],[59392,134,""],[59437,7,""]],"_dtSpan":[173148,174663]},{"parents":[135],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[2106,12,""],[2107,12,""],[41126,23,""],[41127,18,""],[41129,106,""],[1940,59,""],[1817,0,"fdef __POSIX__\n# i"],[1863,0,"endif\n#"],[1995,0,"fdef __POSIX__\n# i"],[2045,0," "],[2077,0,"end"],[2081,0,"f\n#i"],[41032,0,"#ifdef"],[41039,0,"__POSIX__\n "],[41204,0,"#endif\n"],[5755,0,"Tick(void) {\n  // Avoid entering a V8 scope.\n  if (!need_tick_cb) return;\n\n  need_tick_cb = false;\n  if (uv_is_active((uv_handle_t*) &tick_spinner)) {\n    uv_idle_stop(&tick_spinner);\n    uv_unref();\n  }\n\n  Handle"],[5969,0,"cope scope;\n\n  if (tick_callback_sym.IsEm"],[6011,0,"ty()) {\n    // Lazily set the symbol\n    tick_callback_sym =\n      Pers"],[6083,0,"stent<Stri"],[6094,0,"g>::New(String::NewSymbol(\"_tickCallback\"));\n  }\n\n  Local<Value> cb_v = process->Get(tick_callback_sym);\n  if (!cb_v->IsFunction()) return;\n  Local<Function> cb = Local<Function>::Cast(cb_v);\n\n  TryCatch try_catch;\n\n  cb->Call(process, 0, NULL);\n\n  if (try_catch.HasCaught()) {\n    FatalException"],[6391,0,"try_catch);\n  }\n}\n\n\nstatic void Spin("],[6534,0,"  Tick();\n"],[7160,668,""]],"_dtSpan":[174663,176314]},{"parents":[136],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[56800,12,""],[56921,12,""],[57035,12,""],[57084,12,""],[57179,12,""],[57228,12,""],[57348,12,""],[57469,12,""],[57560,12,""],[58318,12,""]],"_dtSpan":[176314,176434]},{"parents":[137],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[25450,2,""],[25450,0,"70"],[25824,2,""],[25824,0,"70"]],"_dtSpan":[176434,176442]},{"parents":[138],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[3565,0,"\n// XXX use_uv defaults to false on POSIX platforms and to true on Windows\n// platforms. This can be set with \"--use-uv\" command-line flag. We intend\n// to remove the legacy backend once the libuv backend is passing all of the\n// tests.\n#ifdef __POSIX__\nstatic bool use_uv = false;\n#else\nstatic bool use_uv = true;\n#endif\n\n\n"],[47720,0,"  process->Set(String::NewSymbol(\"useUV\"), use_uv ? True() : False());\n"],[51962,0,"  --use-uv             use the libuv backend\\n\"\n         \""],[52937,0,"!strcmp(arg, \"--use-uv\")) {\n      use_uv = true;\n      argv[i] = const_cast<char*>(\"\");\n    } else if ("],[3190,25,""],[47663,15,""],[47664,9,""],[47666,42,""],[51802,73,""],[52614,33,""],[52615,7,""],[52616,28,""],[52619,9,""],[52620,20,""],[4801,5,""],[4801,0,"tim"],[4805,0,"r"],[5117,3,""],[5117,0,"i"],[5405,0,"c"],[5407,4,""],[5408,0,"ck"],[5445,1,""],[5446,13,""],[6712,3,""],[6712,0,"i"],[7471,1,""],[7471,0,"prep"],[7476,3,""],[7476,0,"r"],[7513,16,""],[7609,0,"c"],[7611,4,""],[7612,0,"ck"],[7648,1,""],[7649,4,""],[7650,9,""],[7740,3,""],[7740,0,"i"],[7779,1,""],[7780,12,""],[8059,1,""],[8060,0,"sy"],[8063,3,""],[8063,0,"c"],[8099,1,""],[8100,13,""],[8382,1,""],[8383,0,"sy"],[8386,3,""],[8386,0,"c"],[8423,1,""],[8424,13,""],[32358,5,""],[32358,0,"tim"],[32362,0,"r"],[32398,1,""],[32399,13,""],[39810,1,""],[39811,0,"sy"],[39814,3,""],[39814,0,"c"],[39872,14,""],[2077,0," includ"],[2085,0," <"],[2088,0,"o"],[2090,0,"e_t"],[2094,0,"mer.h>\n#endi"],[41454,0,"timer\")) {\n    exports = Object::New();\n    Timer::Initialize(exports);\n    binding_cache->Set(module, exports);\n\n  } else if (!strcmp(*module_v, \""]],"_dtSpan":[176442,177618]},{"parents":[139],"numChildren":1,"agent":63,"time":"1970-01-01T00:00:00Z","patches":[[41465,0,"#ifdef __POSIX__\n"],[41585,0,"#endif\n"]],"_dtSpan":[177618,177642]},{"parents":[140],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[59541,0,"\n  // This needs to run *before* V8::Initialize()\n  argv"],[59598,0,"="],[59600,0,"Init(argc, arg"],[59615,0,");\n\n  v"],[59673,28,""]],"_dtSpan":[177642,177748]},{"parents":[141],"numChildren":1,"agent":66,"time":"1970-01-01T00:00:00Z","patches":[[1622,0," ifd"],[1627,0,"f PTW32_STATIC_LIB\nexter"],[1652,0," \"C\" {\n  BOOL __c"],[1670,0,"ecl pthread_win32_process_attach_np (vo"],[1710,0,"d);\n  BOOL __cdecl pthread_win32_process_detach_np (void);\n}\n# endif\n#endi"],[59686,0,"\n#if defined __MINGW32__ && defined PTW32_STATIC_LIB\n"],[59741,0,"pthread_win32_process_attach_np();\n#endif\n\n  "],[60703,0,"\n#if defined __MINGW32__ && defined PTW32_STATIC_LIB\n  pthread_win32_process_detach_np();\n#endif\n\n"]],"_dtSpan":[177748,178102]},{"parents":[142],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[48101,11,""],[48101,0,"uv_"],[48105,2,""],[48107,8,""],[48107,0,"p"]],"_dtSpan":[178102,178127]},{"parents":[143],"numChildren":1,"agent":152,"time":"1970-01-01T00:00:00Z","patches":[[51623,0,"[ -e "],[51634,0," | script"],[51647,0,"] "],[51693,0,"[ -e "],[51704,0," | script"],[51717,0,"] "],[51841,0,"e, --eval script    evaluate script\\n\"\n         \"  -"]],"_dtSpan":[178127,178211]},{"parents":[144],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[2064,25,""],[44721,52,""],[49068,14,""],[49069,160,""],[4742,0,"70"],[4746,1,""],[4769,0,"000"],[5130,0,"000"],[5137,0,"000"],[5353,29,""],[5357,3,""]],"_dtSpan":[178211,178506]},{"parents":[145],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[44537,0,"static Handle<Object> GetFeatures() {\n  "],[44583,0,"Scope scope;\n\n  Local"],[44613,0,"obj = Object::New();\n  obj->Set(String::NewSymbol(\"uv\"), Boolean::New(use_uv));\n  obj->"],[44703,0,"(String::NewSymbol(\"ipv6\"), Tr"],[44734,0,"e()); // TODO "],[44749,0,"ing libuv\n  obj->Set(String::NewSymbol(\"tls\"),\n      Boolean::New(get_builtin_module(\"crypto\") != NULL));\n\n  return scope.Close(obj);\n}\n\n\nHandle<Object> Setup"],[48143,0,"feat"],[48148,1,""],[48148,0,"r"],[48150,2,""],[48150,0,"s"],[48155,2,""],[48155,0,"GetF"],[48160,1,""],[48160,0,"at"],[48163,5,""],[48164,1,""],[48165,8,""],[48166,1,""]],"_dtSpan":[178506,178889]},{"parents":[146],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[52398,51,""]],"_dtSpan":[178889,178940]},{"parents":[147],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[4021,0,"// disabled by default for now\nstatic bool use_http2 = false;\n"],[44785,0,"http2\"), Boolean::New(use_http2));\n  obj->Set(Str"],[44835,0,"ng::NewSymbol(\"i"],[52347,0,"  --use-http2          use the new and improved http library\\n\"\n         \""],[53293,0,"!strcmp(arg, \"--use-http2\")) {\n      use_http2 = true;\n      argv[i] = const_cast<char*>(\"\");\n    } else if ("],[1935,1,""],[1935,0,"\""],[1946,1,""],[1946,0,"\""]],"_dtSpan":[178940,179254]},{"parents":[148],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[55150,99,""],[55155,30,""],[55378,0,"static void EnableDebugSignalHandler(int signal) {\n  // This is signal safe.\n  hit_signal = true;\n  v8::Debug::SetDebugEventListener2(DebugSignalCB);\n  v8::Debug::DebugBreak();\n}\n\n\n"],[59603,17,""],[59604,18,""],[59605,15,""],[40692,0,"Persistent<Array> module_load_list;\n"],[41132,0,"    return scope.Close(exports);"],[41168,0,"\n\n  // Append a string to process.moduleLoadList\n  char buf[1024];\n  snprintf(buf, 1024, \"Binding %s\", *module_v);\n  uint32_t l = module_load_list->Length();\n "],[41328,0,"modul"],[41334,0,"_"],[41336,0,"oad_li"],[41343,0,"t->S"],[41348,0,"t(l,"],[41353,0,"Str"],[41357,0,"ng::New(bu"],[41368,0,"));\n\n"],[41374,0," if "],[45872,0,"// process.moduleLoadList\n  module_load_list = Persistent<Array>::New(Array::New());\n  process->Set(String::NewSymbol(\"moduleLoadList\"), module_load_list);\n\n  "]],"_dtSpan":[179254,180042]},{"parents":[149],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[25852,2,""],[25852,0,"62"],[26226,2,""],[26226,0,"62"]],"_dtSpan":[180042,180050]},{"parents":[150],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[4084,0,"#ifdef OPENSSL_NPN_NEGOTIATED\nstatic bool use_npn = true;\n#else\nstatic bool use_npn = false;\n#endif\n\n#ifdef SSL_CTRL_SET_TLSEXT_SERVERNAME_CB\nstatic bool use_sni = true;\n#else\nstatic bool use_sni = false;\n#endif\n\n"],[45401,0,"_npn\"), Boolean::New(use_npn));\n  obj->Set(String::NewSymbol(\"tls_sni\"), Boolean::New(use_sni));\n  obj->Set(String::NewSymbol(\"tls"]],"_dtSpan":[180050,180393]},{"parents":[132],"numChildren":2,"agent":17,"time":"1970-01-01T00:00:00Z","patches":[[1740,1,""],[1740,0,"\""],[1751,1,""],[1751,0,"\""]],"_dtSpan":[180393,180397]},{"parents":[151,152],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[1936,1,""],[1946,1,""]],"_dtSpan":[180397,180399]},{"parents":[153],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[1570,12,""],[1571,42,""],[58334,104,""]],"_dtSpan":[180399,180557]},{"parents":[154],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[4018,1,""],[4018,0,"1"],[45217,1,""],[45217,0,"1"],[45243,1,""],[45243,0,"1"],[53076,1,""],[53076,0,"1"],[53095,1,""],[53095,0,"l"],[53097,2,""],[53097,0,"g"],[53099,2,""],[53099,0,"cy"],[53102,9,""],[54024,1,""],[54024,0,"1"],[54045,1,""],[54045,0,"1"]],"_dtSpan":[180557,180587]},{"parents":[155],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[46053,0,"#ifdef NODE_PREFIX\n"],[46177,0,"#endif\n"],[54290,0,"#ifdef NODE_PREFIX\n"],[54357,0,"#endif\n#ifdef"],[54371,0,"NODE_CFLAGS\n "],[54431,0,"#endif\n"]],"_dtSpan":[180587,180665]},{"parents":[156],"numChildren":1,"agent":117,"time":"1970-01-01T00:00:00Z","patches":[[1279,0,"f defi"],[1286,0,"ed(_MSC_VER)\n#define snprintf _snprintf\n#endif\n#in"],[1369,1,""],[1375,0,"f !defined(_MSC_VER)\n#i"],[1412,0,"s"],[1418,0,"else\n#def"],[1429,0,"e strcasecmp _stri"],[1448,0,"mp\n#endif\n#inc"],[1515,0,"f !defined(_MSC_VER)\n#i"],[1555,0," /* setuid, getuid */"],[1578,0,"else\n#"],[1593,2,""],[1593,0,"di"],[1596,2,""],[1596,0,"ect"],[1604,0,"def"],[1609,0,"e "],[1612,2,""],[1612,0,"hdir _chdir\n#"],[1627,0,"fine"],[1632,5,""],[1632,0,"ge"],[1635,2,""],[1635,0,"cwd _g"],[1642,4,""],[1642,0,"tcwd"],[1657,3,""],[1657,0,"proces"],[1664,2,""],[1667,0,"\n#define"],[1676,4,""],[1676,0,"g"],[1679,1,""],[1679,0,"p"],[1682,1,""],[1683,0,"_"],[1687,0,"pid\n#endif\n#incl"],[1704,0,"de <errno.h>\n#"],[1719,0,"nclu"],[1724,0,"e"],[1726,1,""],[1726,0,"<sys"],[1731,0,"types.h>"],[1744,0," "],[1748,1,""],[1748,0,"ined("],[1764,0,") || defined(_MSC_VER)"],[2460,0,"f !defined(_MSC_VER)\n#i"],[2514,0,"end"],[2518,0,"f\n#i"],[2654,3,""],[2883,1,""],[2883,0,"if !d"],[2889,0,"fined(_MSC_VER)"],[47164,3,""],[49504,0,"*"],[49514,0," = new char"],[49792,0,"  delete [] execPath;\n"],[61116,0,"("],[61124,1,""],[61124,0,"("],[61136,0,") || defined(_MSC_VER))"],[61170,1,""],[61170,0,"("],[61187,0,")"],[62158,0,"("],[62166,1,""],[62166,0,"("],[62178,0,") || defined(_MSC_VER))"],[62212,1,""],[62212,0,"("],[62229,0,")"]],"_dtSpan":[180665,181147]},{"parents":[157],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[29503,0,"n"],[29518,0,"# define umask _umask\n#endif\n"],[29597,0," "],[29646,0," "],[30486,0,"#ifdef __POSIX__\n\n"],[30674,0,"\n"],[31871,0,"\n"],[32899,0,"\n"],[50154,0,"  NODE_SET_METHOD(process, \"umask\", Umask);\n\n"],[50401,44,""],[44173,0,"HandleScope scope;\n  "],[44259,0,"\n"],[44324,7,""],[44324,0,"int n = key.length() + val.length() + 2;\n  char* pair = new char[n];\n  snprintf(pair, n, \"%s=%s\", *key, *val);\n  int r = "],[44446,3,""],[44446,0,"putenv(pair);\n  if "],[44466,0,"r) {\n    fprintf("],[44484,0,"tderr, \""],[44493,0,"rror pu"],[44504,0,": '%s'\\n\", pair"],[44520,0,";\n  }\n  delete [] pair;"],[44551,0,"\n"],[44970,0,"HandleScope scope;\n\n  "],[45025,0,"\n"],[45159,7,""],[45159,0,"int n = key.length() + 2;\n    char* pair = new char[n];\n    snprintf(pair, n, \"%s=\", *key);\n    int r = "],[45264,3,""],[45264,0,"putenv(pair);\n    if "],[45286,0,"r) {\n      fprintf(stderr, \"error "],[45328,0,": '%s'\\n\", pair"],[45344,0,";\n    }"],[45352,0,"    delete [] pair;\n"],[45402,0,"\n"]],"_dtSpan":[181147,181767]},{"parents":[158],"numChildren":1,"agent":117,"time":"1970-01-01T00:00:00Z","patches":[[1692,0,"include <io.h>\n#define umask _umask\ntypedef int mode_t;\n#"],[29554,49,""]],"_dtSpan":[181767,181873]},{"parents":[159],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[2784,0,"#include <v8_typed_array.h>\n"],[62109,0,"  v8_typed_array::AttachBindings(context->Global());\n"],[35505,0,"node_module_struct compat_mod;\n  "],[36742,0,"symstr = NULL;\n\n  "],[36896,1,""],[36896,0,"memset(&c"],[36906,2,""],[36906,0,"mpat"],[36914,2,""],[36914,0,", 0, siz"],[36923,7,""],[36923,0,"of"],[36936,0,")"],[36939,0,"\n"]],"_dtSpan":[181873,182042]},{"parents":[152],"numChildren":1,"agent":17,"time":"1970-01-01T00:00:00Z","patches":[[32705,0,"node_module_struct compat_mod;\n  "],[33942,0,"symstr = NULL;\n\n  "],[34096,1,""],[34096,0,"memset(&c"],[34106,2,""],[34106,0,"mpat"],[34114,2,""],[34114,0,", 0, siz"],[34123,7,""],[34123,0,"of"],[34136,0,")"],[34139,0,"\n"]],"_dtSpan":[182042,182130]},{"parents":[160,161],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[35538,33,""],[36738,17,""],[36739,1,""],[36896,9,""],[36906,4,""],[36922,8,""],[36925,2,""],[36937,1,""],[36938,1,""]],"_dtSpan":[182130,182206]},{"parents":[162],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[2813,50,""]],"_dtSpan":[182206,182256]},{"parents":[163],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[46012,0,"debug\"),\n#if defined(DEBUG) && DEBUG\n    True()\n#else\n    False()\n#endif\n  );\n\n  obj->Set(String::NewSymbol(\""],[3997,21,""],[3998,1,""],[3999,19,""],[4001,22,""],[4002,25,""],[4003,2,""],[4005,23,""],[4006,31,""],[4007,12,""],[4008,18,""],[4009,7,""],[4010,15,""],[4011,14,""],[4012,19,""],[4013,20,""],[4014,4,""],[4018,14,""],[4019,20,""],[4023,7,""],[53745,4,""],[53745,0,"legacy"],[53760,2,""],[53769,4,""],[53769,0,"egacy"],[53782,0," (default: libuv)"],[54666,2,""],[54666,0,"legacy"],[54693,3,""],[54693,0,"fals"]],"_dtSpan":[182256,182712]},{"parents":[164],"numChildren":1,"agent":66,"time":"1970-01-01T00:00:00Z","patches":[[3882,41,""],[3888,9,""],[3889,2,""],[3890,62,""],[8016,1,""],[8017,53,""],[8018,4,""],[8019,2,""],[8020,2,""],[8022,10,""],[8023,74,""],[8024,19,""],[8025,2,""],[8026,22,""],[8027,10,""],[8028,33,""],[8029,19,""],[8030,22,""],[8031,1,""],[8032,27,""],[8033,2,""],[8034,5,""],[8035,18,""],[8036,85,""],[8037,7,""],[8038,54,""],[8039,9,""],[8040,53,""],[8042,10,""],[8043,103,""],[8044,30,""],[8046,8,""],[8047,11,""],[8048,3,""],[8049,2,""],[8050,79,""],[8051,19,""],[8052,13,""],[8053,20,""],[8054,14,""],[8055,549,""],[58114,554,""]],"_dtSpan":[182712,184775]},{"parents":[165],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[5809,0,"uv_default_loop()"],[6551,0,"uv_default_loop()"],[7746,0,"uv_default_loop()"],[31719,0,"uv_default_loop()"],[57711,0,"uv_default_loop(), "],[57833,0,"uv_default_loop()"],[57870,0,"uv_default_loop(), "],[57990,0,"uv_default_loop()"],[58026,0,"uv_default_loop(), "],[58078,0,"uv_default_loop()"],[58115,0,"uv_default_loop(), "],[58211,0,"uv_default_loop()"],[58247,0,"uv_default_loop(), "],[58294,0,"uv_default_loop()"],[58331,0,"uv_default_loop(), "],[58379,0,"uv_default_loop()"],[58870,0,"uv_default_loop(), "],[58910,0,"\n     "],[59027,0,"uv_default_loop()"],[60737,0,"uv_default_loop()"]],"_dtSpan":[184775,185118]},{"parents":[166],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[59879,14,""]],"_dtSpan":[185118,185132]},{"parents":[167],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[55171,0,"\n  debugger_running = true;\n"],[55236,0,"static volatile bool debugger_running = false;\n"],[55355,0,"!debugger_running && "],[54472,0,"static volatile bool debugger_running = false;\n"],[55281,47,""],[55202,0,"\\n"],[55261,3,""],[55262,0,"d Enab"],[55270,1,""],[55270,0,"De"],[55273,2,""],[55273,0,"ugSigna"],[55281,2,""],[55281,0,"Handler("],[55290,0,"n"],[55292,1,""],[55292,0," "],[55299,1,""],[55299,0,") {"],[55303,4,""],[55303,0,"  // Bre"],[55312,2,""],[55312,0,"k on"],[55317,0,"e"],[55319,1,""],[55319,0,"pr"],[55322,0,"cess w"],[55329,1,""],[55329,0,"ll"],[55332,1,""],[55332,0,"r"],[55334,1,""],[55334,0,"t"],[55336,4,""],[55336,0,"r"],[55338,5,""],[55338,0," exe"],[55343,0,"uti"],[55348,1,""],[55348,0," "],[55350,0,"o"],[55352,0,"v8\n  v8::"],[55368,5,""],[55370,8,""],[55370,0,"bugBr"],[55376,1,""],[55377,3,""],[55377,0,"k("],[55380,2,""],[55380,0,";\n"],[55405,11,""],[55406,38,""],[55409,24,""],[55502,181,""],[55252,0,"#ifdef __POSIX__\n"],[55522,0,"#endif // __POSIX__"],[55546,0," "],[55550,0,"ined(__MINGW32__) ||"],[55571,0,"defined("],[55580,0,"MSC"],[55584,0,"VER)\nstatic bool EnableDebugSignalHandler(DWORD signal) {\n  if (signal != CTRL_BREAK_EVENT) return false;\n\n  // Break once process will return execution to v8\n  v8::Debug::DebugBreak();\n\n  if (!debugger_running) {\n    fprintf(stderr, \"Hit Ctrl+Break - starting debugger agent.\\n\");\n    EnableDebug(false);\n  }\n\n  return true;\n}\n#endif\n\n\n#ifdef __"],[59590,0,"#if defined(__MINGW32__) || defined(_MSC_VER)\n    SetConsoleCtrlHandler((PHANDLER_ROUTINE) EnableDebugSignalHandler, TRUE);\n#endif\n"],[55892,0,"  return true;\n  "],[55910,0," else {"],[55918,0,"    // Run default system action (terminate)"],[55965,0,"  "],[55974,3,""],[55974,0,"fals"],[55981,0,"  }\n\n"]],"_dtSpan":[185132,186335]},{"parents":[168],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[49597,7,""],[49597,0,"uv_t"],[49602,7,""],[49602,0,"y_re"],[49607,3,""],[49608,4,""],[49608,0,"t_m"],[49615,12,""],[49661,1,""],[49661,0,"uv_"],[49665,7,""],[49665,0,"ty_re"],[49671,3,""],[49672,4,""],[49672,0,"t_m"],[49679,12,""]],"_dtSpan":[186335,186417]},{"parents":[169],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[3911,63,""],[44382,49,""],[44383,16,""],[52206,50,""],[52220,14,""],[53023,35,""],[53024,16,""],[53025,8,""],[53026,50,""]],"_dtSpan":[186417,186718]},{"parents":[170],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[32100,0,"\n"],[32123,0,"UVCounters(const v8::Arguments& args) {\n  HandleScope scope;\n\n  uv_counters_t* c = &uv_default_loop()->counters;\n\n  Local<Object> obj = Object::New();\n\n#define setc(name) obj->Set(String::New(#name), Integer::New(c->name));\n\n  setc(eio_init)\n  setc(req_init)\n  setc(handle_init)\n  setc(stream_init)\n  setc(tcp_init)\n  setc(udp_init)\n  setc(pipe_init)\n  setc(tty_init)\n  setc(prepare_init)\n  setc(check_init)\n  setc(idle_init)\n  setc(async_init)\n  setc(timer_init)\n  setc(process_init)\n  setc(fs_event_init)\n\n#undef setc\n\n  return scope.Close(obj);\n}\n\n\nv8::Handle<v8::Value> "],[49923,0,"  NODE_SET_METHOD(process, \"uvCounters\", UVCounters);\n"],[19202,0,"if (!callback_v->IsFunction()) {\n    fprintf(stderr, \"method = %s\", method);\n  }\n  "]],"_dtSpan":[186718,187430]},{"parents":[171],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[56028,0,"== CTRL_C_EVENT) exit(1);\n  if (signal "]],"_dtSpan":[187430,187469]},{"parents":[172],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[2316,22,""],[2462,7,""],[2463,2,""],[2464,1,""],[2465,3,""],[2466,12,""],[41253,62,""],[41254,109,""],[2470,62,""],[2316,24,""],[23588,7,""],[23588,0,"uv_t"],[23593,7,""],[23593,0,"y_re"],[23598,3,""],[23599,4,""],[23599,0,"t_m"],[23606,12,""],[23609,0,"\n"],[26885,0,"/* STDERR IS ALWAY SYNC ALWAYS UTF8 */\n"],[26945,0,"WriteError (const Arguments& args) {\n  HandleScope scope;\n\n  if (args.Length() < 1) {\n    return Undefined();\n  }\n\n  String::Utf8Value msg(args[0]->ToString());\n\n  ssize_t r;\n  size_t written = 0;\n  while (written < (size_t) msg.length()) {\n    r = write(STDERR_FILENO, (*msg) + written, msg.length() - written);\n    if (r < 0) {\n      if (errno == EAGAIN || errno == EIO) {\n        usleep(100);\n        continue;\n      }\n      return ThrowException(ErrnoException(errno, \"write\"));\n    }\n    written += (size_t)r;\n  }\n\n  return True();\n}\n\n\nstatic Handle<Value> "],[49850,0,"writeError\", WriteError);\n\n  NODE_SET_METHOD(process, \""],[50485,24,""],[27320,0,"#ifdef __POSIX__\n"],[27358,0,"#else\n        Sleep(100);\n#endif\n"],[3750,28,""],[45285,10,""],[45285,0,"Tru"],[45289,1,""],[45290,6,""],[53940,33,""],[53941,7,""],[53942,28,""],[53944,12,""],[53945,4,""],[53946,24,""],[2487,24,""],[48404,530,""],[42878,319,""],[51883,5,""],[51889,0,".js [arguments] \\n\"\n   "],[51913,1,""],[51914,0,"    \"       node cluster "],[51948,2,""]],"_dtSpan":[187469,189633]},{"parents":[173],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[52324,76,""]],"_dtSpan":[189633,189709]},{"parents":[174],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[47518,54,""]],"_dtSpan":[189709,189763]},{"parents":[175],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[5050,1,""],[5056,1,""],[46666,0,"j = "]],"_dtSpan":[189763,189769]},{"parents":[176],"numChildren":1,"agent":66,"time":"1970-01-01T00:00:00Z","patches":[[1896,103,""],[1897,13,""],[1898,11,""],[1899,12,""],[1900,12,""],[1902,7,""],[59750,1,""],[59751,25,""],[59752,2,""],[59753,95,""],[60725,122,""]],"_dtSpan":[189769,190172]},{"parents":[177],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[26673,476,""],[26674,40,""],[26675,135,""],[48092,55,""],[2939,40,""],[32479,7,""],[32514,1,""],[32515,4,""],[32516,3,""],[32727,42,""],[32877,39,""],[32878,11,""],[32879,7,""],[32880,3,""],[17149,5,""],[17149,0,"syscall"],[19209,0,"t err) {\n  HandleS"],[19229,1,""],[19229,0,"p"],[19232,0,"s"],[19235,1,""],[19235,0,"p"],[19237,0,";\n\n  if (errno_symbol.IsEmpty()"],[19274,3,""],[19274,0,"  "],[19279,0,"no"],[19282,1,""],[19282,0,"symbol ="],[19291,0,"NODE_PSYMBOL(\""],[19308,0,"no\")"],[19316,0,"}\n\n  if ("],[19335,0,"= UV_UNKNOWN) {\n   "],[19356,0,"har errn"],[19365,0,"_buf[100];\n    snprintf(errno_buf, 100, \"Unknown system errno %"],[19429,0,"\", err.sys_"],[19441,0,"rrno_)"],[19451,0,"  "],[19490,0,"errno_symbol, "],[19515,3,""],[19515,0,"(errno_"],[19523,0,"uf));\n  } else {\n    Context::GetCurrent()->Gl"],[19570,0,"ba"],[19574,1,""],[19574,0,")->S"],[19579,0,"t(e"],[19586,2,""],[19586,0,"_symbol"],[19634,0,"  "],[19674,0,"  }\n"],[1194,0,"fdef HAVE_DTRACE\n# i"],[1237,0,"#endif\n"],[51152,56,""]],"_dtSpan":[190172,191431]},{"parents":[178],"numChildren":1,"agent":66,"time":"1970-01-01T00:00:00Z","patches":[[2118,18,""],[2130,3,""],[2131,16,""],[2132,2,""],[2133,2,""],[2134,2,""],[2135,11,""],[40796,87,""],[40797,43,""],[40798,43,""],[40849,7,""],[2118,0,"fdef __POSIX__\n# i"],[2149,0,"io_watcher.h>\n#endi"],[2169,0,"\n#"],[2172,0,"nc"],[2175,0,"ud"],[2178,0," <node_file"],[40905,0,"#ifdef __POSIX__\n  } else if (!strcmp(*module_v, \"io_watcher\")) {\n    exports = Object::New();\n    IOWatcher::Initialize(exports);\n    binding_cache->Set(module, exports);\n#endif\n\n"]],"_dtSpan":[191431,191899]},{"parents":[179],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[18842,1,""],[32276,0,"\\\n    "],[32324,0,"stati"],[32330,0,"_cast<int32_t>(c"],[32354,0,")"],[1958,44,""],[33892,0,"#endif // __POSIX__\n\n"],[33928,0,"UV_DYNAMIC"],[33939,0," "],[34113,0,"HandleScope scope;\n  char symbol[1024], *base, *pos;\n  uv_lib_t lib;\n  "],[34217,5,""],[34217,0,"uv_"],[34221,4,""],[34221,0,"rr_t "],[34227,0,"rr;\n "],[34233,5,""],[34233,0,"int r"],[34266,0,"{\n    "],[34292,0,"  }\n"],[34411,13,""],[34412,4,""],[34413,68,""],[34414,8,""],[34415,37,""],[34415,0,"r"],[34417,20,""],[34417,0,"="],[34420,43,""],[34421,14,""],[34421,0,"_"],[34440,9,""],[34440,0,"&lib"],[34447,1,""],[34449,9,""],[34449,0,"if"],[34452,0,"("],[34456,0,".c"],[34459,13,""],[34460,1,""],[34462,1,""],[34462,0,"!"],[34465,1,""],[34466,2,""],[34466,0,"V_OK"],[34478,16,""],[34478,0,"S"],[34480,13,""],[34481,5,""],[34482,1,""],[34483,1,""],[34484,5,""],[34485,6,""],[34485,0,"o"],[34487,2,""],[34488,1,""],[34489,1,""],[34490,3,""],[34504,7,""],[34504,0,"s"],[34506,0,"op"],[34509,3,""],[34509,0,".Cl"],[34513,1,""],[34513,0,"se"],[34516,0,"Integ"],[34522,2,""],[34522,0,"r::N"],[34527,5,""],[34527,0,"w(-1)"],[34560,6,""],[34560,0,"path"],[34589,1,""],[34589,0,"base = *pat"],[34601,0,";\n\n  /* Find the sh"],[34622,0,"ed library filename within the full"],[34658,0,"path. "],[34665,0,"/\n#ifdef __POSIX__\n  po"],[34689,2,""],[34689,0," = "],[34695,0,"rchr(base, '/');\n "],[34714,0,"if (pos !"],[34729,3,""],[34729,0,")"],[34737,2,""],[34737,0,"b"],[34739,3,""],[34740,2,""],[34740,0,"e"],[34744,1,""],[34744,0,"po"],[34747,5,""],[34751,0,"}\n#else // Windows\n"],[34772,3,""],[34772,0,"fo"],[34776,1,""],[34776,0,"(;;) {\n    "],[34788,0,"os"],[34795,1,""],[34796,2,""],[34796,0,"pb"],[34799,0,"k"],[34801,0,"ba"],[34804,2,""],[34804,0,"e"],[34807,1,""],[34807,0,"\"\\\\"],[34811,1,""],[34811,0,":\""],[34825,0,"os"],[34828,1,""],[34829,0,"="],[34845,0,"break;\n    }\n    ba"],[34865,2,""],[34865,0,"e"],[34870,0,"os "],[34874,0," "],[34878,1,""],[34880,1,""],[34882,0,"#endif\n"],[34892,0,"/*"],[34895,0,"Strip"],[34901,0,"the .node extension. */\n  "],[34928,0,"os"],[34941,0,"ba"],[34944,2,""],[34944,0,"e"],[34955,2,""],[34960,0,"os"],[34974,1,""],[34978,1,""],[34980,0,"os"],[34991,2,""],[34998,0,"/* Add the"],[35009,0,"`_module`"],[35020,0,"uff"],[35024,3,""],[35024,0,"x "],[35027,0,"o"],[35029,2,""],[35029,0,"th"],[35032,3,""],[35033,1,""],[35033,0,"ex"],[35036,2,""],[35038,1,""],[35039,1,""],[35039,0,"ion na"],[35046,4,""],[35046,0,"e."],[35049,0,"*/\n"],[35054,5,""],[35059,3,""],[35059,0,"npr"],[35063,5,""],[35063,0,"n"],[35065,14,""],[35065,0,"f"],[35067,3,""],[35068,0,"ymbo"],[35073,4,""],[35073,0,","],[35081,1,""],[35081,0," symbol, "],[35091,0,"%s"],[35101,3,""],[35101,0,","],[35103,2,""],[35103,0,"base"],[35112,0,"if"],[35115,0,"(r"],[35118,1,""],[35118,0,"<= 0 || r >= siz"],[35135,5,""],[35135,0,"of "],[35141,2,""],[35141,0,"bol) {\n    e"],[35154,1,""],[35154,0,"r.code = UV_ENOMEM;\n "],[35176,4,""],[35177,2,""],[35177,0," S"],[35180,0,"tErr"],[35185,0,"o(err"],[35197,1,""],[35197,0,"r"],[35199,9,""],[35200,0,"u"],[35202,4,""],[35203,1,""],[35204,3,""],[35204,0,"sc"],[35207,3,""],[35207,0,"p"],[35209,3,""],[35209,0,".Clo"],[35214,2,""],[35215,2,""],[35216,7,""],[35216,0,"Integer::N"],[35227,1,""],[35227,0,"w(-1"],[35232,4,""],[35330,0,";\n"],[35333,1,""],[35334,15,""],[35335,10,""],[35336,0,"r = "],[35341,6,""],[35341,0,"v_"],[35349,4,""],[35350,1,""],[35350,0,"ib"],[35357,8,""],[35357,0,"bol,"],[35362,1,""],[35364,6,""],[35364,0,"in"],[35367,0,"erp"],[35371,8,""],[35371,0,"et_ca"],[35378,22,""],[35378,0,"<v"],[35381,3,""],[35382,7,""],[35382,0,"d**>(&m"],[35390,2,""],[35391,1,""],[35391,0,"));\n"],[35402,1,""],[35402,0,"err.c"],[35409,0,"e"],[35411,1,""],[35411,0,"!"],[35414,1,""],[35415,2,""],[35415,0,"V_OK"],[35619,1,""],[35622,4,""],[35623,11,""],[35624,0,"rr"],[35629,0,"uv_"],[35638,4,""],[35639,1,""],[35639,0,"ib"],[35649,0,", reinterpret_cast<void**>(&mod->register_func)"],[35707,8,""],[35707,0,"err.co"],[35714,1,""],[35716,1,""],[35716,0,"!"],[35719,1,""],[35720,2,""],[35720,0,"V_OK"],[35734,0,"uv_"],[35745,4,""],[35746,1,""],[35746,0,"ib"],[35751,1,""],[35755,13,""],[35756,9,""],[35757,13,""],[35757,0,"S"],[35759,1,""],[35760,5,""],[35761,1,""],[35762,1,""],[35763,5,""],[35764,12,""],[35765,3,""],[35765,0,"("],[35767,25,""],[35767,0,"rr"],[35770,1,""],[35785,3,""],[35785,0,"sc"],[35788,4,""],[35788,0,"p"],[35790,3,""],[35790,0,".Cl"],[35794,0,"se(I"],[35799,1,""],[35799,0,"t"],[35801,2,""],[35801,0,"g"],[35803,5,""],[35803,0,"r::New(-1)"],[35822,1,""],[35823,20,""],[35824,1,""],[35825,24,""],[35826,3,""],[36241,21,""],[48422,1,""],[48422,0,"_kil"],[48427,4,""],[48430,6,""],[48430,0,"Kill"],[48437,0,"#endif"],[48444,0,"//"],[48447,0,"__POSIX__\n\n  "],[48486,4,""],[48486,0,"d"],[48488,0,"open"],[48495,8,""],[48495,0,"DLOp"],[48501,16,""],[48501,0,");"]],"_dtSpan":[191899,193585]},{"parents":[180],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[34747,0," + 1"]],"_dtSpan":[193585,193589]},{"parents":[181],"numChildren":1,"agent":94,"time":"1970-01-01T00:00:00Z","patches":[[36248,230,""],[36249,2,""],[36250,24,""],[36251,69,""],[36252,12,""],[36253,23,""],[36254,58,""],[36255,9,""],[36256,14,""],[36257,6,""],[36258,5,""],[36259,58,""],[36260,465,""],[46926,48,""]],"_dtSpan":[193589,194612]},{"parents":[182],"numChildren":1,"agent":66,"time":"1970-01-01T00:00:00Z","patches":[[33505,18,""],[33681,1,""],[33682,2,""],[33682,0,"n"],[33753,2,""],[33753,0,"uv_err_"],[33762,0,"er"],[33768,0,"uv_"],[33794,0,"er"],[33797,0,".code"],[33806,1,""],[33806,0,"UV_OK"],[33813,1,""],[33813,0,"{\n    S"],[33822,1,""],[33822,0,"Er"],[33826,0,"o(err);\n   "],[33838,2,""],[33839,5,""],[33840,1,""],[33841,6,""],[33841,0,"u"],[33844,0," sc"],[33848,3,""],[33848,0,"p"],[33850,3,""],[33850,0,".Cl"],[33854,0,"se(I"],[33859,1,""],[33859,0,"teg"],[33864,11,""],[33864,0,"::New(-1"],[33876,0,"  }\n"],[33906,20,""],[33907,1,""],[47367,0,"#endif // __POSIX__\n"],[47430,20,""]],"_dtSpan":[194612,194803]},{"parents":[183],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[11442,1020,""],[11443,17,""],[11444,32,""],[11445,55,""],[11446,3,""],[11447,2193,""],[13509,67,""],[13520,7,""],[13538,7,""],[14509,0,"#ifdef _WIN32\nLocal<Value> WinapiErrnoException(int errorno,\n                                  const char *syscall,\n                                  const char *msg,\n                                  const char *path) {\n  Local<Value> e;\n  if (!msg[0]) {\n    msg = winapi_strerror(errorno);\n  }\n  Local<String> message = String::NewSymbol(msg);\n\n  if (syscall_symbol.IsEmpty()) {\n    syscall_symbol = NODE_PSYMBOL(\"syscall\");\n    errno_symbol = NODE_PSYMBOL(\"errno\");\n    errpath_symbol = NODE_PSYMBOL(\"path\");\n    code_symbol = NODE_PSYMBOL(\"code\");\n  }\n\n  if (path) {\n    Local<String> cons1 = String::Concat(message, String::NewSymbol(\" '\"));\n    Local<String> cons2 = String::Concat(cons1, String::New(path));\n    Local<String> cons3 = String::Concat(cons2, String::NewSymbol(\"'\"));\n    e = Exception::Error(cons3);\n  } else {\n    e = Exception::Error(message);\n  }\n\n  Local<Object> obj = e->ToObject();\n\n  obj->Set(errno_symbol, Integer::New(errorno));\n  if (path) obj->Set(errpath_symbol, String::New(path));\n  if (syscall) obj->Set(syscall_symbol, String::NewSymbol(syscall));\n  return e;\n}\n#endif\n\n\n"],[31972,0,"Local<Value> exception = Exception::Error(\n        St"],[32026,0,"ing::N"],[32033,0,"w(\"process.dlopen takes exactly 2 arguments.\"));\n    re"],[32093,3,""],[32093,0,"ThrowExc"],[32102,1,""],[32102,0,"pt"],[32105,0,"o"],[32107,0,"("],[32109,2,""],[32109,0,"xception"],[32306,1,""],[32306,0,"Local<Valu"],[32317,0,"> excep"],[32325,0,"ion = "],[32332,0,"xception::Er"],[32345,0,"or(\n        St"],[32360,0,"i"],[32362,0,"g::C"],[32367,0,"ncat(String::New"],[32384,0,"\"Unabl"],[32391,0," to load shared library \"),\n        a"],[32429,0,"gs[0]->ToSt"],[32441,0,"ing())"],[32461,2,""],[32461,0,"Thr"],[32465,1,""],[32465,0,"wExc"],[32470,3,""],[32470,0,"pti"],[32474,2,""],[32474,0,"n"],[32476,5,""],[32477,4,""],[32477,0,"xc"],[32480,5,""],[32480,0,"ption"],[33109,0,"Local<Value> "],[33123,3,""],[33123,0,"x"],[33125,2,""],[33126,0,"ption"],[33133,11,""],[33138,1,""],[33138,0,"    Exc"],[33146,0,"p"],[33148,0,"ion::"],[33156,1,""],[33157,0,"r"],[33159,0,"String::N"],[33169,0,"w(\"Out of memo"],[33184,1,""],[33184,0,"y.\")"],[33202,1,""],[33202,0,"ThrowEx"],[33210,2,""],[33211,3,""],[33211,0,"pti"],[33215,4,""],[33216,1,""],[33216,0,"("],[33218,1,""],[33218,0,"xc"],[33221,10,""],[33221,0,"ption"],[33751,1,""],[33751,0,"Local<Value> exception = Exc"],[33780,0,"p"],[33782,0,"ion::"],[33790,0,"or(\n          Stri"],[33809,0,"g::New(\"Out "],[33822,1,""],[33822,0,"f m"],[33826,1,""],[33826,0,"mo"],[33829,0,"y.\")"],[33849,2,""],[33849,0,"Thr"],[33853,1,""],[33853,0,"wExc"],[33858,3,""],[33858,0,"pti"],[33862,2,""],[33862,0,"n"],[33864,3,""],[33865,1,""],[33865,0,"xc"],[33868,10,""],[33868,0,"ption"],[33993,3,""],[33994,3,""],[34011,0,"\n        "],[14614,0,"*"],[14616,1,""],[14669,0,"*"],[14671,1,""],[14720,1,""],[14721,0," "],[14758,0," || !msg"],[41610,0,"static Handle<Value> DebugProcess(const Arguments& args);\n\n"],[45593,0,"_"],[45595,0,"ebugProcess\", DebugProcess);\n\n  NODE_SET_METHOD(process, \"d"],[50389,0,"\n"],[50397,0,"Isolate* node_isolate = NULL;\nstatic "],[50525,0,"If we're called from another thread, make sure to enter the right\n  // v8 isolate.\n  node_isolate->Enter();\n\n  // "],[51289,0,"  fflush(stderr);\n"],[51335,0,"\n  node_isolate->Exit();\n"],[51508,0,"node_isolate"],[51646,1,""],[51646,0,"\n\nstatic void R"],[51662,0,"gisterSignalHa"],[51678,0,"ler("],[51683,1,""],[51683,0,"nt"],[51686,2,""],[51686,0,"signal,"],[51694,12,""],[51694,0,"vo"],[51697,1,""],[51697,0,"d"],[51699,0,"(*han"],[51705,0,"l"],[51707,1,""],[51707,0,"r)("],[51712,0,"t)) {\n  struct sigaction sa;\n\n  m"],[51746,1,""],[51746,0,"mset"],[51751,11,""],[51751,0,"&sa, 0, sizeof(sa"],[51769,0,");\n"],[51773,2,""],[51774,0,"sa.sa_han"],[51784,0,"l"],[51786,0,"r = handler;\n  sig"],[51806,1,""],[51806,0,"lls"],[51810,1,""],[51810,0,"t"],[51812,4,""],[51812,0,"&sa.sa"],[51819,3,""],[51819,0,"mask"],[51824,0,";"],[51826,0,"  "],[51829,1,""],[51829,0,"ig"],[51832,0,"c"],[51835,3,""],[51836,1,""],[51836,0,"n(signa"],[51844,0,", &sa,"],[51851,1,""],[51851,0,"NULL);\n}\n\n\nHa"],[51865,0,"dle<V"],[51871,1,""],[51872,0,"u"],[51874,0,"> "],[51881,2,""],[51881,0,"Process(const Ar"],[51898,0,"ume"],[51902,0,"ts& "],[51907,1,""],[51907,0,"rgs) {\n  "],[51922,7,""],[51922,0,"Scope"],[51929,0,"cope;\n\n  "],[51939,0,"f (ar"],[51945,0,"s.Le"],[51950,2,""],[51950,0,"gth() != 1"],[51966,0,"  return ThrowException(Except"],[51997,1,""],[51997,0,"on::Error(\n   "],[52012,2,""],[52012,0,"    Str"],[52020,0,"n"],[52022,0,"::New(\"I"],[52031,0,"v"],[52034,0,"id number"],[52044,2,""],[52044,0,"of"],[52047,6,""],[52047,0,"arguments.\")));\n  }\n\n  pid"],[52074,1,""],[52074,0,"t pid;\n  int r;\n\n  pid = args[0]->Integer"],[52116,3,""],[52116,0,"alue("],[52122,0,";\n  r ="],[52130,2,""],[52130,0,"k"],[52132,1,""],[52132,0,"ll"],[52135,0,"pid, SIGUSR"],[52156,6,""],[52156,0,"r"],[52161,1,""],[52161,0,"0) {\n    return "],[52178,5,""],[52178,0,"hrow"],[52183,3,""],[52183,0,"xception("],[52193,1,""],[52193,0,"rrno"],[52198,2,""],[52198,0,"xception(errno, \"kill\")"],[52222,0,";\n "],[52226,0,"}\n\n  "],[52238,0,"Undefined();\n}\n#endi"],[52259,0," // __POSIX__\n\n\n#ifdef _WIN32\nDWORD WINAPI En"],[52305,0,"b"],[52307,1,""],[52308,1,""],[52308,0,"DebugThreadProc(void* arg) {"],[52337,1,""],[52385,5,""],[52388,23,""],[52421,0,"or (int i = 0; i < 1; i++) {\n      f"],[52473,18,""],[52473,0,"S"],[52498,0,"r\\"],[52509,0,"  fflush(stderr);\n      "],[52557,0,"}\n  }\n\n  v8::Debug::DebugB"],[52585,0,"ak();\n\n  re"],[52601,0,"0;\n}\n\n\nstatic int Ge"],[52622,0,"DebugSignalHandle"],[52640,0,"MappingName(DWORD pid, char* buf, size_t b"],[52683,0,"f_l"],[52687,1,""],[52687,0,"n) {"],[52694,1,""],[52694,0,"return snprintf(buf, buf_len,"],[52724,0,"\"node-d"],[52732,0,"bug-hand"],[52741,0,"er-%u\", pid);\n}\n\n\n"],[52760,0,"tatic int R"],[52772,0,"gisterDebugSignalHandler()"],[52803,0,"char mapping_name[32];\n  HANDLE"],[52835,0,"mapping_handle;\n"],[52852,2,""],[52853,0,"DWO"],[52857,0,"D pid;\n  LPTHREAD_START_ROUTINE* handler;\n\n  pid = GetC"],[52913,0,"rre"],[52917,0,"tProcessId();\n\n"],[52933,0," if (GetDebugSignalHan"],[52956,0,"lerMappingName(pid,\n                                       mapping_name,\n                                       siz"],[53072,0,"o"],[53074,0," m"],[53077,0,"pping_name) < 0) {\n    ret"],[53104,0,"rn -1;\n  }\n\n  mapping_hand"],[53131,0,"e = Crea"],[53140,0,"eFileMappingA(INVALID_HANDLE_VALUE,\n                                      NULL,\n                                      PAGE_READWRITE,\n                                      0,\n                                     "],[53353,2,""],[53354,1,""],[53354,0,"izeof *handl"],[53367,0,"r,\n                                      mapping_na"],[53419,0,"e);\n "],[53425,0,"if (m"],[53431,1,""],[53431,0,"pping_handle == NULL) {\n    re"],[53462,0,"urn -1;\n  }\n\n  handler = (LPTHREAD_START_ROUTINE*) MapViewOfFile(mapp"],[53532,0,"ng_handle,\n                                                    FILE_MAP_ALL_ACCESS,\n                                                    0,\n                                                    0,\n                                                    size"],[53783,0,"f *ha"],[53789,0,"dler);\n"],[53797,0," if "],[53802,1,""],[53802,0,"handl"],[53809,0," == NULL) {\n    CloseHandle("],[53838,0,"app"],[53843,0,"g_h"],[53847,1,""],[53847,0,"ndl"],[53852,0,";"],[53865,0,"-1;\n  }\n\n  *handler = EnableDebugThreadProc;\n\n  UnmapViewO"],[53924,0,"File((void*) h"],[53939,0,"nd"],[53942,1,""],[53943,0,"r)"],[53947,0,"\n"],[53950,0,"return 0;\n"],[53963,1,""],[53964,1,""],[53964,0,"static Handle<Value> DebugProcess(const Arguments& args) {\n  HandleScope scope;\n  Handl"],[54052,0,"<Value> rv = Undefi"],[54072,0,"e"],[54074,0,"();\n  DWORD p"],[54088,1,""],[54088,0,"d;"],[54091,0,"  HANDLE process = NULL;"],[54116,0,"  HANDLE thread = NULL;"],[54140,1,""],[54140,0,"  HANDLE mapp"],[54154,0,"ng = NULL;\n  char mapping_name[32];\n  LPTHREAD_START_ROUTINE* handler = NULL;\n\n  i"],[54237,0," (args.Length() != 1) {\n    rv = ThrowException(Exception::Error(String::New(\"Invali"],[54322,0," numb"],[54328,0,"r o"],[54333,0,"arguments.\")));\n    goto out;\n  }\n\n  pid = (DWORD) args[0]->IntegerValue();\n\n  process = OpenProcess(PROCESS_CREATE_THREAD | PROCESS_QUERY_INFORMATION |\n                            PROCESS"],[54522,0,"VM"],[54525,0,"O"],[54527,0,"ERATI"],[54533,0,"N | PROCE"],[54543,0,"S_VM_WR"],[54551,1,""],[54551,0,"TE |\n                            PROCESS"],[54592,0,"VM"],[54595,0,"READ,"],[54601,0,"                        FALSE,"],[54632,0,"                        pid);\n  if (proces"],[54675,0," == NULL) {\n    rv = ThrowExcep"],[54707,0,"ion(Win"],[54715,1,""],[54715,0,"p"],[54717,0,"ErrnoEx"],[54725,1,""],[54725,0,"ept"],[54729,0,"o"],[54731,0,"(Ge"],[54735,0,"LastError(),"],[54748,1,""],[54748,0,"\"OpenProc"],[54758,0,"ss\"));\n    "],[54770,0,"oto out;\n  }\n\n  "],[54787,1,""],[54787,0,"f (Ge"],[54793,0,"D"],[54795,1,""],[54795,0,"bug"],[54811,0,"MappingName"],[54823,0,"p"],[54825,0,"d,\n                                       mapping_"],[54876,1,""],[54876,0,"ame,\n                                      "],[54922,0,"zeof mappin"],[54934,0,"_"],[54937,2,""],[54937,0,"me) <"],[54943,0,"0) {\n    r"],[54954,0," = Thr"],[54961,0,"wExcept"],[54969,2,""],[54969,0,"on"],[54972,3,""],[54972,0,"ErrnoExceptio"],[54986,2,""],[54986,0,"("],[54989,0,"rno, \"sprintf\""],[55004,0,");\n    goto out;\n  }\n\n  mapping = OpenFileMapping"],[55054,0,"FILE_MAP_READ, FALSE, mapp"],[55082,1,""],[55082,0,"g_name"],[55089,0,";\n  if (mapping == NULL"],[55118,2,""],[55118,0,"  rv = Th"],[55128,1,""],[55128,0,"owEx"],[55133,0,"ep"],[55136,2,""],[55137,1,""],[55137,0,"on(Win"],[55144,0,"piErrnoEx"],[55154,0,"ep"],[55160,0,"(GetLastError(),"],[55177,0,"\""],[55179,1,""],[55179,0,"printf\"))"],[55190,0,"    goto out;"],[55206,1,""],[55206,0,"}\n\n  handl"],[55217,2,""],[55217,0,"r = (LPTHREAD_START_ROUTINE*) MapVi"],[55253,1,""],[55253,0,"wOfFile"],[55261,2,""],[55261,0,"m"],[55263,0,"pping,\n                                                    FILE_MAP_READ"],[55336,0,"\n                                                    0,\n                                                   "],[55446,0,"\n                                                   "],[55505,2,""],[55505,0," *h"],[55509,1,""],[55509,0,"ndler"],[55519,6,""],[55519,0,"if ("],[55532,0,"="],[55534,0,"NULL || *"],[55550,1,""],[55550,0," == NULL) {"],[55564,0,"  rv = ThrowException(WinapiErrnoException(GetLa"],[55613,0,"tError(), \"MapV"],[55629,1,""],[55629,0,"ewO"],[55633,0,"F"],[55636,0,"e\"));\n    goto out;\n  }\n\n  thread = CreateRemoteThread(process,\n                              NULL,\n                              0,\n                              *hand"],[55805,1,""],[55806,0,"r,\n                              NULL,\n                              0,\n                              NULL);\n  if (thread == NULL) {\n    rv = ThrowException(WinapiErrnoExcep"],[55980,0,"ion"],[55984,2,""],[55984,0,"GetL"],[55989,1,""],[55990,0,"tError(),\n                                             \"Cre"],[56050,1,""],[56050,0,"teRe"],[56055,0,"oteThre"],[56063,2,""],[56063,0,"d\")"],[56071,0,"  goto out;\n  }\n\n  // Wait fo"],[56101,0," th"],[56105,0," "],[56107,1,""],[56107,0,"hread to te"],[56119,0,"mi"],[56122,0,"ate\n "],[56128,1,""],[56129,0,"f (WaitForSin"],[56143,0,"leObject(thread, INFINITE) != WAIT_OBJECT_0) {\n    rv = ThrowException(Win"],[56218,0,"piErrnoEx"],[56228,0,"ep"],[56235,0,"GetLa"],[56241,0,"tError(),\n                                             \"Wa"],[56300,0,"tForSingleObject\"));\n    "],[56326,1,""],[56326,0,"oto out;\n  }\n\n out:\n  if (process != NULL) {\n   CloseH"],[56381,0,"nd"],[56384,1,""],[56384,0,"e(process);\n  }\n"],[56401,1,""],[56401,0," if (thread != NULL) {\n    Clo"],[56432,0,"eHandle(thre"],[56445,1,""],[56445,0,"d);\n  }\n  if (handler != NULL) {\n    UnmapViewOfFile(handler);\n  }\n  if (mapping !="],[56534,0," {\n    CloseHandle(mapping)"],[56563,0,"  "],[56567,0,"\n  return Undefined();\n}\n"],[56602,1,""],[56603,3,""],[56603,0,"W"],[56605,3,""],[56605,0,"N32"],[59328,0,"\n"],[59771,0,"  // Fetch a reference to the main isolate, so we have a reference to it\n  // even when we need it to access it from another (debugger) thread.\n  node_isolate = Isolate::GetCurrent();\n"],[60115,1,""],[60116,3,""],[60116,0,"W"],[60118,3,""],[60118,0,"N32"],[60132,13,""],[60134,16,""],[60152,0,"("],[60158,4,""],[60158,0,"lse"],[60165,2,""],[60166,14,""],[60166,0,"os"],[60169,37,""],[60169,0,"x"],[60175,1,""],[60175,0,"R"],[60177,4,""],[60177,0,"gi"],[60180,4,""],[60181,0,"e"],[60183,0,"Signa"],[60197,14,""],[60197,0,"S"],[60199,3,""],[60199,0,"GUSR1,"],[60230,6,""],[60239,0," // __POSIX__"],[25009,0,"\n"],[25078,8,""],[25079,22,""],[25343,0,"#ifdef _WIN32\nstatic Handle<Value> CwdForDrive(const Arguments& args) {\n  HandleScope scope;\n\n  if (args.Length() < 1) {\n    Local<Value> exception = Exception::Error(\n        String::New(\"process._cwdForDrive takes exactly 1 argument.\"));\n    return ThrowException(exception);\n  }\n\n  Local<String> driveLetter = args[0]->ToString();\n  if (driveLetter->Length() != 1) {\n    Local<Value> exception = Exception::Error(\n        String::New(\"Drive name should be 1 character.\"));\n    return ThrowException(exception);\n  }\n\n  char drive;\n\n  driveLetter->WriteAscii(&drive, 0, 1, 0);\n  if (drive >= 'a' && drive <= 'z') {\n    // Convert to uppercase\n    drive += 'A' - 'a';\n  } else if (drive < 'A' || drive > 'Z') {\n    // Not a letter\n    Local<Value> exception = Exception::Error(\n        String::New(\"Drive name should be a letter.\"));\n    return ThrowException(exception);\n  }\n\n  WCHAR env_key[] = L\"=X:\";\n  env_key[1] = (WCHAR) drive;\n\n  DWORD len = GetEnvironmentVariableW(env_key, NULL, 0);\n  if (len == 0 && GetLastError() == ERROR_ENVVAR_NOT_FOUND) {\n    // There is no current directory for that drive. Default to drive + \":\\\".\n    Local<String> cwd = String::Concat(String::New(&drive, 1),\n                                       String::New(\":\\\\\"));\n    return scope.Close(cwd);\n\n  } else if (len == 0) {\n    // Error\n    Local<Value> exception = Exception::Error(\n      String::New(winapi_"],[26741,0,"rerror(GetL"],[26753,0,"stError())));\n    re"],[26774,0,"urn ThrowExcept"],[26790,0,"on(ex"],[26796,0,"eption);\n  }\n\n  WCHAR* buffer = new"],[26832,0,"WC"],[26835,0,"AR[len];\n  if (buffer == NULL) {\n    Loc"],[26876,0,"l<Value> exceptio"],[26894,0," = Exception::Error(\n        String::New(\"Out of memory.\"));\n    return ThrowException(exception);\n  }\n\n  DWORD len2 = GetEnvironmentVariableW(env_key, buffer, len);\n  if (len2 == 0 || len2 >= len) {\n    // Error\n    "],[27112,0,"e"],[27115,0,"te[] buffer;\n    Local"],[27145,0,"exception = Exception::Error(\n      String::New(winapi_strerror(GetLastError())));\n    return ThrowException(exception);\n  }\n\n  Local<String> cwd = String::New(reinterpret_cast<uint16_t*>(buffer), len2);\n  delete[] buffer;\n  return scope.Close(cwd);\n}\n#endif\n\n\nstatic Handle<Value> "],[47287,0,"#ifdef _WIN32\n  NODE_SET_METHOD(process, \"_cwdForDrive\", CwdForDrive);\n#endif\n\n"]],"_dtSpan":[194803,207371]},{"parents":[184],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[35787,0,"\n"],[35794,1,""],[35794,0,"c"],[35796,0,"nst "],[35801,0,"h"],[35803,3,""],[35803,0,"r* mess"],[35811,2,""],[35811,0,"g"],[35813,1,""],[35813,0,";\n    "],[35820,0," if ("],[35826,1,""],[35826,0,"rr."],[35830,0,"od"],[35833,5,""],[35835,0,"="],[35837,0,"UV_"],[35841,2,""],[35841,0,"NOENT)\n        messag"],[35863,0," = \"Module entry "],[35881,0,"oin"],[35885,1,""],[35885,0," not f"],[35892,0,"u"],[35894,8,""],[35894,0,"d.\";"],[35905,0,"else\n"],[35914,5,""],[35914,0,"    messa"],[35924,3,""],[35925,2,""],[35925,0," = "],[35944,2,""],[35946,0,"\n"],[35975,1,""],[35975,0,"E"],[35984,0,"::Error(String::New(message))"]],"_dtSpan":[207371,207543]},{"parents":[185],"numChildren":1,"agent":136,"time":"1970-01-01T00:00:00Z","patches":[[32890,5,""],[32890,0,"Numb"],[32901,12,""]],"_dtSpan":[207543,207564]},{"parents":[186],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[3131,0,"bool print_eval = false;\nstatic "],[46818,0,"  process->Set(String::NewSymbol(\"_print_eval\"), Boolean::New(print_eval));\n  "],[50677,0,"p, --print          print result of --eval\\n\"\n         \"  -"],[52382,0," ||\n        strcmp(arg, \"-pe\") == 0"],[52544,0,"if ("],[52551,0,"[1] == 'p') {\n        print_e"],[52581,0,"al = true;\n      }\n      argv"],[52700,0,"print\") == 0 || strcmp(arg, \"-p\") == 0) {\n      print_eval = true;\n      argv[i] = const_cast<char*>(\"\");\n    } else if (strcmp(arg, \"--"]],"_dtSpan":[207564,207966]},{"parents":[187],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[14541,0,"static const char* get_uv_errno_string(int errorno) {\n  uv_err_t err;\n  memset(&err, 0, sizeof err);\n  err.code = (uv_err_code)errorno;\n  return uv_err_name(err);\n}\n\n\nstatic const char* get_uv_errno_message(int errorno) {\n  uv_err_t err;\n  memset(&err, 0, sizeof err);\n  err.code = (uv_err_code)errorno;\n  return uv_strerror(err);\n}\n\n\n// hack alert! copy of ErrnoException, tuned for uv errors\nLocal<Value> UVException(int errorno,\n                         const char *syscall,\n                         const char *msg,\n                         const char *path) {\n  static Persistent<String> syscall_symbol;\n  static Persistent<String> errpath_symbol;\n  static Persistent<String> code_symbol;\n\n  if (syscall_symbol.IsEmpty()) {\n    syscall_symbol = NODE_PSYMBOL(\"syscall\");\n    errno_symbol = NODE_PSYMBOL(\"errno\");\n    errpath_symbol = NODE_PSYMBOL(\"path\");\n    code_symbol = NODE_PSYMBOL(\"code\");\n  }\n\n  if (!msg || !msg[0])\n    msg = get_uv_errno_message(errorno);\n\n  Local<String> estring = String::NewSymbol(errno_string(errorno));\n  Local<String> message = String::NewSymbol(msg);\n  Local<String> cons1 = String::Concat(estring, String::NewSymbol(\", \"));\n  Local<String> cons2 = String::Concat(cons1, message);\n\n  Local<Value> e;\n\n  Local<String> path_str;\n\n  if (path) {\n#ifdef _WIN32\n    if (strncmp(path, \"\\\\\\\\?\\\\UNC\\\\\", 8) == 0) {\n      path_str = String::Concat(String::New(\"\\\\\\\\\"), String::New(path + 8));\n    } else if (strncmp(path, \"\\\\\\\\?\\\\\", 4) == 0) {\n      path_str = String::New(path + 4);\n    } else {\n      path_str = String::New(path);\n    }\n#else\n    path_str = String::New(path);\n#endif\n\n    Local<String> cons3 = String::Concat(cons2, String::NewSymbol(\" '\"));\n    Local<String> cons4 = String::Concat(cons3, path_str);\n    Local<String> cons5 = String::Concat(cons4, String::NewSymbol(\"'\"));\n    e = Exception::Error(cons5);\n  } else {\n    e = Exception::Error(cons2);\n  }\n\n  Local<Object> obj = e->ToObject();\n\n  // TODO errno should probably go\n  obj->Set(errno_symbol, Integer::New(errorno));\n  obj->Set(code_symbol, estring);\n  if (path) obj->Set(errpath_symbol, path_str);\n  if (syscall) obj->Set(syscall_symbol, String::NewSymbol(syscall));\n  return e;\n}\n\n\n"],[1631,24,""],[1633,5,""],[1634,15,""],[27043,2,""],[27043,0,"uv_err_"],[27056,0,"uv_"],[27081,0,".code"],[27090,1,""],[27090,0,"UV_OK"],[27125,0,"UV"],[27136,7,""],[27137,2,""],[27138,15,""],[27138,0,".c"],[27141,2,""],[27141,0,"d"],[27143,1,""],[27143,0,", \"uv_chdi"],[27154,4,""],[27154,0,"\""],[27261,0,"#ifdef _WIN32"],[27277,0,"/* MAX_PATH is in "],[27299,0,"acters,"],[27307,1,""],[27307,0,"not bytes. Make su"],[27326,0,"e"],[27328,1,""],[27328,0,"we"],[27331,0,"have enou"],[27341,0,"h h"],[27345,0,"adroom. */\n  char buf[MAX_PATH * 4 + 1];\n#else\n  char buf[PATH_MAX + 1];\n#endif\n\n  uv_err_"],[27436,0," r = uv_"],[27448,3,""],[27464,3,""],[27482,0,".code"],[27488,1,""],[27488,0,"!"],[27491,1,""],[27492,2,""],[27492,0,"V_OK"],[27526,0,"UV"],[27537,4,""],[27537,0,"("],[27539,0,".c"],[27542,11,""],[27542,0,"d"],[27544,0,", \"uv_c"],[27552,17,""],[27552,0,"d\""],[27565,3,""],[27580,3,""],[27632,1,""],[27632,0,"buf"],[27669,0,"\n"],[3712,0,"#ifdef __POSIX__\n"],[3916,0,"#endif\n"],[15535,0,"get_uv_"]],"_dtSpan":[207966,210550]},{"parents":[188],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[53283,0,"n"],[53288,2,""],[53303,0,"#ifdef _WIN32\n         \"NODE_PATH              ';'-separated list of directories\\n\"\n#else\n"],[53463,0,"#endif\n"]],"_dtSpan":[210550,210650]},{"parents":[189],"numChildren":2,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[4808,6,""],[5851,6,""],[15073,130,""],[33486,6,""],[33715,6,""],[50538,0,"_l"],[51653,0,"_l"],[58979,0,"_l"],[59293,0,"_l"],[59551,0,"_l"],[60576,0,"_l"],[61239,0,"_l"],[61275,0,"_l"],[61861,1,""],[61862,5,""],[61910,2,""],[61912,4,""],[62229,6,""],[62259,1,""],[62260,5,""],[62330,1,""],[62331,5,""],[62716,6,""],[62843,6,""],[63295,6,""],[63338,6,""],[63442,6,""],[63481,6,""],[63586,6,""],[63669,6,""],[63698,6,""],[63789,6,""],[63867,6,""],[64823,6,""],[65103,0,"_l"],[65166,0,"_l"],[65375,0,"_l"],[65793,0,"_l"],[66011,0,"_l"],[66384,0,"_l"]],"_dtSpan":[210650,210934]},{"parents":[190],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[2596,0,"\n#i"],[2600,6,""],[2601,0,"lud"],[2606,0,"<"],[2611,2,""],[2611,0,"_vars.h>"],[2621,6,""],[2621,0,"//"],[2624,1,""],[2624,0,"W"],[2626,4,""],[2626,0," do "],[2631,0,"h"],[2633,0," followi"],[2642,0,"g "],[2645,4,""],[2645,0,"o minimiz"],[2655,1,""],[2655,0," "],[2657,1,""],[2657,0,"he"],[2660,4,""],[2660,0,"d"],[2662,6,""],[2664,3,""],[2664,0,"l"],[2666,1,""],[2666,0,"b"],[2668,4,""],[2669,0,"we"],[2673,4,""],[2673,0," v0.6 b"],[2681,1,""],[2681,0,"a"],[2683,2,""],[2683,0,"ch."],[2687,0,"W"],[2689,2,""],[2689,0," wa"],[2693,6,""],[2693,0,"t t"],[2697,2,""],[2698,0,"// u"],[2703,0,"e "],[2706,0,"he v"],[2711,1,""],[2711,0,"r"],[2713,3,""],[2713,0,"abl"],[2717,1,""],[2718,1,""],[2718,0," a"],[2721,0," "],[2723,0,"h"],[2725,5,""],[2725,0,"y we"],[2730,0,"e be"],[2737,1,""],[2738,0,"u"],[2740,10,""],[2740,0,"ed "],[2744,0,"ef"],[2747,2,""],[2747,0,"re."],[2751,4,""],[2751,0,"#def"],[2756,1,""],[2756,0,"ne"],[2759,1,""],[2759,0,"ch"],[2762,2,""],[2762,0,"ck_t"],[2767,1,""],[2767,0,"ck_wa"],[2773,0,"ch"],[2776,5,""],[2777,4,""],[2778,0,"NODE_VAR(ch"],[2790,4,""],[2790,0,"ck_"],[2794,1,""],[2794,0,"ick"],[2798,10,""],[2798,0,"w"],[2801,1,""],[2802,2,""],[2802,0,"h"],[2805,4,""],[2805,0,")\n#d"],[2810,6,""],[2810,0,"f"],[2813,2,""],[2813,0,"e"],[2826,9,""],[2827,7,""],[2827,0,"NODE_VAR(cod"],[2840,14,""],[2847,1,""],[2847,0,")"],[2849,4,""],[2849,0,"#def"],[2854,1,""],[2854,0,"ne"],[2857,1,""],[2857,0,"d"],[2859,0,"bug_po"],[2866,3,""],[2867,0," NODE_VAR(d"],[2879,1,""],[2879,0,"bug_por"],[2887,4,""],[2887,0,")\n#def"],[2895,2,""],[2895,0,"e"],[2897,1,""],[2897,0,"d"],[2899,0,"bug_w"],[2905,2,""],[2905,0,"i"],[2907,0,"_c"],[2910,0,"nnec"],[2915,2,""],[2915,0," NODE"],[2921,3,""],[2921,0,"VAR(de"],[2928,6,""],[2928,0,"ug_w"],[2933,1,""],[2934,0,"t_"],[2937,2,""],[2937,0,"onn"],[2941,4,""],[2941,0,"c"],[2943,0,")\n#d"],[2948,6,""],[2948,0,"f"],[2951,4,""],[2952,5,""],[2952,0," "],[2954,1,""],[2954,0,"mit"],[2964,9,""],[2965,1,""],[2965,0,"NODE_VAR("],[2975,2,""],[2975,0,"m"],[2977,0,"t_"],[2980,1,""],[2980,0,"ymbol)\n#d"],[2990,6,""],[2990,0,"f"],[2993,7,""],[2994,1,""],[2994,0," "],[2997,1,""],[2997,0,"rno"],[3007,8,""],[3008,1,""],[3008,0,"NODE_VAR("],[3019,10,""],[3020,1,""],[3021,19,""],[3022,1,""],[3029,1,""],[3029,0,")"],[3031,14,""],[3031,0,"#d"],[3034,6,""],[3034,0,"f"],[3037,2,""],[3037,0,"e"],[3040,2,""],[3040,0,"rrpa"],[3045,0,"h"],[3053,6,""],[3053,0," NODE_VAR(errp"],[3069,3,""],[3069,0,"h_sym"],[3075,1,""],[3077,3,""],[3077,0,")\n#def"],[3085,2,""],[3086,3,""],[3087,3,""],[3087,0,"ev"],[3091,4,""],[3091,0,"_"],[3094,2,""],[3094,0,"r"],[3096,1,""],[3096,0,"ng"],[3099,6,""],[3099,0,"NODE_VAR("],[3119,0,")\n#define"],[3129,1,""],[3129,0,"gc_check"],[3139,4,""],[3139,0,"ODE_VAR(gc_check)"],[3157,4,""],[3157,0,"#def"],[3162,0,"ne g"],[3167,0,"_idle"],[3173,0,"NODE_VAR(gc_idle)\n#def"],[3197,0,"e gc_"],[3203,0,"imer"],[3208,2,""],[3208,0,"NODE_VAR(gc_"],[3222,1,""],[3222,0,"mer)\n#defi"],[3233,0,"e getbuf NODE"],[3247,0,"VAR(g"],[3253,1,""],[3253,0,"tbuf)\n#"],[3261,1,""],[3261,0,"ef"],[3265,1,""],[3266,1,""],[3267,6,""],[3267,0,"heap_"],[3273,1,""],[3273,0,"o"],[3275,3,""],[3275,0,"al_sym"],[3282,1,""],[3285,3,""],[3285,0,"NODE"],[3290,1,""],[3290,0,"VAR(h"],[3296,3,""],[3296,0,"ap"],[3299,0,"tot"],[3303,1,""],[3303,0,"l_symbol)\n#d"],[3316,0,"fi"],[3319,1,""],[3319,0,"e"],[3321,3,""],[3321,0,"he"],[3324,1,""],[3324,0,"p_u"],[3329,2,""],[3329,0,"d_"],[3332,6,""],[3332,0,"ym"],[3335,1,""],[3338,5,""],[3338,0,"NODE"],[3343,1,""],[3343,0,"VAR(he"],[3350,2,""],[3350,0,"p_used"],[3357,1,""],[3357,0,"symb"],[3362,1,""],[3362,0,"l)\n#defi"],[3372,2,""],[3373,4,""],[3374,0,"i"],[3376,0,"ten"],[3380,2,""],[3380,0,"rs_"],[3384,5,""],[3384,0,"ymbol"],[3390,0,"NODE_VAR(l"],[3401,1,""],[3401,0,"s"],[3403,2,""],[3404,3,""],[3404,0,"ners"],[3409,1,""],[3409,0,"symb"],[3414,8,""],[3414,0,"l)"],[3417,0,"#define max_"],[3432,2,""],[3433,1,""],[3433,0,"k_s"],[3437,2,""],[3437,0,"ze"],[3440,0,"NODE_VAR("],[3463,6,""],[3463,0,")"],[3465,4,""],[3465,0,"#def"],[3470,1,""],[3470,0,"ne"],[3473,2,""],[3473,0,"need"],[3478,3,""],[3478,0,"ti"],[3483,2,""],[3484,1,""],[3484,0,"b NODE_VAR(n"],[3497,2,""],[3497,0,"ed"],[3505,3,""],[3506,1,""],[3506,0,"b)\n#defin"],[3516,4,""],[3516,0," op"],[3520,2,""],[3521,1,""],[3521,0,"on_end_index"],[3534,2,""],[3534,0,"NODE"],[3539,0,"VAR(o"],[3545,1,""],[3545,0,"tion_"],[3551,4,""],[3551,0,"nd"],[3554,1,""],[3554,0,"index)\n#define"],[3589,8,""],[3590,7,""],[3590,0,"NODE"],[3595,8,""],[3595,0,"VAR("],[3600,4,""],[3601,15,""],[3602,0,"par"],[3606,1,""],[3612,6,""],[3612,0,"w"],[3615,1,""],[3616,2,""],[3616,0,"h"],[3619,1,""],[3619,0,")\n#def"],[3626,3,""],[3627,4,""],[3627,0,"e p"],[3633,3,""],[3634,3,""],[3635,1,""],[3635,0,"ev"],[3638,1,""],[3639,18,""],[3640,0,"N"],[3642,1,""],[3642,0,"D"],[3644,8,""],[3645,6,""],[3645,0,"V"],[3647,5,""],[3647,0,"R(prin"],[3654,0,"_ev"],[3658,7,""],[3659,3,""],[3659,0,")\n#d"],[3664,3,""],[3664,0,"fi"],[3667,0,"e"],[3669,3,""],[3669,0,"p"],[3671,5,""],[3671,0,"oc"],[3674,1,""],[3675,2,""],[3676,5,""],[3677,2,""],[3677,0,"NODE_VAR(pr"],[3689,3,""],[3689,0,"ce"],[3692,11,""],[3693,2,""],[3693,0,")"],[3696,2,""],[3697,1,""],[3697,0,"e"],[3699,3,""],[3700,2,""],[3700,0,"n"],[3702,1,""],[3703,3,""],[3703,0,"rss"],[3707,12,""],[3707,0,"symbol NOD"],[3718,2,""],[3719,3,""],[3720,1,""],[3720,0,"A"],[3722,4,""],[3722,0,"(rss"],[3727,3,""],[3728,6,""],[3728,0,"ym"],[3731,1,""],[3733,3,""],[3733,0,")\n#d"],[3738,3,""],[3738,0,"f"],[3740,2,""],[3740,0,"ne"],[3743,9,""],[3744,2,""],[3744,0,"y"],[3746,1,""],[3746,0,"c"],[3748,4,""],[3748,0,"ll_sym"],[3756,1,""],[3758,3,""],[3758,0,"NODE"],[3763,0,"VAR(sy"],[3770,6,""],[3770,0,"c"],[3773,0,"l_"],[3776,9,""],[3776,0,"ymbol)"],[3783,1,""],[3784,2,""],[3787,18,""],[3787,0,"in"],[3790,1,""],[3791,6,""],[3792,3,""],[3792,0,"ick_callb"],[3802,1,""],[3802,0,"ck"],[3805,4,""],[3805,0,"sym"],[3809,8,""],[3809,0,"NODE"],[3814,1,""],[3814,0,"VAR"],[3818,7,""],[3819,5,""],[3820,1,""],[3821,1,""],[3821,0,"k_"],[3827,5,""],[3827,0,"bac"],[3831,7,""],[3831,0,"_"],[3833,0,"ym)"],[3837,7,""],[3837,0,"#d"],[3840,5,""],[3842,19,""],[3843,2,""],[3844,10,""],[3846,5,""],[3847,4,""],[3848,2,""],[3848,0,"k_"],[3851,0,"pinner"],[3858,1,""],[3858,0,"NODE_VAR("],[3868,1,""],[3868,0,"i"],[3871,2,""],[3871,0,"_"],[3873,2,""],[3873,0,"pinn"],[3878,12,""],[3879,22,""],[3879,0,")"],[3882,0,"d"],[3884,2,""],[3884,0,"f"],[3886,9,""],[3887,1,""],[3888,1,""],[3890,4,""],[3890,0,"ick_"],[3896,8,""],[3896,0,"m"],[3898,3,""],[3898,0,"_h"],[3901,5,""],[3901,0,"a"],[3903,2,""],[3904,6,""],[3904,0,"NODE_VAR("],[3914,1,""],[3915,2,""],[3916,7,""],[3916,0,"k_"],[3919,0,"ime_"],[3925,2,""],[3926,5,""],[3926,0,"d)"],[3929,7,""],[3929,0,"#d"],[3932,10,""],[3932,0,"f"],[3935,1,""],[3936,5,""],[3938,2,""],[3938,0,"ick_"],[3943,1,""],[3944,0,"me"],[3948,3,""],[3948,0,"NODE_"],[3954,9,""],[3954,0,"AR("],[3958,2,""],[3960,1,""],[3960,0,"k_"],[3964,10,""],[3964,0,"m"],[3966,4,""],[3967,0,")"],[3969,6,""],[3969,0,"#d"],[3972,1,""],[3972,0,"f"],[3974,14,""],[3975,4,""],[3977,1,""],[3978,4,""],[3978,0,"n"],[3980,3,""],[3981,23,""],[3982,3,""],[3983,10,""],[3983,0,"h"],[3985,11,""],[3985,0,"_"],[3987,2,""],[3987,0,"xc"],[3990,7,""],[3990,0,"p"],[3992,1,""],[3993,3,""],[3994,1,""],[3994,0,"n_"],[3997,11,""],[3999,0,"b"],[4001,2,""],[4001,0,"l"],[4003,18,""],[4003,0,"NODE_V"],[4010,2,""],[4010,0,"R(unc"],[4016,1,""],[4016,0,"ug"],[4019,0,"t_"],[4022,2,""],[4022,0,"x"],[4024,7,""],[4025,8,""],[4025,0,"p"],[4027,15,""],[4028,5,""],[4029,14,""],[4030,7,""],[4030,0,"_"],[4032,11,""],[4032,0,"ymb"],[4036,2,""],[4037,5,""],[4037,0,")\n#d"],[4042,4,""],[4044,3,""],[4044,0,"n"],[4046,11,""],[4047,2,""],[4048,1,""],[4050,13,""],[4051,2,""],[4051,0,"d"],[4053,5,""],[4053,0,"bu"],[4056,1,""],[4057,2,""],[4057,0,"ag"],[4060,5,""],[4060,0,"n"],[4062,4,""],[4063,0,"NODE_VAR("],[4073,1,""],[4073,0,"se"],[4076,1,""],[4077,1,""],[4078,3,""],[4078,0,"bu"],[4081,1,""],[4082,8,""],[4083,15,""],[4084,5,""],[4085,8,""],[4086,9,""],[4086,0,"t)"],[4097,4,""],[4097,0,"use"],[4101,4,""],[4101,0,"npn"],[4105,4,""],[4105,0,"NODE_VAR(use_npn)"],[4131,2,""],[4131,0,"use_sni NODE"],[4144,1,""],[4144,0,"V"],[4146,2,""],[4146,0,"R(use"],[4152,10,""],[4152,0,"sni)\n"],[4158,2,""],[4158,0,"\nnam"],[4163,3,""],[4163,0,"spac"],[4169,11,""],[4169,0,"node"],[4174,3,""],[4174,0,"{\n\n\n"],[4249,39,""],[4250,26,""],[4157,0,"#define uncaught_exception_counter NODE_VAR(uncaught_exception_counter)"],[4229,0,"#define debug_watcher NODE_VAR(debug_watcher)"],[4275,0,"#defi"],[4281,0,"e binding_c"],[4293,0,"che NODE_VAR(binding_cache)\n#define module_load_list NODE_VAR("],[4356,0,"odul"],[4361,0,"_load_li"],[4370,0,"t)\n#define node_isolate NODE_VAR(node_isolate)\n#define debugger_running NODE_VAR(debugger_running)\n\n\nnames"],[38784,42,""],[38785,1,""],[40358,1,""],[40359,33,""],[41034,36,""],[41035,35,""],[55034,9,""],[55035,28,""],[55037,3,""],[55038,8,""],[55039,15,""],[55040,22,""],[64082,2,""],[64084,4,""],[64096,6,""]],"_dtSpan":[210934,213919]},{"parents":[191],"numChildren":1,"agent":129,"time":"1970-01-01T00:00:00Z","patches":[[26611,0,"Abort(const Arguments& args) {\n  abort();\n}\n\n\nstatic Handle<Value> "],[49430,0,"abort\", Abort);\n  NODE_SET_METHOD(process, \""]],"_dtSpan":[213919,214030]},{"parents":[192],"numChildren":1,"agent":66,"time":"1970-01-01T00:00:00Z","patches":[[26653,0,"  return Undefined();\n"],[1784,25,""],[1787,24,""],[1788,9,""],[1789,18,""],[1790,29,""],[1885,22,""],[4342,0,"#define prog_start_time NODE_VAR(prog_start_time)"],[16426,0,"// Does about the same as strerror(),\n// but supports all windows error messages\nstatic const char *winapi_strerror(const int errorno) {\n  char *errmsg = NULL;\n\n  FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM |\n      FORMAT_MESSAGE_IGNORE_INSERTS, NULL, errorno,\n      MAKE"],[16728,0,"ANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), (LPTSTR)&errmsg, 0, NULL);\n\n  if (errmsg) {\n    // Remove trailing newlines\n    f"],[16848,0,"r (int i = strlen(errmsg) - 1;\n        i >= 0 && (errmsg[i] == '\\n' || errmsg[i] == '\\r'); i--) {\n      errmsg[i] = '\\0';\n    }\n\n    return errmsg;\n  } else {\n    // FormatMessage failed\n    return \"Unknown error\";\n  }\n}\n\n\nLo"],[34314,0,"\n"],[34418,1,""],[34434,0,";\n\n"],[34438,1,""],[34439,0,"uv_err_t"],[34448,6,""],[34448,0,"er"],[34451,7,""],[34451,0," = uv_u"],[34464,0,"&up"],[34468,2,""],[34468,0,"im"],[34481,5,""],[34482,0,"rr.code"],[34490,1,""],[34490,0,"!="],[34493,1,""],[34493,0,"UV_OK"],[34570,0," - prog_start_time"],[35330,2,""],[35330,0,"uv_err_"],[35339,0,"er"],[35345,6,""],[35345,0,"uv_"],[35349,4,""],[35350,0,"siden"],[35356,1,""],[35356,0,"_s"],[35359,0,"t_"],[35362,0,"em"],[35382,0,"e"],[35384,0,"r.code"],[35394,1,""],[35394,0,"UV_OK"],[35429,0,"UV"],[35440,3,""],[35440,0,"(e"],[35444,0,".c"],[35447,0,"de, \"uv_"],[35456,4,""],[35456,0,"es"],[35459,0,"de"],[35462,4,""],[35462,0,"t_s"],[35466,3,""],[35467,1,""],[35467,0,"_m"],[35470,2,""],[35470,0,"m"],[35473,7,""],[35473,0,"y\""],[35477,1,""],[43309,10,""],[43310,1,""],[43315,6,""],[43319,9,""],[43319,0,"buf"],[43323,1,""],[43323,0,"e"],[43325,4,""],[43325,0,"[512];\n  uv_g"],[43340,1,""],[43340,0,"_p"],[43348,1,""],[43348,0,"_t"],[43355,2,""],[43355,0,"buffer, siz"],[43367,1,""],[43367,0,"of(buffer)"],[43401,4,""],[43413,4,""],[43413,0,"buff"],[43418,7,""],[43419,11,""],[43661,2,""],[43661,0,"// TODO: protect with "],[43684,2,""],[43684,0," l"],[43687,5,""],[43687,0,"ck\n  uv_s"],[43698,1,""],[43698,0,"_p"],[43706,1,""],[43706,0,"_t"],[61985,0,"Initialize prog_start_time to get relative uptime.\n  uv_uptime(&prog_start_time);\n\n  // "],[62150,17,""],[62150,0,"uv_s"],[62158,1,""],[62158,0,"_a"]],"_dtSpan":[214030,215323]},{"parents":[193],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[41191,0,"v8::"],[41548,0,"v8::"],[46487,0,"static Handle<Value> DebugPause(const Arguments& args);\n"],[50700,0,"  NODE_SET_METHOD(process, \"_debugPause\", DebugPause);\n"],[56156,0,"v8::"],[56503,0,"v8::"],[62069,0,"static Handle<Value> DebugPause("],[62102,0,"onst Arguments& args) {\n  v8::Debug::DebugBreak(node_isolate);\n}\n\n\nc"],[64799,0,"v8::"]],"_dtSpan":[215323,215554]},{"parents":[194],"numChildren":2,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[62165,0,"  return Undefined();\n"]],"_dtSpan":[215554,215576]},{"parents":[190],"numChildren":3,"agent":17,"time":"1970-01-01T00:00:00Z","patches":[[38119,2,""],[38120,0,"v_s"],[38124,1,""],[38124,0,"rerr"],[38129,3,""],[38129,0,"r("],[38132,2,""],[38133,3,""],[38133,0,"r)"]],"_dtSpan":[215576,215598]},{"parents":[195,196],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[5186,2,""],[5186,0,"NODE"],[5191,12,""],[5191,0,"LOOP"],[5916,2,""],[5916,0,"NODE"],[5921,12,""],[5921,0,"LOOP"],[7105,10,""],[7105,0,"NODE"],[7110,4,""],[7110,0,"LOOP"],[34105,10,""],[34105,0,"NODE"],[34110,4,""],[34110,0,"LOOP"],[34678,10,""],[34678,0,"NODE"],[34683,4,""],[34683,0,"LOOP"],[64001,0,"// Don't use NODE_LOOP(), the node::Isolate() has not yet been initialized.\n  "],[64082,0,"loo"],[64086,0,"_t* const loop = uv_default_loop();\n\n  uv_p"],[64251,11,""],[64255,2,""],[64383,11,""],[64387,1,""],[64388,1,""],[64452,11,""],[64456,2,""],[64560,8,""],[64561,3,""],[64564,1,""],[64565,1,""],[64624,8,""],[64625,3,""],[64628,2,""],[64690,11,""],[64694,2,""],[65173,8,""],[65174,3,""],[65177,2,""],[65305,8,""],[65306,3,""],[65309,1,""],[65310,1,""],[65474,0,"v8::"],[66529,0,"// Create the main node::Isolate object\n  Isolate::New(uv_default_loop());\n\n  "],[66666,0,"\n"],[67182,10,""],[67182,0,"NODE"],[67187,4,""],[67187,0,"LOOP"],[66578,0,"* isolate = Isolate"],[67240,0,"  isolate->Dispose();\n\n"],[43144,0,"void RunIsolate(void* arg) {\n  uv_loop_t* loop = uv_loop_new();\n  Isolate* isolate = Isolate::New(loop);\n}\n\n\nstatic char magic_isolate_cookie_[] = \"magic isolate cookie\";\n\n\nstatic Handle<Value> NewIsolate(const Arguments& args) {\n  HandleScope scope;\n\n  uv_thread_t* tid = new uv_thread_t;\n\n  if (uv_thread_create(tid, RunIsolate, NULL))\n    return Null();\n\n  Local<ObjectTemplate> tpl = ObjectTemplate::New();\n  tpl->SetInternalFieldCount(2);\n\n  Local<Object> obj = tpl->NewInstance();\n  obj->SetPointerInInternalField(0, magic_isolate_cookie_);\n  obj->SetPointerInInternalField(1, tid);\n\n  return scope.Close(obj);\n}\n\n\nstatic Handle<Value> JoinIsolate(const Arguments& args) {\n  HandleScope scope;\n\n  assert(args[0]->IsObject());\n\n  Local<Object> obj = args[0]->ToObject();\n  assert(obj->InternalFieldCount() == 2);\n  assert(obj->GetPointerFromInternalField(0) == magic_isolate_cookie_);\n\n  uv_thread_t* tid = (uv_thread_t*) obj->GetPointerFromInternalField(1);\n\n  if (uv_thread_join(tid))\n    return False(); // error\n  else\n    return True();  // ok\n}\n\n\nstatic "],[52046,0,"NODE_SET_METHOD(process, \"_newIsolate\", NewIsolate);\n  NODE_SET_METHOD(process, \"_joinIsolate\", JoinIsolate);\n\n  "],[2730,38,""],[2731,58,""],[2864,31,""],[2865,11,""],[3150,48,""],[3204,1,""],[3205,51,""],[3254,40,""],[3646,50,""],[4083,0,"static int option_end_index;"],[4112,0,"static unsigned long max_stack_size;"],[4149,0,"static unsigned short debug_port = 5858;\nstatic bool debug_wait_connect;\nstatic bool use_debug_agent;\nstatic const char* eval_string;\nstatic bool print_eval;\n\n\n\n"],[4379,2,""],[57870,0,"// FIXME this is positively unsafe with isolates/threads\n"],[63298,0,"Process"],[65026,0,"// TODO decide whether to handle these signals per-process or per-thread\n  "],[65213,0,"return argv;\n}\n\n\nvoid EmitExit(v8::Handle<v8::Object> process_l) {\n  "],[65285,1,""],[65285,0,"pr"],[65288,1,""],[65288,0,"cess.emit("],[65299,0,"exi"],[65303,0,"')\n "],[65308,0,"Local<Val"],[65318,1,""],[65319,0,">"],[65321,4,""],[65321,0,"emit"],[65326,4,""],[65326,0,"v = process_l->Get(String::New"],[65357,0,"\"emit\")"],[65365,1,""],[65365,0,";\n "],[65369,0,"asser"],[65375,1,""],[65375,0,"("],[65377,0,"mit_v->IsFunction());\n"],[65400,0," Local<Fu"],[65410,0,"cti"],[65414,1,""],[65414,0,"n> "],[65418,0,"mit = Local<Function>"],[65441,1,""],[65441,0,"Ca"],[65444,0,"t(emit_v);\n  L"],[65459,0,"cal<Va"],[65466,0,"ue> "],[65471,0,"rgs[] = { S"],[65483,0,"ring::N"],[65491,0,"w"],[65493,0,"\"exit\""],[65501,0,"};\n  TryCatc"],[65514,0," try_c"],[65521,1,""],[65521,0,"tch;\n "],[65528,2,""],[65528,0,"emi"],[65532,0,"->Call(process_l,"],[65550,0,"1, args);\n  if (tr"],[65569,1,""],[65569,0,"_catch.HasCaugh"],[65585,0,"())"],[65589,2,""],[65589,0,"{\n    FatalExc"],[65604,0,"ptio"],[65609,0,"(try_catch);\n"],[65623,0," }\n}\n\n\nvo"],[65633,2,""],[65633,0,"d S"],[65637,1,""],[65638,0,"rtThread(Iso"],[65651,0,"ate* "],[65657,1,""],[65657,0,"solat"],[65663,2,""],[65663,0,", int argc, char** argv) {"],[65702,6,""],[65710,6,""],[65710,0,"isol"],[65715,2,""],[65716,2,""],[65716,0,"e->GetL"],[65749,11,""],[65753,2,""],[65870,8,""],[65871,3,""],[65874,2,""],[65988,11,""],[65992,2,""],[66045,11,""],[66049,2,""],[66139,8,""],[66140,3,""],[66143,2,""],[66191,11,""],[66195,2,""],[66277,1,""],[67327,1,""],[67328,21,""],[67329,13,""],[67336,4,""],[67353,4,""],[67354,0,"="],[67356,3,""],[67356,0,"Setu"],[67361,0,"P"],[67368,1,""],[67368,0,"Obj"],[67372,2,""],[67372,0,"c"],[67375,6,""],[67375,0,"argc, argv"],[67386,0,";"],[67389,13,""],[67390,5,""],[67391,3,""],[67391,0,"8_ty"],[67396,3,""],[67397,2,""],[67397,0,"d"],[67399,5,""],[67399,0,"array::A"],[67408,2,""],[67409,1,""],[67409,0,"achB"],[67415,0,"din"],[67419,0,"s(v8::Context"],[67434,1,""],[67434,0,"G"],[67436,3,""],[67436,0,"tCurr"],[67442,2,""],[67442,0,"n"],[67444,1,""],[67444,0,"()->Global("],[67459,0,"\n  //"],[67465,0,"Create"],[67473,0,"ll the object"],[67487,0,", load module"],[67501,0,", do ev"],[67510,0,"y"],[67512,3,""],[67512,0,"h"],[67514,6,""],[67514,0,"ng.\n  // "],[67524,1,""],[67524,0,"o yo"],[67529,0,"r "],[67532,1,""],[67532,0,"ex"],[67535,0," read"],[67541,0,"ng st"],[67547,0,"p should be "],[67560,0,"ode::Load"],[67571,0,"!\n  Load(process_l"],[67592,0,"\n  //"],[67598,0,"All"],[67602,1,""],[67603,1,""],[67603,0,"ur "],[67607,3,""],[67607,0,"rg"],[67610,0,"me"],[67613,1,""],[67614,1,""],[67614,0,"s are l"],[67622,2,""],[67622,0,"aded."],[67628,0,"We'v"],[67633,5,""],[67634,3,""],[67634,0,"ev"],[67638,2,""],[67639,2,""],[67639,0,"a"],[67641,1,""],[67641,0,"ed all "],[67649,6,""],[67649,0,"f the "],[67656,0,"crip"],[67661,1,""],[67661,0,"s. W"],[67666,0,"\n  // "],[67674,0,"gh"],[67677,1,""],[67677,0," e"],[67680,3,""],[67680,0,"en"],[67683,0,"have"],[67688,2,""],[67689,4,""],[67689,0,"re"],[67692,2,""],[67692,0,"t"],[67694,1,""],[67694,0,"d"],[67696,1,""],[67696,0,"TCP serve"],[67706,1,""],[67707,2,""],[67707,0,"."],[67709,1,""],[67709,0,"Now"],[67713,1,""],[67713,0,"we"],[67716,1,""],[67716,0,"en"],[67719,0,"e"],[67721,0," the ma"],[67730,4,""],[67730,0," "],[67732,3,""],[67732,0,"v"],[67734,2,""],[67734,0,"n"],[67736,2,""],[67736,0,"loop."],[67742,2,""],[67742,0,"If"],[67747,5,""],[67747,0,"// "],[67751,1,""],[67752,0,"ere"],[67756,1,""],[67756,0,"a"],[67758,3,""],[67758,0,"e no w"],[67768,2,""],[67768,0,"ers"],[67772,0,"on"],[67775,3,""],[67776,4,""],[67776,0,"he "],[67780,1,""],[67780,0,"oop "],[67785,0,"exce"],[67790,0,"t fo"],[67795,0," the "],[67801,1,""],[67801,0,"n"],[67804,4,""],[67805,3,""],[67805,0,"th"],[67808,0,"t we"],[67813,4,""],[67813,0,"e"],[67817,0,"// uv_unref'd) then th"],[67840,0,"s "],[67843,0,"unction"],[67851,1,""],[67851,0,"exi"],[67855,4,""],[67855,0,"s. As long "],[67867,0,"s "],[67870,1,""],[67871,2,""],[67871,0,"ere "],[67876,2,""],[67876,0,"re "],[67880,3,""],[67880,0,"c"],[67882,5,""],[67882,0,"ive"],[67888,0,"//"],[67891,2,""],[67891,0,"w"],[67894,4,""],[67895,0,"h"],[67897,1,""],[67897,0,"rs, i"],[67903,1,""],[67903,0," bl"],[67907,0,"cks.\n  uv_ru"],[67921,9,""],[67921,0,"loop"],[67928,0,"\n"],[67931,1,""],[67931,0,"EmitExit(process_l);"],[68050,0,"Process"],[68368,1,""],[68369,1,""],[68370,14,""],[68371,12,""],[68372,1,""],[68373,16,""],[68375,17,""],[68376,100,""],[68376,0,"T"],[68378,16,""],[68379,32,""],[68380,14,""],[68383,78,""],[68384,2,""],[68385,48,""],[68386,25,""],[68387,27,""],[68388,10,""],[68389,1,""],[68390,26,""],[68390,0,","],[68392,2,""],[68393,4,""],[68394,51,""],[68395,15,""],[68396,9,""],[68396,0,","],[68398,1,""],[68399,4,""],[68400,17,""],[68400,0,"g"],[68402,40,""],[68404,1,""],[4083,0,"#define TICK_TIME(n) tick_times[(tick_time_head - (n)) % RPM_SAMPLES]\n\n"],[4379,3,""],[4379,0,"static voi"],[4390,5,""],[4391,2,""],[4392,12,""],[4392,0,"he"],[4396,1,""],[4396,0,"S"],[4398,3,""],[4398,0,"atu"],[4402,1,""],[4403,4,""],[4403,0,"uv"],[4410,0,"r"],[4412,0,"t* watc"],[4421,2,""],[4421,0,"r,"],[4424,1,""],[4424,0,"int"],[4428,2,""],[4428,0,"status"],[4435,17,""],[4435,0,";"],[4444,0,"unsigned long NewThreadId();\n\n"],[4479,5,""],[4482,0,"r"],[4484,0,"Thread("],[4492,0,"n"],[4494,5,""],[4495,1,""],[4495,0,"gn"],[4498,0,"d long th"],[4508,0,"ead"],[4512,0,"id,\n                 Isola"],[4539,0,"e"],[4542,1,""],[4542,0,"isol"],[4548,2,""],[4549,1,""],[4550,0,"\n                "],[4572,2,""],[4573,3,""],[4573,0,"rgc,\n                 char** argv"],[4610,0,"\n"],[43210,0,"struct {\n  uv_mutex_t lock_;\n  unsigned long counter_;\n} thread_id_generator_;\n\n\nstatic unsigned long NewThreadId() {\n  unsigned long thread_id;\n\n  uv_mutex_lock(&thread_id_generator_.lock_);\n  thread_id = ++thread_id_generator_.counter_;\n  uv_mutex_unlock(&thread_id_generator_.lock_);\n\n  return thread_id;\n}\n\n\nstruct ThreadInfo {\n  unsigned long thread_id_;\n  uv_thread_t thread_;\n  char** argv_;\n  int argc_;\n\n  ThreadInfo(int argc, char** argv) {\n    argc_ = argc;\n    argv_ = new char*[argc_ + 1];\n\n    for (int i = 0; i < argc_; ++i) {\n      size_t size = 1 + strlen(argv[i]);\n      argv_[i] = new char[size];\n      memcpy(argv_[i], argv[i], size);\n    }\n    argv_[argc_] = NULL;\n  }\n\n  ThreadInfo(Handle<Array> args) {\n    argc_ = args->Length();\n    argv_ = new char*[argc_ + 1];\n\n    for (int i = 0; i < argc_; ++i) {\n      String::Utf8Value str(args->Get(i));\n      size_t size = 1 + strlen(*str);\n      argv_[i] = new char[size];\n      memcpy(argv_[i], *str, size);\n    }\n    argv_[argc_] = NULL;\n  }\n\n  ~ThreadInfo() {\n    for (int i = 0; i < argc_; ++i) {\n      delete[] argv_[i];\n    }\n    delete argv_;\n  }\n};\n\n\nstatic "],[44375,0,"ThreadInfo* ti = reinterpret_cast<ThreadInfo*>(arg);\n\n  "],[44505,0,"\n  StartThread(ti->thread_id_, isolate, ti->argc_, ti->argv_);\n  delete ti;\n"],[44730,1,""],[44730,0,"assert(args[0]->IsArray());\n\n  Local<Array> argv = args[0].As<Array>();\n  assert(arg"],[44815,1,""],[44815,0,"->Leng"],[44823,0,"() >= 2);\n\n  Th"],[44842,2,""],[44842,0,"Info"],[44850,1,""],[44857,1,""],[44857,0,"ThreadInfo(arg"],[44872,1,""],[44872,0,");\n  ti->"],[44888,1,""],[44888,0,"id_ = NewThreadId()"],[44933,0,"&"],[44936,0,"->threa"],[44944,0,"_"],[44959,4,""],[44959,0,"ti"],[44963,0," {\n    delete ti;"],[45000,0,"  }\n"],[45232,1,""],[45539,4,""],[45539,0,"T"],[45545,2,""],[45545,0,"Info"],[45553,1,""],[45556,3,""],[45556,0,"reinterpret"],[45568,0,"cas"],[45572,0,"<T"],[45579,2,""],[45579,0,"Info"],[45584,1,""],[45584,0,">(\n     "],[45628,0,")"],[45653,0,"&"],[45656,0,"->threa"],[45664,0,"_"],[49363,1,""],[67266,0,"// Create a new isolate with node::Isolate::New() before you call this function\n"],[67363,0,"unsigned long thread_id,\n                 "],[67422,0,"\n                "],[67449,0,"\n                "],[67484,0,"HandleScope scope;\n\n  v8::Isolate::Scope isolate_scope(isolate->GetV8Isolate());\n  v8::Context::Scope context_scope(isolate->GetV8Context());\n\n  "],[67666,1,""],[69324,0,"\n  process_l->Set(String::NewSymbol(\"tid\"),\n                 Integer::NewFromUnsigned(thread_id));\n\n  // FIXME crashes with \"CHECK(heap->isolate() == Isolate::Current()) failed\"\n"],[69504,0,"//"],[70110,0,"if (uv_mutex_init(&thread_id_generator_.lock_)) abort();\n\n  "],[70323,4,""],[70324,9,""],[70325,127,""],[70419,0,"NewThreadId(), "],[70508,21,""]],"_dtSpan":[215598,222350]},{"parents":[197],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[4437,36,""],[4455,42,""],[43118,298,""],[43119,21,""],[43148,28,""],[44095,16,""],[44431,34,""],[66888,5,""],[66889,4,""],[66890,6,""],[66890,0,"d"],[66892,24,""],[66892,0,"::"],[68899,0,"isola"],[68905,2,""],[68906,1,""],[68906,0,"->i"],[68911,2,""],[69599,60,""],[69785,0,"node::Isolate::Initialize();\n  "],[69835,0,"node::"],[69881,10,""],[69887,2,""],[69888,3,""],[44006,35,""],[44038,4,""],[69814,16,""],[69815,1,""],[44090,0,"isolate->Dispose();\n\n  "],[44124,0,"  delete isolate;\n"],[44815,0,"CountIsolate(const Arguments& args) {\n  HandleScope scope;\n  return scope.Close(Integer::New(Isolate::Count()));\n}\n\n\nstatic Handle<Value> "],[53324,0,"countIsolate\", CountIsolate);\n  NODE_SET_METHOD(process, \"_"],[64701,88,""],[69184,0,"Initialize prog_start_time to get relative uptime.\n  uv_uptime(&prog_start_time);\n\n  // "],[43127,9,""],[43128,20,""],[43129,28,""],[43130,6,""],[43131,5,""],[43132,31,""],[43133,62,""],[43134,3,""],[43135,4,""],[43135,0,"d"],[43137,52,""],[43137,0,"Ru"],[43140,37,""],[43140,0,"I"],[43142,92,""],[43143,5,""],[43144,9,""],[43145,26,""],[43145,0,"t"],[43147,4,""],[43148,10,""],[43149,32,""],[43150,3,""],[43151,13,""],[43151,0,"d*"],[43157,7,""],[43161,1,""],[43163,7,""],[43164,1,""],[43164,0,"ode"],[43169,129,""],[43169,0,"I"],[43171,65,""],[43172,40,""],[43173,6,""],[43174,23,""],[43176,23,""],[43176,0,"*"],[43178,2,""],[43179,6,""],[43185,15,""],[43186,15,""],[43205,5,""],[43205,0,"no"],[43208,0,"e::"],[43212,2,""],[43212,0,"s"],[43214,0,"late"],[43226,1,""],[43228,9,""],[43236,8,""],[43236,0,"->En"],[43242,5,""],[43242,0,"r"],[43246,1,""],[43270,0,"isola"],[43276,1,""],[43276,0,"e"],[43286,0,"isola"],[43292,1,""],[43292,0,"e"],[43325,1,""],[43334,1,""],[43335,12,""],[43598,1,""],[43598,0,"// Note t"],[43608,1,""],[43608,0,"at isolat"],[43618,0," lock is "],[43628,0,"quire"],[43634,0," in the constructor here. "],[43661,0,"t will not\n  // be u"],[43682,1,""],[43682,0,"l"],[43684,0,"cked until RunIsolate starts and calls isolate->Enter().\n  Isolate"],[43752,0,"isola"],[43758,0,"e = new node::Isolate();\n\n  // Copy over arguments into isolate\n  "],[43825,0,"solate->argc_"],[43841,0,"argv->Le"],[43850,0,"gth();\n  isolate->argv_ = n"],[43880,1,""],[43880,0,"c"],[43882,0,"a"],[43884,0,"*[isolat"],[43893,0,"->"],[43896,2,""],[43896,0,"rgc_ + 1];\n  for (i"],[43916,0,"t i = 0; i < isolate->argc_; ++i) {\n    String::Ut"],[43967,0,"8Value str(argv->Get(i));\n    size_t size = 1 + strlen(*str);\n    is"],[44036,0,"late->argv_[i] = new char[size];\n    memcpy"],[44080,0,"isol"],[44085,0,"te->a"],[44093,0,"_[i], *str, size"],[44112,0,"  }"],[44119,0,"solate->argv_[isolate->argc_] = NULL;\n\n  i"],[44182,1,""],[44183,0,"solate"],[44192,4,""],[44192,0,"i"],[44209,0,"isola"],[44215,1,""],[44215,0,"e"],[44232,1,""],[44233,0,"solate"],[44490,1,""],[44491,0,"solate"],[44942,6,""],[44943,2,""],[44943,0,"s"],[44945,0,"late"],[44973,6,""],[44974,2,""],[44974,0,"s"],[44976,0,"late"],[45056,4,""],[45056,0,"i"],[66835,8,""],[66836,11,""],[66837,6,""],[66838,3,""],[66839,0,"rt"],[66842,2,""],[66842,0,"n"],[66844,3,""],[66844,0,"d"],[66846,7,""],[66846,0,"::"],[66855,9,""],[66857,4,""],[66857,0,"G"],[66859,1,""],[66860,6,""],[66860,0,"Curr"],[66865,3,""],[66866,3,""],[66867,6,""],[66868,0,") == "],[66880,16,""],[69602,0,"Get the id of the this, the main, thread.\n  uv_thread_t tid = uv_thread_self();\n\n  // "],[69778,0,"ew n"],[69794,3,""],[69794,0,"();\n  isolat"],[69807,1,""],[69807,0,"->tid_ = tid;\n  isolate->Enter"],[69900,0,"  // The main thread/isolate is done. Wait for all other thread/isolates to\n  // finish.\n  node::Isolate::JoinAll();\n\n"],[1152,0,"#include <node_isolate.h>\n"],[4559,0,"uv_loop_t* Loop() {\n#if defined(HAVE_ISOLATES) && HAVE_ISOLATES\n  return I"],[4634,0,"olate::GetCurrent()->Ge"],[4658,0,"Loop();\n#else\n  return uv_default_loop();\n#endif\n}\n\n\nst"],[5352,5,""],[5353,3,""],[5353,0,"oop"],[6077,5,""],[6078,3,""],[6078,0,"oop"],[7261,5,""],[7262,3,""],[7262,0,"oop"],[34256,5,""],[34257,3,""],[34257,0,"oop"],[34824,5,""],[34825,3,""],[34825,0,"oop"],[1178,0,"#include <node_internals.h>\n"],[4487,32,""],[4488,62,""],[43210,37,""],[43211,65,""],[43212,3,""],[43213,19,""],[43214,7,""],[43215,7,""],[43216,3,""],[43217,11,""],[43218,2,""],[43219,132,""],[43232,17,""],[43233,1700,""],[51049,172,""],[46443,0,"\n  obj->Set(String::NewSymbol(\"isolates\"),\n#if HAVE_ISOLATES\n    True()\n#else\n    False()\n#endif\n  );\n\n"]],"_dtSpan":[222350,227926]},{"parents":[195,196],"numChildren":1,"agent":17,"time":"1970-01-01T00:00:00Z","patches":[[5186,2,""],[5186,0,"NODE"],[5191,12,""],[5191,0,"LOOP"],[5916,2,""],[5916,0,"NODE"],[5921,12,""],[5921,0,"LOOP"],[7105,10,""],[7105,0,"NODE"],[7110,4,""],[7110,0,"LOOP"],[34105,10,""],[34105,0,"NODE"],[34110,4,""],[34110,0,"LOOP"],[34678,10,""],[34678,0,"NODE"],[34683,4,""],[34683,0,"LOOP"],[64001,0,"// Don't use NODE_LOOP(), the node::Isolate() has not yet been initialized.\n  "],[64082,0,"loo"],[64086,0,"_t* const loop = uv_default_loop();\n\n  uv_p"],[64251,11,""],[64255,2,""],[64383,11,""],[64387,1,""],[64388,1,""],[64452,11,""],[64456,2,""],[64560,8,""],[64561,3,""],[64564,1,""],[64565,1,""],[64624,8,""],[64625,3,""],[64628,2,""],[64690,11,""],[64694,2,""],[65173,8,""],[65174,3,""],[65177,2,""],[65305,8,""],[65306,3,""],[65309,1,""],[65310,1,""],[65474,0,"v8::"],[66529,0,"// Create the main node::Isolate object\n  Isolate::New(uv_default_loop());\n\n  "],[66666,0,"\n"],[67182,10,""],[67182,0,"NODE"],[67187,4,""],[67187,0,"LOOP"],[66578,0,"* isolate = Isolate"],[67240,0,"  isolate->Dispose();\n\n"],[43144,0,"void RunIsolate(void* arg) {\n  uv_loop_t* loop = uv_loop_new();\n  Isolate* isolate = Isolate::New(loop);\n}\n\n\nstatic char magic_isolate_cookie_[] = \"magic isolate cookie\";\n\n\nstatic Handle<Value> NewIsolate(const Arguments& args) {\n  HandleScope scope;\n\n  uv_thread_t* tid = new uv_thread_t;\n\n  if (uv_thread_create(tid, RunIsolate, NULL))\n    return Null();\n\n  Local<ObjectTemplate> tpl = ObjectTemplate::New();\n  tpl->SetInternalFieldCount(2);\n\n  Local<Object> obj = tpl->NewInstance();\n  obj->SetPointerInInternalField(0, magic_isolate_cookie_);\n  obj->SetPointerInInternalField(1, tid);\n\n  return scope.Close(obj);\n}\n\n\nstatic Handle<Value> JoinIsolate(const Arguments& args) {\n  HandleScope scope;\n\n  assert(args[0]->IsObject());\n\n  Local<Object> obj = args[0]->ToObject();\n  assert(obj->InternalFieldCount() == 2);\n  assert(obj->GetPointerFromInternalField(0) == magic_isolate_cookie_);\n\n  uv_thread_t* tid = (uv_thread_t*) obj->GetPointerFromInternalField(1);\n\n  if (uv_thread_join(tid))\n    return False(); // error\n  else\n    return True();  // ok\n}\n\n\nstatic "],[52046,0,"NODE_SET_METHOD(process, \"_newIsolate\", NewIsolate);\n  NODE_SET_METHOD(process, \"_joinIsolate\", JoinIsolate);\n\n  "],[2730,38,""],[2731,58,""],[2864,31,""],[2865,11,""],[3150,48,""],[3204,1,""],[3205,51,""],[3254,40,""],[3646,50,""],[4083,0,"static int option_end_index;"],[4112,0,"static unsigned long max_stack_size;"],[4149,0,"static unsigned short debug_port = 5858;\nstatic bool debug_wait_connect;\nstatic bool use_debug_agent;\nstatic const char* eval_string;\nstatic bool print_eval;\n\n\n\n"],[4379,2,""],[57870,0,"// FIXME this is positively unsafe with isolates/threads\n"],[63298,0,"Process"],[65026,0,"// TODO decide whether to handle these signals per-process or per-thread\n  "],[65213,0,"return argv;\n}\n\n\nvoid EmitExit(v8::Handle<v8::Object> process_l) {\n  "],[65285,1,""],[65285,0,"pr"],[65288,1,""],[65288,0,"cess.emit("],[65299,0,"exi"],[65303,0,"')\n "],[65308,0,"Local<Val"],[65318,1,""],[65319,0,">"],[65321,4,""],[65321,0,"emit"],[65326,4,""],[65326,0,"v = process_l->Get(String::New"],[65357,0,"\"emit\")"],[65365,1,""],[65365,0,";\n "],[65369,0,"asser"],[65375,1,""],[65375,0,"("],[65377,0,"mit_v->IsFunction());\n"],[65400,0," Local<Fu"],[65410,0,"cti"],[65414,1,""],[65414,0,"n> "],[65418,0,"mit = Local<Function>"],[65441,1,""],[65441,0,"Ca"],[65444,0,"t(emit_v);\n  L"],[65459,0,"cal<Va"],[65466,0,"ue> "],[65471,0,"rgs[] = { S"],[65483,0,"ring::N"],[65491,0,"w"],[65493,0,"\"exit\""],[65501,0,"};\n  TryCatc"],[65514,0," try_c"],[65521,1,""],[65521,0,"tch;\n "],[65528,2,""],[65528,0,"emi"],[65532,0,"->Call(process_l,"],[65550,0,"1, args);\n  if (tr"],[65569,1,""],[65569,0,"_catch.HasCaugh"],[65585,0,"())"],[65589,2,""],[65589,0,"{\n    FatalExc"],[65604,0,"ptio"],[65609,0,"(try_catch);\n"],[65623,0," }\n}\n\n\nvo"],[65633,2,""],[65633,0,"d S"],[65637,1,""],[65638,0,"rtThread(Iso"],[65651,0,"ate* "],[65657,1,""],[65657,0,"solat"],[65663,2,""],[65663,0,", int argc, char** argv) {"],[65702,6,""],[65710,6,""],[65710,0,"isol"],[65715,2,""],[65716,2,""],[65716,0,"e->GetL"],[65749,11,""],[65753,2,""],[65870,8,""],[65871,3,""],[65874,2,""],[65988,11,""],[65992,2,""],[66045,11,""],[66049,2,""],[66139,8,""],[66140,3,""],[66143,2,""],[66191,11,""],[66195,2,""],[66277,1,""],[67327,1,""],[67328,21,""],[67329,13,""],[67336,4,""],[67353,4,""],[67354,0,"="],[67356,3,""],[67356,0,"Setu"],[67361,0,"P"],[67368,1,""],[67368,0,"Obj"],[67372,2,""],[67372,0,"c"],[67375,6,""],[67375,0,"argc, argv"],[67386,0,";"],[67389,13,""],[67390,5,""],[67391,3,""],[67391,0,"8_ty"],[67396,3,""],[67397,2,""],[67397,0,"d"],[67399,5,""],[67399,0,"array::A"],[67408,2,""],[67409,1,""],[67409,0,"achB"],[67415,0,"din"],[67419,0,"s(v8::Context"],[67434,1,""],[67434,0,"G"],[67436,3,""],[67436,0,"tCurr"],[67442,2,""],[67442,0,"n"],[67444,1,""],[67444,0,"()->Global("],[67459,0,"\n  //"],[67465,0,"Create"],[67473,0,"ll the object"],[67487,0,", load module"],[67501,0,", do ev"],[67510,0,"y"],[67512,3,""],[67512,0,"h"],[67514,6,""],[67514,0,"ng.\n  // "],[67524,1,""],[67524,0,"o yo"],[67529,0,"r "],[67532,1,""],[67532,0,"ex"],[67535,0," read"],[67541,0,"ng st"],[67547,0,"p should be "],[67560,0,"ode::Load"],[67571,0,"!\n  Load(process_l"],[67592,0,"\n  //"],[67598,0,"All"],[67602,1,""],[67603,1,""],[67603,0,"ur "],[67607,3,""],[67607,0,"rg"],[67610,0,"me"],[67613,1,""],[67614,1,""],[67614,0,"s are l"],[67622,2,""],[67622,0,"aded."],[67628,0,"We'v"],[67633,5,""],[67634,3,""],[67634,0,"ev"],[67638,2,""],[67639,2,""],[67639,0,"a"],[67641,1,""],[67641,0,"ed all "],[67649,6,""],[67649,0,"f the "],[67656,0,"crip"],[67661,1,""],[67661,0,"s. W"],[67666,0,"\n  // "],[67674,0,"gh"],[67677,1,""],[67677,0," e"],[67680,3,""],[67680,0,"en"],[67683,0,"have"],[67688,2,""],[67689,4,""],[67689,0,"re"],[67692,2,""],[67692,0,"t"],[67694,1,""],[67694,0,"d"],[67696,1,""],[67696,0,"TCP serve"],[67706,1,""],[67707,2,""],[67707,0,"."],[67709,1,""],[67709,0,"Now"],[67713,1,""],[67713,0,"we"],[67716,1,""],[67716,0,"en"],[67719,0,"e"],[67721,0," the ma"],[67730,4,""],[67730,0," "],[67732,3,""],[67732,0,"v"],[67734,2,""],[67734,0,"n"],[67736,2,""],[67736,0,"loop."],[67742,2,""],[67742,0,"If"],[67747,5,""],[67747,0,"// "],[67751,1,""],[67752,0,"ere"],[67756,1,""],[67756,0,"a"],[67758,3,""],[67758,0,"e no w"],[67768,2,""],[67768,0,"ers"],[67772,0,"on"],[67775,3,""],[67776,4,""],[67776,0,"he "],[67780,1,""],[67780,0,"oop "],[67785,0,"exce"],[67790,0,"t fo"],[67795,0," the "],[67801,1,""],[67801,0,"n"],[67804,4,""],[67805,3,""],[67805,0,"th"],[67808,0,"t we"],[67813,4,""],[67813,0,"e"],[67817,0,"// uv_unref'd) then th"],[67840,0,"s "],[67843,0,"unction"],[67851,1,""],[67851,0,"exi"],[67855,4,""],[67855,0,"s. As long "],[67867,0,"s "],[67870,1,""],[67871,2,""],[67871,0,"ere "],[67876,2,""],[67876,0,"re "],[67880,3,""],[67880,0,"c"],[67882,5,""],[67882,0,"ive"],[67888,0,"//"],[67891,2,""],[67891,0,"w"],[67894,4,""],[67895,0,"h"],[67897,1,""],[67897,0,"rs, i"],[67903,1,""],[67903,0," bl"],[67907,0,"cks.\n  uv_ru"],[67921,9,""],[67921,0,"loop"],[67928,0,"\n"],[67931,1,""],[67931,0,"EmitExit(process_l);"],[68050,0,"Process"],[68368,1,""],[68369,1,""],[68370,14,""],[68371,12,""],[68372,1,""],[68373,16,""],[68375,17,""],[68376,100,""],[68376,0,"T"],[68378,16,""],[68379,32,""],[68380,14,""],[68383,78,""],[68384,2,""],[68385,48,""],[68386,25,""],[68387,27,""],[68388,10,""],[68389,1,""],[68390,26,""],[68390,0,","],[68392,2,""],[68393,4,""],[68394,51,""],[68395,15,""],[68396,9,""],[68396,0,","],[68398,1,""],[68399,4,""],[68400,17,""],[68400,0,"g"],[68402,40,""],[68404,1,""],[4083,0,"#define TICK_TIME(n) tick_times[(tick_time_head - (n)) % RPM_SAMPLES]\n\n"],[4379,3,""],[4379,0,"static voi"],[4390,5,""],[4391,2,""],[4392,12,""],[4392,0,"he"],[4396,1,""],[4396,0,"S"],[4398,3,""],[4398,0,"atu"],[4402,1,""],[4403,4,""],[4403,0,"uv"],[4410,0,"r"],[4412,0,"t* watc"],[4421,2,""],[4421,0,"r,"],[4424,1,""],[4424,0,"int"],[4428,2,""],[4428,0,"status"],[4435,17,""],[4435,0,";"],[4444,0,"unsigned long NewThreadId();\n\n"],[4479,5,""],[4482,0,"r"],[4484,0,"Thread("],[4492,0,"n"],[4494,5,""],[4495,1,""],[4495,0,"gn"],[4498,0,"d long th"],[4508,0,"ead"],[4512,0,"id,\n                 Isola"],[4539,0,"e"],[4542,1,""],[4542,0,"isol"],[4548,2,""],[4549,1,""],[4550,0,"\n                "],[4572,2,""],[4573,3,""],[4573,0,"rgc,\n                 char** argv"],[4610,0,"\n"],[43210,0,"struct {\n  uv_mutex_t lock_;\n  unsigned long counter_;\n} thread_id_generator_;\n\n\nstatic unsigned long NewThreadId() {\n  unsigned long thread_id;\n\n  uv_mutex_lock(&thread_id_generator_.lock_);\n  thread_id = ++thread_id_generator_.counter_;\n  uv_mutex_unlock(&thread_id_generator_.lock_);\n\n  return thread_id;\n}\n\n\nstruct ThreadInfo {\n  unsigned long thread_id_;\n  uv_thread_t thread_;\n  char** argv_;\n  int argc_;\n\n  ThreadInfo(int argc, char** argv) {\n    argc_ = argc;\n    argv_ = new char*[argc_ + 1];\n\n    for (int i = 0; i < argc_; ++i) {\n      size_t size = 1 + strlen(argv[i]);\n      argv_[i] = new char[size];\n      memcpy(argv_[i], argv[i], size);\n    }\n    argv_[argc_] = NULL;\n  }\n\n  ThreadInfo(Handle<Array> args) {\n    argc_ = args->Length();\n    argv_ = new char*[argc_ + 1];\n\n    for (int i = 0; i < argc_; ++i) {\n      String::Utf8Value str(args->Get(i));\n      size_t size = 1 + strlen(*str);\n      argv_[i] = new char[size];\n      memcpy(argv_[i], *str, size);\n    }\n    argv_[argc_] = NULL;\n  }\n\n  ~ThreadInfo() {\n    for (int i = 0; i < argc_; ++i) {\n      delete[] argv_[i];\n    }\n    delete argv_;\n  }\n};\n\n\nstatic "],[44375,0,"ThreadInfo* ti = reinterpret_cast<ThreadInfo*>(arg);\n\n  "],[44505,0,"\n  StartThread(ti->thread_id_, isolate, ti->argc_, ti->argv_);\n  delete ti;\n"],[44730,1,""],[44730,0,"assert(args[0]->IsArray());\n\n  Local<Array> argv = args[0].As<Array>();\n  assert(arg"],[44815,1,""],[44815,0,"->Leng"],[44823,0,"() >= 2);\n\n  Th"],[44842,2,""],[44842,0,"Info"],[44850,1,""],[44857,1,""],[44857,0,"ThreadInfo(arg"],[44872,1,""],[44872,0,");\n  ti->"],[44888,1,""],[44888,0,"id_ = NewThreadId()"],[44933,0,"&"],[44936,0,"->threa"],[44944,0,"_"],[44959,4,""],[44959,0,"ti"],[44963,0," {\n    delete ti;"],[45000,0,"  }\n"],[45232,1,""],[45539,4,""],[45539,0,"T"],[45545,2,""],[45545,0,"Info"],[45553,1,""],[45556,3,""],[45556,0,"reinterpret"],[45568,0,"cas"],[45572,0,"<T"],[45579,2,""],[45579,0,"Info"],[45584,1,""],[45584,0,">(\n     "],[45628,0,")"],[45653,0,"&"],[45656,0,"->threa"],[45664,0,"_"],[49363,1,""],[67266,0,"// Create a new isolate with node::Isolate::New() before you call this function\n"],[67363,0,"unsigned long thread_id,\n                 "],[67422,0,"\n                "],[67449,0,"\n                "],[67484,0,"HandleScope scope;\n\n  v8::Isolate::Scope isolate_scope(isolate->GetV8Isolate());\n  v8::Context::Scope context_scope(isolate->GetV8Context());\n\n  "],[67666,1,""],[69324,0,"\n  process_l->Set(String::NewSymbol(\"tid\"),\n                 Integer::NewFromUnsigned(thread_id));\n\n  // FIXME crashes with \"CHECK(heap->isolate() == Isolate::Current()) failed\"\n"],[69504,0,"//"],[70110,0,"if (uv_mutex_init(&thread_id_generator_.lock_)) abort();\n\n  "],[70323,4,""],[70324,9,""],[70325,127,""],[70419,0,"NewThreadId(), "],[70508,21,""]],"_dtSpan":[227926,234678]},{"parents":[199],"numChildren":1,"agent":139,"time":"1970-01-01T00:00:00Z","patches":[[4437,36,""],[4455,42,""],[43118,298,""],[43119,21,""],[43148,28,""],[44095,16,""],[44431,34,""],[66888,5,""],[66889,4,""],[66890,6,""],[66890,0,"d"],[66892,24,""],[66892,0,"::"],[68899,0,"isola"],[68905,2,""],[68906,1,""],[68906,0,"->i"],[68911,2,""],[69599,60,""],[69785,0,"node::Isolate::Initialize();\n  "],[69835,0,"node::"],[69881,10,""],[69887,2,""],[69888,3,""],[44006,35,""],[44038,4,""],[69814,16,""],[69815,1,""],[44090,0,"isolate->Dispose();\n\n  "],[44124,0,"  delete isolate;\n"],[44815,0,"CountIsolate(const Arguments& args) {\n  HandleScope scope;\n  return scope.Close(Integer::New(Isolate::Count()));\n}\n\n\nstatic Handle<Value> "],[53324,0,"countIsolate\", CountIsolate);\n  NODE_SET_METHOD(process, \"_"],[64701,88,""],[69184,0,"Initialize prog_start_time to get relative uptime.\n  uv_uptime(&prog_start_time);\n\n  // "],[43127,9,""],[43128,20,""],[43129,28,""],[43130,6,""],[43131,5,""],[43132,31,""],[43133,62,""],[43134,3,""],[43135,4,""],[43135,0,"d"],[43137,52,""],[43137,0,"Ru"],[43140,37,""],[43140,0,"I"],[43142,92,""],[43143,5,""],[43144,9,""],[43145,26,""],[43145,0,"t"],[43147,4,""],[43148,10,""],[43149,32,""],[43150,3,""],[43151,13,""],[43151,0,"d*"],[43157,7,""],[43161,1,""],[43163,7,""],[43164,1,""],[43164,0,"ode"],[43169,129,""],[43169,0,"I"],[43171,65,""],[43172,40,""],[43173,6,""],[43174,23,""],[43176,23,""],[43176,0,"*"],[43178,2,""],[43179,6,""],[43185,15,""],[43186,15,""],[43205,5,""],[43205,0,"no"],[43208,0,"e::"],[43212,2,""],[43212,0,"s"],[43214,0,"late"],[43226,1,""],[43228,9,""],[43236,8,""],[43236,0,"->En"],[43242,5,""],[43242,0,"r"],[43246,1,""],[43270,0,"isola"],[43276,1,""],[43276,0,"e"],[43286,0,"isola"],[43292,1,""],[43292,0,"e"],[43325,1,""],[43334,1,""],[43335,12,""],[43598,1,""],[43598,0,"// Note t"],[43608,1,""],[43608,0,"at isolat"],[43618,0," lock is "],[43628,0,"quire"],[43634,0," in the constructor here. "],[43661,0,"t will not\n  // be u"],[43682,1,""],[43682,0,"l"],[43684,0,"cked until RunIsolate starts and calls isolate->Enter().\n  Isolate"],[43752,0,"isola"],[43758,0,"e = new node::Isolate();\n\n  // Copy over arguments into isolate\n  "],[43825,0,"solate->argc_"],[43841,0,"argv->Le"],[43850,0,"gth();\n  isolate->argv_ = n"],[43880,1,""],[43880,0,"c"],[43882,0,"a"],[43884,0,"*[isolat"],[43893,0,"->"],[43896,2,""],[43896,0,"rgc_ + 1];\n  for (i"],[43916,0,"t i = 0; i < isolate->argc_; ++i) {\n    String::Ut"],[43967,0,"8Value str(argv->Get(i));\n    size_t size = 1 + strlen(*str);\n    is"],[44036,0,"late->argv_[i] = new char[size];\n    memcpy"],[44080,0,"isol"],[44085,0,"te->a"],[44093,0,"_[i], *str, size"],[44112,0,"  }"],[44119,0,"solate->argv_[isolate->argc_] = NULL;\n\n  i"],[44182,1,""],[44183,0,"solate"],[44192,4,""],[44192,0,"i"],[44209,0,"isola"],[44215,1,""],[44215,0,"e"],[44232,1,""],[44233,0,"solate"],[44490,1,""],[44491,0,"solate"],[44942,6,""],[44943,2,""],[44943,0,"s"],[44945,0,"late"],[44973,6,""],[44974,2,""],[44974,0,"s"],[44976,0,"late"],[45056,4,""],[45056,0,"i"],[66835,8,""],[66836,11,""],[66837,6,""],[66838,3,""],[66839,0,"rt"],[66842,2,""],[66842,0,"n"],[66844,3,""],[66844,0,"d"],[66846,7,""],[66846,0,"::"],[66855,9,""],[66857,4,""],[66857,0,"G"],[66859,1,""],[66860,6,""],[66860,0,"Curr"],[66865,3,""],[66866,3,""],[66867,6,""],[66868,0,") == "],[66880,16,""],[69602,0,"Get the id of the this, the main, thread.\n  uv_thread_t tid = uv_thread_self();\n\n  // "],[69778,0,"ew n"],[69794,3,""],[69794,0,"();\n  isolat"],[69807,1,""],[69807,0,"->tid_ = tid;\n  isolate->Enter"],[69900,0,"  // The main thread/isolate is done. Wait for all other thread/isolates to\n  // finish.\n  node::Isolate::JoinAll();\n\n"],[1152,0,"#include <node_isolate.h>\n"],[4559,0,"uv_loop_t* Loop() {\n#if defined(HAVE_ISOLATES) && HAVE_ISOLATES\n  return I"],[4634,0,"olate::GetCurrent()->Ge"],[4658,0,"Loop();\n#else\n  return uv_default_loop();\n#endif\n}\n\n\nst"],[5352,5,""],[5353,3,""],[5353,0,"oop"],[6077,5,""],[6078,3,""],[6078,0,"oop"],[7261,5,""],[7262,3,""],[7262,0,"oop"],[34256,5,""],[34257,3,""],[34257,0,"oop"],[34824,5,""],[34825,3,""],[34825,0,"oop"],[1178,0,"#include <node_internals.h>\n"],[4487,32,""],[4488,62,""],[43210,37,""],[43211,65,""],[43212,3,""],[43213,19,""],[43214,7,""],[43215,7,""],[43216,3,""],[43217,11,""],[43218,2,""],[43219,132,""],[43232,17,""],[43233,1700,""],[51049,172,""],[46443,0,"\n  obj->Set(String::NewSymbol(\"isolates\"),\n#if HAVE_ISOLATES\n    True()\n#else\n    False()\n#endif\n  );\n\n"]],"_dtSpan":[234678,240254]},{"parents":[198,200],"numChildren":1,"agent":138,"time":"1970-01-01T00:00:00Z","patches":[[1206,53,""],[1207,1,""],[4236,70,""],[4244,29,""],[4273,36,""],[4441,67,""],[4442,11,""],[4443,11,""],[4444,55,""],[4445,25,""],[4446,2,""],[4451,1,""],[4455,3,""],[4459,2,""],[4464,1,""],[4466,5,""],[4467,2,""],[4477,2,""],[4478,3,""],[4488,6,""],[4490,1,""],[4491,64,""],[4492,10,""],[4589,9,""],[4590,59,""],[4591,10,""],[5290,4,""],[6011,4,""],[7199,4,""],[34194,4,""],[34758,4,""],[43205,28,""],[46544,1,""],[46548,11,""],[46549,6,""],[46550,14,""],[46551,30,""],[46552,41,""],[51158,6,""],[56973,57,""],[62402,7,""],[64039,75,""],[64223,339,""],[64224,22,""],[64225,139,""],[64226,40,""],[64227,8,""],[64228,11,""],[64229,1,""],[64230,43,""],[64231,21,""],[64232,20,""],[64233,1,""],[64234,1,""],[64235,6,""],[64236,4,""],[64237,12,""],[64238,4,""],[64907,3,""],[64944,8,""],[64945,29,""],[66213,1,""],[66214,2,""],[66215,1,""],[66562,1,""],[66564,4,""],[66569,1,""],[66576,3,""],[66581,1,""],[66583,10,""],[66594,1,""],[66772,16,""],[66773,15,""],[66774,11,""],[66776,2,""],[66777,6,""],[66779,133,""],[66786,4,""],[66788,1,""],[66790,8,""],[66800,4,""],[66809,3,""],[66810,13,""],[66826,1,""],[66827,5,""],[66834,1,""],[66845,1,""],[66847,103,""],[66856,6,""],[66952,13,""],[66979,13,""],[66980,7,""],[66989,1,""],[66992,1,""],[67002,9,""],[67007,4,""],[67010,2,""],[67011,2,""],[67019,5,""],[67025,5,""],[67038,12,""],[67039,6,""],[67040,3,""],[67068,18,""],[67076,5,""],[67080,3,""],[67082,3,""],[67086,2,""],[67091,2,""],[67100,7,""],[67101,5,""],[67107,4,""],[67115,2,""],[67118,1,""],[67126,3,""],[67127,4,""],[67134,6,""],[67139,4,""],[67144,4,""],[67145,6,""],[67153,2,""],[67156,2,""],[67159,2,""],[67166,4,""],[67168,2,""],[67171,1,""],[67173,1,""],[67184,6,""],[67185,3,""],[67186,1,""],[67188,3,""],[67194,2,""],[67197,2,""],[67198,1,""],[67207,7,""],[67209,1,""],[67211,1,""],[67214,1,""],[67220,5,""],[67221,2,""],[67229,3,""],[67233,1,""],[67234,2,""],[67235,1,""],[67243,6,""],[67250,3,""],[67251,2,""],[67255,3,""],[67259,4,""],[67268,4,""],[67269,4,""],[67274,5,""],[67281,1,""],[67284,2,""],[67287,4,""],[67293,1,""],[67294,4,""],[67295,16,""],[67296,2,""],[67319,2,""],[67322,7,""],[67333,3,""],[67344,3,""],[67345,8,""],[67346,2,""],[67354,4,""],[67358,3,""],[67359,1,""],[67361,3,""],[67367,2,""],[67371,1,""],[67374,1,""],[67381,5,""],[67385,3,""],[67386,12,""],[67404,4,""],[67406,1,""],[67410,20,""],[67471,1,""],[67472,1,""],[67473,1,""],[67536,7,""],[67608,77,""],[67609,9,""],[67712,132,""],[67713,11,""],[67863,7,""],[67877,1,""],[67883,1,""],[67888,1,""],[67889,140,""],[67891,1,""]],"_dtSpan":[240254,242912]},{"parents":[201],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[66704,0,"TODO check (isolate->channel_ != NULL)\n  if (isolate->id_ > 1) {\n    process_l->Set(String::NewSymbol(\"_send\"),\n                   FunctionTemplate::New(Isolate::Send)->GetFunction());\n  }\n\n  // "],[68110,118,""]],"_dtSpan":[242912,243225]},{"parents":[196],"numChildren":2,"agent":18,"time":"1970-01-01T00:00:00Z","patches":[[21631,0,"if (encoding == BINARY && Buffer::HasInstance(val)) {\n    return Buffer::Length(val->ToObject());\n  }\n\n  "]],"_dtSpan":[243225,243330]},{"parents":[202,203],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[3836,46,""],[41164,165,""],[41165,1,""],[41184,276,""],[65098,565,""],[65296,0,"Only main isolate is allowed to run a debug agent and listen for signals\n  if (isolate->id_ == 1) {\n    // "],[65473,0,"  "],[65502,0,"  "],[65539,0,"  "],[65568,0,"  "],[65619,0,"  "],[65701,0,"  }\n  } else if (isolate->debug_state != Isolate::kNone) {\n    isolate->debugger_instance->Init();\n  "]],"_dtSpan":[243330,244601]},{"parents":[204],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[67082,86,""],[67210,0,"(uv_"],[67215,1,""],[67215,0,"hrea"],[67220,0,"_t) -1"]],"_dtSpan":[244601,244702]},{"parents":[205],"numChildren":1,"agent":66,"time":"1970-01-01T00:00:00Z","patches":[[66159,0,"\n    process_l->Set(String::NewSymbol(\"_exit\"),\n                   FunctionTemplate::New(Isolate::Unref)->GetFunction());\n"]],"_dtSpan":[244702,244824]},{"parents":[206],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[1152,25,""],[1163,29,""],[2467,1,""],[2469,2,""],[2470,0,"amespa"],[2477,3,""],[2479,1,""],[2483,8,""],[2483,0," {\n"],[2488,2,""],[2488,0,"static"],[2495,1,""],[2495,0,"P"],[2497,4,""],[2497,0,"rsis"],[2502,1,""],[2503,8,""],[2504,2,""],[2505,9,""],[2505,0,"<Obj"],[2510,1,""],[2510,0,"c"],[2512,2,""],[2512,0,">"],[2514,1,""],[2514,0,"proc"],[2519,0,"ss;\n\ns"],[2527,1,""],[2527,0,"tic"],[2531,1,""],[2531,0,"P"],[2533,0,"rsis"],[2538,2,""],[2540,7,""],[2540,0,"t<St"],[2545,1,""],[2545,0,"i"],[2547,3,""],[2547,0,"g>"],[2550,1,""],[2551,3,""],[2551,0,"rr"],[2554,3,""],[2555,0,"_symbol;"],[2564,4,""],[2565,2,""],[2566,4,""],[2567,1,""],[2567,0,"t"],[2569,3,""],[2569,0,"c P"],[2573,0,"r"],[2575,2,""],[2575,0,"i"],[2577,1,""],[2578,1,""],[2579,4,""],[2579,0,"nt<St"],[2585,4,""],[2588,0,">"],[2590,1,""],[2591,3,""],[2591,0,"yscall_sym"],[2602,2,""],[2603,3,""],[2603,0,"l;"],[2606,14,""],[2606,0,"s"],[2608,5,""],[2610,0,"i"],[2612,3,""],[2613,11,""],[2613,0,"P"],[2615,4,""],[2615,0,"rs"],[2618,5,""],[2618,0,"s"],[2620,2,""],[2621,0,"nt<St"],[2627,6,""],[2629,1,""],[2629,0,"g>"],[2632,3,""],[2633,0,"rrpath"],[2646,0,";\nstatic"],[2655,9,""],[2655,0,"Persistent<String> "],[2685,1,""],[2685,0,";\n"],[2688,4,""],[2688,0,"stat"],[2693,2,""],[2693,0,"c"],[2695,0,"P"],[2697,1,""],[2697,0,"rs"],[2700,0,"sten"],[2705,0,"<String> rss"],[2724,0,";\nstatic"],[2733,9,""],[2733,0,"P"],[2735,1,""],[2735,0,"rs"],[2738,0,"s"],[2740,0,"ent<String> heap"],[2757,0,"total_"],[2769,1,""],[2769,0,";"],[2771,4,""],[2771,0,"stat"],[2776,2,""],[2776,0,"c"],[2778,0,"P"],[2781,0,"sistent<St"],[2792,0,"i"],[2794,1,""],[2794,0,"g> heap"],[2802,0,"u"],[2804,0,"ed_s"],[2813,0,";\n\nstatic"],[2823,9,""],[2823,0,"P"],[2826,0,"sistent<St"],[2837,0,"ing> liste"],[2848,1,""],[2848,0,"ers"],[2858,1,""],[2858,0,";"],[2860,2,""],[2860,0,"static P"],[2869,1,""],[2869,0,"rsistent<Str"],[2883,0,"g> uncaught_"],[2896,1,""],[2896,0,"xc"],[2899,2,""],[2900,1,""],[2901,1,""],[2901,0,"ion"],[2911,0,";\nstatic"],[2920,9,""],[2920,0,"P"],[2923,0,"sistent<St"],[2934,2,""],[2934,0,"ing> emi"],[2943,1,""],[2950,1,""],[2950,0,";"],[2952,4,""],[2952,0,"\n\nstat"],[2959,4,""],[2960,6,""],[2961,23,""],[2961,0,"bool pr"],[2970,4,""],[2970,0,"t"],[2972,3,""],[2973,0,"val"],[2977,14,""],[2977,0,"= fa"],[2982,0,"s"],[2984,1,""],[2984,0,";"],[2986,4,""],[2986,0,"stat"],[2991,2,""],[2991,0,"c"],[2993,1,""],[2994,0,"har *eval"],[3004,0,"s"],[3006,3,""],[3007,0,"ing"],[3011,0,"= "],[3014,11,""],[3014,0,"ULL;\nsta"],[3024,9,""],[3024,0,"c "],[3028,1,""],[3028,0,"t"],[3030,2,""],[3030,0,"op"],[3033,8,""],[3033,0,"ion"],[3037,5,""],[3038,7,""],[3038,0,"n"],[3040,2,""],[3040,0,"_"],[3043,0,"d"],[3045,0,"x"],[3047,7,""],[3047,0,"= 0;\ns"],[3055,5,""],[3055,0,"tic "],[3061,0,"o"],[3064,4,""],[3064,0,"use"],[3068,5,""],[3068,0,"d"],[3070,2,""],[3070,0,"bug"],[3074,3,""],[3075,12,""],[3075,0,"g"],[3077,2,""],[3078,1,""],[3078,0,"t"],[3080,2,""],[3080,0,"= f"],[3084,3,""],[3084,0,"l"],[3087,2,""],[3087,0,";\n"],[3090,2,""],[3090,0,"tatic "],[3098,0,"o"],[3101,10,""],[3101,0,"d"],[3103,3,""],[3103,0,"b"],[3105,3,""],[3105,0,"g"],[3107,12,""],[3107,0,"wa"],[3110,0,"t_con"],[3117,0,"ct ="],[3122,0,"fa"],[3125,1,""],[3126,1,""],[3127,3,""],[3127,0,";\n"],[3130,7,""],[3130,0,"tatic"],[3136,10,""],[3137,1,""],[3137,0,"n"],[3139,2,""],[3139,0," d"],[3142,6,""],[3143,0,"ug_p"],[3148,2,""],[3148,0,"rt=5858;"],[3157,4,""],[3157,0,"stat"],[3162,2,""],[3162,0,"c"],[3164,0,"i"],[3166,3,""],[3166,0,"t max"],[3172,0,"s"],[3174,1,""],[3174,0,"a"],[3178,0,"size = 0;\n\nstati"],[3195,1,""],[3196,4,""],[3196,0,"uv"],[3199,5,""],[3199,0,"ch"],[3202,0,"ck_t ch"],[3210,1,""],[3210,0,"ck"],[3218,0,"wat"],[3222,2,""],[3222,0,"her;"],[3227,4,""],[3227,0,"stat"],[3232,2,""],[3232,0,"c"],[3234,0,"uv_"],[3246,11,""],[3247,9,""],[3267,1,""],[3267,0,";"],[3269,4,""],[3269,0,"stat"],[3274,6,""],[3275,3,""],[3276,4,""],[3276,0,"uv"],[3279,17,""],[3280,1,""],[3280,0,"dl"],[3283,4,""],[3284,6,""],[3284,0,"t"],[3286,12,""],[3286,0,"tick"],[3292,11,""],[3292,0,"p"],[3295,0,"n"],[3297,3,""],[3297,0,"r;\n"],[3301,1,""],[3301,0,"t"],[3303,6,""],[3303,0,"tic "],[3309,0,"o"],[3312,4,""],[3312,0,"need"],[3317,7,""],[3317,0,"ti"],[3320,3,""],[3320,0,"k"],[3322,3,""],[3322,0,"c"],[3324,3,""],[3324,0,";"],[3326,2,""],[3326,0,"static P"],[3335,1,""],[3335,0,"rsistent<Str"],[3349,1,""],[3349,0,"g>"],[3369,0,";\n\n\n#ifdef"],[3380,1,""],[3381,1,""],[3381,0,"P"],[3383,0,"NSSL"],[3388,1,""],[3388,0,"NPN_NEGOTI"],[3399,2,""],[3399,0,"TED\nsta"],[3409,4,""],[3409,0," boo"],[3414,5,""],[3414,0," use"],[3419,4,""],[3419,0,"npn = true;"],[3432,1,""],[3433,3,""],[3433,0,"ls"],[3436,1,""],[3436,0,"\nsta"],[3443,2,""],[3443,0," bool u"],[3451,0,"e_n"],[3455,1,""],[3456,0," = false;\n#e"],[3469,0,"dif\n\n#ifd"],[3479,1,""],[3479,0,"f"],[3481,3,""],[3481,0,"SSL_CTRL_SET_TLS"],[3498,0,"XT"],[3501,0,"SER"],[3505,0,"ERN"],[3509,2,""],[3509,0,"ME_CB\nsta"],[3521,1,""],[3521,0," bool use"],[3532,1,""],[3532,0,"n"],[3534,2,""],[3534,0," = tru"],[3541,2,""],[3541,0,";"],[3544,1,""],[3545,3,""],[3545,0,"ls"],[3548,1,""],[3548,0,"\nsta"],[3555,1,""],[3555,0," bool use"],[3565,1,""],[3565,0,"sn"],[3568,1,""],[3568,0," = fals"],[3576,2,""],[3576,0,";\n#"],[3580,1,""],[3580,0,"ndif\n\n#if"],[3590,0,"ef"],[3593,1,""],[3593,0,"__P"],[3597,2,""],[3597,0,"SIX"],[3601,8,""],[3602,0,"\n// Buffer for ge"],[3620,1,""],[3620,0,"pwna"],[3625,1,""],[3626,1,""],[3626,0,"r(), g"],[3633,0,"tgrp"],[3638,1,""],[3638,0,"m_r("],[3643,6,""],[3643,0," a"],[3646,1,""],[3646,0,"d"],[3648,0,"o"],[3650,0,"her m"],[3656,0,"s"],[3658,5,""],[3658,0," call"],[3664,0,"r"],[3666,0,";"],[3668,12,""],[3669,1,""],[3669,0,"eep "],[3674,0,"h"],[3676,2,""],[3677,1,""],[3678,1,""],[3678,0,"// scope"],[3687,1,""],[3687,0," at "],[3693,1,""],[3693,0,"le-lev"],[3700,0,"l"],[3702,3,""],[3702,0,"r"],[3704,3,""],[3705,4,""],[3705,0,"h"],[3707,1,""],[3707,0,"r "],[3710,2,""],[3710,0,"ha"],[3713,3,""],[3713,0," "],[3715,1,""],[3715,0,"eth"],[3719,0,"d-"],[3722,19,""],[3723,2,""],[3723,0,"v"],[3725,1,""],[3725,0,"l "],[3728,1,""],[3729,6,""],[3729,0," av"],[3733,4,""],[3733,0,"i"],[3735,0," "],[3737,3,""],[3737,0,"xc"],[3740,0,"ss"],[3743,1,""],[3744,5,""],[3744,0,"tack"],[3749,9,""],[3751,0,"ag"],[3754,0,".\nstatic char getbuf[PATH"],[3780,4,""],[3780,0,"MAX + 1];"],[3791,0,"en"],[3794,1,""],[3794,0,"i"],[3796,2,""],[3796,0,"\n\n// W"],[3804,2,""],[3804,0,"ne"],[3807,2,""],[3807,0,"d to "],[3813,0,"ot"],[3816,0,"fy"],[3819,5,""],[3820,5,""],[3820,0,"8 wh"],[3825,2,""],[3826,0," we're "],[3834,3,""],[3835,0,"l"],[3837,1,""],[3837,0," so that "],[3847,0,"t ca"],[3852,1,""],[3853,0,"r"],[3856,1,""],[3856,0," the g"],[3863,1,""],[3863,0,"rba"],[3867,0,"e\n// collector. T"],[3885,0,"e in"],[3890,1,""],[3891,1,""],[3891,0,"rfa"],[3896,1,""],[3896,0," to "],[3901,0,"h"],[3903,0,"s is V8::IdleN"],[3918,2,""],[3918,0,"tifi"],[3923,0,"ati"],[3927,1,""],[3928,0,"(). I"],[3934,2,""],[3935,9,""],[3935,0,"ret"],[3939,0,"r"],[3941,2,""],[3941,0,"s\n// tr"],[3949,2,""],[3949,0,"e if "],[3955,1,""],[3955,0,"h"],[3957,2,""],[3957,0," h"],[3960,0,"a"],[3962,3,""],[3962,0," has"],[3967,1,""],[3967,0,"'t be fully "],[3981,2,""],[3981,0,"mpac"],[3987,4,""],[3988,3,""],[3988,0,", and "],[3996,0,"eds"],[4000,0,"to "],[4004,1,""],[4004,0,"e ru"],[4009,1,""],[4009,0," aga"],[4015,7,""],[4015,0,".\n//"],[4020,7,""],[4021,3,""],[4021,0,"etur"],[4026,1,""],[4029,2,""],[4029,0," false me"],[4039,1,""],[4039,0,"ns t"],[4044,4,""],[4044,0,"at it "],[4051,0,"o"],[4053,2,""],[4053,0,"s"],[4055,0,"'t hav"],[4063,0,"any"],[4068,3,""],[4068,0,"r"],[4070,2,""],[4070,0," w"],[4073,6,""],[4073,0,"rk "],[4077,0,"o"],[4079,6,""],[4079,0,"do.\n//\n// "],[4090,3,""],[4090,0," rather c"],[4100,2,""],[4100,0,"nvo"],[4104,0,"ut"],[4107,1,""],[4107,0,"d a"],[4111,0,"g"],[4113,0,"rithm h"],[4121,0,"s been "],[4129,2,""],[4129,0,"ev"],[4133,0,"ed "],[4137,3,""],[4137,0,"o "],[4141,1,""],[4141,0,"term"],[4149,0,"whe"],[4153,0," N"],[4158,1,""],[4158,0," "],[4161,0,"\n// idle. Y"],[4173,0,"u'l"],[4177,0," h"],[4180,1,""],[4180,0,"v"],[4183,10,""],[4183,0,"t"],[4185,1,""],[4185,0," figur"],[4192,1,""],[4192,0," "],[4194,1,""],[4194,0,"t "],[4197,0,"ut for yourse"],[4211,0,"f.\nst"],[4218,0,"ic uv_check_t gc_ch"],[4238,1,""],[4238,0,"ck;"],[4242,1,""],[4242,0,"static uv_i"],[4254,0,"l"],[4256,4,""],[4256,0,"_t"],[4259,0,"gc_i"],[4264,0,"l"],[4266,1,""],[4266,0,";\nstatic "],[4276,2,""],[4276,0,"v_tim"],[4284,7,""],[4284,0,"t"],[4286,4,""],[4286,0,"gc"],[4289,5,""],[4289,0,"tim"],[4293,0,"r;\n"],[4297,1,""],[4297,0,"ool need_"],[4307,1,""],[4307,0,"c;\n\n// proc"],[4319,0,"ss-"],[4323,2,""],[4323,0,"elative "],[4332,2,""],[4332,0,"pt"],[4335,6,""],[4335,0,"m"],[4337,1,""],[4337,0," base, "],[4346,0,"itializ"],[4354,0,"d"],[4356,5,""],[4356,0,"at "],[4364,1,""],[4364,0,"-up\ns"],[4370,0,"at"],[4373,1,""],[4373,0,"c doubl"],[4382,9,""],[4397,1,""],[4397,0,";"],[4400,3,""],[4400,0,"#d"],[4403,4,""],[4403,0,"fin"],[4408,0,"FAST_TICK 700.\n#defi"],[4429,2,""],[4431,1,""],[4431,0,"GC_WAIT_TIME 5000."],[4450,0,"#define RPM_SAMPLES 100"],[4544,1,""],[4554,11,""],[4554,0,"64"],[4557,8,""],[4558,4,""],[4559,19,""],[4560,1,""],[4560,0,"i"],[4564,9,""],[4566,8,""],[4566,0,"m"],[4568,2,""],[4569,10,""],[4569,0,"[RPM"],[4574,11,""],[4574,0,"SAMPLES]"],[4591,13,""],[4592,5,""],[4593,2,""],[4594,13,""],[4595,14,""],[4596,6,""],[4597,2,""],[4598,15,""],[4598,0,"k"],[4600,1,""],[4601,1,""],[4602,21,""],[4602,0,"me"],[4605,0,"h"],[4607,1,""],[4608,1,""],[4608,0,"d"],[4664,92,""],[4665,1,""],[4666,23,""],[4667,27,""],[4670,8,""],[4671,2,""],[5312,1,""],[5312,0,"uv_default_l"],[6048,1,""],[6048,0,"uv_default_l"],[7243,1,""],[7243,0,"uv_default_l"],[34354,1,""],[34354,0,"uv_default_l"],[34933,1,""],[34933,0,"uv_default_l"],[39727,0,"static int uncaught_exception_counter = 0;\n"],[41589,0,"Persistent<Object> binding_cache;\nPersistent<Array> module_load_list;\n\n"],[46295,61,""],[46296,14,""],[46297,17,""],[46298,11,""],[46699,0,"\n"],[55823,0,"Isolate* node_isolate = NULL;\nstatic "],[55862,0,"lat"],[55866,0,"le bool "],[55875,0,"ebugger_running"],[55891,0,"= false;\n\nstatic void "],[56815,12,""],[56816,8,""],[56817,9,""],[56818,5,""],[56819,2,""],[56820,21,""],[62186,7,""],[62222,0,"Initialize prog_start_time to get relative uptime.\n  uv_uptime(&prog_start_time);\n\n  // "],[63907,75,""],[64019,3,""],[64020,6,""],[64021,43,""],[64021,0,"_"],[64024,2,""],[64025,13,""],[64026,29,""],[64027,15,""],[64028,2,""],[64029,2,""],[64030,10,""],[64032,10,""],[64034,13,""],[64035,55,""],[64036,19,""],[64037,161,""],[64038,47,""],[64039,9,""],[64040,10,""],[64041,9,""],[64042,9,""],[64043,42,""],[64044,1,""],[64045,139,""],[64050,27,""],[64052,24,""],[64145,0,"uv_default_"],[64160,0,"()"],[64182,0,"uv_default_"],[64197,0,"()"],[64290,0,"uv_default_"],[64305,0,"()"],[64326,0,"uv_default_"],[64341,0,"()"],[64372,0,"uv_default_"],[64387,0,"()"],[64409,0,"uv_defau"],[64418,0,"t_l"],[64424,0,"()"],[64493,0,"uv_default_"],[64508,0,"()"],[64529,0,"uv_default_"],[64544,0,"()"],[64570,0,"uv_default_"],[64585,0,"()"],[64607,0,"uv_defau"],[64616,0,"t_l"],[64622,0,"()"],[64649,0,"uv_default_"],[64664,0,"()"],[64880,4,""],[64909,107,""],[64977,2,""],[65006,2,""],[65039,1,""],[65041,1,""],[65064,1,""],[65068,1,""],[65113,2,""],[65197,2,""],[65199,1,""],[65199,0,"\n"],[65201,1,""],[65202,3,""],[65202,0,"r"],[65204,10,""],[65205,6,""],[65206,10,""],[65206,0,"rn"],[65209,4,""],[65210,12,""],[65210,0,"rgv;\n}\n"],[65218,6,""],[65218,0,"\nv"],[65221,6,""],[65221,0,"i"],[65223,8,""],[65223,0," Em"],[65227,2,""],[65228,8,""],[65228,0,"Ex"],[65233,10,""],[65233,0,"v8::"],[65244,0,"v8::"],[65265,0,")"],[65267,1,""],[65267,0,"{\n  //"],[65274,4,""],[65275,1,""],[65281,3,""],[65281,0,"."],[65283,1,""],[65283,0,"mi"],[65287,5,""],[65287,0,"'exit')\n "],[65297,0,"Loc"],[65301,2,""],[65301,0,"l<Value> emit_"],[65316,4,""],[65317,0,"="],[65330,1,""],[65330,0,"G"],[65345,6,""],[65347,1,""],[65347,0,"em"],[65350,1,""],[65350,0,"t"],[65353,1,""],[65353,0,");"],[65358,20,""],[65358,0,"ass"],[65363,3,""],[65363,0,"t("],[65366,4,""],[65367,3,""],[65368,10,""],[65369,1,""],[65369,0,"_v"],[65373,0,"IsFunct"],[65381,2,""],[65381,0,"on("],[65387,1,""],[65389,8,""],[65390,9,""],[65390,0,"L"],[65392,6,""],[65393,1,""],[65394,0,"l<Fu"],[65399,0,"ctio"],[65404,0,"> "],[65407,2,""],[65407,0,"mit"],[65411,1,""],[65413,3,""],[65414,10,""],[65415,0,"ca"],[65418,0,"<Function>::C"],[65432,0,"s"],[65434,0,"("],[65436,2,""],[65436,0,"m"],[65438,1,""],[65438,0,"t"],[65440,4,""],[65440,0,"v"],[65442,2,""],[65442,0,";"],[65446,4,""],[65446,0,"L"],[65449,4,""],[65449,0,"a"],[65451,3,""],[65451,0,"<Valu"],[65457,2,""],[65457,0,"> args[] = { "],[65481,6,""],[65483,2,""],[65484,2,""],[65484,0,"xit"],[65489,1,""],[65489,0," };"],[65495,0,"TryCatch"],[65504,9,""],[65504,0,"try_catch;\n"],[65517,0,"emit->Call(process_l,"],[65539,0,"1,"],[65542,0,"args);\n"],[65551,0,"if"],[65554,3,""],[65554,0,"(try_"],[65560,9,""],[65562,8,""],[65562,0,"ch.Ha"],[65568,2,""],[65568,0,"C"],[65570,15,""],[65571,2,""],[65571,0,"gh"],[65574,3,""],[65577,2,""],[65577,0," {"],[65584,8,""],[65584,0,"Fata"],[65589,3,""],[65589,0,"Exc"],[65593,0,"p"],[65595,0,"ion"],[65599,1,""],[65601,9,""],[65602,6,""],[65603,3,""],[65603,0,"ca"],[65606,1,""],[65606,0,"ch"],[65609,1,""],[65609,0,";"],[65613,0,"}\n}\n\n\nint"],[65623,0,"Start(int"],[65633,0,"argc,"],[65639,0,"char"],[65644,0,"*argv[])"],[65653,0,"{\n"],[65657,0,"//"],[65660,0,"This"],[65665,0,"needs"],[65671,0,"to"],[65674,0,"run"],[65678,0,"*before*"],[65687,0,"V8::Initialize()\n"],[65706,0,"argv"],[65711,0,"="],[65713,2,""],[65713,0,"I"],[65715,2,""],[65716,7,""],[65716,0,"t("],[65719,2,""],[65719,0,"rgc, argv);\n\n  v8"],[65738,4,""],[65738,0,"V8::"],[65743,4,""],[65743,0,"ni"],[65746,0,"ializ"],[65752,0,"();\n  v8"],[65762,1,""],[65762,0,"Ha"],[65765,1,""],[65765,0,"dl"],[65768,5,""],[65768,0,"Scop"],[65773,3,""],[65773,0," ha"],[65777,0,"dle_s"],[65783,2,""],[65784,4,""],[65784,0,"pe"],[65787,4,""],[65794,7,""],[65794,0,"C"],[65796,0,"e"],[65798,2,""],[65798,0,"t"],[65800,1,""],[65801,2,""],[65803,0,"e"],[65805,8,""],[65805,0,"on"],[65808,0," "],[65810,5,""],[65810,0,"nd "],[65814,0,"n"],[65816,1,""],[65816,0,"y Con"],[65823,2,""],[65823,0,"xt.\n"],[65828,2,""],[65829,1,""],[65829,0,"Per"],[65833,3,""],[65833,0,"is"],[65837,0,"nt<v8"],[65845,4,""],[65845,0,"o"],[65848,3,""],[65848,0,"ext>"],[65853,4,""],[65853,0,"cont"],[65858,3,""],[65858,0,"xt"],[65861,0,"="],[65863,2,""],[65865,1,""],[65865,0,"::Con"],[65871,2,""],[65872,7,""],[65872,0,"xt"],[65876,14,""],[65876,0,"New"],[65880,0,");\n  "],[65898,1,""],[65898,0,"Scop"],[65903,0," con"],[65908,4,""],[65909,1,""],[65909,0,"x"],[65911,6,""],[65911,0,"_sc"],[65915,3,""],[65915,0,"pe"],[65918,1,""],[65918,0,"context"],[65931,4,""],[65931,0,"Ha"],[65934,4,""],[65934,0,"d"],[65936,2,""],[65937,0,"<Object>"],[65949,2,""],[65949,0,"ces"],[65953,4,""],[65954,4,""],[65954,0,"l"],[65956,2,""],[65956,0,"="],[65958,1,""],[65958,0,"S"],[65961,1,""],[65961,0,"upP"],[65965,0,"oc"],[65968,5,""],[65968,0,"ssObj"],[65974,3,""],[65974,0,"c"],[65976,4,""],[65976,0,"(argc, argv);"],[65992,1,""],[65993,0,"8"],[65995,2,""],[65996,5,""],[65996,0,"y"],[65998,3,""],[65998,0,"ed"],[66001,2,""],[66003,0,"ray::A"],[66010,1,""],[66011,0,"achB"],[66016,1,""],[66016,0,"ndings(cont"],[66028,0,"xt->Global()"],[66505,0,"uv_default_"],[66520,0,"()"],[66548,3,""],[66550,10,""],[66550,0,"#"],[66552,51,""],[66553,10,""],[66554,79,""],[66555,1,""],[66556,5,""],[66556,0,"f"],[66558,14,""],[66558,0,"NDEBUG"],[66571,59,""],[66572,2,""],[66573,19,""],[66574,5,""],[66575,2,""],[66576,36,""],[66577,15,""],[66577,0,"p."],[66582,2,""],[66582,0,"c"],[66584,7,""],[66587,24,""],[66587,0,"x"],[66589,27,""],[66589,0,"."],[66600,31,""]],"_dtSpan":[244824,250624]},{"parents":[203],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[59084,2,""],[59396,2,""],[59652,2,""],[60675,2,""],[61336,2,""],[61370,2,""]],"_dtSpan":[250624,250636]},{"parents":[208],"numChildren":1,"agent":96,"time":"1970-01-01T00:00:00Z","patches":[[65695,0,"Locker locker;\n  v8::"]],"_dtSpan":[250636,250657]},{"parents":[209],"numChildren":2,"agent":18,"time":"1970-01-01T00:00:00Z","patches":[[65695,21,""]],"_dtSpan":[250657,250678]},{"parents":[207,210],"numChildren":1,"agent":96,"time":"1970-01-01T00:00:00Z","patches":[[65722,4,""],[65742,4,""],[65742,0,"Persistent<Context> context;\n  {\n    Locker locker;\n    "],[65827,0,"  "],[65867,0,"  "],[65880,4,""],[65899,4,""],[65917,4,""],[65917,0,"  "],[65961,0,"  "],[66024,0,"  "],[66080,0,"  "],[66140,0,"  "],[66197,0,"  "],[66219,0,"  "],[66295,0,"  "],[66375,0,"  "],[66447,0,"  "],[66520,0,"  "],[66548,0,"  "],[66580,0,"  "],[66602,1,""],[66619,9,""],[66620,4,""],[66641,0,"#endif\n  }\n\n#ifndef NDEBUG\n  // Clean up.\n"]],"_dtSpan":[250678,250840]},{"parents":[211],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[46359,0,"ortGette"],[46368,0,"(Local<String> property,\n                                     const AccessorInfo& info) {\n  HandleSc"],[46469,0,"pe s"],[46474,0,"op"],[46477,0,";\n  return "],[46489,0,"cope.Clo"],[46498,0,"e"],[46500,0,"Integer::NewFromUnsigned(debug_port));\n}\n\n\nstatic void DebugPortSetter(Local<String> property,\n                            Lo"],[46626,0,"al<Value> value,\n                            c"],[46678,0,"ccesso"],[46685,0,"Info& info) {\n  HandleScope scope;\n  debu"],[46727,0,"_port = value->N"],[46745,0,"berValue();\n}\n\n\nstatic Handle<Value> DebugProc"],[46792,0,"ss(co"],[46798,0,"s"],[46800,0," Argument"],[46875,0,"static Handle<Value> DebugEnd(const Arguments& args);\n"],[50354,0,"  process->SetAccessor(String::New(\"debug_port\"),\n                       DebugPortGetter,\n                       DebugPortSetter);\n\n"],[51273,0,"  NODE_SET_METHOD(process, \"_debugEnd\", DebugEnd);\n"],[62833,0,"static Handle<Value> DebugEnd(const Arguments& args) {\n  if (debugger_running) {\n    v8::Debug::DisableAgent();\n    debugger_running = false;\n  }\n\n  return Undefined();\n}\n\n\n"]],"_dtSpan":[250840,251679]},{"parents":[212],"numChildren":1,"agent":94,"time":"1970-01-01T00:00:00Z","patches":[[50395,2,""],[50395,0,"P"]],"_dtSpan":[251679,251682]},{"parents":[210],"numChildren":2,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[48020,0,"#ifdef _WIN32\n  // Windows - use unicode\n  WCHAR* command_line = GetCommandLineW();\n  if (command_line == NULL) {\n    winapi_perror(\"GetCommandLineW\");\n    exit(1);\n  }\n\n  int wargc = 0;\n  WCHAR** wargv = CommandLineToArgvW(command_line, &wargc);\n  if (wargv == NULL || wargc <= 0) {\n    winapi_perror(\"CommandLineToArgvW\");\n    exit(1);\n  }\n\n  assert(wargc == argc);\n\n  Local<Array> arguments = Array::New(wargc - option_end_index + 1);\n  arguments->Set(Integer::New(0), String::New(reinterpret_cast<uint16_t*>(wargv[0])));\n  for (j = 1, i"],[48561,0,"= option_end_index; i < wargc; j++,"],[48597,0,"i++) {\n    "],[48614,0,"String> arg = String::New(reinterpret_cast<uint16_t*>(wargv[i]));\n    arguments->Set(Integer::New(j), arg);\n  }\n\n  LocalFree(wargv);\n#else\n  // Unix\n  Local<"],[49038,0,"#endif\n"],[28675,0,"("],[28716,0," ||\n      GetLastError() == ERROR_SUCCESS)"],[29430,0,"("],[29441,0,"&& GetLastError() != ERROR_SUCCESS) "],[43539,0,"Handle"],[43546,0,"cope scope;\n#ifdef __POSIX__\n  S"],[43661,0,"return scope.Close(String::New(val));\n  }\n#else  // _WIN32\n  String::Value key(property);\n  WC"],[43756,0,"AR buffer[32767]; // The m"],[43783,0,"ximum size allowed for environme"],[43816,0,"t variables.\n  DWORD result = GetEnvironmentVariableW(reinterpret_cast<WCHAR*>(*key),\n                                         buffer,\n                                         ARRAY_SIZE(buffer));\n  // If result >= sizeof buffer the buffer was too small. That shoul"],[44082,0," never\n  // happen. If resu"],[44110,0,"t == 0 and r"],[44123,0,"sult != ERROR_SUCCE"],[44143,1,""],[44143,0,"S the variable was not\n  // n"],[44173,1,""],[44173,0,"t found.\n  if ((r"],[44191,0,"sult"],[44196,0,"> 0 || GetLa"],[44209,1,""],[44209,0,"tErr"],[44214,1,""],[44214,0,"r() == ERROR_SUCCESS) &&\n      r"],[44247,1,""],[44247,0,"sult < ARRAY_SIZE(buffer)) {"],[44311,1,""],[44311,0,"reinterpret_c"],[44325,0,"st<uint16_t*>(buffer), resu"],[44353,0,"t"],[44362,0,"#endif\n  // Not found\n"],[44596,0,"#ifdef __POSIX__\n"],[44679,18,""],[44716,1,""],[44721,2,""],[44724,0,"Str"],[44729,5,""],[44729,0,"g::Value"],[44741,2,""],[44741,0,"(prop"],[44747,2,""],[44747,0,"r"],[44749,2,""],[44749,0,"y"],[44751,0,";\n"],[44754,1,""],[44755,0,"String::Value "],[44772,1,""],[44772,0,"(va"],[44776,0,"u"],[44778,5,""],[44779,4,""],[44783,4,""],[44783,0,"WCHAR"],[44790,0,"key_"],[44795,2,""],[44795,0,"t"],[44800,0,"rei"],[44804,0,"t"],[44806,5,""],[44807,9,""],[44809,2,""],[44809,0,"e"],[44811,3,""],[44811,0,"_c"],[44814,12,""],[44815,3,""],[44815,0,"t<WCHAR*>("],[44829,6,""],[44834,0,"// Env"],[44841,0,"ronme"],[44849,0,"va"],[44852,0,"iables"],[44859,1,""],[44859,0,"that"],[44864,3,""],[44864,0,"s"],[44866,5,""],[44867,0,"rt w"],[44872,0,"th '=' a"],[44881,2,""],[44881,0,"e read-only."],[44900,0,"key_pt"],[44907,0,"[0] != L'='"],[44926,3,""],[44926,0,"SetEnv"],[44933,0,"ro"],[44936,0,"men"],[44940,1,""],[44940,0,"VariableW"],[44950,1,""],[44950,0,"key_p"],[44956,3,""],[44959,1,""],[44959,0,"reint"],[44966,0,"p"],[44968,6,""],[44969,6,""],[44969,0,"t_ca"],[44974,7,""],[44974,0,"t<WCHAR*>(*v"],[44987,2,""],[44987,0,"l)"],[44996,0,"#endif\n"],[45005,1,""],[45005,0,"// Wh"],[45011,1,""],[45011,0,"th"],[45014,0,"r i"],[45018,0," work"],[45024,0,"d"],[45026,2,""],[45026,0,"or"],[45029,1,""],[45029,0,"not, alw"],[45038,1,""],[45038,0,"ys "],[45042,3,""],[45043,0,"tur"],[45047,4,""],[45047,0," rval."],[45063,0,"scope.Close("],[45080,0,")"],[45205,0,"HandleScope scope;\n#ifdef __POSIX__\n  "],[45302,2,""],[45302,0,"retur"],[45308,1,""],[45308,0," scope.C"],[45317,0,"os"],[45320,0,"(Integer::New(None));\n  }\n#else  // _WIN32\n  "],[45366,0,"tring::Value key(property);\n  WCHAR* key_ptr = reinterpret_"],[45426,0,"ast<WCHAR*>(*key);\n  if (GetEnvir"],[45460,0,"nmentVariableW(key_ptr, NULL, 0) > 0 ||\n      GetLastError() == ERROR_SUCCESS) {\n    if (key_"],[45554,0,"tr[0] == L'=') {\n      // Environment variabl"],[45600,0,"s that"],[45608,0,"tart with '=' are hidden and read-only.\n      return s"],[45666,0,".Close(Integer::New(v8::ReadOnly ||\n                                      v8::DontDelete ||\n                                      v8::DontEnum))"],[45816,0,"} else {\n      "],[45873,0,"  }\n  "],[45881,0,"#endif\n"],[45890,0,"// Not found\n  "],[45912,0,"scope.Close("],[45941,0,")"],[46089,0,"#ifdef __POSIX__"],[46140,1,""],[46141,4,""],[46142,23,""],[46143,30,""],[46207,1,""],[46207,0,"  if (unset"],[46219,2,""],[46219,0,"nv(*k"],[46225,0,"y) < 0) {"],[46239,0,"// Delet"],[46248,0,"o"],[46250,1,""],[46251,0,"failed. Retur"],[46266,1,""],[46266,0,"true if the"],[46281,2,""],[46281,0," wasn't ther"],[46294,0," i"],[46297,1,""],[46297,0," "],[46300,2,""],[46300,0,"e"],[46302,1,""],[46302,0,"first"],[46308,2,""],[46308,0,"place,"],[46319,2,""],[46319,0,"// f"],[46324,2,""],[46324,0,"lse"],[46328,2,""],[46329,1,""],[46329,0,"f"],[46331,1,""],[46331,0,"it"],[46334,3,""],[46334,0,"is"],[46337,1,""],[46337,0,"still t"],[46345,1,""],[46345,0,"e"],[46347,4,""],[46347,0,"e."],[46354,3,""],[46355,2,""],[46355,0,"e"],[46357,5,""],[46357,0,"u"],[46359,2,""],[46360,1,""],[46361,2,""],[46362,4,""],[46362,0,"cope.Close(Boolean::New(getenv("],[46398,0," == NULL))"],[46412,0,"};\n#else\n"],[46423,0,"Str"],[46428,1,""],[46428,0,"g::Value"],[46437,0,"key(p"],[46443,0,"operty);\n"],[46453,1,""],[46454,0,"WCHAR* key"],[46466,1,""],[46467,0,"r = r"],[46473,0,"i"],[46475,2,""],[46475,0,"ter"],[46479,0,"ret_c"],[46485,2,""],[46485,0,"st<WCHAR*>(*key"],[46503,1,""],[46505,1,""],[46509,0,"key_pt"],[46516,0,"[0] == L'=' || !SetEnvironmentVariableW(key_ptr, NULL)"],[46578,0,"//"],[46581,0,"Deletion"],[46591,1,""],[46591,0,"ailed. Retu"],[46603,1,""],[46604,0," "],[46606,0,"rue i"],[46612,1,""],[46612,0," the key wa"],[46624,0,"n'"],[46627,1,""],[46627,0," th"],[46632,0,"e in the fi"],[46644,0,"st place"],[46653,0,"\n    //"],[46661,1,""],[46661,0,"fals"],[46666,1,""],[46666,0," if it is still the"],[46686,0,"e.\n    bo"],[46696,0,"l "],[46699,0,"v"],[46701,3,""],[46701,0,"= G"],[46706,1,""],[46706,0,"E"],[46709,7,""],[46709,0,"ironme"],[46716,4,""],[46716,0,"tV"],[46719,0,"r"],[46721,0,"ableW(key_pt"],[46734,0,", NULL, NULL"],[46747,1,""],[46747,0," == 0 &&"],[46760,2,""],[46764,3,""],[46764,0,"      G"],[46773,1,""],[46773,0,"LastError()"],[46785,2,""],[46785,0,"!="],[46788,4,""],[46788,0,"ERROR_SUCCESS"],[46803,7,""],[46814,3,""],[46814,0,"scop"],[46819,0,".Close"],[46826,0,"Boolean::New(rv)"],[46849,0,"#endif"],[46858,0,"// It wo"],[46867,0,"k"],[46869,0,"d\n  re"],[46880,4,""],[46880,0,"v8::Tru"],[46980,0,"#ifdef __POSIX__"],[47290,0,"#else  // _WIN32\n  WCHAR* environment = GetEnvironmentStringsW();\n  if (environment == NULL) {\n    // This should not happen.\n    return scope.Close(Handle<Array>());\n  }\n  Local<Array> env = Array::New();\n  WCHAR* p = environment;\n  int i = 0;\n  while (*p != NULL) {\n    WCHAR *s;\n    if (*p == L'=') {\n      // If the key starts with '=' it is a hidden environment variable.\n      p += wcslen(p) + 1;\n      continue;\n    } else {\n      s = wcschr(p, L'=');\n    }\n    if (!s) {\n      s = p + wcslen(p);\n    }\n    env->Set(i++, String::New(reinterpret_cast<uint16_t*>(p), s - p));\n    p = s + wcslen(s) + 1;\n  }\n  FreeEnvironmentStringsW(environment);\n#endif"],[27664,1439,""],[27666,11,""],[27667,1,""],[27668,34,""],[27669,5,""],[27670,22,""],[27671,15,""],[27672,40,""],[27673,17,""],[27674,254,""],[27675,1,""],[27676,2,""],[27677,20,""],[27684,84,""],[27685,198,""],[50838,23,""],[50839,17,""],[50841,1,""],[50842,6,""],[50843,7,""],[50844,1,""],[50870,1,""],[50873,8,""],[50879,8,""],[50881,7,""],[48394,540,""],[48395,23,""],[48396,23,""],[48401,43,""],[48402,114,""],[48668,7,""],[57935,0,"w"],[57940,0,"_t"],[57948,0,"\n   "],[57980,0,"_"],[57983,0,"w"],[58005,0,"L"],[58085,0,"w"],[58090,0,"_t"],[58353,7,""],[58353,0,"ARRAY_SIZE("],[58377,0,")"],[58442,1,""],[58442,0,"W"],[58777,1,""],[58777,0,"reinterpret_cast<"],[58817,1,""],[58817,0,">(\n     "],[58856,20,""],[58876,12,""],[58897,15,""],[58917,17,""],[58920,10,""],[58940,22,""],[58943,5,""],[58963,27,""],[58979,0,")"],[59353,0,"w"],[59358,0,"_t"],[60109,7,""],[60109,0,"ARRAY_SIZE("],[60133,0,")"],[60247,0,"W"],[60371,0,"\n                                            "],[60418,1,""],[60418,0,"OpenFileMap"],[60430,1,""],[60432,2,""],[60432,0,"gW"],[60470,1,""],[60470,0,"reinterpret_cast<"],[60510,1,""],[60510,0,">(\n     "],[60542,22,""],[60562,10,""],[60577,17,""],[60597,15,""],[60600,12,""],[60620,20,""],[60623,7,""],[60643,25,""],[60659,0,")"]],"_dtSpan":[251682,258984]},{"parents":[213,214],"numChildren":1,"agent":9,"time":"1970-01-01T00:00:00Z","patches":[[29392,30,""],[29529,30,""],[32499,30,""],[33358,30,""]],"_dtSpan":[258984,259104]},{"parents":[215],"numChildren":1,"agent":149,"time":"1970-01-01T00:00:00Z","patches":[[14806,0,"static bool get_uv_dlerror_message(uv_lib_t lib, char* error_msg, int size) {\n  int r;\n  const char *msg;\n  if ((msg = uv_dlerror(lib)) == NULL) {\n    r = snprintf(error_msg, size, \"%s\", \"Unable to load shared library \");\n  } else {\n    r = snprintf(error_msg, size, \"%s\", msg);\n    uv_dlerror_free(lib, msg);\n  }\n  // return bool if the error message be written correctly\n  return (0 < r && r < size);\n}\n\n\n"],[35620,0,"// Retrieve uv_dlerror() message and throw exception with it\n    char dlerror_msg[1024];\n    if (!get_uv_dlerror_message(lib, dlerror_msg, sizeof dlerror_msg)) {\n      "],[35839,0,"  "],[35849,0,"New(\""],[35855,0,"annot retrieve an error message in process.dlopen\"));\n      return Thr"],[35926,0,"wException(exceptio"],[35946,0,");\n    }\n#ifdef __POSIX__\n    Lo"],[35980,0,"l<Value> exception = Excep"],[36007,0,"ion::Error"],[36030,2,""],[36030,0,"dlerror_msg));\n#else  // Wi"],[36058,0,"dows needs to "],[36073,1,""],[36073,0,"dd the fi"],[36084,0,"name"],[36089,0,"in"],[36094,1,""],[36094,0,"the err"],[36102,2,""],[36102,0,"r"],[36104,0,"mes"],[36108,1,""],[36109,1,""],[36109,0,"g"],[36111,1,""],[36111,0,"\n "],[36114,0,"  Local<Va"],[36125,0,"ue> exception = Except"],[36148,1,""],[36148,0,"on::Er"],[36155,1,""],[36155,0,"o"],[36157,5,""],[36157,0,"("],[36167,0,"String::Conc"],[36180,0,"t(St"],[36185,0,"in"],[36188,0,"::New(dlerror_msg), arg"],[36231,0,"#endif\n"]],"_dtSpan":[259104,260017]},{"parents":[216],"numChildren":1,"agent":110,"time":"1970-01-01T00:00:00Z","patches":[[34927,0,"// used in Hrtime() below\n#define NANOS_PER_SEC 1000000000\n\n// Hrtime exposes libuv's uv_hrtime() high-resolution timer."],[35048,0,"// The value re"],[35064,0,"urned b"],[35072,0," uv_hrtime() is a 64-bit int re"],[35104,0,"resenting nanoseconds,\n// so this function inst"],[35152,0,"a"],[35154,0," returns an Array with 2 entries repres"],[35194,0,"nting seconds\n// and nanoseconds, to avoid any integer overflow possibility.\n// Pass in an Array "],[35292,0,"rom a"],[35298,0,"pre"],[35302,0,"ious hrtime() call t"],[35323,0," "],[35325,0,"nstea"],[35332,0,"get a time diff.\nHandle<Value> Hrtime"],[35370,0,"const v8::Arguments& args) {\n  HandleScope scope;\n\n  uint64_t t = uv_hrtime();\n\n  if (args.Length() > 0) {\n    // return a time diff tuple\n    Local<Array> inArray = Local<Array>::Cast(args[0]);\n    uint64_t seconds = inArray->Get(0)->Uint32Value();\n    uint64_t nanos = inArray->Get(1)->Uint32Value();\n    t -= (seconds * NANOS_PER_SEC) + nanos;\n  }\n\n  Local<Array> tuple = Array::New(2);\n  tuple->Set(0, Integer::NewFrom"],[35793,0,"nsigned(t / NANOS_PER_SEC));\n  tuple->Set(1, Integer::NewFromUnsigned(t % NANOS_PER_SEC));\n\n  return scope.Close(tuple);\n}\n\n\ntypedef void (U"],[53398,0,"hrtime\", Hrtime);\n\n  NODE_SET_METHOD(process, \""]],"_dtSpan":[260017,261054]},{"parents":[217],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[1143,1,""],[1143,0,"\""],[1150,1,""],[1150,0,"\""],[1162,1,""],[1162,0,"\""],[1167,1,""],[1167,0,"\""],[1179,1,""],[1179,0,"\""],[1190,1,""],[1190,0,"\""],[1221,1,""],[1221,0,"\""],[1235,1,""],[1235,0,"\""],[1885,1,""],[1885,0,"\""],[1899,1,""],[1899,0,"\""],[1928,1,""],[1928,0,"\""],[1946,1,""],[1946,0,"\""],[1964,1,""],[1964,0,"\""],[1976,1,""],[1976,0,"\""],[1987,1,""],[1987,0,"\""],[2006,1,""],[2006,0,"\""],[2035,1,""],[2035,0,"\""],[2057,1,""],[2057,0,"\""],[2069,1,""],[2069,0,"\""],[2089,1,""],[2089,0,"\""],[2107,1,""],[2107,0,"\""],[2124,1,""],[2124,0,"\""],[2135,1,""],[2135,0,"\""],[2153,1,""],[2153,0,"\""],[2164,1,""],[2164,0,"\""],[2179,1,""],[2179,0,"\""],[2190,1,""],[2190,0,"\""],[2204,1,""],[2204,0,"\""],[2233,1,""],[2233,0,"\""],[2247,1,""],[2247,0,"\""],[2265,1,""],[2265,0,"\""],[2279,1,""],[2279,0,"\""],[2290,1,""],[2290,0,"\""],[2307,1,""],[2307,0,"\""]],"_dtSpan":[261054,261122]},{"parents":[218],"numChildren":1,"agent":110,"time":"1970-01-01T00:00:00Z","patches":[[49944,0,"versions->Set(String::NewSymbol(\"http_parser\"), String::New(\n               NODE_STRINGIFY(HTTP_PARSER_VERSION_MAJOR) \".\"\n               NODE_STRINGIFY(HTTP_PARSER_VERSION_MINOR)));\n  "],[1780,0,"#include \"zlib.h\"\n"],[50529,0,"  versions->Set(String::NewSymbol(\"zlib\"), String::New(ZLIB_VERSION));\n"],[49847,0,"// process.versions\n  "],[49907,16,""],[50405,1,""],[50406,65,""],[50462,3,""],[50462,0,"\n               NODE_STRINGIFY(UV_VERSION_MAJOR) \".\"\n               NODE_STRINGIFY(UV_VERSION_MINOR)"]],"_dtSpan":[261122,261602]},{"parents":[219],"numChildren":1,"agent":104,"time":"1970-01-01T00:00:00Z","patches":[[51638,0,"process.execArgv\n  Local<Array> execArgv = Array::New(option_end_index - 1);\n  for (j = 1, i = 0; j < option_end_index; j++, i++) {\n    execArgv->Set(Integer::New(i), String::New(argv[j]));\n  }\n  // assign it\n  process->Set(String::NewSymbol(\"execArgv\"), execArgv);\n\n\n  // "],[68993,0,"static char **copy_argv(int argc, char **argv) {\n  size_t strlen_sum;\n  char **argv_copy;\n  char *argv_data;"],[69102,0,"  s"],[69106,0,"ze_t le"],[69114,0,";\n  int i;\n\n  s"],[69130,0,"rlen_sum = 0;\n  for(i = 0; i < argc; i++) {\n    strlen_sum += strlen(argv[i]) + 1;\n  }\n\n  argv_copy = (char **) malloc(sizeof(char *) * (argc + 1) + strlen_sum);\n  if (!argv_copy) {\n   "],[69316,0,"return NULL;\n  }\n\n  argv_data = (char *) argv_copy + sizeof(char *) * (argc + 1);\n\n  for(i = 0; i < argc; i++) {\n    argv_copy[i] = argv_data;\n    len = strlen(argv[i]) + 1;\n    memcpy(argv_data, argv[i], len);\n    argv_data += len;\n  }\n\n  argv_copy[argc] = NULL;\n\n  return argv_copy;\n}\n\nint "],[69645,0,"Logic to duplicate argv as Init() modifies arguments\n  // that are passed into it.\n  char **argv_copy = copy_argv(argc, argv);\n\n  // "],[69824,0,"// Use copy here "],[69842,0,"s to not modify the original a"],[69875,0,":\n"],[69878,1,""],[69894,0,"_copy"],[70146,0,"// Use original argv, as we're just copying values out of it.\n    "],[70970,0,"// Clean up the copy:\n  free(argv_copy);\n\n  "]],"_dtSpan":[261602,262783]},{"parents":[220],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[65685,110,""],[69535,0,"Hack aroung with the argv pointer. Used for process.title = \"blah\".\n  argv = uv_setup_args(argc, argv);\n\n  // "]],"_dtSpan":[262783,263003]},{"parents":[221],"numChildren":1,"agent":110,"time":"1970-01-01T00:00:00Z","patches":[[3011,0,"bool force_repl = false;\nstatic "],[52751,0,"if (force_repl) {\n    process->Set(String::NewSymbol(\"_forceRepl\"), True());\n  }\n\n  "],[56923,0,"i, -"],[56928,0,"interactive    always enter the REPL e"],[56967,0,"en if stdin\\n\"\n         \"                       does not appear to be a terminal\\n\"\n         \"  --v"],[59260,0,"interactive\") == 0 || strcmp(arg, \"-i\") == 0) {\n      force_repl = true;\n      argv[i] = const_cast<char*>(\"\");\n    } else if (strcmp(arg, \"--"]],"_dtSpan":[263003,263402]},{"parents":[222],"numChildren":1,"agent":198,"time":"1970-01-01T00:00:00Z","patches":[[20700,11,""],[20701,1,""],[27200,12,""],[27270,12,""],[28136,12,""],[30355,12,""],[31372,12,""],[36443,11,""],[36444,1,""],[37269,11,""],[37270,1,""],[43197,12,""]],"_dtSpan":[263402,263510]},{"parents":[223],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[59820,13,""],[59821,1,""],[59823,2,""],[59824,14,""],[59825,2,""],[59829,2,""],[59830,3,""],[59831,2,""],[59832,2,""],[59833,5,""],[59834,7,""],[59835,2,""],[59836,2,""],[59837,4,""],[59838,3,""],[59839,8,""],[59840,5,""],[59841,1,""],[59842,9,""],[59846,2,""],[59847,9,""],[59848,4,""],[59849,2,""],[59850,3,""],[59851,4,""],[59852,8,""],[59853,2,""],[59854,1,""],[59854,0," d"],[59859,10,""],[59860,4,""],[59861,3,""],[59861,0,"por"],[59865,4,""],[59865,0,","],[59871,2,""],[59872,6,""],[59873,2,""],[59874,5,""],[59875,5,""],[59876,2,""],[59877,3,""],[59878,9,""],[59879,2,""],[59880,3,""],[59881,8,""],[59885,2,""],[59886,3,""],[59887,20,""],[59888,2,""],[59889,8,""],[59890,2,""],[59891,7,""],[59895,22,""],[59895,0,"      w"],[59903,7,""],[59903,0,"it_co"],[59909,24,""],[59910,2,""],[59911,1,""],[59911,0,"ct"],[59915,4,""]],"_dtSpan":[263510,263824]},{"parents":[224],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[37815,0,"static_cast<size_t>("],[37836,0,")"],[41000,252,""]],"_dtSpan":[263824,264097]},{"parents":[225],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[69691,0,"v8::"],[69715,56,""],[69715,0,"v8::"],[69746,1,""],[69748,1,""],[69784,1,""],[69786,1,""],[69797,0,"v8::"],[69820,0,"v8::"],[69842,2,""],[69842,0,"v8::"],[69888,2,""],[69950,1,""],[69952,1,""],[70011,2,""],[70067,2,""],[70123,1,""],[70125,1,""],[70178,1,""],[70180,1,""],[70198,2,""],[70272,2,""],[70352,2,""],[70420,1,""],[70422,1,""],[70491,1,""],[70493,1,""],[70517,2,""],[70547,2,""],[70570,0,"\n"],[70588,0,"// Clean up.\n"],[70621,42,""]],"_dtSpan":[264097,264261]},{"parents":[226],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[45756,20,""],[45757,1,""],[45757,0,"f"],[45759,3,""],[45759,0,"(!g"],[45768,10,""],[45769,0,"key)"],[45774,1,""],[45775,1,""],[45775,0,"retur"],[45782,0,"Fal"],[45786,2,""],[45787,10,""],[45787,0,"();"],[45792,3,""],[45793,1,""],[45807,11,""],[45807,0,";"],[45812,7,""],[45812,0,"ca"],[45815,0,"'t"],[45818,4,""],[45818,0,"ch"],[45821,2,""],[45821,0,"ck"],[45824,1,""],[45824,0,"r"],[45831,2,""],[45831,0,"val"],[45836,0,","],[45839,2,""],[45840,9,""],[45840,0,"'"],[45842,3,""],[45843,5,""],[45843,0,"void"],[45848,1,""],[45848,0,"o"],[45851,2,""],[45851,0,"som"],[45855,6,""],[45859,21,""],[45860,13,""],[45860,0,"fo"],[45863,2,""],[45863,0,"ms"],[45866,1,""],[45868,1,""],[45875,22,""],[45875,0,"Tru"],[45879,1,""],[45880,11,""],[45881,10,""],[45883,5,""],[46316,22,""],[46326,4,""],[46334,0,"#endif\n"]],"_dtSpan":[264261,264537]},{"parents":[227],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[39390,44,""],[39455,4,""],[39456,5,""],[39460,54,""],[39461,96,""],[40623,3,""],[40623,0,"TryC"],[40628,3,""],[40629,3,""],[40630,0,"h "],[40633,4,""],[40633,0,"ve"],[40636,0,"t_try"],[40643,3,""],[40643,0,"a"],[40645,4,""],[40645,0,"ch"],[40689,2,""],[40689,0,"if"],[40692,1,""],[40692,0,"("],[40694,4,""],[40694,0,"v"],[40698,0,"_try_catch.HasCaught()) {\n"],[40725,2,""],[40726,2,""],[40727,4,""],[40728,2,""],[40728,0,"//"],[40735,0,"u"],[40737,2,""],[40737,0,"caugh"],[40753,3,""],[40754,1,""],[40754,0,"event"],[40760,0,"th"],[40764,3,""],[40764,0,"w, "],[40768,1,""],[40769,1,""],[40770,2,""],[40770,0,"we must"],[40778,2,""],[40778,0,"exi"],[40782,0,"."],[40786,9,""],[40786,0,"  R"],[40790,0,"portE"],[40803,0,"(event"],[40810,0,"try_cat"],[40818,1,""],[40818,0,"h, tr"],[40824,1,""],[40824,0,"e);\n    exi"],[40836,4,""],[40836,0,"(1)"],[40841,0,"  }\n"],[19416,1,""],[19416,0,"\n"],[19430,0,"const "],[19472,5,""],[19505,0,"int argc,\n     "],[19525,0,"   Handle<Value> argv[]) {\n  HandleScope scope;\n  return scope.Close(MakeCallback(object, Str"],[19620,0,"g::NewSymbol(me"],[19636,0,"hod),"],[19647,0," argv));\n}\n\nvoid\nMakeCallback(const Handle<Object> object,"],[19719,0,"const Handle<String> symbol,\n             int argc,\n        "],[19870,12,""],[19870,0,"sy"],[19873,3,""],[19873,0,"b"],[19875,2,""],[19875,0,"l"],[19918,0,"String::Utf8Value method(symbol);\n    "],[19987,0,"*"],[20102,0,"}\n\nvoid\nMakeCallback(const Handle<Object> object,\n             const Handle<Function> callback,\n             int argc,\n             Handle<Value> argv[]) {\n  HandleScope scope;\n\n"],[19412,3,""],[19412,0,"Han"],[19416,0,"le<Value>"],[19668,3,""],[19668,0,"Han"],[19672,0,"le<Value>"],[20120,0,"  return scope.Close(MakeCallback(object, callback, argc, argv));\n"],[20189,3,""],[20189,0,"Han"],[20193,0,"le<Value>"],[20453,0,"Lo"],[20458,0,"<Va"],[20462,0,"ue> ret = call"],[20575,0,"\n  return scope.Close(ret);\n"],[19974,0,"// XXX: I"],[19984,0," the object has a domain attached, handle it there?\n    // At least, would be good to get *some* sort of indication\n    // of how we got here, even if it's not catchable.\n    f"],[20176,0,"Non-function in MakeCallback. "],[20217,0,"\\n"],[20234,2,""],[20237,10,""],[20238,15,""],[20239,1,""],[20239,0,"rt"],[20242,1,""],[20247,0,"}\n\n  "],[6234,1,""],[6235,5,""],[6235,0,"NODE_"],[6241,10,""],[6242,29,""],[6242,0,"YMBOL"],[6264,1,""],[19546,0,"\n"],[19549,5,""],[19549,0,"Ha"],[19552,5,""],[19552,0,"dl"],[19555,2,""],[19555,0,"<Va"],[19559,2,""],[19559,0,"u"],[19561,1,""],[19561,0,"> ret =\n    "],[19632,0,";\n\n  return scope.Close(ret"],[2971,0,"static Persistent<String> domain_symbol;"],[3019,0,"Persistent<String> enter_sym"],[3049,0,"l;\nstatic Persistent<String> exit_symb"],[3089,0,";\nstatic"],[3098,0,"Persistent<String> dis"],[3121,0,"osed_symbol;\n\n\nstatic bool p"],[20809,0,"if (domain_symbol.IsEmpty()) {\n    domain_symbol = NODE_PSYMBOL(\"domain\");\n    enter_symbol = NODE_PSYMBOL(\"enter\");\n    exit_symbol = NODE_PSYMBOL(\"exit\");\n    disposed_symbol = NODE_PSYMBOL(\"_disposed\");\n  }\n\n  Local<Value> domain_v = object->Get(domain_symbol);\n  Local<Object> domain;\n  Local<Function> enter;\n  Local<Function> exit;\n  if (!domain_v->IsUndefined()) {\n    domain = domain_v->ToObject();\n    if (domain->Get(disposed_symbol)->BooleanValue()) {\n      // domain has been disposed of.\n      return Undefined();\n    }\n    enter = Local<Function>::Cast(domain->Get(enter_symbol));\n    enter->Call(domain, 0, NULL);\n  }\n\n  if (try_catch.HasCaught()) {\n    FatalException(try_catch);\n    return Undefined();\n  }\n\n  "],[21656,0,"  return Undefined();\n  }\n\n  if (!domain_v->IsUndefined()) {\n    exit = Local<Function>::Cast(domain->Get(exit_symbol));\n    exit->Call(domain, 0, NULL);\n  }\n\n  if (try_catch.HasCaught()) {\n    FatalException(try_catch);\n    return Undefined();\n  "]],"_dtSpan":[264537,267091]},{"parents":[214],"numChildren":2,"agent":18,"time":"1970-01-01T00:00:00Z","patches":[[44000,20,""],[44001,1,""],[44001,0,"f"],[44003,3,""],[44003,0,"(!g"],[44012,10,""],[44013,0,"key)"],[44018,1,""],[44019,1,""],[44019,0,"retur"],[44026,0,"Fal"],[44030,2,""],[44031,10,""],[44031,0,"();"],[44036,3,""],[44037,1,""],[44051,11,""],[44051,0,";"],[44056,7,""],[44056,0,"ca"],[44059,0,"'t"],[44062,4,""],[44062,0,"ch"],[44065,2,""],[44065,0,"ck"],[44068,1,""],[44068,0,"r"],[44075,2,""],[44075,0,"val"],[44080,0,","],[44083,2,""],[44084,9,""],[44084,0,"'"],[44086,3,""],[44087,5,""],[44087,0,"void"],[44092,1,""],[44092,0,"o"],[44095,2,""],[44095,0,"som"],[44099,6,""],[44103,21,""],[44104,13,""],[44104,0,"fo"],[44107,2,""],[44107,0,"ms"],[44110,1,""],[44112,1,""],[44119,22,""],[44119,0,"Tru"],[44123,1,""],[44124,11,""],[44125,10,""],[44127,5,""],[44560,22,""],[44570,4,""],[44578,0,"#endif\n"]],"_dtSpan":[267091,267367]},{"parents":[228,229],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[47528,1,""],[47529,3,""],[47539,4,""],[47549,1,""],[47550,4,""],[47552,3,""],[47560,3,""],[47577,1,""],[47582,2,""],[47585,2,""],[47590,2,""],[47591,2,""],[47595,1,""],[47601,3,""],[47607,1,""],[47610,1,""],[47613,4,""],[47618,1,""],[47621,3,""],[47632,2,""],[47633,2,""],[47645,3,""],[48103,7,""]],"_dtSpan":[267367,267423]},{"parents":[230],"numChildren":1,"agent":110,"time":"1970-01-01T00:00:00Z","patches":[[53935,0,"}\n\n  // -p, --print\n  if (print_eval) {\n  "],[54026,10,""],[54026,0,"Tru"],[54030,1,""],[54031,10,""],[54042,0,"// -i, --interactive\n  "]],"_dtSpan":[267423,267512]},{"parents":[231],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[28200,49,""]],"_dtSpan":[267512,267561]},{"parents":[232],"numChildren":1,"agent":110,"time":"1970-01-01T00:00:00Z","patches":[[70144,0,","],[70146,0,"Integer::New(0) "],[70211,1,""],[70211,0,"2"],[69952,0,"process_l->Set(String::NewSymbol(\"_exiting\"), True());\n  "]],"_dtSpan":[267561,267637]},{"parents":[233],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[69874,0,"struct AtExitCallback {\n  AtExitCallback* next_;\n  void (*cb_)(void* arg);\n  void* arg_;\n};\n\nstatic AtExitCallback* at_exit_functions_;\n\n\n"],[70017,0,"RunAtExit() {\n  At"],[70036,0,"xitCallback* p = at_exit_functions_;\n  at_exit_functions_ = NULL;\n\n  while (p) {\n    AtExitCallback* q = p->next_;\n    p->cb_(p->arg_);\n    delete p;\n    p = q;\n  }\n}\n\n\nvoid AtExit(void (*cb)(void* arg), void* arg) {\n  AtExitCallback* p = new AtExitCallback;\n  p->cb_ = cb;\n  p->arg_ = arg;\n  p->next_ = at_exit_functions_;\n  at_exit_functions_ = p;\n}\n\n\nvoid E"],[72764,0,"  RunAtExit();\n"]],"_dtSpan":[267637,268168]},{"parents":[234],"numChildren":1,"agent":96,"time":"1970-01-01T00:00:00Z","patches":[[71885,4,""],[71905,4,""],[71905,0,"{\n    Locker locker;\n    "],[71959,0,"  "],[71999,0,"  "],[72012,4,""],[72031,4,""],[72049,4,""],[72049,0,"  "],[72093,0,"  "],[72159,0,"  "],[72222,0,"  "],[72278,0,"  "],[72338,0,"  "],[72395,0,"  "],[72417,0,"  "],[72493,0,"  "],[72573,0,"  "],[72645,0,"  "],[72718,0,"  "],[72746,0,"  "],[72778,0,"  "],[72803,0,"  "],[72836,13,""],[72857,0,"#endif\n  }\n\n#ifndef NDEBUG\n  // Clean up. Not strictly necessary.\n"]],"_dtSpan":[268168,268326]},{"parents":[235],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[1306,56,""]],"_dtSpan":[268326,268382]},{"parents":[236],"numChildren":2,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[23035,0,"fprintf(stderr, \"The 'binary' buffe"],[23071,0," encoding is d"],[23086,0,"preca"],[23092,0,"ed. \"\n                    \"Use a B"],[23127,0,"ffe"],[23131,0," object directly.\\n\");\n    retur"],[23381,1,""],[23381,0,"a Buffer o"],[23392,0,"ject d"],[23399,2,""],[23400,0,"ectl"],[23405,1,""],[23510,3,""],[23510,0,"(array "],[23518,1,""],[23518,0,"f "],[23522,0,"te"],[23525,0,"ers)"],[23541,2,""],[23542,0,"ov"],[23546,12,""],[23571,4,""],[23571,0,"U"],[23575,3,""],[23576,2,""],[23577,2,""],[23577,0,"B"],[23579,0,"ffe"],[23584,1,""],[23585,0,"bject "],[23592,0,"ir"],[23595,0,"ctly"],[24564,9,""],[24630,1,""],[24630,0,"a Buffer o"],[24641,0,"ject d"],[24648,2,""],[24649,0,"ectl"],[24654,1,""],[25651,9,""],[25716,1,""],[25716,0,"a Buffer o"],[25727,0,"ject d"],[25734,2,""],[25735,0,"ectl"],[25740,1,""]],"_dtSpan":[268382,268659]},{"parents":[237],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[1152,0,"#include \"handle_wrap.h\" // HandleWrap::GetActiveHandles()\n"],[2508,0,"// declared in req_wrap.h\nPersistent<String> process_symbol;\nPersistent<String> domain_symbol;\n"],[3095,29,""],[3097,3,""],[3098,6,""],[3099,3,""],[20870,5,""],[20870,0,"e"],[20872,0,"ter"],[20900,44,""],[72264,0,"process_symbol = NODE_PSYMBOL(\"process\");\n    domain_symbol = NODE_PSYMBOL(\"domain\");\n\n    "],[1162,5,""],[1162,0,"r"],[1164,0,"q"],[1173,3,""],[1173,0,"\n#include"],[1183,1,""],[1183,0,"\"h"],[1190,1,""],[1190,0,"_w"],[1195,20,""],[1195,0,".h\""],[2496,0,"ngx_queue_t handle_wrap_queue = { &handle_wrap_queue, &handle_wrap_queue };\nngx_queue_t req_wrap_queue = { &req_wrap_queue, &req_wrap_queue };\n\n"],[30003,0,"GetActiveRequests(const "],[30028,0,"rguments& args) {\n  HandleScope scope;\n\n  Local<Array> ary = Array::New();\n  ngx_queue_t* q = NULL;\n  int i = 0;\n\n  ngx_queue_foreach(q, &req_wrap_queue) {\n    ReqWrap<uv_req_t>* w = container_of(q, ReqWrap<uv_req_t>, req_wrap_queue_);\n    if (w->o"],[30277,0,"ject_.IsEmpty()) c"],[30296,0,"ntinue;\n    a"],[30310,0,"y->Se"],[30317,0,"i++, w->obje"],[30330,0,"t_);\n  }\n\n  return sc"],[30352,0,"pe.Close(ary);\n}\n\n\n// No"],[30377,0,"-"],[30380,0,"atic, friend of HandleWrap. Could have been a HandleWrap method"],[30444,0,"but\n// implemented here for consistency with GetActiveRequests().\nHandle<Value> GetActiveHandles(const Arguments& args) {\n  HandleScope scope;\n\n  Local<Array> ary = Array::New();\n  ngx_queue_t* q = NULL;\n  int i = 0;\n\n  ngx_queue_foreach(q, &handle_wrap_queue) {\n    HandleWrap* w = container_of(q, HandleWrap, handle_wrap_queue_);\n    if (w->object_.IsEmpty() || w->unref) continue;\n    ary->Set(i++, w->object_);\n  }\n\n  return scope.Close(ary);\n}\n\n\nstatic Handle<Value> Abort(const "],[55855,0,"getActiveRequests\", GetActiveRequests);\n  NODE_SET_METHOD(process, \"_getActiveHandles\", GetActiveHandles);\n  NODE_SET_METHOD(process, \"_"],[30664,0,"Local<Stri"],[30676,0,"> owner_sym = String::New(\"owner\");\n\n  ng"],[30883,0,"Local<V"],[30891,2,""],[30891,0,"lue> obj = w->object_"],[30914,1,""],[30914,0,"G"],[30918,0,"owner_sym);\n    "],[30935,3,""],[30935,0,"f"],[30937,0,"(obj->IsUndefined()) obj = *"],[30975,0,";\n    ary->Set(i++, obj"]],"_dtSpan":[268659,270393]},{"parents":[229],"numChildren":2,"agent":48,"time":"1970-01-01T00:00:00Z","patches":[[6696,1,""],[6703,3,""],[6703,0,"voi"],[6707,4,""],[6707,0," St"],[6711,9,""],[6711,0,"rt"],[6717,11,""],[6717,0,"Spin"],[6722,8,""],[6723,6,""],[6724,2,""],[6724,0,"("],[6731,2,""],[6732,2,""],[6733,4,""],[6734,13,""],[7253,0,"}\n\nstatic"],[7263,0,"Handle<Value>"],[7277,0,"NeedTickCallback(const A"],[7302,0,"gum"],[7306,0,"n"],[7308,0,"s& args) {\n  StartTickSpinner();\n  ret"],[7364,1,""],[38553,0,"\n  // This makes sure uncaught exceptions don't interfere with process.nextTick\n  StartTickSpinner();\n"]],"_dtSpan":[270393,270662]},{"parents":[237,239],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[2449,1,""],[42694,0,"\n"],[42849,0,"  }\n"],[42955,2,""],[42957,1,""],[42959,1,""],[56272,1,""]],"_dtSpan":[270662,270673]},{"parents":[238,240],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[2735,0,"\n"],[23270,35,""],[23271,14,""],[23272,5,""],[23273,34,""],[23274,3,""],[23275,32,""],[23492,2,""],[23493,8,""],[23493,0,"'"],[23495,6,""],[23496,0,"na"],[23499,4,""],[23500,0,"'"],[23606,7,""],[23606,0,"enc"],[23610,2,""],[23610,0,"d"],[23613,2,""],[23614,4,""],[23626,0,"na"],[23629,2,""],[23631,0," to 'binary'"],[23668,1,""],[23668,0,"Plea"],[23675,0,"upd"],[23679,0,"te"],[23682,1,""],[23682,0,"yo"],[23685,3,""],[23687,4,""],[23688,2,""],[23688,0,"o"],[23690,2,""],[23691,4,""],[24657,0,"encoding "],[24730,2,""],[24731,8,""],[24731,0,"'"],[24733,6,""],[24734,0,"na"],[24737,4,""],[24738,0,"'"],[25736,0,"encoding "],[25810,10,""],[25810,0,"'"],[25812,6,""],[25813,0,"na"],[25816,4,""],[25817,0,"'"]],"_dtSpan":[270673,270951]},{"parents":[241],"numChildren":1,"agent":112,"time":"1970-01-01T00:00:00Z","patches":[[28117,0,"utc((sou"],[28126,0,"cel"],[28131,0,"e_s"],[28135,2,""],[28135,0,"ring[i] == '\\t') ? '\\t' : ' ', "],[28172,5,""],[28268,3,""],[28268,0,"u"],[28270,1,""],[28270,0,"c"],[28272,0,"'^', "],[28283,5,""],[28298,3,""],[28298,0,"u"],[28300,1,""],[28300,0,"c"],[28302,0,"'\\n', "],[28314,6,""]],"_dtSpan":[270951,271037]},{"parents":[242],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[6328,1,""],[6352,51,""],[6355,2,""],[6384,37,""],[7365,5,""],[7367,3,""],[7368,3,""],[7369,10,""],[7372,10,""],[7374,24,""],[7398,31,""],[7401,2,""],[7403,1,""],[7404,1,""],[14998,12,""],[14999,29,""],[15001,1,""],[15002,8,""],[15003,41,""],[15004,11,""],[15005,39,""],[15007,48,""],[15008,71,""],[15009,5,""],[15010,3,""],[15011,12,""],[15012,24,""],[15015,3,""],[15016,2,""],[15017,21,""],[15018,2,""],[15019,51,""],[15020,24,""],[30191,0,"_"],[38752,16,""],[39048,3,""],[39048,0,"if"],[39051,2,""],[39051,0,"("],[39078,25,""],[39082,3,""],[39083,2,""],[39084,8,""],[39085,12,""],[39086,15,""],[39086,0,"L"],[39088,4,""],[39089,21,""],[39090,3,""],[39091,28,""],[39091,0,"<S"],[39094,7,""],[39095,13,""],[39096,13,""],[39096,0,"n"],[39098,8,""],[39098,0,">"],[39100,2,""],[39103,3,""],[39106,10,""],[39107,23,""],[39108,28,""],[39121,14,""],[39121,0,"u"],[39123,30,""],[39123,0,"_"],[39126,2,""],[39127,12,""],[39128,3,""],[39129,14,""],[39130,1,""],[39130,0,"r"],[39132,6,""],[39132,0,"&l"],[39135,2,""],[39135,0,"b)"],[39139,6,""],[39148,4,""],[39148,0,"W"],[39150,3,""],[39150,0,"N32"],[39154,26,""],[39155,1,""],[39156,49,""],[39218,2,""],[39219,13,""],[39220,9,""],[39221,1,""],[39222,3,""],[39223,8,""],[39224,2,""],[39225,8,""],[39225,0,"msg"],[39229,0,"="],[39245,12,""],[39246,2,""],[39249,3,""],[39252,1,""],[39272,1,""],[39309,1,""],[39309,0,"E"],[39318,0,"::Error(errmsg)"],[40185,3,""],[40185,0,"if"],[40188,2,""],[40188,0,"("],[40198,0,"&"],[40243,26,""],[40447,5,""],[40447,0,"if"],[40450,0,"("],[40460,0,"&"],[40520,27,""],[40530,25,""],[40530,0,"L"],[40532,4,""],[40533,1,""],[40534,0,"l<St"],[40539,7,""],[40539,0,"in"],[40542,11,""],[40542,0,">"],[40544,1,""],[40547,28,""],[40548,1,""],[40549,2,""],[40550,1,""],[40553,10,""],[40553,0,"S"],[40556,4,""],[40558,8,""],[40558,0,"g::New("],[40566,1,""],[40566,0,"v_"],[40569,11,""],[40570,1,""],[40571,0,"rror(&lib));"],[40590,12,""],[40593,0,"dlclo"],[40599,2,""],[40600,4,""],[40601,3,""],[40601,0,"&lib"],[40608,1,""],[40653,9,""],[40654,2,""],[40654,0,"rr"],[40657,1,""],[40658,2,""],[40659,1,""],[40661,1,""],[69102,0,"reinterpret_cast<"],[69122,0,"han"],[69126,0,"l"],[69128,1,""],[69128,0,"_t*>(&prep"],[69139,2,""],[69139,0,"re_"],[69143,0,"ick"],[69147,5,""],[69147,0,"watcher"],[69283,0,"reinterpret_cast<"],[69303,0,"han"],[69307,0,"le_t*>(&ch"],[69318,1,""],[69318,0,"ck_tick_w"],[69328,2,""],[69329,6,""],[69329,0,"cher"],[69388,31,""],[69489,0,"reinterpret_cast<"],[69509,3,""],[69509,0,"h"],[69511,1,""],[69511,0,"nd"],[69514,0,"e_"],[69517,0,"*>(&gc"],[69524,5,""],[69524,0,"check"],[69590,0,"reinterpret_cast<"],[69610,3,""],[69610,0,"h"],[69612,1,""],[69612,0,"nd"],[69615,0,"e_"],[69618,0,"*>(&gc"],[69625,0,"id"],[69628,4,""],[69628,0,"e"],[69692,0,"reinterpret_cast<"],[69712,3,""],[69712,0,"h"],[69714,1,""],[69714,0,"nd"],[69717,1,""],[69717,0,"e"],[69719,4,""],[69719,0,"t*>"],[69723,0,"&gc_timer"]],"_dtSpan":[271037,272677]},{"parents":[243],"numChildren":1,"agent":66,"time":"1970-01-01T00:00:00Z","patches":[[1242,0," "],[1246,0,"ined"],[1262,0," || defined HAVE_ETW"],[1319,0,"fdef HAVE_ETW\n# include \"node_win32_etw_provider.h\"\n#endif\n\n#i"],[57329,0," "],[57333,0,"ined"],[57349,0," || defined HAVE_ETW"],[73391,0,"#ifdef HAVE_ETW\n    shutdown_etw();\n#endif\n\n"]],"_dtSpan":[272677,272833]},{"parents":[244],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[67489,0,"Make inherited handles noninheritable.\n  uv_disable_stdio_inheritance();\n\n  // "]],"_dtSpan":[272833,272912]},{"parents":[245],"numChildren":1,"agent":66,"time":"1970-01-01T00:00:00Z","patches":[[1319,62,""],[73406,44,""]],"_dtSpan":[272912,273018]},{"parents":[246],"numChildren":1,"agent":9,"time":"1970-01-01T00:00:00Z","patches":[[50690,0,"_template->SetClassName(String::NewSymbol(\"process\"));\n\n  process"],[50830,1,""]],"_dtSpan":[273018,273084]},{"parents":[247],"numChildren":1,"agent":169,"time":"1970-01-01T00:00:00Z","patches":[[51060,132,""],[58680,35,""],[58681,13,""],[58682,24,""],[59696,108,""],[59697,11,""],[59698,26,""],[59699,56,""],[59701,7,""]],"_dtSpan":[273084,273496]},{"parents":[248],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[2094,32,""]],"_dtSpan":[273496,273528]},{"parents":[249],"numChildren":2,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[3389,0,"bool no_depre"],[3403,0,"ation = false;\nstatic bool trace_deprecation = false;\nstatic c"],[22885,0,"i"],[22887,0," (!no_de"],[22897,0,"ecat"],[22902,0,"o"],[22904,0,") {\n      fprin"],[22997,0,"  "],[23023,0,"}\n    "],[23099,0,"if (!no_deprecation) {\n      "],[23213,0,"  "],[23250,0,"}\n    "],[54341,0,"// --no-deprecation\n  if (no_deprecation) {\n    process->Set(String::NewSymbol(\"noDeprecation\"), True());\n  }\n\n  // --trace-deprecation\n  if (trace_deprecation) {\n    process->Set(String::NewSymbol(\"traceDeprecation\"), True());\n  }\n\n  "],[58966,0,"no-deprecation     silence deprecation warnings\\n\"\n         \"  --trace-deprecation  show stack traces on deprecations\\n\"\n         \"  --"],[61239,0,"strcmp(arg, \"--no-deprecation\") == 0) {\n      argv[i] = const_cast<char*>(\"\");\n      no_deprecation = true;\n    } else if (strcmp(arg, \"--trace-deprecation\") == 0) {\n      argv[i] = const_cast<char*>(\"\");\n      trace_deprecation = true;\n    } else if ("],[3394,25,""],[3395,11,""],[3624,0,"// used by C++ modules as well\nbool no_deprecation = false;\n\n"]],"_dtSpan":[273528,274396]},{"parents":[250],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[46051,0,".  Fetch from prototype."],[46085,1,""],[46085,0,"i"],[46087,1,""],[46087,0,"fo.Data().As<Obj"],[46104,3,""],[46104,0,"ct>()->G"],[46113,1,""],[46113,0,"t"],[46115,0,"property"],[53852,3,""],[53852,0,"Obj"],[53856,3,""],[53856,0,"ct::N"],[53862,1,""],[53862,0,"w"]],"_dtSpan":[274396,274476]},{"parents":[251],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[46051,24,""],[46061,1,""],[46061,0,"U"],[46063,0,"de"],[46066,15,""],[46066,0,"in"],[46069,10,""],[46069,0,"d"],[46071,8,""],[53800,3,""],[53800,0,"Und"],[53804,5,""],[53804,0,"fin"],[53808,1,""],[53808,0,"d"]],"_dtSpan":[274476,274556]},{"parents":[252],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[46051,0,".  Fetch from prototype."],[46085,3,""],[46085,0,"scop"],[46090,1,""],[46090,0,".Close("],[46099,0,"fo.Data().As<Obj"],[46116,1,""],[46116,0,"ct>"],[46121,0,"->Get(property))"],[53865,3,""],[53865,0,"Obj"],[53869,3,""],[53869,0,"ct::N"],[53875,1,""],[53875,0,"w"]],"_dtSpan":[274556,274647]},{"parents":[250],"numChildren":1,"agent":110,"time":"1970-01-01T00:00:00Z","patches":[[38211,0,"if (!args[0]->IsArray()) {\n      Local<Value> exception = Exception::TypeError(\n          String::New(\"process.hrtime() only accepts an Array tuple.\"));\n      return ThrowException(exception);\n    }\n    "]],"_dtSpan":[274647,274850]},{"parents":[239],"numChildren":1,"agent":18,"time":"1970-01-01T00:00:00Z","patches":[[1143,1,""],[1143,0,"\""],[1150,1,""],[1150,0,"\""],[1162,1,""],[1162,0,"\""],[1167,1,""],[1167,0,"\""],[1179,1,""],[1179,0,"\""],[1190,1,""],[1190,0,"\""],[1221,1,""],[1221,0,"\""],[1235,1,""],[1235,0,"\""],[1837,1,""],[1837,0,"\""],[1854,1,""],[1854,0,"\""],[2012,1,""],[2012,0,"\""],[2026,1,""],[2026,0,"\""],[2055,1,""],[2055,0,"\""],[2073,1,""],[2073,0,"\""],[2091,1,""],[2091,0,"\""],[2103,1,""],[2103,0,"\""],[2114,1,""],[2114,0,"\""],[2133,1,""],[2133,0,"\""],[2162,1,""],[2162,0,"\""],[2184,1,""],[2184,0,"\""],[2196,1,""],[2196,0,"\""],[2216,1,""],[2216,0,"\""],[2234,1,""],[2234,0,"\""],[2251,1,""],[2251,0,"\""],[2262,1,""],[2262,0,"\""],[2280,1,""],[2280,0,"\""],[2291,1,""],[2291,0,"\""],[2306,1,""],[2306,0,"\""],[2317,1,""],[2317,0,"\""],[2331,1,""],[2331,0,"\""],[2360,1,""],[2360,0,"\""],[2374,1,""],[2374,0,"\""],[2392,1,""],[2392,0,"\""],[2406,1,""],[2406,0,"\""],[2417,1,""],[2417,0,"\""],[2434,1,""],[2434,0,"\""]],"_dtSpan":[274850,274922]},{"parents":[254,255],"numChildren":2,"agent":22,"time":"1970-01-01T00:00:00Z","patches":[[1144,1,""],[1150,1,""],[1209,1,""],[1215,1,""],[1226,1,""],[1238,1,""],[1293,1,""],[1308,1,""],[1822,1,""],[1823,1,""],[1919,1,""],[1933,1,""],[1963,1,""],[1980,1,""],[1999,1,""],[2010,1,""],[2022,1,""],[2040,1,""],[2070,1,""],[2091,1,""],[2094,2,""],[2109,1,""],[2127,1,""],[2137,1,""],[2156,1,""],[2166,1,""],[2182,1,""],[2192,1,""],[2206,1,""],[2236,1,""],[2249,1,""],[2268,1,""],[2281,1,""],[2293,1,""],[2309,1,""]],"_dtSpan":[274922,274958]},{"parents":[253,256],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[3212,1,""],[3212,0,"Func"],[3217,1,""],[3218,0,"o"],[3220,1,""],[3222,4,""],[3222,0,"p"],[3224,5,""],[3225,8,""],[3226,2,""],[3227,1,""],[3228,1,""],[3229,17,""],[3230,2,""],[3231,7,""],[3232,29,""],[3232,0,"k"],[3234,5,""],[3234,0,"Call"],[3239,2,""],[3239,0,"ack"],[20470,4,""],[20470,0,"p"],[20472,1,""],[20472,0,"oces"],[20477,1,""],[20477,0,"_"],[20479,2,""],[20479,0,"akeCal"],[20486,0,"back"],[20504,1,""],[20506,13,""],[20507,1,""],[20508,11,""],[20509,92,""],[20510,16,""],[20521,6,""],[20521,0,"cb"],[20528,0,"pr"],[20531,3,""],[20532,1,""],[20532,0,"ess"],[20541,4,""],[20541,0,"Str"],[20546,0,"g::New(\""],[20555,2,""],[20556,11,""],[20557,0,"keCal"],[20563,2,""],[20564,9,""],[20565,8,""],[20566,18,""],[20566,0,"k\"))"],[20574,15,""],[20575,7,""],[20581,6,""],[20581,0,"cb"],[20589,1,""],[20589,0,"Fu"],[20592,3,""],[20592,0,"ct"],[20595,0,"o"],[20597,2,""],[20607,6,""],[20608,1,""],[20609,4,""],[20609,0,"fpr"],[20614,11,""],[20615,9,""],[20616,1,""],[20617,10,""],[20617,0,"s"],[20619,1,""],[20620,2,""],[20620,0,"err, \""],[20627,0,"r"],[20629,0,"ce"],[20632,2,""],[20632,0,"s."],[20635,2,""],[20636,11,""],[20637,2,""],[20637,0,"keC"],[20642,20,""],[20642,0,"lb"],[20645,2,""],[20645,0,"ck"],[20648,1,""],[20650,8,""],[20651,3,""],[20651,0,"ign"],[20657,0,"t"],[20659,0," non-"],[20665,1,""],[20665,0,"unction\\n\");"],[20684,0,"abo"],[20688,1,""],[20689,13,""],[20699,2,""],[20701,5,""],[20702,1,""],[20718,4,""],[20718,0," cb = cb_v.A"],[20731,0,"<Func"],[20737,5,""],[20738,0,"o"],[20740,1,""],[20741,3,""],[20742,13,""],[20749,0,"proc"],[20754,2,""],[20754,0,"ss_mak"],[20761,3,""],[20765,4,""],[20765,0,"b"],[20767,0,"ck = Pers"],[20777,0,"ste"],[20781,5,""],[20781,0,"t<Function>::"],[20795,3,""],[20795,0,"ew(cb"],[20810,8,""],[20810,0,"Lo"],[20814,5,""],[20814,0,"l<Arr"],[20820,2,""],[20820,0,"y> "],[20824,1,""],[20824,0,"r"],[20826,2,""],[20826,0,"Array = Array::New"],[20845,1,""],[20845,0,"argc"],[20850,2,""],[20850,0,";"],[20852,1,""],[20854,0,"for"],[20858,11,""],[20858,0,"("],[20860,1,""],[20861,1,""],[20862,4,""],[20862,0," i = 0; i < "],[20875,1,""],[20875,0,"rg"],[20878,1,""],[20878,0,"; i++"],[20884,1,""],[20884,0," {"],[20891,0,"a"],[20893,0,"gArray->S"],[20904,5,""],[20904,0,"(I"],[20907,1,""],[20907,0,"teg"],[20911,3,""],[20911,0,"r::N"],[20916,1,""],[20916,0,"w"],[20918,0,"i"],[20920,0,", argv[i])"],[20952,1,""],[20952,0,"obj"],[20956,0,"c"],[20958,0,"_l"],[20963,0,"Lo"],[20968,8,""],[20968,0,"<V"],[20971,1,""],[20972,0,"ue>::New"],[20987,12,""],[20990,1,""],[20992,8,""],[20992,0,"Lo"],[20996,5,""],[20996,0,"l<V"],[21000,3,""],[21000,0,"l"],[21002,9,""],[21002,0,"e>"],[21005,1,""],[21005,0,"callback_l"],[21016,0,"="],[21018,1,""],[21018,0,"Loc"],[21022,1,""],[21022,0,"l<V"],[21027,3,""],[21027,0,"u"],[21029,5,""],[21029,0,">::New"],[21036,4,""],[21038,1,""],[21038,0,"llba"],[21043,1,""],[21043,0,"k"],[21047,0,"\n  Local<Value>"],[21063,0,"args[3]"],[21071,0,"="],[21073,0,"{"],[21075,1,""],[21075,0,"obj"],[21079,0,"c"],[21081,3,""],[21081,0,"_l,"],[21085,13,""],[21085,0,"callback_l,"],[21097,0,"argArray"],[21107,0,";"],[21112,6,""],[21112,0,"L"],[21114,1,""],[21114,0,"c"],[21116,15,""],[21116,0,"l<Valu"],[21123,10,""],[21123,0,">"],[21125,0,"r"],[21127,2,""],[21131,1,""],[21131,0,"pr"],[21135,16,""],[21135,0,"es"],[21138,4,""],[21138,0,"_"],[21141,5,""],[21141,0,"k"],[21143,12,""],[21143,0,"Ca"],[21146,12,""],[21146,0,"lback"],[21158,1,""],[21158,0,"pr"],[21161,4,""],[21161,0,"cess"],[21167,1,""],[21167,0,"ARRAY_SIZE(args)"],[21185,4,""],[21185,0,"args"],[21192,4,""],[42845,102,""],[6722,0,"// Let the ti"],[6736,0,"k call"],[6743,0,"ack know that this is coming from the spinner\n  Handle<Value> argv[] = { True() };\n  cb"],[6846,1,""],[6846,0,"ARRAY_SIZE(argv)"],[6864,4,""],[6864,0,"argv"]],"_dtSpan":[274958,276325]},{"parents":[256],"numChildren":2,"agent":120,"time":"1970-01-01T00:00:00Z","patches":[[61877,0,"\nstatic uv_async_t dispatch_debug_messages_a"],[61922,0,"ync;\n\n\n// Called from "],[61945,0,"he m"],[61950,0,"in "],[61954,0,"hread.\nstat"],[61973,0,"DispatchDebugMessagesAsyncCallback(uv_async_t* handle, int status) {\n  v8::Debug::ProcessDebugMessages();\n}\n\n\n// Called from V8 Debug Agent TCP thread.\nstatic void DispatchMessagesDebugAgentCallback() {\n  uv_async_send(&dispatch_debug_messages_async);\n}\n\n\nstatic void "],[62390,0,"v8::Debug::SetDebugMessageDispatchHandler(DispatchMessagesDebugAgentCallback,\n                                            false);\n\n  uv_async_init(uv_default_loop(),\n                &dispatch_debug_messages_async,\n                DispatchDebugMessagesAsyncCallback);\n  uv_unref((uv_handle_t*) &dispatch_debug_messages_async);\n\n  "]],"_dtSpan":[276325,277006]},{"parents":[257,258],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[3623,57,""],[3624,23,""],[6996,0,"\n"],[7467,0,"\n"],[7578,59,""],[7579,3,""],[7580,3,""],[7581,2,""],[7582,17,""],[7584,6,""],[7585,6,""],[7586,54,""],[7587,17,""],[7588,1,""],[7589,3,""],[7591,17,""],[7592,12,""],[7593,4,""],[7594,68,""],[69829,143,""],[69830,7,""],[69831,214,""],[38554,33,""],[39893,1,""],[39894,6,""],[39895,5,""],[39896,11,""],[39897,11,""],[39898,15,""],[39899,16,""],[39988,5,""],[39988,0,"ch"],[39992,28,""],[39993,3,""],[39994,4,""],[39995,29,""],[39996,11,""],[39998,16,""],[39998,0,"g[1"],[40002,84,""],[40002,0,"24]"],[40007,2,""],[40010,2,""],[40011,6,""],[40012,11,""],[40013,5,""],[40013,0,"p"],[40015,1,""],[40018,0,"f("],[40022,1,""],[40023,5,""],[40023,0,"m"],[40025,18,""],[40026,0,", s"],[40030,2,""],[40030,0,"z"],[40032,19,""],[40033,12,""],[40033,0,"f("],[40041,2,""],[40041,0,"),"],[40044,0,"\""],[40046,19,""],[40046,0,"ymb"],[40050,3,""],[40051,6,""],[40052,0,"%s"],[40055,0,"not"],[40059,3,""],[40059,0,"fo"],[40062,2,""],[40062,0,"n"],[40064,4,""],[40064,0,".\", "],[40069,5,""],[40069,0,"ym"],[40072,0,"ol"],[40081,2,""],[40093,21,""],[40105,1,""],[40107,39,""],[40162,2,""],[40163,4,""],[40163,0,"h"],[40165,4,""],[40165,0,"r"],[40167,3,""],[40168,5,""],[40168,0,"rrmsg[1024];\n "],[40183,1,""],[40184,4,""],[40184,0," sn"],[40188,1,""],[40188,0,"r"],[40190,1,""],[40191,3,""],[40191,0,"tf(e"],[40197,3,""],[40197,0,"msg,"],[40210,3,""],[40210,0,"     s"],[40217,5,""],[40217,0,"z"],[40219,1,""],[40219,0,"of"],[40222,0,"errmsg),\n             "],[40268,0,". Expected %d"],[40283,7,""],[40284,1,""],[40284,0,"o"],[40286,1,""],[40287,3,""],[40287,0,"%"],[40291,1,""],[40291,0,",\n             NODE_MODULE_VERSION, mod->version"],[40359,6,""],[40359,0,"rr"],[40362,1,""],[40362,0,"r"],[40365,8,""],[40365,0,"rrmsg"]],"_dtSpan":[277006,278431]},{"parents":[258],"numChildren":2,"agent":192,"time":"1970-01-01T00:00:00Z","patches":[[26090,1,""],[26142,0,"// Prevent re-entry into this function.  For example, if there is\n  // a throw from a program in vm.runInThisContext(code, filename, true),\n  // then we want to show the original failure, not the secondary one.\n  static bool displayed_error = false;\n\n  if (displayed_error) return;\n  displayed_error = true;\n\n  "],[27014,10,""],[27015,39,""],[27030,4,""],[27030,0,"n"],[27032,3,""],[27032,0,"de"],[27098,1,""],[27098,0,"mod"],[27102,6,""],[27102,0,"le,"],[27106,1,""],[27298,2,""],[27298,0,"ere"],[27302,6,""],[27302,0,"u"],[27304,0,"ed"],[27310,5,""],[27310,0,"b"],[27313,3,""],[27313,0,"a hack"],[27320,1,""],[27322,0,"re"],[27325,4,""],[27326,1,""],[27326,0,"o"],[27335,0,"truncate "],[27346,0,"f"],[27352,6,""],[27352,0,"fi"],[27355,2,""],[27356,0,"t"],[27360,1,""],[27361,1,""],[27361,0,"c"],[27364,3,""],[27366,2,""],[27366,0,"ct"],[27370,0,"s, but"],[27378,0,"t caused numerou"],[27396,1,""],[27396,0,"oth"],[27400,2,""],[27400,0,"r\n    // problems whe"],[27422,0," vm.runIn*Context() m"],[27444,0,"tho"],[27448,0,"s"],[27450,2,""],[27450,0,"were"],[27455,0,"u"],[27457,0,"ed fo"],[27463,0," non-module\n    // "],[27483,2,""],[27487,2,""],[27505,4,""],[27505,0,"we"],[27508,5,""],[27509,0,"ve"],[27513,0,"dec"],[27517,1,""],[27517,0,"de to"],[27523,0,"r"],[27525,1,""],[27525,0,"-instat"],[27533,1,""],[27534,0,"su"],[27538,0," a h"],[27543,4,""],[27543,0,"ck"],[27550,0," followi"],[27559,0,"g"],[27561,0,"s"],[27563,2,""],[27563,0,"ep"],[27566,0,"\n    //"],[27574,1,""],[27574,0,"m"],[27576,1,""],[27576,0,"st "],[27581,1,""],[27582,0,"taken:\n    //\n    // 1. P"],[27608,1,""],[27609,1,""],[27609,0,"s"],[27611,1,""],[27612,0," flag around to "],[27629,0,"ay"],[27632,0,"\""],[27634,0,"his c"],[27640,0,"de was"],[27647,1,""],[27647,0,"wrapp"],[27653,0,"d\""],[27663,1,""],[27663,0,"2. U"],[27672,2,""],[27673,2,""],[27673,0,"the"],[27677,1,""],[27677,0,"stack"],[27683,2,""],[27683,0,"fra"],[27688,3,""],[27689,1,""],[27691,9,""],[27692,4,""],[27692,0,"p"],[27694,1,""],[27694,0,"t"],[27704,0,"i"],[27706,2,""],[27707,2,""],[27707,0,"is als"],[27715,1,""],[27715,0,"corr"],[27720,1,""],[27721,2,""],[27721,0,"t.\n    //"],[27738,0,"It woul"],[27746,0," pr"],[27750,3,""],[27750,0,"bably"],[27756,1,""],[27756,0,"b"],[27758,0," simpl"],[27765,1,""],[27765,0,"r"],[27770,2,""],[27770,0,"add"],[27774,2,""],[27775,0," li"],[27779,1,""],[27780,3,""],[27781,0,"rather"],[27788,0,"than"],[27793,0,"add"],[27797,2,""],[27797,0,"some"],[27809,3,""],[27810,1,""],[27810,0,"um"],[27814,3,""],[27816,1,""],[27817,3,""],[27817,0,"f"],[27819,1,""],[27819,0,"charact"],[27827,0,"rs"],[27833,1,""],[27833,0,"th"],[27836,1,""],[27837,0,"fir"],[27841,5,""],[27843,0,"line, s"],[27852,2,""],[27852,0,"ce"],[27857,4,""],[27858,1,""],[27858,0,"t"],[27860,0,"unc"],[27864,2,""],[27864,0,"t"],[27866,1,""],[27870,2,""],[27870,0,"e"],[27880,1,""],[27882,0,"rce"],[27886,1,""],[27886,0,"i"],[27888,1,""],[27888,0,"e to 78 charac"],[27903,0,"ers, and"],[27912,1,""],[27912,0,"w"],[27915,1,""],[27916,0,"nd u"],[27921,0," n"],[27924,0,"t p"],[27928,1,""],[27928,0,"oviding v"],[27938,0,"ry much\n    // useful "],[27961,0,"ebugging info"],[27978,0,"the "],[27986,0," if we remove 62 character"],[28015,0,"\n"],[28024,3,""],[28025,1,""],[28026,0,"art"],[28032,0,"message->GetStartCo"],[28052,4,""],[28054,0,"n();\n "],[28061,2,""],[28062,1,""],[28063,1,""],[28063,0,"int"],[28067,2,""],[28067,0,"end"],[28071,1,""],[28071,0,"="],[28073,1,""],[28073,0,"message->GetEndColumn()"],[28103,0,"// "],[28123,0,"---\\nsourceline:"],[28143,0,"offset:%d\\nstart:%d\\nend:%d\\n---\\n"],[28197,0,", start, end);\n\n  "],[28216,1,""],[28217,1,""],[28218,0,"print"],[28224,0,"(stderr, \"%s\\n\", "],[28242,0,"ourcelin"],[28251,0,"_s"],[28254,0,"ring"],[28318,43,""],[28336,6,""],[28336,0,"0"],[28428,39,""]],"_dtSpan":[278431,279717]},{"parents":[259,260],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[1210,0,"ares.h\"\n#include \""]],"_dtSpan":[279717,279735]},{"parents":[261],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[35914,602,""],[55475,26,""],[55476,28,""]],"_dtSpan":[279735,280391]},{"parents":[260],"numChildren":2,"agent":17,"time":"1970-01-01T00:00:00Z","patches":[[25441,0,"bool is_buffer = Buffer::HasInstance(val);\n\n  if (is_buffer && encoding == BINARY) { // fast path, copy buffer data\n    const char* data = Buffer::Data(val.As<Object>());\n    size_t size = Buffer::Length(val.As<Object>());\n    size_t len = size < buflen ? size : buflen;\n    memcpy(buf, data, len);\n    return len;\n  }\n\n  Local<String> str;\n\n  if (is_buffer) { // slow path, convert to binary string\n    "],[25851,0,"Value> arg = String::New(\"binary\");\n    str = MakeCallback(val.As<Object>(), \"to"],[25937,0,"\", 1, &arg)-"],[25950,0,"ToString();\n  }\n"],[25967,0," else {\n    "],[26002,0,"  }\n"]],"_dtSpan":[280391,280919]},{"parents":[262,263],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[12542,0,"BREAK\n  SIGNO_CASE(SIGBREAK);\n#endif\n\n#ifdef SIG"],[2062,58,""],[1955,18,""],[1967,3,""],[1968,16,""],[1969,2,""],[1970,2,""],[1971,2,""],[1972,11,""],[43734,87,""],[43735,43,""],[43736,43,""],[43787,7,""]],"_dtSpan":[280919,281259]},{"parents":[264],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[60104,0,"  "],[60108,0,"\n              "],[60147,0,"      ||\n               strcmp(arg, \"--print\") == 0  "],[60211,0,"       "],[60241,0,"      ||\n               strcmp(arg, \"-p\") == 0"],[60350,6,""],[60350,0,"%s"],[60376,0,", arg"],[60415,0,"pr"],[60418,3,""],[60418,0,"nt_ev"],[60424,5,""],[60424,0,"l"],[60426,1,""],[60427,15,""],[60439,1,""],[60439,0,"||"],[60442,0,"s"],[60445,4,""],[60445,0,"chr(arg,"],[60454,0,"'p')"],[60459,1,""],[60459,0,"!="],[60462,3,""],[60462,0,"NULL;"],[60536,136,""],[60297,0,"bool "],[60303,1,""],[60303,0,"s_eval ="],[60312,0,"strchr"],[60322,0,", 'e') != NULL;\n      bool is_print = str"],[60364,0,"hr(arg, 'p')"],[60377,1,""],[60377,0,"!"],[60380,0,"NULL;\n\n      // argument to -p and --pr"],[60420,0,"nt"],[60423,0,"is optional\n      if (is_eval == true && i "],[60469,0," >= argc"],[60572,0,"\n"],[60606,0,"i"],[60608,0,"_prin"],[60614,0,";\n      a"],[60624,0,"gv[i] = "],[60633,0,"onst_cast<c"],[60645,0,"a"],[60647,0,"*>"],[60650,0,"\"\");\n\n      // --eval, -e and -pe always require "],[60700,0,"n a"],[60705,1,""],[60705,0,"ument\n      if"],[60720,4,""],[60720,0,"(is_eval"],[60729,1,""],[60730,0,"="],[60732,5,""],[60732,0,"true) {"],[60746,0,"  ev"],[60751,0,"l_st"],[60756,0,"in"],[60759,0," = arg"],[60767,0,"++"],[60771,0,";\n      "],[60780,1,""],[60784,0,"tinue;\n      }\n\n      // next arg is the expression to evaluate unless it "],[60860,1,""],[60860,0,"arts with:\n      //  - a dash, then it's another swit"],[60914,0,"h\n      //  - \"\\\\-\", then it's an esc"],[60952,0,"ped expres"],[60963,0,"ion, drop "],[60974,1,""],[60974,0,"he ba"],[60980,0,"kslas"],[60986,0,"\n      if ("],[60999,2,""],[60999,0,"gv[i + 1] == NULL) continue;\n      if "],[61038,2,""],[61038,0,"argv[i + 1][0] == '-'"],[61060,0," continue"],[61106,0,"  if (strncmp(eval_string, \"\\\\-\", 2) == 0) ++eval_string;\n    "]],"_dtSpan":[281259,282260]},{"parents":[265],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[22245,0,"buffer\") == 0) {\n    return BUFFER;\n  } else if (strcasecmp(*encoding, \""],[22929,0,"encoding == BUFFER) {\n    return scope.Close(\n        Buffer::New(static_cast<const char*>(buf), len)->handle_);\n  }\n\n  if ("],[23981,0,"(encoding == BUFFER || "],[24022,0,")"],[25143,0,"("],[25162,0," || encoding == BUFFER)"],[25188,0,"\n   "]],"_dtSpan":[282260,282508]},{"parents":[263],"numChildren":1,"agent":17,"time":"1970-01-01T00:00:00Z","patches":[[34290,0,"errno = 0;\n    "],[35323,0,"errno = 0;\n    "]],"_dtSpan":[282508,282538]},{"parents":[267],"numChildren":1,"agent":193,"time":"1970-01-01T00:00:00Z","patches":[[22754,0,"utf16le\") == 0) {\n    return UCS2;\n  } else if (strcasecmp(*encoding, \"utf-16le\") == 0) {\n    return UCS2;\n  } else if (strcasecmp(*encoding, \""]],"_dtSpan":[282538,282681]},{"parents":[268],"numChildren":2,"agent":10,"time":"1970-01-01T00:00:00Z","patches":[[70698,0,"*"]],"_dtSpan":[282681,282682]},{"parents":[266,269],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[58773,0,"evaluate script and "],[58805,10,""]],"_dtSpan":[282682,282712]},{"parents":[270],"numChildren":1,"agent":71,"time":"1970-01-01T00:00:00Z","patches":[[1300,0," || defined HAVE_SYSTEMTAP"],[2192,0,"f HAVE_SYSTEMTAP\n#include \"node_systemtap.h\"\n#endif\n#i"],[57659,0," || defined HAVE_SYSTEMTAP"]],"_dtSpan":[282712,282818]},{"parents":[271],"numChildren":1,"agent":147,"time":"1970-01-01T00:00:00Z","patches":[[1360,0,"#if defined HAVE_PERFCTR"],[1386,0," "],[1395,0,"\"node_counters.h\"\n#endif\n\n#include "],[57776,0,"#if defined HAVE_PERFCTR\n  InitPerfCounters(global);\n#endif\n\n"]],"_dtSpan":[282818,282939]},{"parents":[272],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[3976,17,""],[3978,62,""],[3979,133,""],[33348,0,"const uid_t uid_not_found = static_cast<uid_t>(-1);\nstatic const gid_t gid_not_found = static_cast<gid_t>(-1);\n\n\nstatic uid_t uid_by_name(const char* name) {\n  struct passwd pwd;\n  struct passwd* pp;\n  char buf[8192];\n  int rc;\n\n  errno = 0;\n  pp = NULL;\n\n  if ((rc = getpwnam_r(name, &pwd, buf, sizeof(buf), &pp)) == 0 && pp != NULL) {\n    return pp->pw_uid;\n  }\n\n  return uid_not_found;\n}\n\n\nstatic char* name_by_uid(uid_t uid) {\n  struct passwd pwd;\n  struct passwd* pp;\n  char buf[8192];\n  int rc;\n\n  errno = 0;\n  pp = NULL;\n\n  if ((rc = getpwuid_r(uid, &pwd, buf, sizeof(buf), &pp)) == 0 && pp != NULL) {\n    return strdup(pp->pw_name);\n  }\n\n  if (rc == 0) {\n    errno = ENOENT;\n  }\n\n  return NULL;\n}\n\n\nstatic gid_t gid_by_name(const char* name) {\n  struct group pwd;\n  struct group* pp;\n  char buf[8192];\n  int rc;\n\n  errno = 0;\n  pp = NULL;\n\n  if ((rc = getgrnam_r(name, &pwd, buf, sizeof(buf), &pp)) == 0 && pp != NULL) {\n    return pp->gr_gid;\n  }\n\n  return gid_not_found;\n}\n\n\n#if 0  // For future use.\nstatic const char* name_by_gid(gid_t gid) {\n  struct group pwd;\n  struct group* pp;\n  char buf[8192];\n  int rc;\n\n  errno = 0;\n  pp = NULL;\n\n  if ((rc = getgrgid_r(gid, &pwd, buf, sizeof(buf), &pp)) == 0 && pp != NULL) {\n    return strdup(pp->gr_name);\n  }\n\n  if (rc == 0) {\n    errno = ENOENT;\n  }\n\n  return NULL;\n}\n#endif\n\n\nstatic uid_t uid_by_name(Handle<Value> value) {\n  if (value->IsUint32()) {\n    return static_cast<uid_t>(value->Uint32Value());\n  } else {\n    String::Utf8Value name(value);\n    return uid_by_name(*name);\n  }\n}\n\n\nstatic gid_t gid_by_name(Handle<Value> value) {\n  if (value->IsUint32()) {\n    return static_cast<gid_t>(value->Uint32Value());\n  } else {\n    String::Utf8Value name(value);\n    return gid_by_name(*name);\n  }\n}\n\n\nstatic "],[35473,0,"!"],[35478,3,""],[35478,0,"[0]->IsUi"],[35488,1,""],[35489,1,""],[35489,0,"32"],[35494,1,""],[35494,0,"&&"],[35497,1,""],[35497,0,"!args[0]->IsString()"],[35537,4,""],[35537,0,"Ty"],[35540,2,""],[35540,0,"eErr"],[35545,1,""],[35545,0,"r"],[35547,3,""],[35547,0,"\"s"],[35550,1,""],[35551,0,"g"],[35553,1,""],[35553,0,"d argume"],[35562,3,""],[35562,0,"t must be a numbe"],[35580,0," o"],[35583,1,""],[35583,0," a st"],[35589,0,"ing\");\n  }\n\n  gid_t gid = gid_by_name"],[35627,0,"args[0]);"],[35637,0,"\n "],[35640,0,"if (gid == gid_not_found)"],[35666,0,"{\n"],[35672,1,""],[35672,0,"re"],[35675,0,"u"],[35677,1,""],[35678,5,""],[35678,0," Thro"],[35684,0,"Error"],[35698,0,"g"],[35700,2,""],[35700,0,"o"],[35702,0,"p "],[35705,1,""],[35705,0,"d does not "],[35717,0,"xist\");\n  }\n\n  if ("],[35737,0,"etgid(gid)) {\n  "],[35754,1,""],[35755,1,""],[35756,1,""],[35756,0,"et"],[35759,1,""],[35759,0,"rn ThrowExc"],[35771,0,"ptio"],[35776,0,"(ErrnoExcep"],[35788,0,"ion(errno, \"setgid"],[35809,1,""],[35818,1,""],[35818,0,"retur"],[35824,1,""],[35825,1,""],[35825,0,"Undef"],[35831,0,"ne"],[35834,0,"()"],[35838,0,"}\n"],[35841,0,"\nstatic"],[35849,0,"Handle<Value>"],[35863,0,"SetU"],[35868,2,""],[35868,0,"d"],[35870,1,""],[35870,0,"const A"],[35879,9,""],[35881,1,""],[35882,0,"nts& a"],[35889,2,""],[35889,0,"gs"],[35897,0,"HandleScope"],[35909,0,"scope;\n\n "],[35919,1,""],[35920,3,""],[35920,0,"f"],[35922,0,"(!"],[35934,0,"sUi"],[35941,5,""],[35943,2,""],[35944,0,"&&"],[35947,11,""],[35947,0,"!"],[35975,1,""],[35975,0,"re"],[35978,0,"urn Th"],[35985,0,"owTypeError(\"setu"],[36003,0,"d argume"],[36012,4,""],[36013,3,""],[36013,0," must be "],[36023,1,""],[36023,0," n"],[36026,0,"mb"],[36029,0,"r or a"],[36036,1,""],[36036,0,"st"],[36039,1,""],[36039,0,"i"],[36041,0,"g\");\n  }\n\n  uid_t uid = uid_by_n"],[36075,0,"e"],[36087,0,"\n"],[36090,0,"if (uid"],[36098,0,"=="],[36101,3,""],[36102,1,""],[36102,0,"id_no"],[36108,3,""],[36108,0,"_f"],[36112,14,""],[36112,0,"nd)"],[36116,5,""],[36116,0,"{"],[36122,1,""],[36122,0,"retur"],[36128,1,""],[36129,1,""],[36129,0,"Th"],[36132,0,"owE"],[36136,4,""],[36136,0,"ror(\"setuid"],[36148,0,"user"],[36153,0,"id"],[36156,0,"do"],[36159,2,""],[36159,0,"s "],[36163,0,"t"],[36165,3,""],[36165,0,"exist\")"],[36176,0,"}\n\n"],[36185,0,"setuid"],[36192,3,""],[36192,0,"uid)) {\n  "],[36203,1,""],[36204,1,""],[36204,0,"r"],[36207,1,""],[36207,0,"u"],[36210,3,""],[36210,0," Th"],[36214,0,"owException"],[36226,2,""],[36226,0,"Er"],[36229,0,"noExce"],[36236,0,"tio"],[36240,6,""],[36240,0,"(er"],[36244,1,""],[36244,0,"no"],[36248,1,""],[36248,0,"\"s"],[36252,1,""],[36253,2,""],[36253,0,"id\"));\n "],[36262,12,""],[36262,0,"}\n\n  r"],[36270,1,""],[36271,0,"rn Unde"],[36279,0,"ined("],[36285,1,""],[36285,0,";\n}\n\n\nstatic Handle<Value>"],[36312,2,""],[36312,0,"GetG"],[36317,0,"ou"],[36320,2,""],[36320,0,"s(const Arguments& args"],[36345,2,""],[36345,0,"{"],[36349,0,"HandleScope"],[36361,0,"scope;\n\n"],[36371,0,"int"],[36375,0,"ngroups"],[36383,0,"="],[36386,0,"etg"],[36390,0,"ou"],[36393,1,""],[36393,0,"s(0,"],[36398,3,""],[36403,2,""],[36403,0,";\n"],[36406,2,""],[36408,2,""],[36412,1,""],[36412,0,"ng"],[36415,2,""],[36416,0,"ups"],[36423,1,""],[36423,0,"-1"],[36426,0," {"],[36433,4,""],[36456,0,"rrnoE"],[36469,3,""],[36469,0,"(e"],[36473,0,"n"],[36475,0,", \"getg"],[36483,1,""],[36483,0,"oups\"));"],[36492,2,""],[36494,1,""],[36494,0,"}\n\n"],[36499,0,"gid_t*"],[36506,0,"groups"],[36513,0,"="],[36515,4,""],[36516,4,""],[36518,5,""],[36518,0," "],[36522,1,""],[36522,0,"_t[n"],[36531,0,"s];\n\n"],[36537,2,""],[36538,1,""],[36538,0,"ngr"],[36542,0,"ups = g"],[36550,0,"tgroup"],[36557,1,""],[36557,0,"("],[36559,0,"gr"],[36562,1,""],[36562,0,"ups,"],[36567,3,""],[36567,0,"group"],[36573,3,""],[36574,1,""],[36576,0,"\n"],[36579,0,"if"],[36582,0,"(ngroups"],[36591,0,"=="],[36594,0,"-1)"],[36598,4,""],[36598,0,"{"],[36604,0,"delete[] groups;\n"],[36675,1,""],[36675,0,"oups\"));\n  }\n\n  Local<Arr"],[36701,1,""],[36701,0,"y> groups"],[36711,0,"list = A"],[36720,2,""],[36720,0,"ray::New(ngroups"],[36741,0,"bool"],[36746,0,"seen_egid"],[36756,2,""],[36756,0,"= false;"],[36767,0,"gid_t"],[36773,0,"egid ="],[36781,0,"eteg"],[36787,0,"();\n\n  for (int i"],[36807,0,"0; i < n"],[36817,0,"ou"],[36820,0,"s; i++) {\n    grou"],[36839,0,"s_list"],[36847,0,"Set(i, Integer::New("],[36869,0,"oups[i]));\n    if (groups[i] == egid) seen"],[36912,0,"e"],[36916,0," = true"],[36928,0,"\n\n"],[36931,0," d"],[36935,0,"ete[] groups;\n\n  if (seen_egid == fal"],[36974,0,")"],[36982,0,"g"],[36984,0,"oups_list->S"],[36998,2,""],[36998,0,"("],[37000,3,""],[37000,0,"g"],[37003,5,""],[37003,0,"u"],[37005,0,"s, In"],[37011,0,"eger::New(eg"],[37024,1,""],[37024,0,"d));\n  }\n\n  retur"],[37042,3,""],[37042,0," s"],[37045,0,"ope.Clos"],[37054,0,"(grou"],[37060,0,"s_lis"],[37066,0,");\n}\n\n\nstat"],[37078,0,"c Handle<Value> SetGroups(c"],[37107,3,""],[37107,0,"st A"],[37112,0,"guments& a"],[37123,0,"gs) {\n  HandleScope sc"],[37146,0,"pe;\n\n  if (!args[0]->IsAr"],[37172,0,"ay"],[37175,0,")) {"],[37180,2,""],[37184,1,""],[37184,0,"re"],[37187,0,"u"],[37189,1,""],[37190,4,""],[37190,0," ThrowTyp"],[37200,1,""],[37200,0,"Error"],[37207,7,""],[37216,0,"1 "],[37227,1,""],[37228,4,""],[37228,0," ar"],[37232,0,"ay\");\n  }\n\n"],[37244,0," L"],[37247,0,"cal<Ar"],[37254,0,"ay>"],[37258,0,"groups_list = args[0].As<Arr"],[37287,0,"y>();\n "],[37296,0,"ize_"],[37301,0," size = g"],[37311,0,"oups_l"],[37318,0,"st->Le"],[37326,3,""],[37326,0,"th("],[37334,3,""],[37334,0,"gid_t*"],[37341,0,"groups ="],[37350,1,""],[37351,0,"ew gid_"],[37359,0,"[size];\n\n "],[37370,0,"fo"],[37373,0," (siz"],[37379,0,"_t i = 0; i < "],[37394,0,"ize; i++) {\n    gid_t gid = gid_by_name(gro"],[37438,0,"ps_"],[37442,0,"ist->Ge"],[37450,0,"(i))"],[37456,0,"\n  "],[37465,0,"gid == gid_not_found) {\n      delete[] groups;\n      return ThrowError"],[37536,0,"\"g"],[37539,0,"oup nam"],[37547,1,""],[37547,0," not fo"],[37555,1,""],[37555,0,"nd\");\n    }\n\n    groups[i] = gid;\n  }\n\n  in"],[37600,0,"rc "],[37609,0,"roups(s"],[37617,0,"ze, groups);\n  "],[37633,1,""],[37633,0,"elete[] "],[37642,0,"roups;\n\n  "],[37653,3,""],[37653,0,"f (rc"],[37659,1,""],[37660,0,"="],[37662,1,""],[37662,0,"-1"],[37721,2,""],[37721,0,"roups"],[37735,0,"\n"],[37783,2,""],[37783,0,"Ini"],[37787,3,""],[37787,0,"Groups"],[37847,0,"!"],[37852,3,""],[37852,0,"[0]->IsUi"],[37862,1,""],[37863,1,""],[37863,0,"32"],[37868,1,""],[37868,0,"&&"],[37871,1,""],[37871,0,"!args[0]->IsString()"],[37911,4,""],[37911,0,"Ty"],[37914,8,""],[37915,7,""],[37921,6,""],[37921,0,"\"argument"],[37931,0,"1"],[37933,0,"must"],[37938,0,"be"],[37941,0,"a"],[37943,4,""],[37944,11,""],[37945,4,""],[37945,0,"mb"],[37948,3,""],[37949,2,""],[37950,1,""],[37950,0,"or"],[37954,0," st"],[37958,4,""],[37958,0,"i"],[37960,1,""],[37960,0,"g"],[37963,2,""],[37973,2,""],[37973,0,"f"],[37975,1,""],[37975,0,"(!args[1]->IsU"],[37990,5,""],[37990,0,"nt32()"],[37997,2,""],[37997,0,"&&"],[38000,1,""],[38000,0,"!"],[38006,1,""],[38006,0,"1"],[38012,5,""],[38012,0,"St"],[38015,0,"ing"],[38028,0,"ret"],[38032,2,""],[38032,0,"rn"],[38035,2,""],[38035,0,"ThrowTypeError(\""],[38054,7,""],[38054,0,"ume"],[38059,1,""],[38059,0," "],[38061,3,""],[38061,0," m"],[38064,5,""],[38064,0,"st"],[38067,0,"be"],[38070,1,""],[38070,0,"a"],[38072,3,""],[38072,0,"numb"],[38077,0,"r"],[38079,2,""],[38079,0,"or"],[38082,1,""],[38083,9,""],[38083,0," "],[38085,1,""],[38090,1,""],[38090,0,"\""],[38092,3,""],[38092,0,";"],[38096,0,"}\n\n"],[38119,3,""],[38120,1,""],[38120,0,"rg0"],[38136,1,""],[38136,0,"gid_t"],[38142,1,""],[38142,0,"ex"],[38146,0,"a_gro"],[38152,3,""],[38153,10,""],[38153,0,";\n"],[38156,5,""],[38157,1,""],[38157,0,"bool"],[38162,4,""],[38162,0,"must_free"],[38173,2,""],[38175,3,""],[38175,0,"char*"],[38181,0,"us"],[38185,1,""],[38190,0,"if"],[38193,3,""],[38193,0,"(a"],[38196,0,"gs[0]->IsUi"],[38208,3,""],[38208,0,"t32())"],[38215,2,""],[38215,0,"{"],[38221,5,""],[38221,0,"us"],[38224,1,""],[38228,5,""],[38231,0,"e"],[38233,1,""],[38233,0,"by_uid"],[38240,3,""],[38240,0,"args[0]->Ui"],[38252,0,"t32V"],[38257,2,""],[38257,0,"lue());\n  "],[38268,5,""],[38269,4,""],[38269,0,"m"],[38271,0,"st_"],[38275,1,""],[38275,0,"ree ="],[38281,13,""],[38282,1,""],[38282,0,"r"],[38284,3,""],[38284,0,"e;\n"],[38288,7,""],[38289,2,""],[38289,0,"} else {"],[38302,0,"user = *arg0;\n"],[38320,4,""],[38320,0,"must_free"],[38331,1,""],[38332,7,""],[38332,0,"false;"],[38341,2,""],[38341,0,"}\n\n"],[38350,0,"us"],[38353,1,""],[38354,2,""],[38358,1,""],[38358,0,"NULL"],[38363,0," {"],[38366,4,""],[38383,21,""],[38388,14,""],[38388,0,"\""],[38391,10,""],[38391,0,"i"],[38393,0,"gro"],[38397,2,""],[38397,0,"ps"],[38405,8,""],[38409,5,""],[38409,0,"found"],[38415,1,""],[38416,1,""],[38418,2,""],[38420,6,""],[38420,0,"}\n"],[38423,4,""],[38425,3,""],[38426,11,""],[38427,3,""],[38428,5,""],[38429,0,"a_g"],[38433,1,""],[38434,4,""],[38434,0,"u"],[38436,11,""],[38437,1,""],[38437,0,"= "],[38440,4,""],[38440,0,"id_by_"],[38449,1,""],[38449,0,"e(a"],[38453,2,""],[38453,0,"gs[1]"],[38460,6,""],[38462,1,""],[38464,0,"if"],[38467,0,"(extra_gro"],[38478,2,""],[38478,0,"p"],[38481,0,"="],[38483,2,""],[38483,0,"gi"],[38486,5,""],[38487,0,"not_fo"],[38494,1,""],[38494,0,"n"],[38496,1,""],[38496,0,") {"],[38502,1,""],[38503,0," if (must_fre"],[38517,1,""],[38517,0,") free(u"],[38527,2,""],[38527,0,"r);"],[38547,10,""],[38548,11,""],[38553,10,""],[38553,0,"\""],[38556,0,"it"],[38559,15,""],[38560,1,""],[38560,0,"o"],[38562,7,""],[38562,0,"p"],[38564,1,""],[38565,1,""],[38566,1,""],[38566,0,"xtr"],[38571,5,""],[38571,0,"g"],[38573,1,""],[38574,1,""],[38574,0,"up"],[38577,1,""],[38577,0,"not"],[38581,4,""],[38581,0,"fou"],[38585,1,""],[38585,0,"d"],[38587,2,""],[38602,1,""],[38602,0,"c = initgroup"],[38616,0,"("],[38618,1,""],[38618,0,"ser, ex"],[38626,0,"ra_group)"],[38637,0,"\n"],[38643,1,""],[38644,2,""],[38644,0,"mu"],[38647,2,""],[38648,0,"_free) {\n"],[38658,1,""],[38659,1,""],[38659,0,"  fre"],[38665,4,""],[38667,2,""],[38667,0,"ser"],[38671,1,""],[38671,0,";\n  }\n\n"],[38679,2,""],[38680,1,""],[38680,0,"if (rc"],[38739,2,""],[38739,0,"ini"],[38743,0,"gro"],[38747,2,""],[38747,0,"ps"],[38758,0,"\n"],[38784,1,""],[58786,0,"\n  NODE_SET_METHOD(process, \"getgroups\", GetGroups);\n  NODE_SET_METHOD(process, \"setgroups\", SetGroups);\n  NODE_SET_METHOD(process, \"initgroups\", InitGroups);\n"]],"_dtSpan":[282939,287947]},{"parents":[269],"numChildren":1,"agent":22,"time":"1970-01-01T00:00:00Z","patches":[[20837,1,""],[20849,3,""],[20849,0,"Obj"],[20853,5,""],[20853,0,"ct"],[21369,1,""],[21381,3,""],[21381,0,"Obj"],[21385,5,""],[21385,0,"ct"]],"_dtSpan":[287947,287975]},{"parents":[273,274],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[20233,0,"!"],[20242,3,""],[20244,0,"n"],[20247,2,""],[20247,0,"i"],[20249,0,"n"],[20775,5,""],[20775,0,"e"]],"_dtSpan":[287975,287990]},{"parents":[275],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[43855,0,"/* Replace dashes with underscores. When loading foo-bar.node,\n   * look for foo_bar_module, not foo-bar_module.\n   */\n  for (pos = symbol; *pos != '\\0'; ++pos) {\n    if (*pos == '-') *pos = '_';\n  }\n\n  "],[3979,513,""],[4044,496,""],[4046,21,""],[4047,13,""],[4048,77,""],[4049,84,""],[4050,3,""],[4051,128,""],[4052,36,""],[4053,2,""],[4054,2,""],[4055,4,""],[4056,77,""],[4057,3,""],[4061,483,""],[4062,7,""],[4064,2,""],[36975,433,""],[36976,6,""],[36978,105,""],[36979,2,""],[36981,6,""],[36982,12,""],[36983,25,""],[36984,20,""],[36987,4,""],[71734,75,""],[71735,42,""],[71736,9,""],[71737,26,""],[71738,14,""],[71739,60,""],[71740,59,""],[71741,9,""],[71742,12,""],[71743,7,""],[71744,1,""],[71746,34,""]],"_dtSpan":[287990,291105]},{"parents":[276],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[3129,20,""],[3129,0,"f"],[3132,25,""],[3133,4,""],[3133,0,"l"],[3143,32,""],[3144,7,""],[42378,0,"fata"],[42383,3,""],[42383,0,"_"],[42385,1,""],[42385,0,"xc"],[42388,2,""],[42388,0,"ption"],[42411,2,""],[42416,53,""],[42416,0,"f"],[42418,3,""],[42419,0,"al"],[42455,3,""],[42455,0,"_f"],[42458,3,""],[42459,0,"al"],[42474,39,""],[42477,5,""],[42490,3,""],[42490,0,"fa"],[42493,5,""],[42493,0,"al"],[42513,3,""],[42513,0,"fa"],[42516,0,"al_"],[42520,1,""],[42520,0,"xc"],[42523,2,""],[42523,0,"ption"],[42538,0,"\n"],[42541,0,"if (!f"],[42548,4,""],[42549,1,""],[42549,0,"a"],[42551,8,""],[42568,2,""],[42568,0," {"],[42573,15,""],[42574,9,""],[42575,1,""],[42575,0,"//"],[42578,3,""],[42578,0,"f"],[42580,7,""],[42581,10,""],[42582,5,""],[42583,8,""],[42583,0,"d"],[42585,2,""],[42585,0,"bef"],[42589,6,""],[42590,4,""],[42590,0,"e"],[42592,6,""],[42592,0,"t"],[42594,2,""],[42595,3,""],[42595,0," "],[42597,2,""],[42597,0,"r"],[42599,2,""],[42599,0,"ce"],[42602,5,""],[42602,0,"s."],[42605,7,""],[42605,0,"f"],[42607,3,""],[42608,14,""],[42609,6,""],[42609,0,"lE"],[42619,10,""],[42620,26,""],[42620,0,"f"],[42624,4,""],[42625,7,""],[42628,10,""],[42629,36,""],[42629,0,"w"],[42631,8,""],[42632,2,""],[42633,3,""],[42634,6,""],[42634,0,"dded!"],[42642,25,""],[42644,12,""],[42644,0,"//"],[42647,1,""],[42647,0,"th"],[42651,11,""],[42652,1,""],[42652,0,"is"],[42655,1,""],[42655,0,"pr"],[42658,1,""],[42658,0,"b"],[42660,0,"b"],[42662,5,""],[42663,8,""],[42663,0," p"],[42668,4,""],[42668,0,"ty"],[42671,0,"bad."],[42676,8,""],[42677,4,""],[42677,0,"No"],[42681,4,""],[42682,3,""],[42683,13,""],[42684,0," "],[42686,5,""],[42686,0,"o"],[42688,0,"do"],[42691,2,""],[42691,0,"but"],[42695,1,""],[42695,0,"r"],[42710,47,""],[42710,0,"."],[42714,2,""],[42715,18,""],[42716,1,""],[42766,59,""],[42767,82,""],[42768,1,""],[42786,3,""],[42786,0,"fa"],[42789,0,"al_f"],[42818,3,""],[42818,0,"fa"],[42821,0,"al"],[42890,6,""],[42895,1,""],[42901,9,""],[42902,20,""],[42922,4,""],[42922,0,"fa"],[42925,0,"al"],[42939,0,"\n  //"],[42945,0,"this"],[42950,0,"will return tru"],[42966,1,""],[42966,0," "],[42968,0,"f the JS layer handled it, false otherwise\n  Local<Value> caught = fa"],[43038,0,"al_f"],[43058,1,""],[43058,0,"ARRAY_SIZE(argv)"],[43076,6,""],[43090,4,""],[43090,0,"fa"],[43093,0,"al"],[43132,3,""],[43132,0,"f"],[43134,3,""],[43135,0,"al"],[43148,3,""],[43148,0,"fu"],[43151,0,"c"],[43153,0,"ion"],[43179,1,""],[43200,0,"fatal_try_catch, tru"],[43221,1,""],[43221,0,");\n    exit(1);\n  }\n\n  if (false == caught->Bool"],[43270,0,"a"],[43272,0,"Value()) {\n    ReportExcep"],[43299,1,""],[43299,0,"ion("]],"_dtSpan":[291105,292298]},{"parents":[277],"numChildren":1,"agent":38,"time":"1970-01-01T00:00:00Z","patches":[[56738,0,"process_symbol = NODE_PSYMBOL(\"process\");\n  domain_symbol = NODE_PSYMBOL(\"domain\");\n\n  "],[74088,91,""]],"_dtSpan":[292298,292476]},{"parents":[278],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[3979,0,"static volatile bool debugger_running = false;"],[4033,0,"u"],[4035,0,"_async_t dispatch_debug_messages_async;\n\n// Declared in n"],[4093,0,"de_"],[4097,0,"nternals.h\nIsolate* no"],[4120,0,"e_isolate ="],[4132,0,"NULL;\n\n\nstatic void "],[62820,137,""],[21286,0,"node_isolate"],[12309,0,", node_isolate"],[14399,0,", node_isolate"],[16192,0,", node_isolate"],[18737,0,", node_isolate"],[33434,0,", node_isolate"],[33589,0,", node_isolate"],[35095,0,", node_isolate"],[35258,0,", node_isolate"],[38145,0,",\n                                     node_isolate"],[38297,0,",\n                                     node_isolate"],[38752,0,", node_isolate"],[39894,0,", node_isolate"],[39970,0,", node_isolate"],[47602,1,""],[47602,0,"0, node_is"],[47613,1,""],[47613,0,"lat"],[48087,0,",\n                                      node_isolate"],[48194,2,""],[48194,0,"0, "],[48198,0,"od"],[48201,0,"_isolate"],[50936,0,", node_isolate"],[53591,0,", node_isolate"],[53768,0,", node_isolate"],[54034,0,", node_isolate"],[54706,0,", node_isolate"],[73169,0,", node_isolate"],[18813,0,"n"],[18815,0,"de_isolate, o"],[18882,0,"node_isolate, "],[58524,0,"node_isolate, "],[4698,0,"node_isolate"],[48557,0,"node_isolate"],[48661,0,"node_isolate"],[49124,0,"node_isolate"],[50407,0,"node_isolate"],[50437,0,"node_isolate"],[50505,0,"node_isolate"],[50564,0,"node_isolate"],[55118,0,"node_isolate"],[55237,0,"node_isolate"],[55362,0,"node_isolate"],[55496,0,"node_isolate"],[73141,0,"node_isolate"],[5541,0,"node_isolate"],[19160,0,"node_isolate"],[29762,0,"node_isolate"],[30165,0,"node_isolate"],[34142,0,"node_isolate"],[34603,0,"node_isolate"],[36114,0,"node_isolate"],[37149,0,"node_isolate"],[37318,0,"node_isolate"],[37515,0,"node_isolate"],[38954,0,"node_isolate"],[42668,0,"node_isolate"],[65701,0,"node_isolate"],[67454,0,"node_isolate"],[69937,0,"node_isolate"],[70088,0,"node_isolate"],[70273,0,"node_isolate"],[75624,0,", UV_RUN_DEFAULT"]],"_dtSpan":[292476,293625]},{"parents":[279],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[2838,0,"xports_symbol;\n\nstatic Pe"],[2864,0,"sistent<St"],[2875,0,"i"],[2877,0,"g> errn"],[40311,1,""],[40311,0,"pr"],[40314,1,""],[40314,0,"c"],[40316,0,"ss"],[40326,0,"module, filename"],[40344,0,"\n//"],[40393,3,""],[40720,0,"Local<Object> module = args[0]->ToObject(); // Cast\n  "],[40806,1,""],[40806,0,"1"],[40819,0,"\n  if (exports_symbol.IsEmpty()) {\n    exports_symbol = NODE_PSYMBOL(\"exports\");\n  }\n"],[40920,4,""],[40921,0,"xpor"],[40926,0,"s"],[40930,1,""],[40930,0,"module->Get(expo"],[40947,1,""],[40947,0,"t"],[40949,3,""],[40949,0,"_symbol)"],[40970,8,""],[41297,1,""],[41297,0,"1"],[42754,0,"expor"],[42760,3,""],[42760,0,"s, modul"],[42769,1,""],[44981,0,"// Internal bindings don't have a \"module\" object,\n    // only exports.\n    "],[45084,0,", Undefined()"],[17553,0,"if (argc > 6) {\n    fprintf(stderr, \"node::MakeCallback - Too many args (%d)\\n\", argc);\n    abort();\n  }\n\n  "],[18055,5,""],[18057,121,""],[18058,8,""],[18059,57,""],[18060,45,""],[18061,3,""],[18063,79,""],[18708,4,""],[18708,0,"sym"],[18712,3,""],[18712,0,"ol"],[18751,4,""],[18751,0,"sym"],[18755,3,""],[18755,0,"ol"],[18798,2,""],[18798,0,"symbo"],[18804,5,""]],"_dtSpan":[293625,294455]},{"parents":[280],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[16492,1,""],[16579,1,""],[16582,0,"Lo"],[16585,1,""],[16585,0,"al<Value> argv[32];\n  u"],[16610,2,""],[16611,0,"g"],[16613,1,""],[16613,0,"ed"],[16640,7,""],[16640,0,"if ("],[16645,3,""],[16645,0,"rgc "],[16650,1,""],[16651,0,"ARRAY_SIZE("],[16666,0,"))"],[16669,1,""],[16669,0,"argc"],[16674,3,""],[16674,0,"="],[16676,13,""],[16676,0,"ARRAY_SIZE("],[16690,2,""],[16690,0,"v)"],[16693,1,""],[16701,0,"uns"],[16705,0,"g"],[16707,1,""],[16707,0,"ed"],[16731,4,""],[16732,2,""],[16750,5,""],[16753,9,""],[16753,0,"r"],[16755,1,""],[16756,3,""],[16756,0,"ur"],[16759,0," "],[16761,3,""],[16762,0,"ope.Clos"],[16771,3,""],[16771,0,"("],[16813,50,""]],"_dtSpan":[294455,294659]},{"parents":[281],"numChildren":1,"agent":149,"time":"1970-01-01T00:00:00Z","patches":[[3719,0,"static uv_check_t check_immediate_watcher;"],[3762,0,"static uv_idle_t idle_immediate_dummy;\nstatic bool need_immediate_cb;\nstatic Persistent<String> immediate_callback_sym;\n\n\n"],[5774,0,"void CheckImmediate(uv_check_t* handle, int status) {\n  assert(handle == &check_immediate_watcher);\n  assert(status == 0);\n\n  HandleScope scope;\n\n  if (immediate_callback_sym.IsEmpty()) {\n    immediate_callback_sym = NODE_PSYMBOL(\"_immediateCallback\");\n  }\n\n  MakeCallback(process, immediate_callback_sym, 0, NULL);\n}\n\n\nstatic void IdleImmediateDummy(uv_idle_t* handle, int status) {\n  // Do nothing. Only for maintaining event loop\n  assert(handle == &idle_immediate_dummy);\n  assert(status == 0);\n}\n\n\nstatic "],[52351,0,"\nHandle<Value> NeedImmediateCallbackGetter(Local<String> property,\n                                          const AccessorInfo& info) {\n  return Boolean::New(need_immediate_cb);\n}\n\n\nstatic void NeedImmediateCallbackSetter(Local<String> property,\n                                        Local<Value> value,\n                                        const AccessorInfo& info) {\n  HandleScope scope;\n\n  bool bool_value = value->BooleanValue();\n\n  if (need_immediate_cb == bool_value) return;\n\n  need_immediate_cb = bool_value;\n\n  if (need_immediate_cb) {\n    uv_check_start(&check_immediate_watcher, node::CheckImmediate);\n    // idle handle is needed only to maintain event loop\n    uv_idle_start(&idle_immediate_dummy, node::IdleImmediateDummy);\n  } else {\n    uv_check_stop(&check_immediate_watcher);\n    uv_idle_stop(&idle_immediate_dummy);\n  }\n}\n\n\n"],[56641,0,"  process->SetAccessor(String::New(\"_needImmediateCallback\"),\n                       NeedImmediateCallbackGetter,\n                       NeedImmediateCallbackSetter);\n"],[73907,0,"uv_check_init(uv_default_loop(), &check_immediate_watcher);\n  uv_unref((uv_handle_t*) &check_immediate_watcher);\n  uv_idle_init(uv_default_loop(), &idle_immediate_dummy);\n\n  "]],"_dtSpan":[294659,296523]},{"parents":[282],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[2810,0,"static Persistent<Function> process_tickCallback;\n"],[3265,4,""],[3265,0,"S"],[3267,0,"r"],[3269,1,""],[3270,0,"g"],[3273,1,""],[3273,0,"ente"],[3278,0,"_symb"],[3284,0,"l;\nstati"],[3293,0," P"],[3296,0,"r"],[3298,0,"i"],[3300,0,"tent<String> exit"],[3318,0,"sy"],[3321,0,"bol;\nst"],[3329,1,""],[3329,0,"tic Persist"],[3341,4,""],[3341,0,"nt<String> disposed_sym"],[3365,3,""],[3365,0,"ol"],[18312,91,""],[18314,12,""],[18317,5,""],[18801,4,""],[18802,2,""],[18802,0,"nter"],[18807,0,"sy"],[18810,7,""],[18811,3,""],[18811,0,"ol"],[18831,0,"enter_symbol = NODE_PSYMBOL(\"enter\");\n    exit_symbol = NODE_PSYMBOL(\"exit\");\n    disposed_symbol = NODE_PSYMBOL(\"_disposed\");\n  }\n\n  "],[18978,2,""],[18978,0,"domain"],[18989,2,""],[18990,1,""],[18990,0,"bj"],[18993,2,""],[18993,0,"ct"],[19001,3,""],[19001,0,"doma"],[19007,8,""],[19008,0,"sy"],[19011,5,""],[19011,0,"bo"],[19014,0,");\n  Loca"],[19024,0,"<O"],[19027,0,"ject> dom"],[19037,0,"in;\n  Lo"],[19046,4,""],[19046,0,"al<Function> enter"],[19068,0,"Local<Function> exit;\n"],[19097,2,""],[19097,0,"domain"],[19109,2,""],[19109,0,"U"],[19111,2,""],[19111,0,"def"],[19115,1,""],[19116,0,"ed"],[19128,0,"domain"],[19135,0,"="],[19137,3,""],[19137,0,"doma"],[19143,0,"_v->ToObjec"],[19155,0,"();\n    i"],[19165,0," "],[19167,2,""],[19168,8,""],[19169,1,""],[19169,0,"main->G"],[19177,0,"t(di"],[19182,0,"po"],[19185,1,""],[19185,0,"ed"],[19188,0,"sy"],[19191,2,""],[19191,0,"bol)->Bool"],[19202,1,""],[19203,0,"nVa"],[19207,5,""],[19207,0,"ue()) {\n"],[19216,0,"     // dom"],[19228,2,""],[19229,1,""],[19230,0," has b"],[19237,0,"en "],[19241,2,""],[19241,0,"isp"],[19245,0,"sed"],[19249,1,""],[19250,2,""],[19251,12,""],[19251,0,"."],[19259,3,""],[19260,0,"e"],[19262,0,"urn Undefined"],[19276,0,"node_isolate"],[19301,0,"enter = "],[19324,2,""],[19324,0,"::Cast(domain->Get(enter_sym"],[19353,0,"ol));\n"],[19360,1,""],[19361,2,""],[19361,0,"  enter->Call(domain, 0, NULL);\n  }\n\n  if (try"],[19408,1,""],[19408,0,"catch"],[19414,1,""],[19414,0,"Ha"],[19417,2,""],[19417,0,"Ca"],[19420,1,""],[19420,0,"ght()) {\n    FatalEx"],[19441,0,"ep"],[19447,1,""],[19448,0,"try_catch"],[19464,1,""],[19465,0,"eturn Undefined(n"],[19483,1,""],[19483,0,"d"],[19485,0,"_i"],[19488,3,""],[19488,0,"ol"],[19491,1,""],[19491,0,"t"],[19493,1,""],[19493,0,");\n  }\n\n  Local<Function> c"],[19530,10,""],[19530,0,"Local"],[19547,3,""],[19547,0,"Cast"],[19553,0,"all"],[19557,0,"ack_v"],[19565,1,""],[19566,3,""],[19567,1,""],[19573,3,""],[19573,0,"V"],[19575,1,""],[19575,0,"lue"],[19580,1,""],[19581,6,""],[19581,0,"et"],[19586,3,""],[19586,0,"c"],[19588,4,""],[19588,0,"llback->Call(obj"],[19605,2,""],[19605,0,"ct, "],[19613,0,", argv"],[19622,0,"\n"],[19625,0,"i"],[19627,2,""],[19629,2,""],[19630,0,"ry_catch.HasCaught())"],[19652,1,""],[19652,0,"{\n"],[19655,1,""],[19656,2,""],[19657,1,""],[19658,2,""],[19658,0,"F"],[19660,0,"talException(t"],[19675,1,""],[19675,0,"y_"],[19678,0,"atch)"],[19684,7,""],[19689,4,""],[19690,6,""],[19692,2,""],[19692,0,"ur"],[19695,1,""],[19695,0," Und"],[19700,1,""],[19700,0,"fin"],[19704,6,""],[19704,0,"d"],[19706,3,""],[19719,1,""],[19719,0,";\n  }\n\n  if"],[19731,0,"(!dom"],[19737,2,""],[19737,0,"in_"],[19741,1,""],[19741,0,"->IsUndef"],[19751,1,""],[19751,0,"ned("],[19756,1,""],[19756,0,") {"],[19762,3,""],[19764,0,"exit = "],[19777,3,""],[19777,0,"F"],[19779,1,""],[19779,0,"nction"],[19786,1,""],[19786,0,"::Cast(d"],[19795,0,"main->Get(exit_sym"],[19814,1,""],[19814,0,"ol));\n    "],[19825,1,""],[19825,0,"xi"],[19828,1,""],[19828,0,"->Cal"],[19834,0,"(domain,"],[19843,1,""],[19843,0,"0,"],[19846,0,"NU"],[19849,1,""],[19849,0,"L);\n  }\n\n  if (try_"],[19870,3,""],[19870,0,"tch.HasC"],[19879,0,"ught()) {\n    Fata"],[19898,0,"Exception(try_catch);\n    ret"],[19928,0,"rn Und"],[19935,4,""],[19935,0,"fin"],[19939,1,""],[19939,0,"d"],[19953,1,""],[19953,0,");\n  }\n\n  //"],[19966,0,"pr"],[19969,2,""],[19969,0,"c"],[19971,0,"ss nextTi"],[19981,0,"ks af"],[19987,0,"er every time we get called.\n  if (process_tickCallback.IsEmpty()"],[20053,1,""],[20053,0," {"],[20058,0,"  "],[20073,3,""],[20073,0,"c"],[20075,2,""],[20076,1,""],[20076,0,"v"],[20080,1,""],[20080,0,"pr"],[20084,7,""],[20085,0,"ss-"],[20089,0,"Get(String"],[20105,0,"\"_tickCallback\"));\n    if (!cb_v->IsFu"],[20144,0,"cti"],[20148,0,"n()) {\n      fprintf(st"],[20173,0,"rr, \"process."],[20187,0,"t"],[20189,2,""],[20189,0,"ckCal"],[20195,0,"b"],[20197,0,"ck assigned "],[20210,2,""],[20210,0,"o"],[20212,3,""],[20212,0,"non-function\\n\");\n      a"],[20239,1,""],[20239,0,"rt("],[20245,0,"    }"],[20253,0,"  "],[20261,3,""],[20261,0,"F"],[20263,1,""],[20263,0,"nction"],[20271,7,""],[20271,0,"cb"],[20275,2,""],[20276,4,""],[20277,8,""],[20278,2,""],[20279,6,""],[20279,0,"v."],[20282,6,""],[20282,0,"s<Function>()"],[20296,1,""],[20299,1,""],[20299,0,"  pr"],[20305,0,"ess_tickC"],[20316,2,""],[20316,0,"lb"],[20319,4,""],[20319,0,"ck ="],[20324,0,"Pe"],[20327,0,"sist"],[20332,0,"nt<Func"],[20340,0,"ion>::New(cb);\n"],[20356,1,""],[20357,0,"}\n  "],[20369,2,""],[20369,0,"tic"],[20373,1,""],[20397,16,""],[20397,0,"NULL"],[20403,4,""],[20403,0,"0"]],"_dtSpan":[296523,298265]},{"parents":[283],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[2850,0,"WDCallback;\nstatic Persistent<Function> process_tickFromSpinner;\nstatic Persistent<Function> process_tick"],[4745,2,""],[4745,0,"pro"],[4749,1,""],[4749,0,"ess"],[4753,6,""],[4753,0,"ti"],[4757,3,""],[4757,0,"Fro"],[4761,0,"Spinner"],[4786,3,""],[4787,18,""],[4788,43,""],[4789,2,""],[4791,21,""],[4819,0,"S"],[4821,0,"r"],[4823,2,""],[4823,0,"ng::New(\""],[4833,6,""],[4833,0,"ti"],[4837,3,""],[4837,0,"Fro"],[4841,0,"Spinner\")"],[4855,0,"  "],[4882,0,"{\n      fprintf(stde"],[4903,0,"r, \"proc"],[4912,0,"ss._"],[4917,1,""],[4917,0,"ickFromSpinne"],[4931,0," assig"],[4938,0,"ed to non-function\\n\");\n      abort()"],[4979,0,"  }\n    "],[5008,1,""],[5008,0,"cb_v.As<Function>();\n    pr"],[5037,2,""],[5037,0,"ess_tickFromSpinner = Persistent"],[5081,4,""],[5081,0,"New"],[5087,2,""],[5090,0,"  }\n"],[5120,9,""],[5120,0,"proc"],[5125,1,""],[5125,0,"ss_"],[5131,11,""],[5132,25,""],[5132,0,"F"],[5136,6,""],[5136,0,"S"],[5139,1,""],[5140,7,""],[5141,2,""],[5142,9,""],[5143,35,""],[5159,16,""],[5159,0,"0"],[5162,4,""],[5162,0,"NULL"],[17693,64,""],[17694,65,""],[17695,101,""],[17711,3,""],[17712,4,""],[17712,0,"WithDom"],[17720,2,""],[17720,0,"in"],[17771,2,""],[17771,0,"H"],[17773,4,""],[17773,0,"ndl"],[17777,0,"<Func"],[17783,1,""],[17783,0,"i"],[17785,1,""],[17785,0,"n> callback"],[17860,4,""],[17860,0,"// "],[17864,6,""],[17864,0,"azy"],[17868,2,""],[17868,0,"l"],[17870,8,""],[17871,1,""],[17872,9,""],[17873,2,""],[17873,0,"_"],[17875,9,""],[17875,0,"ic"],[17878,1,""],[17878,0,"WD"],[17888,8,""],[17888,0,"\n "],[17891,3,""],[17892,13,""],[17892,0,"f "],[17895,10,""],[17895,0,"p"],[17897,1,""],[17897,0,"o"],[17899,13,""],[17900,5,""],[17901,8,""],[17902,4,""],[17902,0,"_"],[17904,22,""],[17904,0,"ic"],[17907,1,""],[17907,0,"WD"],[17917,4,""],[17917,0,".I"],[17920,42,""],[17920,0,"Emp"],[17924,17,""],[17925,62,""],[17925,0,"()"],[17933,11,""],[17934,8,""],[17935,1,""],[17949,3,""],[17950,3,""],[17955,0,"pr"],[17958,2,""],[17958,0,"c"],[17960,2,""],[17960,0,"ss"],[17968,5,""],[17968,0,"String::New(\"_tickWDCal"],[17992,0,"back\")"],[18003,0,"  "],[18011,3,""],[18012,3,""],[18036,2,""],[18036,0,"  fp"],[18043,4,""],[18045,13,""],[18047,23,""],[18048,1,""],[18048,0,"d"],[18050,0,"rr,"],[18054,0,"\"pr"],[18058,3,""],[18059,4,""],[18059,0,"es"],[18062,7,""],[18062,0,"._t"],[18066,2,""],[18066,0,"ckWDC"],[18072,2,""],[18072,0,"llb"],[18077,4,""],[18077,0,"k"],[18079,1,""],[18080,0,"ssig"],[18085,2,""],[18086,0,"d"],[18088,1,""],[18089,0,"o"],[18091,0,"non-func"],[18100,5,""],[18100,0,"ion\\n\");"],[18113,2,""],[18114,2,""],[18115,2,""],[18116,1,""],[18116,0,"bor"],[18120,1,""],[18120,0,"();\n"],[18125,5,""],[18126,2,""],[18127,4,""],[18128,2,""],[18128,0,"}\n"],[18131,3,""],[18132,6,""],[18133,4,""],[18134,0,"L"],[18136,3,""],[18136,0,"cal<Fu"],[18143,2,""],[18144,1,""],[18148,2,""],[18148,0,">"],[18150,0,"cb"],[18153,0,"="],[18155,24,""],[18155,0,"cb_"],[18159,9,""],[18159,0,".A"],[18162,1,""],[18162,0,"<Fu"],[18166,3,""],[18167,1,""],[18168,7,""],[18168,0,"ion>();"],[18180,1,""],[18181,11,""],[18182,4,""],[18183,5,""],[18184,0,"ess_"],[18190,8,""],[18190,0,"c"],[18192,1,""],[18192,0,"WD"],[18202,1,""],[18203,7,""],[18205,1,""],[18205,0,"Persi"],[18211,7,""],[18211,0,"t"],[18213,0,"n"],[18215,12,""],[18215,0,"<Functi"],[18223,2,""],[18223,0,"n>::New"],[18231,0,"cb"],[18245,14,""],[18247,6,""],[18248,2,""],[18248,0,"zy"],[18251,2,""],[18251,0,"lo"],[18254,3,""],[18254,0,"d"],[18256,1,""],[18256,0,"d"],[18258,4,""],[18260,2,""],[18260,0,"in"],[18263,3,""],[18263,0,"sp"],[18266,11,""],[18267,1,""],[18267,0,"ific"],[18272,2,""],[18272,0,"s"],[18274,8,""],[18274,0,"mbols"],[18575,0,"\n"],[18578,2,""],[18578,0,"TryCatch"],[18587,5,""],[18587,0,"try_c"],[18593,22,""],[18593,0,"tch;\n"],[18599,2,""],[18634,0,"assert(!domain.IsEmpty());\n"],[18697,10,""],[18697,0,"IsTr"],[18709,1,""],[18713,1,""],[18745,1,""],[18749,1,""],[18781,2,""],[18787,2,""],[18847,0,"assert(!enter.IsEmpty());\n"],[18904,4,""],[19017,64,""],[19168,1,""],[19169,33,""],[19172,2,""],[19230,0,"assert(!exit.IsEmpty());\n"],[19285,4,""],[19419,0,"call\n  proc"],[19431,1,""],[19431,0,"ss_tickWDCallback->Call(proc"],[19460,0,"ss, 0, NULL);\n\n  if (try_catch.HasCaught()) {\n    FatalException(t"],[19528,0,"_catch);\n    return Undefined(node_isolate);\n  }\n\n  return ret;\n}\n\n\nHandle<Value>\nMakeCallback(const Handle<Object>"],[19644,0,"objec"],[19650,0,",\n             const Handle<Str"],[19682,0,"ng> sy"],[19689,0,"bol,\n             int argc,\n             Handle<Valu"],[19742,0,"> argv[]) {\n  HandleScope scope;\n\n  Local<Value> callback_v"],[19802,1,""],[19802,0,"= object->G"],[19814,0,"t(symbol);\n  if (!callback_v->IsFunction()) {\n "],[19862,0,"  Strin"],[19870,0,"::Utf8Value m"],[19885,0,"hod(symbol);\n"],[19899,0,"   fprintf(stderr, \"Non-fun"],[19927,0,"tion in M"],[19937,0,"keCal"],[19943,0,"back. method = %s\\n\", *method);\n    abort();\n  }\n\n  Local<Function> callback = Local<Function>::Cast(callback_v);\n\n  // TODO Hook for "],[20078,0,"ong stack traces to b"],[20100,0," ma"],[20104,0,"e here"],[20112,0,"\n"],[20115,0,"// lazy load no domain next tick callbacks\n  "],[20501,0,"\n  // has domain, off with you\n  if (object->Has(domain_symbol) &&\n      !object->Get(domain_symbol)->IsNull() &&\n      !object->Get(domain_symbol)->IsUndefined())\n    return scope.Close(MCWithDomain(object, callback, argc, argv));\n\n  TryCatch try_catch;\n\n  Local<Value> ret = callback->Call(object, argc, argv);\n\n  if (try_catch.HasCaught()) {\n    FatalException(try_catch);\n    return Undefined(node_isolate);\n  }\n\n "],[20920,0,"//"],[20930,0," nextTicks after call\n  process"],[20990,0,"0, "],[20997,3,""],[21135,0,"Handle<Value>\nMakeCallback(const Handle<Object> object,\n             const char* method,\n             int argc,\n             Handle<Value> argv[]) {\n  HandleScope scope;\n\n  Handle<Value> ret =\n    MakeCallback(object, String::NewSymbol(method), argc, argv);\n\n  return scope.Close(ret);\n}\n\n\n"],[2850,1,""],[2851,0,"omain"],[4114,0,"// for quick ref to tickCallback values\nstruct {"],[4163,0,"  uint32_t length;\n  uint32_t index;\n  uint32_t depth;\n} tick_infobox;\n\n"],[4710,1,""],[4710,0,"Sp"],[4713,2,""],[4713,0,"n"],[4715,0,"u"],[4717,1,""],[4717,0,"_"],[4720,0,"le_t* handle, int status"],[4750,0,"assert((uv_idle_t*) handle == &tick_spinner);\n  assert(status == 0);\n\n  "],[5468,8,""],[5468,0,"Ha"],[5471,5,""],[5474,5,""],[5474,0,"<V"],[5477,2,""],[5478,0,"u"],[5480,1,""],[5480,0,">"],[5482,19,""],[5482,0,"N"],[5484,10,""],[5485,8,""],[5486,47,""],[5490,10,""],[5490,0,"C"],[5492,11,""],[5492,0,"llb"],[5496,4,""],[5498,7,""],[5499,13,""],[5500,38,""],[5500,0,"o"],[5502,3,""],[5503,7,""],[5505,14,""],[5506,6,""],[5507,22,""],[5507,0,"g"],[5509,4,""],[5509,0,"m"],[5512,3,""],[5513,12,""],[5514,12,""],[5514,0,"&"],[5516,1,""],[5517,12,""],[5518,4,""],[5518,0,"g"],[5520,8,""],[5520,0,")"],[5522,1,""],[5522,0,"{"],[5524,13,""],[5525,15,""],[5526,4,""],[5527,5,""],[5528,1,""],[5529,10,""],[5530,29,""],[5531,14,""],[5531,0,"ti"],[5535,7,""],[5535,0,"_"],[5537,6,""],[5538,19,""],[5539,15,""],[5539,0,"="],[5541,3,""],[5542,10,""],[5543,38,""],[5544,11,""],[5545,4,""],[5545,0,";"],[5577,66,""],[5578,10,""],[5579,9,""],[5582,4,""],[17365,5,""],[17365,0,"ake"],[17374,0,"Callback"],[17538,1,""],[17539,0,"omain"],[17571,1,""],[17572,0,"omain"],[17654,1,""],[17655,0,"omain"],[17740,1,""],[17741,0,"omain"],[17868,1,""],[17869,0,"omain"],[19072,0,"if (tick_infobox.length == 0) {\n    tick_infobox.index = 0;\n    tick_infobox.depth = 0;\n    return ret;\n  }\n\n  "],[19229,1,""],[19230,0,"omain"],[19579,3,""],[19579,0,"F"],[19581,1,""],[19581,0,"nction"],[19597,2,""],[19619,22,""],[19619,0,".A"],[19622,0,"<"],[19631,0,">"],[19634,3,""],[19634,0,";"],[19636,1,""],[19638,13,""],[19638,0,"Local<"],[19649,0,">"],[19651,0,"do"],[19654,0,"ain = obj"],[19664,0,"c"],[19666,3,""],[19666,0,"->Get"],[19672,0,"domain_"],[19688,0,"\n"],[19691,1,""],[19691,0,"//"],[19694,15,""],[19694,0,"TODO"],[19699,2,""],[19699,0,"Ho"],[19702,2,""],[19702,0,"k "],[19705,5,""],[19706,1,""],[19706,0,"r"],[19708,1,""],[19708,0,"lo"],[19711,0,"g"],[19713,9,""],[19713,0,"st"],[19718,1,""],[19719,1,""],[19719,0,"trac"],[19724,0,"s "],[19727,1,""],[19728,1,""],[19729,8,""],[19729,0,"be"],[19732,1,""],[19733,0,"ad"],[19736,1,""],[19736,0," "],[19738,4,""],[19738,0,"ere.\n"],[19746,0,"//"],[19749,0,"has"],[19753,0,"dom"],[19757,1,""],[19757,0,"in, "],[19762,1,""],[19762,0,"ff wi"],[19768,3,""],[19768,0,"h you"],[19776,4,""],[19776,0,"if"],[19779,1,""],[19779,0,"(!d"],[19783,1,""],[19783,0,"m"],[19785,7,""],[19786,1,""],[19787,0,"-"],[19789,3,""],[19789,0,"IsNu"],[19795,4,""],[19795,0,"()"],[19798,1,""],[19798,0,"&&"],[19801,1,""],[19801,0,"!d"],[19804,1,""],[19804,0,"m"],[19806,7,""],[19807,1,""],[19808,0,"-"],[19810,4,""],[19810,0,"I"],[19812,1,""],[19812,0,"Undefined"],[19822,10,""],[19823,1,""],[19823,0,")"],[19825,1,""],[19827,2,""],[19828,4,""],[19829,4,""],[19829,0,"return"],[19836,1,""],[19836,0,"sc"],[19839,2,""],[19839,0,"pe.C"],[19845,3,""],[19846,1,""],[19846,0,"e(M"],[19850,1,""],[19851,3,""],[19851,0,"eDomainCallb"],[19865,0,"k(obj"],[19871,2,""],[19871,0,"c"],[19873,1,""],[19873,0,","],[19875,0,"call"],[19880,1,""],[19880,0,"ack,"],[19885,1,""],[19886,2,""],[19886,0,"rgc,"],[19891,2,""],[19891,0,"a"],[19893,2,""],[19893,0,"gv));"],[20287,67,""],[20288,46,""],[20289,3,""],[20291,116,""],[20475,0,"if (tick_infobox.length == 0) {\n    tick_infobox.index = 0;\n    tick_infobox.depth = 0;\n    return scope.Close(ret);\n  }\n\n  "],[60618,0,"// values use to cross communicate with processNextTick\n  Local<Object> info_box = Object::New();\n  info_box->SetIndexedPropertiesToExternalArrayData(&tick_infobox,\n                                                    kExternalUnsignedIntArray,\n                                                    3);\n  process->Set(String::NewSymbol(\"_tickInfoBox\"), info_box);\n\n  "]],"_dtSpan":[298265,303705]},{"parents":[284],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[4156,0,"atic st"],[5611,12,""],[12901,14,""],[14975,4,""],[14976,6,""],[14977,4,""],[16756,14,""],[18399,12,""],[18610,12,""],[18759,12,""],[18967,12,""],[19258,12,""],[20346,12,""],[20644,12,""],[23168,12,""],[31512,12,""],[31903,12,""],[35248,14,""],[35389,14,""],[35840,12,""],[36289,12,""],[36881,14,""],[37030,14,""],[37760,12,""],[38783,12,""],[38940,12,""],[39125,12,""],[39903,51,""],[40004,51,""],[40408,14,""],[40436,12,""],[41536,14,""],[41598,14,""],[44290,12,""],[49486,14,""],[49956,52,""],[50012,14,""],[50320,12,""],[50412,12,""],[50863,12,""],[52134,12,""],[52152,12,""],[52208,12,""],[52255,12,""],[52738,13,""],[52739,1,""],[56229,14,""],[56392,14,""],[56644,14,""],[57302,14,""],[57743,12,""],[57850,12,""],[57963,12,""],[58085,12,""],[61609,14,""],[68484,12,""],[70225,12,""],[72696,12,""],[72835,12,""],[73008,12,""],[76242,12,""],[76456,14,""]],"_dtSpan":[303705,304564]},{"parents":[285],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[67654,4,""],[67654,0,"uv_"],[67663,0,"_t* handle, int"],[75509,1,""],[75509,0,"static uv_signal_t signal_watch"],[75541,0,"r;\n    uv_si"],[75554,0,"nal_in"],[75561,0,"t(uv_default_loop(), &"],[75584,0,"ignal_wa"],[75593,0,"ch"],[75597,1,""],[75597,0,");\n    uv_s"],[75613,1,""],[75613,0,"_st"],[75617,0,"rt(&sig"],[75625,1,""],[75625,0,"a"],[75627,0,"_watch"],[75635,8,""],[75661,0,", SIGUSR1);\n    uv_unref((uv_handle_t*)&signal_watcher"],[30210,1,""],[30210,0,"3"],[30331,1,""],[30331,0,"4"],[44522,1,""],[44522,0,"5"],[44981,1,""],[44981,0,"6"],[45455,1,""],[45455,0,"7"],[45552,1,""],[45552,0,"8"],[60376,0,"28 + signal"],[61861,5,""],[61861,0,"Fa"],[61864,0,"al"],[61885,6,""],[61890,14,""],[62600,0,"2"],[65158,0,"3"]],"_dtSpan":[304564,304815]},{"parents":[286],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[21027,0,"static Persistent<String> errno_symbol;\n  "],[21132,0,"_"],[21281,1,""],[21281,0,"pr"],[21284,8,""],[21284,0,"c"],[21286,20,""],[21286,0,"ss"],[21348,1,""],[21348,0,"pr"],[21351,8,""],[21351,0,"c"],[21353,10,""],[21353,0,"ss"],[21357,10,""],[21374,41,""]],"_dtSpan":[304815,304967]},{"parents":[287],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[60191,0,"// pre-set _events object for faster emit checks\n  process->Set(String::NewSymbol(\"_events\"), Object::New());\n\n  "]],"_dtSpan":[304967,305080]},{"parents":[288],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[2775,2,""],[2775,0,"// decl"],[2783,1,""],[2783,0,"red "],[2788,1,""],[2788,0,"n"],[2790,0,"node_internals.h\n"],[2835,0,"\n"]],"_dtSpan":[305080,305114]},{"parents":[289],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[31231,0,"("],[31235,1,""],[31235,0,"flags_ & Ha"],[31247,0,"dleW"],[31252,0,"ap::kUnr"],[31262,1,""],[31263,0,")"]],"_dtSpan":[305114,305141]},{"parents":[290],"numChildren":2,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[3616,0,"bool throw_deprecation = false;\nstatic "],[58022,0,"hrow-deprecation\n  if (throw_deprecation) {\n    process->Set(String::NewSymbol(\"throwDeprecation\"), True());\n  }\n\n  // --t"],[66544,0,"strcmp(arg, \"--throw-deprecation\") == 0) {\n      argv[i] = const_cast<char*>(\"\");\n      throw_deprecation = true;\n    } else if ("],[42626,1,""],[42626,0,"1"]],"_dtSpan":[305141,305433]},{"parents":[291],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[5378,0,"node_isolate, "],[17943,0,"node_isolate, "],[20265,0,"node_isolate, "],[39849,4,""],[39849,0,"node_isolate->"],[45995,0,"node_isolate, "],[54358,0,"node_isolate,\n                                "],[54754,0,"node_isolate, "],[75169,0,"  // Fetch a reference to the main isolate, so we have a reference to it\n  // even when we need it to access it from another (debugger) thread.\n  node_isolate = Isolate::GetCurrent();\n\n"],[75824,8,""],[75825,177,""],[78336,0,"(node_isolate)"],[79296,0,"node_isolate"],[5029,0,"(node_isolate)"],[5704,0,"node_isolate"],[5873,0,"(node_isolate)"],[13020,0,", node_isolate"],[15110,0,", node_isolate"],[16903,0,", node_isolate"],[17222,0,"(node_isolate)"],[18588,0,"node_isolate"],[18811,0,"node_isolate"],[18972,0,"node_isolate"],[19192,0,"node_isolate"],[19495,0,"node_isolate"],[19710,0,"(node_isolate)"],[20623,0,"node_isolate"],[20933,0,"node_isolate"],[21152,0,"(node_isolate)"],[21337,0,"(node_isolate)"],[21849,0,"(node_isolate)"],[23293,0,"(node_isolate)"],[23479,0,"node_isolate"],[24196,0,"(node_isolate)"],[25021,0,"(node_isolate)"],[27092,0,"(node_isolate)"],[29256,0,"(node_isolate)"],[30423,0,"(node_isolate)"],[30850,0,"(node_isolate)"],[31384,0,"(node_isolate)"],[31956,0,"node_isolate"],[32046,0,"(node_isolate)"],[32373,0,"node_isolate"],[32461,0,"(node_isolate)"],[32957,0,"(node_isolate)"],[33830,0,", node_isolate"],[35711,0,"(node_isolate)"],[35786,0,", node_isolate"],[35880,0,"(node_isolate)"],[35955,0,", node_isolate"],[36049,0,"(node_isolate)"],[36434,0,"node_isolate"],[36525,0,"(node_isolate)"],[36909,0,"node_isolate"],[37003,0,"(node_isolate)"],[37527,0,", node_isolate"],[37690,0,", node_isolate"],[37827,0,"(node_isolate)"],[38448,0,"node_isolate"],[38543,0,"(node_isolate)"],[39497,0,"node_isolate"],[39612,0,"(node_isolate)"],[39680,0,"node_isolate"],[39771,0,"(node_isolate)"],[39891,0,"node_isolate"],[40058,0,"(node_isolate)"],[40705,0,",\n                                     node_isolate"],[40857,0,",\n                                     node_isolate"],[41008,0,"(node_isolate)"],[41326,0,", node_isolate"],[41368,0,"node_isolate"],[41877,0,"(node_isolate)"],[42494,0,", node_isolate"],[42570,0,", node_isolate"],[42857,0,"(node_isolate)"],[45290,0,"node_isolate"],[45603,0,"(node_isolate)"],[46734,0,"(node_isolate)"],[47537,0,"node_isolate"],[48171,0,"(node_isolate)"],[48486,0,"(node_isolate)"],[48736,0,"(node_isolate)"],[49853,0,"(node_isolate)"],[50495,0,"(node_isolate)"],[50622,0,", node_isolate"],[51106,0,",\n                                      node_isolate"],[51214,0,", node_isolate"],[51448,0,"(node_isolate)"],[51550,0,"node_isolate"],[51654,0,"node_isolate"],[52117,0,"node_isolate"],[52225,0,"(node_isolate)"],[53298,0,"(node_isolate)"],[53428,0,"node_isolate"],[53458,0,"node_isolate"],[53526,0,"node_isolate"],[53585,0,"node_isolate"],[54023,0,"(node_isolate)"],[54095,0,", node_isolate"],[54292,0,"(node_isolate)"],[54912,0,"(node_isolate)"],[55460,0,"(node_isolate)"],[57701,0,", node_isolate"],[57878,0,", node_isolate"],[58144,0,", node_isolate"],[58816,0,", node_isolate"],[59271,0,"node_isolate"],[59390,0,"node_isolate"],[59515,0,"node_isolate"],[59771,0,"node_isolate"],[63431,0,"node_isolate, "],[70129,0,"(node_isolate)"],[70458,0,"node_isolate"],[70810,0,"node_isolate"],[72190,0,"(node_isolate)"],[72237,0,"node_isolate"],[74720,0,"node_isolate"],[74871,0,"node_isolate"],[75056,0,"node_isolate"],[78453,0,"node_isolate"],[78679,0,", node_isolate"],[26266,2,""],[26266,0,"OneByte(reinterpret_"],[26287,1,""],[26287,0,"ast<u"],[26293,0,"nt8_t*>"],[26304,0,")"],[26306,0,"\n                     "],[26331,0,"\n                     "],[26361,0,"\n                     "]],"_dtSpan":[305433,307613]},{"parents":[291],"numChildren":2,"agent":171,"time":"1970-01-01T00:00:00Z","patches":[[17443,0,"      "],[17495,0,"      "],[17524,0,"      "],[17559,0,"TODO Hook for long stack traces to be made here.\n\n  // "],[19504,1,""],[19504,0,"Func"],[19509,1,""],[19510,0,"o"],[19512,1,""],[19514,5,""],[19514,0,"ca"],[19517,0,"lback"],[19583,139,""],[19584,1,""],[19633,81,""],[19634,9,""],[19635,10,""],[19637,56,""],[20301,12,""],[20304,1,""],[20494,0,"ret;\n}\n\n\nHandle<Value>\nMakeCallback(const Handle<Object> object,\n             const Handle<String> symbol,\n             int argc,\n             Handle<Value> argv[]) {\n  HandleScope scope;\n\n  Local<Function> callback = object->Get(symbol).As<Function>();\n  Local<Value> domain = object->Get(domain_symbol);\n\n  // has domain, off with you\n  if (!domain->IsNull() && !domain->IsUndefined())\n    return "],[20905,0,"MakeDomainCallback(object, callback, argc, argv));\n  retu"],[20963,0,"n scope.Clos"],[20976,0,"(MakeCallback(objec"],[20996,0,", callback, argc, argv)"]],"_dtSpan":[307613,308525]},{"parents":[292,293],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[19767,14,""],[20902,0,"(node_isolate)"]],"_dtSpan":[308525,308553]},{"parents":[293],"numChildren":1,"agent":171,"time":"1970-01-01T00:00:00Z","patches":[[2876,34,""],[2877,22,""],[3794,0,"static bool using_domains = false;\n"],[17360,5,""],[17360,0," Using"],[17372,8,""],[17372,0,"s"],[17380,18,""],[17380,0,"Argum"],[17386,1,""],[17386,0,"n"],[17388,2,""],[17388,0,"s&"],[17391,0,"args)"],[17397,15,""],[17397,0,"{\n"],[17401,6,""],[17407,4,""],[17407,0,"S"],[17409,2,""],[17410,2,""],[17410,0,"pe"],[17413,6,""],[17413,0,"s"],[17415,2,""],[17415,0,"ope;"],[17420,11,""],[17422,0,"if"],[17425,5,""],[17425,0,"(us"],[17430,4,""],[17431,23,""],[17431,0,"_dom"],[17436,0,"i"],[17438,17,""],[17438,0,"s"],[17440,2,""],[17443,7,""],[17444,4,""],[17445,2,""],[17446,3,""],[17446,0,"etur"],[17451,1,""],[17453,2,""],[17454,6,""],[17454,0,"op"],[17457,3,""],[17457,0,".Cl"],[17461,2,""],[17461,0,"s"],[17463,3,""],[17463,0,"(Un"],[17468,2,""],[17468,0,"fin"],[17472,3,""],[17472,0,"d());"],[17478,2,""],[17479,2,""],[17480,12,""],[17480,0,"us"],[17483,3,""],[17483,0,"ng_d"],[17492,1,""],[17492,0,"s = true;\n  Loc"],[17509,0,"<Va"],[17513,2,""],[17513,0,"ue> td"],[17520,2,""],[17520,0,"_v"],[17523,3,""],[17523,0,"="],[17525,1,""],[17532,0,"->Get(String::New(\""],[17570,9,""],[17570,0,"\""],[17573,2,""],[17573,0,";"],[17575,2,""],[17590,2,""],[17590,0,"ndt"],[17625,0,"nex"],[17629,3,""],[17635,6,""],[17635,0,"Ti"],[17644,1,""],[17646,1,""],[17651,0,"td"],[17654,1,""],[17674,1,""],[17678,1,""],[17753,1,""],[17757,1,""],[17768,0,"}\n  if (!ndt_v->IsFunction()) {\n    fprintf(stderr, \"process._nextDomainTick assigned to non-function\\n\");\n  "],[17879,1,""],[17879,0,"abort();"],[17890,0,"}\n"],[17910,0,"td"],[17913,1,""],[17916,0,"td"],[17919,1,""],[17940,0,"Local<Function>"],[17956,0,"ndt ="],[17962,0,"ndt_v.As<Function>();\n  "],[17993,0,"->Set(String::New(\""],[18017,3,""],[18017,0,"Callb"],[18023,0,"ck\"), tdc);\n  process->Set(Str"],[18055,0,"g::New(\"nextTick\"), ndt);\n  process_tick"],[18132,0,"td"],[18135,1,""],[18140,0,"return Undefined();\n"],[18163,0,"\nHandle<Value>\nMakeDomainCallback(const Handle<Object> object,\n                   const Handle<Function> callback,\n                   int argc,\n                   Handle<Value> argv[]) {\n"],[18355,0,"TODO Hook for "],[18370,0,"ong stack traces to be m"],[18395,0,"de here.\n\n  // la"],[18765,0,"bool has_"],[18793,0,"IsObject();\n  if (has_domain) {\n    domain = domain_v->"],[18862,0,"  "],[18893,0,"  "],[18945,0,"  "],[18983,0,"  "],[19007,0,"  "],[19013,0,"  "],[19075,0,"  "],[19105,0,"  "],[19140,0,"  "],[19175,0,"  "],[19208,0,"  "],[19232,0,"  }\n  "],[19392,0,"if (has_domain) {\n    "],[19472,0,"  "],[19501,0,"  "],[19535,0,"  "],[19570,0,"  "],[19603,0,"  "],[19627,0,"  }\n  "],[19795,6,""],[21265,52,""],[21266,4,""],[21267,3,""],[21268,4,""],[21269,5,""],[21271,7,""],[21271,0,"("],[21273,3,""],[21273,0,"s"],[21275,9,""],[21276,15,""],[21276,0,"g_"],[21284,3,""],[21285,11,""],[60720,0,"NODE_SET_METHOD(process, \"_usingDomains\", UsingDomains);\n\n  "]],"_dtSpan":[308553,309848]},{"parents":[295],"numChildren":2,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[56029,41,""],[56029,0,"uv"],[56032,30,""],[56032,0,"version"],[56040,9,""],[56040,0,"string"],[56047,16,""]],"_dtSpan":[309848,309959]},{"parents":[294,296],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[18242,14,""]],"_dtSpan":[309959,309973]},{"parents":[297],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[18242,0,"node_isolate, "]],"_dtSpan":[309973,309987]},{"parents":[298],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[17528,0,"(node_isolate)"],[17576,12,""],[17586,1,""]],"_dtSpan":[309987,310014]},{"parents":[296],"numChildren":2,"agent":27,"time":"1970-01-01T00:00:00Z","patches":[[34296,9,""],[34297,1,""],[34329,1,""],[34330,5,""],[34374,1,""],[34871,9,""],[34872,1,""],[34904,1,""],[34905,5,""],[34949,1,""]],"_dtSpan":[310014,310048]},{"parents":[299,300],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[80653,0,"(node_isolate)"],[17471,5,""],[17471,0,"Setup"],[17482,0,"U"],[17484,0,"e"],[62265,0,"set"],[62269,4,""],[62269,0,"p"],[62276,0,"U"],[62278,0,"e"],[62282,5,""],[62282,0,"Setup"],[62293,0,"U"],[62295,0,"e"],[3794,7,""],[58025,0,"&"],[58046,3,""],[58046,0,"["],[58048,0,"]"]],"_dtSpan":[310048,310109]},{"parents":[300],"numChildren":2,"agent":130,"time":"1970-01-01T00:00:00Z","patches":[[56089,0,"  versions->Set(String::NewSymbol(\"modules\"),\n                String::New(NODE_STRINGIFY(NODE_MODULE_VERSION)));\n"]],"_dtSpan":[310109,310222]},{"parents":[301,302],"numChildren":1,"agent":107,"time":"1970-01-01T00:00:00Z","patches":[[4677,0,"static uv_async_t emit_debug_enabled_async;\n"],[64696,0,"if (strstr(arg, \"--debug-port=\") == arg) {\n    p = 1 + strchr(arg, '=');\n    debug_port = atoi(p);\n  } else {\n    "],[64836,0,"  "],[64878,0,"  "],[64911,0,"  "],[64923,0,"  "],[64967,0,"  "],[64979,0,"  "],[65034,0,"  "],[65067,0,"  "],[65099,0,"  "],[65125,0,"  "],[65176,0,"  "],[65208,0,"  "],[65234,0,"  }\n  "],[66805,0,"\n"],[69620,0,"// Called from the main thread\nstatic void EmitDebugEnabledAsyncCallback(uv_async_t* handle, int status) {\n  HandleScope handle_scope(node_isolate);\n  Local<Object> obj = Object::New();\n  obj->Set(String::New(\"cmd\"), String::New(\"NODE_DEBUG_ENABLED\"));\n  Local<Value> args[] = { String::New(\"internalMessage\"), obj };\n  MakeCallback(process, \"emit\", ARRAY_SIZE(args), args);\n}\n\n\n// Called from the signal handler (unix) or off-thread (windows)\nstatic void EmitDebugEnabled() {\n  uv_async_init(uv_default_loop(),\n                &emit_debug_enabled_async,\n                EmitDebugEnabledAsyncCallback);\n  uv_unref((uv_handle_t*) &emit_debug_enabled_async);\n  uv_async_send(&emit_debug_enabled_async);\n}\n\n\n"],[71251,0,"// Do not emit _debug_enabled when debugger is enabled before starting\n  // the main process (i.e. when called via `node --debug`)\n  if (!process.IsEmpty())\n    EmitDebugEnabled();\n\n  "],[80375,35,""],[80376,5,""],[80377,30,""],[80378,4,""],[80379,1,""],[80380,18,""],[80381,56,""],[80466,4,""],[80466,0,"M"],[80468,17,""],[80468,0,"k"],[80470,5,""],[80474,0,"back"],[80486,2,""],[80488,1,""],[80488,0,"\"emit\""],[80496,0,"ARRAY_SIZE("],[80512,6,""],[80512,0,","],[80514,6,""],[80515,6,""],[80515,0,"rg"],[80518,40,""],[80520,4,""],[70025,0,"watc"],[70030,4,""],[70033,18,""],[70033,0,"callb"],[70039,11,""],[70039,0,"ck"],[70085,16,""],[70086,45,""],[70087,73,""],[70088,18,""],[70089,4,""],[70090,24,""],[70417,196,""],[70868,0,"NODE"],[70873,5,""],[70873,0,"DEBUG"],[70879,7,""],[70879,0,"ENABLED"],[76806,0,"init async debug messages dispatching\n  uv_async_init(uv_default_loop(),\n                &dispatch_debug_messages_async,\n                DispatchDebugMessagesAsyncCallback);\n  uv_unref(reinterpret_cast<uv_handle_t*>(&dispatch_debug_messages_async));\n\n  // init async NODE_DEBUG_ENABLED emitter\n  uv_async_init(uv_default_loop(),\n                &emit_debug_enabled_async,\n                EmitDebugEnabledAsyncCallback);\n  uv_unref(reinterpret_cast<uv_handle_t*>(&emit_debug_enabled_async));\n\n  // "]],"_dtSpan":[310222,312511]},{"parents":[303],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[17625,0,"node_isolate"],[18333,0,"node_isolate"],[60490,0,"node_isolate"]],"_dtSpan":[312511,312547]},{"parents":[302],"numChildren":2,"agent":192,"time":"1970-01-01T00:00:00Z","patches":[[1199,0,"#include \"string_bytes.h\"\n"],[23705,51,""],[23707,1,""],[23713,19,""],[23714,30,""],[23714,0,"S"],[23716,4,""],[23717,32,""],[23718,6,""],[23719,4,""],[23719,0,"gBy"],[23723,8,""],[23724,4,""],[23725,8,""],[23728,17,""],[23732,33,""],[23733,15,""],[23733,0,"("],[23752,9,""],[23763,1,""],[23763,0,","],[23765,1,""],[23766,23,""],[23767,1,""],[23768,3,""],[23769,15,""],[23773,3,""],[23774,7,""],[23775,1,""],[23776,1,""],[23777,2,""],[23778,1,""],[23779,1,""],[23780,4,""],[23781,4,""],[23782,2,""],[23788,2,""],[23789,3,""],[23790,2,""],[23791,3,""],[23792,9,""],[23793,4,""],[23794,1,""],[23795,12,""],[23797,5,""],[23797,0,","],[23804,81,""],[23805,6,""],[23809,6,""],[23810,2,""],[23811,11,""],[23812,2,""],[23813,4,""],[23814,3,""],[23815,23,""],[23819,6,""],[23820,20,""],[23822,3,""],[23824,2,""],[23825,4,""],[23826,2,""],[23827,5,""],[23836,49,""],[23837,9,""],[23839,29,""],[24165,1,""],[24166,79,""],[24169,2,""],[24172,5,""],[24173,46,""],[24174,1,""],[24175,2,""],[24176,13,""],[24182,49,""],[24182,0,"By"],[24185,7,""],[24186,1,""],[24187,20,""],[24187,0,"::"],[24190,16,""],[24190,0,"iz"],[24193,4,""],[24194,10,""],[24194,0,"va"],[24197,5,""],[24197,0,","],[24199,1,""],[24207,7,""],[24208,25,""],[24209,1,""],[24210,24,""],[24491,292,""],[24589,37,""],[24631,1,""],[24632,4,""],[24633,8,""],[24634,7,""],[24635,9,""],[24636,22,""],[24637,3,""],[24638,11,""],[24639,1,""],[24640,89,""],[24640,0,"S"],[24642,9,""],[24643,31,""],[24644,22,""],[24646,79,""],[24646,0,"B"],[24648,90,""],[24649,7,""],[24650,13,""],[24651,35,""],[24653,170,""],[24658,4,""],[24670,6,""],[24672,50,""],[24672,0,"va"],[24675,13,""],[24675,0,","],[24677,1,""],[24685,36,""],[24687,26,""],[24688,60,""],[24690,274,""],[24690,0,"L"],[24692,66,""]],"_dtSpan":[312547,315009]},{"parents":[304,305],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[24047,14,""],[24070,12,""],[24823,59,""],[24824,1,""],[24827,2,""],[24828,16,""],[24829,2,""],[24830,4,""],[24831,20,""],[24832,52,""],[24835,6,""],[24836,12,""],[24881,33,""],[24882,66,""]],"_dtSpan":[315009,315308]},{"parents":[306],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[79167,10,""],[79167,0,"Local"],[79205,0,"node_isolate"],[80006,58,""]],"_dtSpan":[315308,315393]},{"parents":[307],"numChildren":1,"agent":163,"time":"1970-01-01T00:00:00Z","patches":[[2310,8,""],[2311,0,"rovider"]],"_dtSpan":[315393,315408]},{"parents":[308],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[4870,13,""],[76570,1,""],[76570,0,"reinterpret_cast<"],[76599,2,""],[76599,0,">("],[76626,0,")"],[77126,1,""],[77127,0,"reinterpret_cast<"],[77156,1,""],[77156,0,">("],[77174,0,")"]],"_dtSpan":[315408,315466]},{"parents":[309],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[21069,28,""],[4269,18,""],[19921,22,""],[19922,6,""],[60034,1,""],[60034,0,"2"],[3940,25,""],[3947,19,""],[3948,27,""],[4705,17,""],[4706,7,""],[4707,54,""],[4708,450,""],[4709,6,""],[4710,39,""],[4711,18,""],[4713,46,""],[4714,71,""],[4718,1,""],[4721,68,""],[4722,1,""],[4728,14,""],[4729,68,""],[4730,80,""],[57531,67,""]],"_dtSpan":[315466,316620]},{"parents":[310],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[2560,11,""],[2560,0,"QUEUE"],[2630,11,""],[2630,0,"QUEUE"],[27974,11,""],[27974,0,"QUEUE"],[28007,3,""],[28007,0,"QUEUE"],[28013,13,""],[28013,0,"FOREACH"],[28498,11,""],[28498,0,"QUEUE"],[28582,3,""],[28582,0,"QUEUE"],[28588,13,""],[28588,0,"FOREACH"]],"_dtSpan":[316620,316740]},{"parents":[311],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[3462,0,"// Essential for node_wrap.h\nPersistent<FunctionTemplate> pipeConstructorTmpl;\nPersistent<FunctionTemplate> ttyConstructorTmpl;\nPersistent<FunctionTemplate> tcpConstructorTmpl;\nPersistent<FunctionTemplate> udpConstructorTmpl;\n"]],"_dtSpan":[316740,316966]},{"parents":[312],"numChildren":1,"agent":93,"time":"1970-01-01T00:00:00Z","patches":[[1948,0," "],[1952,1,""],[1952,0,"ined("],[1966,0,") && !defined(__ANDROID__)"],[31162,0," "],[31166,1,""],[31166,0,"ined("],[31180,0,") && !defined(__ANDROID__)"],[36838,0," && !defined(__ANDROID__)"],[58040,0," "],[58044,1,""],[58044,0,"ined("],[58058,0,") && !defined(__ANDROID__)"],[58448,0," && !defined(__ANDROID__)"]],"_dtSpan":[316966,317115]},{"parents":[313],"numChildren":1,"agent":106,"time":"1970-01-01T00:00:00Z","patches":[[18178,0,"  try_catch.SetVerbose(true);\n"],[18628,33,""],[18771,31,""],[18990,16,""],[18991,17,""],[19229,31,""],[19931,0,"  try_catch.SetVerbose(true);\n"],[20055,16,""],[20056,15,""],[20293,16,""],[20294,15,""],[23934,1,""],[23935,4,""],[23935,0,"Handle<Mess"],[23947,3,""],[23947,0,"ge>"],[23951,6,""],[23951,0,"mess"],[23956,3,""],[23956,0,"ge"],[24269,35,""],[24270,1,""],[24275,50,""],[26312,4,""],[26312,0,"H"],[26314,3,""],[26314,0,"ndle<Value>"],[26326,2,""],[26326,0,"e"],[26328,7,""],[26330,3,""],[26330,0,"Hand"],[26335,0,"e<Message>"],[26346,0,"mes"],[26350,7,""],[26350,0,"ag"],[26395,15,""],[26416,0,"message);\n\n  Local<Value> "],[26444,1,""],[26444,0,"ace"],[26448,0,"value(er->ToObje"],[26465,1,""],[26466,0,"()->Get(String::New(\"sta"],[26491,1,""],[26491,0,"k\"))"],[26497,1,""],[26526,3,""],[26527,1,""],[26528,4,""],[26528,0,"e_v"],[26532,6,""],[26532,0,"lu"],[26535,2,""],[26625,3,""],[26626,1,""],[26627,4,""],[26627,0,"e_v"],[26631,6,""],[26631,0,"lu"],[26634,2,""],[26883,16,""],[26884,2,""],[26885,1,""],[26886,23,""],[26887,3,""],[27386,0,"\nstatic void ReportException(TryCatch& try_catch) {\n  ReportException(try_catch.Exception(), try_catch.Message());\n}\n\n\n"],[27690,0,"// try_catch must be nonverbose to disable FatalException() handler,\n  // we will handle exceptions ourself.\n  try_catch.SetVerbose(false);\n\n  "],[27954,6,""],[28069,6,""],[42900,0,"\n"],[42921,4,""],[42921,0,"Handle<V"],[42930,3,""],[42930,0,"lue>"],[42935,2,""],[42935,0,"er"],[42938,3,""],[42938,0,"or, H"],[42944,3,""],[42944,0,"ndle<Message> message"],[43365,1,""],[43365,0,"e"],[43367,7,""],[43367,0,"ror"],[43372,3,""],[43372,0,"messag"],[43463,2,""],[43463,0,"TryCat"],[43470,0,"h f"],[43474,3,""],[43474,0,"t"],[43477,12,""],[43477,0,"_"],[43487,1,""],[43487,0,";\n\n  // Do not call Fatal"],[43521,4,""],[43522,0,"when"],[43527,3,""],[43527,0,"_f"],[43530,3,""],[43530,0,"t"],[43533,1,""],[43533,0,"Exc"],[43537,1,""],[43537,0,"ption"],[43543,0,"h"],[43545,10,""],[43545,0,"ndl"],[43550,0," th"],[43555,5,""],[43555,0,"ws"],[43559,9,""],[43575,0,".SetVerbose(false)"],[43714,16,""],[43714,0,"1"],[43717,1,""],[43717,0,"&e"],[43720,2,""],[43720,0,"ror"],[43858,6,""],[43940,0,"error, message);\n    exit(8);\n  }\n}\n\n\nvoid Fa"],[43986,0,"alException(T"],[44001,0,"Catch& try"],[44017,1,""],[44017,0,") {\n"],[44022,0," HandleScope scope(node_isola"],[44052,2,""],[44058,0,"// TODO do"],[44069,0,"not call"],[44078,1,""],[44078,0,"FatalE"],[44085,0,"ception "],[44094,0,"f try_ca"],[44103,0,"ch is verbose\n  // "],[44123,0,"requires V"],[44134,0," API to expose getter for try_catch.is_verbose_"],[44182,1,""],[44185,0,"FatalException(try_catch.Exception(), try_catch.Message());\n"],[44247,0,"\n\nvoid OnMessage(Handle<Message> message, Handle<Value> error) {\n  // The current version of V8 sends messages for errors only\n  // (thus `error` is always set).\n  FatalException(error, message);\n"],[60543,0,"// Disable verbose mode to stop FatalException() handler from trying\n  // to handle the exception. Errors this early in the start-up phase\n  // are not safe to ignore.\n  try_catch.SetVerbose(false);\n\n  "],[60926,6,""],[61773,4,""],[61773,0,"// En"],[61779,0,"b"],[61781,0,"e hand"],[61788,1,""],[61788,0,"in"],[61791,1,""],[61791,0," "],[61793,1,""],[61793,0,"f unc"],[61799,0,"ught exceptions\n  // (Fata"],[61826,0,"Exception()"],[61839,2,""],[61839,0,"break on"],[61848,0,"unc"],[61852,1,""],[61852,0,"ught exception in debug"],[61876,1,""],[61876,0,"er"],[61879,1,""],[61880,0,"  //"],[61887,0,"// This "],[61896,1,""],[61896,0,"s not"],[61902,1,""],[61902,0,"s"],[61905,2,""],[61905,0,"i"],[61907,1,""],[61908,0,"ly ne"],[61914,4,""],[61914,0,"es"],[61917,1,""],[61918,3,""],[61918,0,"ry since i"],[61929,3,""],[61929,0,"'s"],[61932,0,"almost"],[61939,1,""],[61939,0,"impossible"],[61952,0,"//"],[61955,0,"to"],[61958,1,""],[61960,0,"t"],[61962,2,""],[61962,0,"ch the debugger fast enought to break on e"],[62012,1,""],[62012,0,"\n  // "],[62019,0,"h"],[62021,0,"own during process startup.\n  tr"],[62060,0,".SetVerbose(true"],[62079,0,"\n  f->Call(global,"],[62098,0,"1,"],[62101,1,""],[62101,0,"args);"],[76886,0,"  V8::AddMessageListener(OnMessage);\n"]],"_dtSpan":[317115,319271]},{"parents":[314],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[42901,0,"NO_RETURN void FatalError(const char* location, const char* message) {\n  OnFatalError(location, message);\n  // to supress compiler warning\n  abort();\n}\n\n\n"]],"_dtSpan":[319271,319425]},{"parents":[305],"numChildren":2,"agent":17,"time":"1970-01-01T00:00:00Z","patches":[[18129,0,".Dispose();  // Possibly already set by MakeCallback().\n  process_tickCallback"]],"_dtSpan":[319425,319503]},{"parents":[315,316],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[17502,0,"node_isolate"],[17521,7,""],[17521,0,"Ma"],[17525,3,""],[17525,0,"b"],[17527,3,""],[2385,48,""],[2386,1,""],[2542,0,"using v8::Array;\nusing v8::Boolean;\nusing v8::Context;\nusing v8::Exception;\nusing v8::Function;\nusing v8::FunctionCallbackInfo;\nusing v8::FunctionTemplate;\nusing v8::HandleScope;\nusing v8::HeapStatistics;\nusing v8::Integer;\nusing v8::Isolate;\nusing v8::Locker;\nusing v8::Message;\nusing v8::Number;\nusing v8::Object;\nusing v8::ObjectTemplate;\nusing v8::Persistent;\nusing v8::PropertyCallbackInfo;\nusing v8::ResourceConstraints;\nusing v8::SetResourceConstraints;\nusing v8::ThrowException;\nusing v8::TryCatch;\nusing v8::Uint32;\nusing v8::V8;\nusing v8::Value;\nusing v8::kExternalUnsignedIntArray;\n\n"],[3294,1,""],[3294,0,"Cach"],[3299,8,""],[3299,0,"d"],[3325,7,""],[3325,0,"Cach"],[3330,2,""],[3330,0,"d"],[3414,0,"_p"],[3459,11,""],[3459,0,"Callback"],[3487,3,""],[3487,0,"Obje"],[3493,3,""],[3495,9,""],[3495,0,"bind"],[3500,0,"ng_"],[3504,6,""],[3506,1,""],[3506,0,"he"],[3509,1,""],[3528,0,"Array> module_load_list;\n\nstatic Cached<"],[3600,7,""],[3600,0,"Cach"],[3605,2,""],[3605,0,"d"],[3636,7,""],[3636,0,"Cach"],[3641,2,""],[3641,0,"d"],[3674,7,""],[3674,0,"Cach"],[3679,2,""],[3679,0,"d"],[3712,1,""],[3712,0,"Cach"],[3717,8,""],[3717,0,"d"],[3748,7,""],[3748,0,"Cach"],[3753,2,""],[3753,0,"d"],[3782,7,""],[3782,0,"Cach"],[3787,2,""],[3787,0,"d"],[3823,1,""],[3823,0,"Cach"],[3828,8,""],[3828,0,"d"],[3864,7,""],[3864,0,"Cach"],[3869,2,""],[3869,0,"d"],[3911,1,""],[3911,0,"Cach"],[3916,8,""],[3916,0,"d"],[3947,7,""],[3947,0,"Cach"],[3952,2,""],[3952,0,"d"],[3982,1,""],[3982,0,"Cach"],[3987,8,""],[3987,0,"d"],[4124,2,""],[4124,0,"cp"],[4173,6,""],[4174,44,""],[4174,0,"y"],[4779,1,""],[4779,0,"Cach"],[4784,8,""],[4784,0,"d"],[5674,6,""],[5675,5,""],[5675,0,"tring::New"],[5736,0,"_p"],[12185,6,""],[12186,5,""],[12186,0,"tring::New"],[12228,0,"String::"],[12237,11,""],[12237,0,"ew"],[12271,6,""],[12272,5,""],[12272,0,"tring::New"],[12310,0,"String::"],[12319,11,""],[12319,0,"ew"],[13544,6,""],[13545,5,""],[13545,0,"tring::New"],[13587,0,"String::"],[13596,11,""],[13596,0,"ew"],[13630,0,"String::"],[13639,11,""],[13639,0,"ew"],[13669,6,""],[13670,5,""],[13670,0,"tring::New"],[16056,0,"String::"],[16065,11,""],[16065,0,"ew"],[16099,6,""],[16100,5,""],[16100,0,"tring::New"],[16142,6,""],[16143,5,""],[16143,0,"tring::New"],[16181,0,"String::"],[16190,11,""],[16190,0,"ew"],[16772,3,""],[16772,0,"voi"],[16776,7,""],[16776,0," S"],[16779,10,""],[16780,1,""],[16781,2,""],[16781,0,"pD"],[16784,3,""],[16785,2,""],[16786,7,""],[16787,0,"nU"],[16790,1,""],[16791,0,"(co"],[16795,0,"s"],[16797,1,""],[16797,0," "],[16806,4,""],[16806,0,"Cal"],[16810,0,"b"],[16812,45,""],[16813,1,""],[16813,0,"kI"],[16816,49,""],[16816,0,"f"],[16818,14,""],[16825,0,"&"],[16830,11,""],[16831,10,""],[16831,0,")"],[16833,16,""],[16833,0,"{"],[16838,55,""],[16839,2,""],[16842,1,""],[16844,1,""],[16845,16,""],[16846,99,""],[16846,0,"_"],[16848,16,""],[16853,1,""],[16854,7,""],[16854,0,")"],[16856,1,""],[16857,3,""],[16858,1,""],[16859,4,""],[16859,0,"u"],[16861,5,""],[16861,0,"n;"],[16899,1,""],[16900,2,""],[16901,1,""],[16914,2,""],[16915,0,"="],[16917,0,"true;\n"],[16925,1,""],[16925,0,"Local<Obj"],[16935,0,"c"],[16937,1,""],[16937,0,"> p"],[16941,1,""],[16941,0,"ocess"],[16947,3,""],[16947,0,"= Local<Obj"],[16959,3,""],[16959,0,"ct>::N"],[16966,1,""],[16966,0,"w"],[16980,4,""],[16980,0,","],[16982,7,""],[16982,0,"pr"],[16985,4,""],[16985,0,"ces"],[16989,7,""],[16989,0,"_p)"],[17586,53,""],[17587,1,""],[17595,2,""],[17596,27,""],[17596,0,"R"],[17598,3,""],[17599,1,""],[17600,7,""],[17601,9,""],[17619,34,""],[17957,6,""],[17958,5,""],[17958,0,"tring::New"],[17997,0,"String::"],[18006,11,""],[18006,0,"ew"],[18040,6,""],[18041,5,""],[18041,0,"tring::New"],[19195,0,"Local<Object> process = Local<Object>::New(node_isolate, process_p);\n  Local<Function> fn = Local<Function>::New(node_isolate, "],[19342,0,");\n  fn"],[19682,0,"  Local<Object> process = Local<Object>::New(node_isolate, process_p);\n"],[20033,46,""],[20058,4,""],[20058,0,".R"],[20061,3,""],[20062,1,""],[20063,1,""],[20064,15,""],[20081,0,"_v.As<Function>()"],[20408,0,"Local<Function> fn = Local<Function>::New(node_isolate, "],[20484,0,");\n  fn"],[21401,1,""],[21404,0,"Local<Object> proce"],[21424,0,"s = Local<Objec"],[21440,0,">::New(node_isol"],[21458,1,""],[21458,0,"e, pro"],[21465,2,""],[21466,1,""],[21467,1,""],[21468,0,"_p);\n\n  s"],[21478,2,""],[21478,0,"a"],[21480,0,"ic Cached"],[21563,0,"String::"],[21572,11,""],[21572,0,"ew"],[28457,3,""],[28457,0,"voi"],[28461,9,""],[28486,3,""],[28486,0,"F"],[28488,2,""],[28489,0,"c"],[28491,1,""],[28491,0,"ionCallbackInfo<Value>"],[28756,3,""],[28756,0,"persist"],[28764,1,""],[28764,0,"n"],[28766,1,""],[28766,0,"()"],[28817,1,""],[28817,0,"()"],[28829,0,"a"],[28831,0,"gs.G"],[28837,0,"Ret"],[28843,5,""],[28843,0,"Valu"],[28848,0,"()"],[28851,4,""],[28851,0,"S"],[28853,0,"t"],[29004,3,""],[29004,0,"voi"],[29008,9,""],[29032,3,""],[29032,0,"F"],[29034,2,""],[29035,0,"c"],[29037,1,""],[29037,0,"ionCallbackInfo<Value>"],[29345,3,""],[29345,0,"p"],[29347,1,""],[29347,0,"rsis"],[29352,1,""],[29352,0,"ent()"],[29425,4,""],[29425,0,"Obj"],[29429,0,"ct"],[29436,0,"ect"],[29451,1,""],[29451,0,"();\n    Local<Value> owner = object"],[29513,2,""],[29513,0,"wner"],[29535,2,""],[29535,0,"wner"],[29542,4,""],[29548,1,""],[29569,2,""],[29569,0,"wner"],[29583,0,"a"],[29585,0,"gs.GetR"],[29597,5,""],[29597,0,"Valu"],[29602,0,"()"],[29605,4,""],[29605,0,"S"],[29607,0,"t"],[29626,3,""],[29626,0,"voi"],[29630,9,""],[29643,3,""],[29643,0,"F"],[29645,2,""],[29646,0,"c"],[29648,1,""],[29648,0,"ionCallbackInfo<Value>"],[29685,8,""],[29686,1,""],[29687,13,""],[29688,12,""],[29702,3,""],[29702,0,"voi"],[29706,9,""],[29719,3,""],[29719,0,"F"],[29721,2,""],[29722,0,"c"],[29724,1,""],[29724,0,"ionCallbackInfo<Value>"],[29861,21,""],[29864,4,""],[29865,8,""],[29882,0,";  // FIXME(bnoordhuis"],[29905,2,""],[29905,0," ThrowTypeError?"],[30037,10,""],[30067,1,""],[30074,35,""],[30085,3,""],[30085,0,"voi"],[30089,9,""],[30100,3,""],[30100,0,"F"],[30102,2,""],[30103,0,"c"],[30105,1,""],[30105,0,"ionCallbackInfo<Value>"],[30427,10,""],[30455,1,""],[30541,0,"a"],[30543,0,"gs.GetR"],[30555,5,""],[30555,0,"Valu"],[30560,0,"()"],[30563,4,""],[30563,0,"S"],[30565,0,"t"],[30584,3,""],[30584,0,"voi"],[30588,9,""],[30601,3,""],[30601,0,"F"],[30603,2,""],[30604,0,"c"],[30606,1,""],[30606,0,"ionCallbackInfo<Value>"],[30676,2,""],[30677,1,""],[30678,5,""],[30679,0,"32_t"],[30772,1,""],[30773,0,"static_cast<"],[30791,1,""],[30791,0,">("],[30797,0,")"],[30876,21,""],[30886,23,""],[30932,1,""],[30933,1,""],[31256,21,""],[31264,21,""],[31265,8,""],[31288,2,""],[31407,0,"a"],[31409,0,"gs.GetR"],[31421,5,""],[31421,0,"Valu"],[31426,0,"()"],[31429,4,""],[31429,0,"S"],[31431,4,""],[31432,7,""],[31435,5,""],[31436,10,""],[33234,3,""],[33234,0,"voi"],[33238,9,""],[33252,3,""],[33252,0,"F"],[33254,2,""],[33255,0,"c"],[33257,1,""],[33257,0,"ionCallbackInfo<Value>"],[33291,1,""],[33292,10,""],[33292,0,"rg"],[33295,3,""],[33295,0,".G"],[33298,11,""],[33299,0,"R"],[33301,6,""],[33301,0,"tur"],[33305,2,""],[33305,0,"Val"],[33309,6,""],[33310,4,""],[33312,16,""],[33313,4,""],[33313,0,"S"],[33315,0,"t"],[33317,4,""],[33319,7,""],[33319,0,"t"],[33323,14,""],[33323,0,"("],[33339,3,""],[33339,0,"voi"],[33343,9,""],[33357,3,""],[33357,0,"F"],[33359,2,""],[33360,0,"c"],[33362,1,""],[33362,0,"ionCallbackInfo<Value>"],[33396,1,""],[33397,10,""],[33397,0,"rg"],[33400,8,""],[33400,0,".G"],[33403,6,""],[33404,17,""],[33404,0,"R"],[33407,12,""],[33410,5,""],[33410,0,"Valu"],[33415,0,"()"],[33418,4,""],[33418,0,"S"],[33420,0,"t"],[33422,4,""],[33424,7,""],[33424,0,"t"],[33428,14,""],[33428,0,"("],[33444,3,""],[33444,0,"voi"],[33448,9,""],[33462,3,""],[33462,0,"F"],[33464,2,""],[33465,0,"c"],[33467,1,""],[33467,0,"ionCallbackInfo<Value>"],[33836,10,""],[33865,1,""],[33871,35,""],[33883,3,""],[33883,0,"voi"],[33887,9,""],[33901,3,""],[33901,0,"F"],[33903,2,""],[33904,0,"c"],[33906,1,""],[33906,0,"ionCallbackInfo<Value>"],[34274,10,""],[34303,1,""],[34310,35,""],[34321,3,""],[34321,0,"voi"],[34325,9,""],[34342,3,""],[34342,0,"F"],[34344,2,""],[34345,0,"c"],[34347,1,""],[34347,0,"ionCallbackInfo<Value>"],[34492,10,""],[34524,1,""],[34673,10,""],[34706,1,""],[35088,0,"a"],[35090,0,"gs.GetR"],[35102,5,""],[35102,0,"Valu"],[35107,0,"()"],[35110,4,""],[35110,0,"S"],[35112,0,"t"],[35139,3,""],[35139,0,"voi"],[35143,9,""],[35160,3,""],[35160,0,"F"],[35162,2,""],[35163,0,"c"],[35165,1,""],[35165,0,"ionCallbackInfo<Value>"],[35766,10,""],[35800,1,""],[35805,35,""],[35817,3,""],[35817,0,"voi"],[35821,9,""],[35839,3,""],[35839,0,"F"],[35841,2,""],[35842,0,"c"],[35844,1,""],[35844,0,"ionCallbackInfo<Value>"],[36777,10,""],[36811,1,""],[36818,35,""],[36869,6,""],[36869,0,"oi"],[36872,13,""],[36884,7,""],[36884,0,"F"],[36886,2,""],[36887,0,"c"],[36889,1,""],[36889,0,"ionCallbackInfo<Value>"],[36985,1,""],[36986,33,""],[37000,3,""],[37000,0,"voi"],[37004,9,""],[37018,3,""],[37018,0,"F"],[37020,2,""],[37021,0,"c"],[37023,1,""],[37023,0,"ionCallbackInfo<Value>"],[37107,1,""],[37109,14,""],[37109,0,"if"],[37112,0,"("],[37131,12,""],[37146,3,""],[37147,3,""],[37153,24,""],[37157,5,""],[37157,0,"a"],[37159,0,"gs.G"],[37165,0,"Ret"],[37171,8,""],[37171,0,"Va"],[37174,2,""],[37174,0,"u"],[37177,9,""],[37177,0,").S"],[37181,1,""],[37181,0,"t"],[37207,1,""],[37215,6,""],[37215,0,"oi"],[37218,13,""],[37237,7,""],[37237,0,"F"],[37239,2,""],[37240,0,"c"],[37242,1,""],[37242,0,"ionCallbackInfo<Value>"],[37416,10,""],[37462,1,""],[37556,6,""],[37557,5,""],[37557,0,"tring::New"],[37600,0,"String::"],[37609,11,""],[37609,0,"ew"],[37649,6,""],[37650,5,""],[37650,0,"tring::New"],[38136,0,"a"],[38138,0,"gs.G"],[38144,0,"Ret"],[38150,5,""],[38150,0,"Valu"],[38155,0,"()"],[38158,4,""],[38158,0,"S"],[38160,0,"t"],[38173,3,""],[38173,0,"voi"],[38177,9,""],[38189,3,""],[38189,0,"F"],[38191,2,""],[38192,0,"c"],[38194,1,""],[38194,0,"ionCallbackInfo<Value>"],[38307,21,""],[38311,12,""],[38327,1,""],[38328,1,""],[38494,0,"a"],[38496,0,"gs.GetR"],[38508,5,""],[38508,0,"Valu"],[38513,0,"()"],[38516,4,""],[38516,0,"S"],[38518,3,""],[38519,9,""],[38522,14,""],[38523,1,""],[38528,35,""],[38954,3,""],[38954,0,"voi"],[38958,9,""],[38972,7,""],[38972,0,"F"],[38974,2,""],[38975,0,"c"],[38977,1,""],[38977,0,"ionCallbackInfo<Value>"],[39170,16,""],[39170,0,"r"],[39172,1,""],[39173,2,""],[39173,0,"ur"],[39177,9,""],[39177,0,"Thr"],[39181,3,""],[39181,0,"w"],[39191,23,""],[39239,41,""],[39650,1,""],[39653,0,"a"],[39655,0,"gs.GetR"],[39667,5,""],[39667,0,"Valu"],[39672,0,"()"],[39675,4,""],[39675,0,"S"],[39677,0,"t"],[39857,3,""],[39857,0,"voi"],[39861,9,""],[39875,7,""],[39875,0,"F"],[39877,2,""],[39878,0,"c"],[39880,1,""],[39880,0,"ionCallbackInfo<Value>"],[40038,16,""],[40038,0,"r"],[40040,1,""],[40041,2,""],[40041,0,"ur"],[40044,2,""],[40045,7,""],[40045,0,"Thr"],[40049,3,""],[40049,0,"w"],[40054,13,""],[40055,8,""],[40099,39,""],[40264,0,"String::"],[40273,11,""],[40273,0,"ew"],[40601,7,""],[40645,0,"  return;\n  "],[41285,10,""],[41285,0,"r"],[41287,7,""],[41288,2,""],[41288,0,"ur"],[41292,17,""],[41292,0,"Thr"],[41296,3,""],[41296,0,"w"],[41303,12,""],[41319,39,""],[42182,34,""],[42746,0,"String::"],[42755,11,""],[42755,0,"ew"],[42787,0,"Object> process = Local<Object>::New(node_isolate, process_p);\n  Local<"],[44189,5,""],[44191,2,""],[44191,0,"a"],[44193,5,""],[44193,0,"i"],[44195,2,""],[44196,1,""],[44196,0,"void B"],[44208,3,""],[44208,0,"("],[44210,9,""],[44210,0,"on"],[44214,1,""],[44214,0," Fu"],[44218,0,"c"],[44220,4,""],[44220,0,"ionC"],[44225,7,""],[44226,2,""],[44227,13,""],[44227,0,"b"],[44229,2,""],[44230,3,""],[44230,0,"kI"],[44233,3,""],[44233,0,"fo"],[44242,24,""],[44401,1,""],[44402,2,""],[44403,9,""],[44403,0,"Lo"],[44407,0,"l<Obje"],[44414,8,""],[44415,9,""],[44415,0,">"],[44417,9,""],[44425,10,""],[44425,0,"Local"],[44458,1,""],[44459,2,""],[44459,0,"inding_"],[44467,4,""],[44467,0,"ach"],[44471,2,""],[44472,1,""],[44476,5,""],[44506,8,""],[44542,8,""],[44578,0,"a"],[44580,0,"gs.G"],[44586,0,"Ret"],[44592,5,""],[44592,0,"Valu"],[44597,0,"()"],[44600,4,""],[44600,0,"S"],[44602,0,"t"],[44616,0,"  return;\n  "],[44744,0,"\n"],[44747,0,"Local<Array> mod"],[44764,1,""],[44764,0,"les = Local<Array>::New("],[44789,3,""],[44789,0,"ode"],[44793,0,"isola"],[44799,4,""],[44799,0,"e,"],[44818,0,");\n  uint32_t l = modules"],[44863,8,""],[44864,1,""],[45117,8,""],[45258,8,""],[45398,8,""],[45456,10,""],[45457,11,""],[45462,12,""],[45478,1,""],[45479,1,""],[45488,0,"a"],[45490,0,"gs.GetR"],[45502,5,""],[45502,0,"Valu"],[45507,0,"()"],[45510,4,""],[45510,0,"S"],[45512,0,"t"],[45535,3,""],[45535,0,"voi"],[45539,9,""],[45614,9,""],[45620,6,""],[45620,0,"Pr"],[45623,0,"pe"],[45626,0,"tyCallback"],[45640,0,"<Value>"],[45762,1,""],[45762,0,"info.GetR"],[45776,5,""],[45776,0,"Valu"],[45781,0,"()"],[45784,4,""],[45784,0,"S"],[45786,0,"t"],[45957,3,""],[45957,0,"Prop"],[45962,3,""],[45963,0,"tyCallback"],[45977,0,"<void>"],[46136,3,""],[46136,0,"voi"],[46140,9,""],[46175,4,""],[46197,5,""],[46203,3,""],[46203,0,"Prop"],[46208,3,""],[46209,0,"tyCallback"],[46223,0,"<Value>"],[46385,2,""],[46385,0,"inf"],[46389,2,""],[46390,1,""],[46390,0,"GetReturnVa"],[46402,2,""],[46402,0,"ue().S"],[46409,0,"t"],[47018,2,""],[47018,0,"inf"],[47022,1,""],[47022,0,".GetR"],[47028,2,""],[47028,0,"turnVa"],[47035,2,""],[47035,0,"ue().S"],[47042,0,"t"],[47044,0,"\n        "],[47164,1,""],[47164,0,"info.GetR"],[47178,5,""],[47178,0,"Valu"],[47183,0,"()"],[47186,4,""],[47186,0,"S"],[47188,0,"t"],[47190,0,"\n      "],[47250,3,""],[47250,0,"voi"],[47254,9,""],[47289,2,""],[47311,7,""],[47331,1,""],[47353,8,""],[47359,6,""],[47359,0,"Pr"],[47362,0,"pe"],[47365,0,"tyCallback"],[47379,0,"<Value>"],[47891,1,""],[47891,0,"info.G"],[47899,0,"Ret"],[47905,5,""],[47905,0,"Valu"],[47910,0,"()"],[47913,4,""],[47913,0,"S"],[47915,0,"t"],[47936,3,""],[47936,0,"voi"],[47940,11,""],[47974,4,""],[47995,7,""],[48001,3,""],[48001,0,"Prop"],[48006,3,""],[48007,0,"tyCallback"],[48021,0,"<Integer>"],[48075,0,"  int32_t rc = -1;  // Not found unless proven otherwise.\n"],[48204,5,""],[48205,5,""],[48206,3,""],[48207,25,""],[48208,17,""],[48208,0,"="],[48210,1,""],[48210,0,"0;"],[48412,0,"rc = 0;\n    "],[48534,5,""],[48534,0,"c ="],[48539,0,"tatic_"],[48546,7,""],[48546,0,"a"],[48548,3,""],[48548,0,"t<i"],[48553,9,""],[48553,0,"32_t>"],[48571,0,")"],[48574,1,""],[48586,27,""],[48586,0,"static_cast<int32_t>("],[48621,0,")"],[48624,1,""],[48625,21,""],[48636,6,""],[48636,0,"static_cast<int32_t>("],[48669,52,""],[48670,1,""],[48677,7,""],[48678,4,""],[48680,55,""],[48682,4,""],[48691,2,""],[48691,0,"if (rc !="],[48701,3,""],[48701,0,"-1)"],[48705,0,"in"],[48709,7,""],[48709,0,".GetR"],[48719,8,""],[48719,0,"Va"],[48722,2,""],[48722,0,"u"],[48725,5,""],[48725,0,").S"],[48729,3,""],[48730,3,""],[48730,0,"("],[48732,2,""],[48732,0,"c"],[48734,1,""],[48747,3,""],[48747,0,"voi"],[48751,11,""],[48810,11,""],[48816,6,""],[48816,0,"Pr"],[48819,0,"pe"],[48822,0,"tyCallback"],[48836,0,"<Boolean>"],[48890,0,"  bool rc = true;\n"],[48962,2,""],[48962,0,"rc ="],[48967,2,""],[48979,1,""],[48980,6,""],[48980,0,"!="],[48983,19,""],[48983,0,"NULL"],[48991,0,"if (rc) "],[49012,86,""],[49292,5,""],[49294,1,""],[49294,0,"c"],[49351,4,""],[49360,1,""],[49393,1,""],[49395,2,""],[49395,0,"}\n#"],[49399,3,""],[49400,0,"dif\n"],[49405,2,""],[49405,0," inf"],[49410,2,""],[49411,4,""],[49411,0,"G"],[49413,27,""],[49413,0,"tR"],[49420,3,""],[49420,0,"Val"],[49426,3,""],[49426,0,").S"],[49430,6,""],[49431,1,""],[49431,0,"(rc"],[49437,7,""],[49448,3,""],[49448,0,"voi"],[49452,9,""],[49473,3,""],[49473,0,"Prop"],[49478,3,""],[49479,0,"tyCallback"],[49493,0,"<Array>"],[49948,4,""],[49948,0,"return;"],[49983,45,""],[50472,0,"\n"],[50475,1,""],[50475,0,"info.GetR"],[50489,5,""],[50489,0,"Valu"],[50494,0,"()"],[50497,4,""],[50497,0,"S"],[50499,0,"t"],[51155,3,""],[51155,0,"voi"],[51159,9,""],[51228,9,""],[51234,6,""],[51234,0,"Pr"],[51237,0,"pe"],[51240,0,"tyCallback"],[51254,0,"<Value>"],[51308,1,""],[51308,0,"info.GetR"],[51322,5,""],[51322,0,"Valu"],[51327,0,"()"],[51330,4,""],[51330,0,"S"],[51332,3,""],[51333,21,""],[51343,13,""],[51344,2,""],[51485,6,""],[51485,0,"Pr"],[51488,0,"pe"],[51491,0,"tyCallback"],[51505,0,"<void>"],[51604,3,""],[51604,0,"voi"],[51608,9,""],[51628,3,""],[51628,0,"F"],[51630,2,""],[51631,0,"c"],[51633,1,""],[51633,0,"ionCallbackInfo<Value>"],[51671,3,""],[51671,0,"voi"],[51675,9,""],[51693,3,""],[51693,0,"F"],[51695,2,""],[51696,0,"c"],[51698,1,""],[51698,0,"ionCallbackInfo<Value>"],[51736,3,""],[51736,0,"voi"],[51740,9,""],[51756,3,""],[51756,0,"F"],[51758,2,""],[51759,0,"c"],[51761,1,""],[51761,0,"ionCallbackInfo<Value>"],[51794,3,""],[51794,0,"voi"],[51798,9,""],[51851,4,""],[51884,5,""],[51890,3,""],[51890,0,"Prop"],[51895,3,""],[51896,0,"tyCallback"],[51910,0,"<Value>"],[51929,1,""],[51929,0,"info.GetR"],[51943,4,""],[51943,0,"Va"],[51946,0,"u"],[51948,5,""],[51948,0,"().S"],[51953,1,""],[51953,0,"t"],[52149,6,""],[52149,0,"Pr"],[52152,0,"pe"],[52155,0,"tyCallback"],[52169,2,""],[52169,0,"<vo"],[52173,3,""],[52173,0,"d>&"],[52847,1,""],[52891,6,""],[52908,2,""],[52908,0,"L"],[52911,16,""],[52911,0,"al"],[52921,7,""],[52921,0," pr"],[52925,1,""],[52925,0,"c"],[52927,2,""],[52928,7,""],[52928,0,"s"],[52930,6,""],[52930,0,"="],[52932,24,""],[52978,0,";\n  assert(process.IsEmpty() == false);\n  assert(process->IsObject() == true);\n\n  process_p.Reset(node_isolate, process"],[53359,0,"Local<Array> modules = Array::New();\n  "],[53414,4,""],[53414,0,".R"],[53417,1,""],[53418,3,""],[53419,1,""],[53420,12,""],[53435,8,""],[53435,0,"modul"],[53441,3,""],[53441,0,"s"],[53503,8,""],[53504,1,""],[59501,0,"sco"],[59505,0,"e.Close(p"],[59520,0,")"],[59721,6,""],[59722,5,""],[59722,0,"tring::New"],[59763,6,""],[59764,5,""],[59764,0,"tring::New"],[61033,15,""],[61035,33,""],[61036,23,""],[61037,2,""],[61512,0,"Local<Value> arg = process_l;\n  "],[61563,0,"&"],[61567,1,""],[66932,0,"_p"],[67976,0,"_p"],[68555,3,""],[68555,0,"voi"],[68559,9,""],[68579,3,""],[68579,0,"F"],[68581,2,""],[68582,0,"c"],[68584,1,""],[68584,0,"ionCallbackInfo<Value>"],[68696,21,""],[68702,21,""],[68732,2,""],[68855,10,""],[68882,1,""],[68888,35,""],[70535,3,""],[70535,0,"voi"],[70539,9,""],[70559,3,""],[70559,0,"F"],[70561,2,""],[70562,0,"c"],[70564,1,""],[70564,0,"ionCallbackInfo<Value>"],[70633,46,""],[70817,2,""],[70819,2,""],[70820,1,""],[70827,21,""],[70830,4,""],[70831,8,""],[70862,2,""],[71207,5,""],[71464,1,""],[71466,3,""],[71467,1,""],[71474,10,""],[71505,1,""],[71617,1,""],[71619,3,""],[71620,1,""],[71672,2,""],[71673,43,""],[71963,1,""],[71965,3,""],[71966,1,""],[72339,5,""],[72390,13,""],[72391,32,""],[72536,1,""],[72539,2,""],[72540,2,""],[72591,29,""],[72592,16,""],[72862,35,""],[72891,3,""],[72891,0,"voi"],[72895,9,""],[72913,3,""],[72913,0,"F"],[72915,2,""],[72916,0,"c"],[72918,1,""],[72918,0,"ionCallbackInfo<Value>"],[72973,34,""],[73000,3,""],[73000,0,"voi"],[73004,9,""],[73020,3,""],[73020,0,"F"],[73022,2,""],[73023,0,"c"],[73025,1,""],[73025,0,"ionCallbackInfo<Value>"],[73147,1,""],[73148,34,""],[77217,0,"_l"],[78524,0,"binding_cache.Reset(node_isolate, Object::New());\n\n    "],[78645,1,""],[78645,0,"Loc"],[78649,2,""],[78650,1,""],[78700,55,""],[42406,0,"fflush(stderr);\n#if defined(DEBUG)\n  abort();\n#endif\n  "],[2569,0,"ArrayBuffer;\nusing v8::"],[5459,0,"class ArrayBufferAllocator : public ArrayBuffer::Allocator {\npublic:\n  // Impose an upper limit to avoid out of memory errors that bring down\n  // the process.\n  static const size_t kMaxLength = 0x3fffffff;\n  static ArrayBufferAllocator the_singleton;\n  virtual ~ArrayBufferAllocator() {}\n  virtual void* Allocate(size_t length);\n  virtual void Free(void* data);\nprivate:\n  ArrayBufferAllocator() {}\n  ArrayBufferAllocator(const ArrayBufferAllocator&);\n  void operator=(const ArrayBufferAllocator&);\n};\n\nArrayBufferAllocator ArrayBufferAllocator::the_singleton;\n\n\nvoid* ArrayBufferAllocator::Allocate(size_t length) {\n  if (length > kMaxLength) return NULL;\n  return new char[length];\n}\n\n\nvoid ArrayBufferAllocator::Free(void* data) {\n  delete[] "],[6211,0,"_cast<char*>(data);\n}\n\n\nstatic"],[76121,0,"const char typed_arrays_flag[] = \"--harmony_typed_arrays\";\n  V8::SetFlagsFromString(typed_arrays_flag, sizeof(typed_arrays_flag) - 1);\n  V8::SetArrayBufferAllocator(&ArrayBufferAllocator::the_singleton);\n\n  "],[17748,9,""],[17748,0,"P"],[17750,1,""],[17750,0,"rsis"],[17755,4,""],[17756,2,""],[17757,0,"tT"],[17760,5,""],[17760,0,"L"],[17762,1,""],[17762,0,"c"],[17764,4,""],[17764,0,"l("],[20003,9,""],[20003,0,"P"],[20005,1,""],[20005,0,"rsis"],[20010,4,""],[20011,2,""],[20012,0,"tT"],[20015,5,""],[20015,0,"L"],[20017,1,""],[20017,0,"c"],[20019,4,""],[20019,0,"l("],[20056,11,""],[20056,0,"Pers"],[20061,6,""],[20061,0,"st"],[20064,2,""],[20065,0,"tT"],[20068,5,""],[20068,0,"L"],[20070,1,""],[20070,0,"c"],[20072,4,""],[20072,0,"l("],[20460,9,""],[20460,0,"P"],[20462,1,""],[20462,0,"rsis"],[20467,4,""],[20468,2,""],[20469,0,"tT"],[20472,5,""],[20472,0,"L"],[20474,1,""],[20474,0,"c"],[20476,4,""],[20476,0,"l("],[21166,0,"PersistentTo"],[21183,15,""],[21184,14,""],[22148,9,""],[22148,0,"P"],[22150,1,""],[22150,0,"rsis"],[22155,4,""],[22156,2,""],[22157,0,"tT"],[22160,5,""],[22160,0,"L"],[22162,0,"ca"],[22165,5,""],[22165,0,"("],[43565,9,""],[43565,0,"P"],[43567,1,""],[43567,0,"rsis"],[43572,4,""],[43573,2,""],[43574,0,"tT"],[43577,5,""],[43577,0,"L"],[43579,1,""],[43579,0,"c"],[43581,4,""],[43581,0,"l("],[45170,9,""],[45170,0,"P"],[45172,1,""],[45172,0,"rsis"],[45177,4,""],[45178,2,""],[45179,0,"tT"],[45182,5,""],[45182,0,"L"],[45184,1,""],[45184,0,"c"],[45186,4,""],[45186,0,"l("],[45500,0,"PersistentTo"],[45517,12,""],[45518,14,""],[12703,1,""],[12706,0," == NULL || msg"],[12724,0," == '\\0'"]],"_dtSpan":[319503,329397]},{"parents":[316],"numChildren":2,"agent":171,"time":"1970-01-01T00:00:00Z","patches":[[20262,0,"if (using_domains)\n    return MakeDomainCallback(object, callback, argc, argv);\n\n  "]],"_dtSpan":[329397,329480]},{"parents":[317,318],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[21692,0,"  assert(callback->IsFunction());\n"],[13745,335,""],[14214,4,""],[14217,0,"str"],[14223,1,""],[14224,8,""],[14224,0,"r"],[14281,4,""],[14287,2,""],[14288,4,""],[14289,1,""],[14289,0,"ame"],[21844,6,""],[21845,4,""],[21846,2,""],[21847,139,""],[21848,5,""],[21849,5,""],[21850,2,""],[21851,79,""],[21854,52,""],[21856,99,""],[21857,20,""],[21858,100,""],[29941,1,""],[29943,3,""],[29943,0,"int "],[29948,1,""],[29949,3,""],[29969,1,""],[29976,0,"er"],[29979,14,""],[30011,5,""],[30012,0,"rr"],[30298,3,""],[30298,0,"int "],[30303,1,""],[30304,3,""],[30348,0,"er"],[30351,14,""],[30383,5,""],[30384,0,"rr"],[37072,14,""],[37254,7,""],[37254,0,"in"],[37293,1,""],[37303,14,""],[37338,5,""],[38311,7,""],[38311,0,"in"],[38337,27,""],[38338,20,""],[38340,1,""],[38342,1,""],[38368,2,""],[38368,0,"err"],[38373,4,""],[4660,32,""],[75671,51,""],[2234,25,""],[59503,0,"HandleScope handle_scope(node_isolate);\n\n  "],[60140,30,""],[60141,19,""],[60142,3,""],[60142,0,"tring::"],[60150,1,""],[60150,0,"ew"]],"_dtSpan":[329480,330786]},{"parents":[318],"numChildren":2,"agent":17,"time":"1970-01-01T00:00:00Z","patches":[[33677,0,"u"],[33679,1,""],[33679,0,"d_"],[33732,0,"FromUnsigned"],[33832,0,"g"],[33834,1,""],[33834,0,"d_"],[33887,0,"FromUnsigned"]],"_dtSpan":[330786,330818]},{"parents":[319,320],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[33188,3,""],[33188,0,"n"],[33204,12,""],[33289,3,""],[33309,12,""],[2712,0,";\nusing v8::Handle"],[2814,0,"al;\nusing v8::Loc"],[3046,0,"String;\nusing v8::"]],"_dtSpan":[330818,330902]},{"parents":[321],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[4931,0,"  uint32_t in_tick;\n  uint32_t last_threw;\n"],[19589,0,"ast_thr"],[19597,0,"w == 1) {\n    tick_infobox.last_threw = 0;\n    retur"],[19650,0," ret;\n  }\n\n  if (tick_infobox.in_tick == 1) {\n    return ret;\n  }\n\n  if (tick_infobox.len"],[20985,0,"in_tick == 1) {\n    return ret;\n  }\n\n  if (tick_infobox."],[59412,1,""],[59412,0,"4"]],"_dtSpan":[330902,331151]},{"parents":[322],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[2362,1,""],[2441,1,""],[2489,1,""],[4547,0," "],[4549,0," "],[5558,0," "],[5861,0," "],[6916,1,""],[10765,1,""],[15252,0,"(piscisaureus)"],[18327,0,"(trevnorris)"],[20271,0,"(trevnorris)"],[26428,17,""],[26429,2,""],[26430,95,""],[27886,0,"const "],[30913,1,""],[30924,0," "],[31048,1,""],[31078,0," "],[36941,0," "],[40171,0," "],[40219,0," "],[40616,0,"  // _WIN32"],[40902,0," "],[41032,0,"  // __POSIX__"],[43826,0,"const "],[43899,0,"(bajtos)"],[44797,4,""],[44797,0,"sizeof(buf)"],[45223,1,""],[45363,1,""],[45503,1,""],[45513,1,""],[46145,0,"(piscisaureus)"],[46593,0," "],[50710,39,""],[50741,0,"Local<Value> debug"],[50760,0,"="],[50780,0,";"],[50790,0,"Local<Value> debug"],[50809,0,"="],[50830,0,";"],[50838,0,"  // defined(DEBUG) && DEBUG"],[50867,0,"\n "],[50870,0,"obj->Set(String::NewSymbol(\"debug\"),"],[50907,0,"debug"],[50975,0,"// TODO(bnoordhuis) ping libuv\n  "],[51064,19,""],[58631,0," "],[61996,1,""],[64056,0,"(bnoordhuis)"],[68592,0," signal"],[69091,0," "],[70687,1,""],[70687,0,"static_cast<"],[70704,2,""],[70704,0,">("],[70714,0,")"],[72870,0,"\n"],[72872,2,""],[72896,4,""],[72918,2,""],[72946,4,""],[72966,2,""],[72996,4,""],[73019,2,""],[73045,4,""],[73055,0," "],[75351,0," "],[76020,0," "],[76512,0," "],[76760,0," "],[77757,0," "],[77841,1,""],[77841,0,"static_cast<"],[77857,1,""],[77859,1,""],[77859,0,">(\n     "],[77882,2,""],[77882,0,"*"],[77885,2,""],[77885,0,"gv_copy"],[77920,0,")"],[77979,1,""],[77979,0,"reinterpret_cast<"],[78000,1,""],[78001,2,""],[78001,0,">("],[78012,0,")"],[78015,0,"\n             "],[78037,2,""],[78037,0,"*"],[78040,2,""],[78040,0,"gv_copy"],[78069,0," "]],"_dtSpan":[331151,331759]},{"parents":[323],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[1162,1,""],[1162,0,"nod"],[1166,1,""],[1167,1,""],[1167,0,"buffe"],[1173,2,""],[1187,2,""],[1188,0,"o"],[1190,1,""],[1192,2,""],[1192,0,"const"],[1198,1,""],[1198,0,"nts"],[1215,1,""],[1215,0,"node_file.h\"\n#include \"node_h"],[1245,0,"tp_pa"],[1251,0,"ser.h\"\n#"],[1261,1,""],[1261,0,"clude \"node"],[1273,2,""],[1273,0,"javascrip"],[1283,0,".h\"\n#includ"],[1295,0," \"node_"],[1303,0,"cript"],[1311,1,""],[1322,1,""],[1322,0,"node_ve"],[1330,1,""],[1331,0,"ion"],[1338,0,"\n#if defined HAVE_PERFCTR\n"],[1374,0,"node_co"],[1382,1,""],[1382,0,"nters"],[1391,0,"#endif\n"],[1401,0,"f HAVE_OPENSSL\n#i"],[1426,3,""],[1426,0,"no"],[1430,3,""],[1430,0,"_crypto"],[1442,0,"end"],[1447,0,"\n\n#if"],[1520,1,""],[1551,0,"\n"],[1554,4,""],[1555,4,""],[1561,1,""],[1561,0,"SYST"],[1566,3,""],[1566,0,"M"],[1568,1,""],[1568,0,"AP"],[1572,1,""],[1586,1,""],[1586,0,"pr"],[1589,3,""],[1589,0,"vid"],[1594,1,""],[1615,4,""],[1615,0,"\""],[1617,1,""],[1617,0,"r"],[1619,0,"s"],[1622,1,""],[1622,0,"\""],[1633,4,""],[1633,0,"\"ha"],[1637,0,"dle_wr"],[1644,1,""],[1644,0,"p"],[1647,1,""],[1647,0,"\""],[1658,6,""],[1658,0,"\"req_wrap"],[1669,1,""],[1669,0,"\""],[1680,1,""],[1680,0,"\""],[1683,2,""],[1683,0,"r"],[1685,0,"ng_"],[1689,0,"ytes"],[1695,1,""],[1695,0,"\""],[1706,7,""],[1706,0,"\"uv"],[1711,1,""],[1711,0,"\""],[1715,1,""],[1715,0,"nclude"],[1722,1,""],[1722,0,"\"v8-"],[1728,1,""],[1728,0,"bug.h\"\n#"],[1738,0,"clud"],[1743,11,""],[1743,0," \"zlib.h\"\n"],[1764,0,"a"],[1766,5,""],[1767,0,"ert"],[1775,1,""],[1775,0,"inc"],[1779,4,""],[1779,0,"u"],[1782,4,""],[1783,6,""],[1783,0,"<"],[1785,7,""],[1786,7,""],[1786,0,"r"],[1788,3,""],[1788,0,"o.h>"],[1813,0," /"],[1816,1,""],[1825,3,""],[1836,0,"loc"],[1840,2,""],[1840,0,"l"],[1842,2,""],[1848,3,""],[1848,0,"nclu"],[1854,1,""],[1854,0," <s"],[1858,0,"g"],[1860,12,""],[1860,0,"al.h>"],[1876,3,""],[1879,0,"io"],[1884,0,"\n#include"],[1894,3,""],[1894,0,"<"],[1896,1,""],[1897,1,""],[1897,0,"dl"],[1900,0,"b.h>\n#inclu"],[1912,1,""],[1912,0,"e"],[1914,2,""],[1914,0,"<s"],[1917,1,""],[1917,0,"ring.h>\n#"],[1927,0,"nclu"],[1932,0,"e"],[1934,1,""],[1934,0,"<sys"],[1939,0,"types.h>\n"],[1950,0,"if d"],[1955,2,""],[1955,0,"fin"],[1959,0,"d(_MSC_VER)"],[2001,0,"io.h>\n#include <"],[2029,0,"include <strings.h>\n#define strcasecmp _stricmp\n#"],[2099,16,""],[2143,4,""],[2143,0,"lse"],[2157,3,""],[2157,0,"u"],[2159,1,""],[2159,0,"istd"],[2166,9,""],[2167,4,""],[2167,0," /"],[2170,0," se"],[2174,2,""],[2174,0,"uid, g"],[2181,4,""],[2181,0,"tuid"],[2187,1,""],[2187,0,"e"],[2189,3,""],[2190,5,""],[2191,4,""],[2191,0,"f"],[2243,1,""],[2259,0," /"],[2262,1,""],[2273,3,""],[2275,1,""],[2291,0," /"],[2294,1,""],[2305,3,""],[2316,16,""],[2317,12,""],[2319,7,""],[2320,15,""],[2321,5,""],[2322,4,""],[2323,98,""],[2324,4,""],[2325,128,""],[2326,1,""],[2332,1,""],[2357,1,""]],"_dtSpan":[331759,332758]},{"parents":[324],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[2044,1,""]],"_dtSpan":[332758,332759]},{"parents":[325],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[2029,20,""],[17418,0,"node_isolate, "],[19847,0,"node_isolate, "],[19914,0,"node_isolate, "],[20344,0,"node_isolate, "],[21203,0,"node_isolate, "],[42924,0,"node_isolate, "],[44557,0,"node_isolate, "],[44908,0,"node_isolate, "]],"_dtSpan":[332759,332891]},{"parents":[326],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[52885,0,"#define READONLY_PROPERTY(obj, str, var)                                      \\\n  do {                                                                        \\\n    obj->Set(String::New(str), var, v8::ReadOnly);                            \\\n  } while (0)\n\n\n"],[53730,0,"READONLY_PROPERTY("],[53755,24,""],[53755,0,", "],[53766,1,""],[53915,0,"READONLY_PROPERTY("],[53940,24,""],[53940,0,", "],[53958,1,""],[54037,0,"READONLY_PROPERTY("],[54062,24,""],[54062,0,", "],[54074,1,""],[54089,0,"READONLY_PROPERTY("],[54115,24,""],[54115,0,", "],[54130,1,""],[54160,0,"     "],[54226,0,"     "],[54316,0,"READONLY_PROPERTY("],[54342,24,""],[54342,0,", "],[54350,1,""],[54384,0,"READONLY_PROPERTY("],[54410,24,""],[54410,0,", "],[54416,1,""],[54452,54,""],[54454,7,""],[54454,0,"AD"],[54458,0,"LY"],[54461,2,""],[54461,0,"P"],[54463,6,""],[54463,0,"OPERTY("],[54478,24,""],[54478,0,", "],[54484,1,""],[54523,0,"READONLY_PROPERTY("],[54549,24,""],[54549,0,", "],[54557,1,""],[54589,0,"READONLY_PROPERTY("],[54615,24,""],[54615,0,",\n                    "],[54646,1,""],[54664,0,"    "],[55061,0,"READONLY_PROPERTY("],[55087,24,""],[55087,0,",\n                    "],[55118,1,""],[55136,0,"    "],[55217,0,"READONLY_PROPERTY("],[55242,24,""],[55242,0,", "],[55250,1,""],[55297,0,"READONLY_PROPERTY("],[55322,24,""],[55322,0,", "],[55334,1,""],[56533,0,"READONLY_PROPERTY("],[56558,24,""],[56558,0,", "],[56565,1,""],[56608,0,"READONLY_PROPERTY("],[56633,24,""],[56633,0,", "],[56645,1,""],[56872,0,"READONLY_PROPERTY("],[56897,24,""],[56897,0,", "],[56906,1,""],[56981,0,"READONLY_PROPERTY("],[57006,24,""],[57006,0,", "],[57021,1,""],[57096,0,"READONLY_PROPERTY("],[57121,24,""],[57121,0,", "],[57135,1,""],[57213,0,"READONLY_PROPERTY("],[57238,24,""],[57238,0,", "],[57255,1,""],[57339,0,"READONLY_PROPERTY("],[57364,24,""],[57364,0,", "],[57384,1,""],[57468,0,"READONLY_PROPERTY("],[57493,24,""],[57493,0,", "],[57513,1,""],[59884,0,"#undef READONLY_PROPERTY\n\n\n"]],"_dtSpan":[332891,334195]},{"parents":[327],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[6442,0,"\n      "],[6450,0," FIXED_ONE_BYTE_"],[6467,7,""],[6467,0,"TRI"],[6471,2,""],[6471,0,"G"],[6473,0,"node_isolate, "],[12655,0,"OneByte"],[12668,3,""],[12668,0,"(nod"],[12673,5,""],[12673,0,"_is"],[12678,1,""],[12678,0,"ate, "],[12805,0,"OneByte"],[12818,3,""],[12818,0,"(nod"],[12823,5,""],[12823,0,"_is"],[12828,1,""],[12828,0,"ate, "],[12863,0,"\n     "],[12894,0,"FIXED_ONE_BYTE_"],[12910,7,""],[12910,0,"TRI"],[12914,0,"G(nod"],[12920,5,""],[12920,0,"_is"],[12925,1,""],[12925,0,"ate, "],[13050,0,"FIXED_ONE_BYTE_"],[13066,7,""],[13066,0,"TRI"],[13070,0,"G(node_isolat"],[13084,2,""],[13084,0,", "],[13117,0,"FIXED_ONE_BYTE_"],[13133,2,""],[13133,0,"TRING(node_"],[13145,5,""],[13145,0,"solat"],[13151,2,""],[13151,0,", "],[13184,0,"FIXED_ONE_BYTE_"],[13200,3,""],[13200,0,"TRING("],[13207,4,""],[13207,0,"ode_isolat"],[13218,2,""],[13218,0,", "],[13247,0,"FIXED_ONE_BYTE_"],[13263,7,""],[13263,0,"TRI"],[13267,2,""],[13267,0,"G"],[13269,0,"node_isolate, "],[13336,0,"\n       "],[13367,0,"FIXED_ONE_BYTE_"],[13383,7,""],[13383,0,"TRI"],[13387,0,"G(nod"],[13393,5,""],[13393,0,"_is"],[13398,1,""],[13398,0,"ate, "],[13436,0,"\n       "],[13478,0,"FromUtf8"],[13487,0,"node_isolate, "],[13534,0,"\n       "],[13565,0,"FIXED_ONE_BYTE_"],[13581,7,""],[13581,0,"TRI"],[13585,0,"G(nod"],[13591,5,""],[13591,0,"_is"],[13596,1,""],[13596,0,"ate, "],[13873,0,"FromUtf8"],[13882,0,"node_isolate, "],[13944,0,"OneByte"],[13957,3,""],[13957,0,"(nod"],[13962,5,""],[13962,0,"_is"],[13967,1,""],[13967,0,"ate, "],[14284,0,"FIXED_ONE_BYTE_"],[14300,7,""],[14300,0,"TRI"],[14304,2,""],[14304,0,"G"],[14306,0,"node_isolate, "],[14351,0,"FIXED_ONE_BYTE_"],[14367,7,""],[14367,0,"TRI"],[14371,0,"G(node_isolat"],[14385,2,""],[14385,0,", "],[14418,0,"FIXED_ONE_BYTE_"],[14434,0,"TRING(node_isola"],[14451,7,""],[14452,2,""],[14452,0,", "],[14481,0,"FIXED_ONE_BYTE_"],[14497,7,""],[14497,0,"TRI"],[14501,0,"G(node_isolat"],[14515,2,""],[14515,0,", "],[14613,0,"OneByte"],[14626,3,""],[14626,0,"(nod"],[14631,5,""],[14631,0,"_is"],[14636,1,""],[14636,0,"ate, "],[14690,0,"OneByte"],[14703,3,""],[14703,0,"(nod"],[14708,5,""],[14708,0,"_is"],[14713,1,""],[14713,0,"ate, "],[14747,0,"\n     "],[14778,0,"FIXED_ONE_BYTE_"],[14794,7,""],[14794,0,"TRI"],[14798,0,"G(nod"],[14804,5,""],[14804,0,"_is"],[14809,1,""],[14809,0,"ate, "],[15034,0,"FIXED_ONE_BYTE_"],[15050,7,""],[15050,0,"TRI"],[15054,0,"G(node_isolat"],[15068,2,""],[15068,0,", "],[15078,0,"\n                               "],[15122,0,"FromUtf8"],[15131,0,"node_isolate, "],[15236,0,"FromUtf8"],[15245,0,"node_isolate, "],[15311,0,"FromUtf8"],[15320,0,"node_isolate, "],[15379,0,"FromUtf8"],[15388,0,"node_isolate, "],[15442,0,"\n       "],[15473,0,"FIXED_ONE_BYTE_"],[15489,7,""],[15489,0,"TRI"],[15493,0,"G(nod"],[15499,5,""],[15499,0,"_is"],[15504,1,""],[15504,0,"ate, "],[15542,0,"\n       "],[15609,0,"\n       "],[15640,0,"FIXED_ONE_BYTE_"],[15656,7,""],[15656,0,"TRI"],[15660,0,"G(nod"],[15666,5,""],[15666,0,"_is"],[15671,1,""],[15671,0,"ate, "],[16037,0,"OneByte"],[16050,3,""],[16050,0,"(nod"],[16055,5,""],[16055,0,"_is"],[16060,1,""],[16060,0,"ate, "],[17067,0,"OneByte"],[17080,3,""],[17080,0,"(nod"],[17085,5,""],[17085,0,"_is"],[17090,1,""],[17090,0,"ate, "],[17157,0,"FIXED_ONE_BYTE_"],[17173,7,""],[17173,0,"TRI"],[17177,0,"G(nod"],[17183,2,""],[17183,0,"_isolate, "],[17224,0,"FIXED_ONE_BYTE_"],[17240,2,""],[17240,0,"TRING(node_"],[17252,5,""],[17252,0,"solat"],[17258,2,""],[17258,0,", "],[17291,0,"FIXED_ONE_BYTE_"],[17307,2,""],[17307,0,"TRING(node_"],[17319,5,""],[17319,0,"solat"],[17325,2,""],[17325,0,", "],[17354,0,"FIXED_ONE_BYTE_"],[17370,0,"TRING(node_isola"],[17387,7,""],[17388,2,""],[17388,0,", "],[17443,0,"\n       "],[17476,0,"FIXED_ONE_BYTE_"],[17492,7,""],[17492,0,"TRI"],[17496,0,"G(nod"],[17502,5,""],[17502,0,"_is"],[17507,1,""],[17507,0,"ate, "],[17545,0,"\n       "],[17587,0,"FromUtf8"],[17596,0,"node_isolate, "],[17643,0,"\n       "],[17674,0,"FIXED_ONE_BYTE_"],[17690,3,""],[17690,0,"TRING("],[17697,4,""],[17697,0,"od"],[17700,5,""],[17700,0,"_is"],[17705,1,""],[17705,0,"ate, "],[17950,0,"FromUtf8"],[17959,0,"node_isolate, "],[18021,0,"OneByte"],[18034,3,""],[18034,0,"(nod"],[18039,5,""],[18039,0,"_is"],[18044,1,""],[18044,0,"ate, "],[18326,0,"\n     "],[18346,0,"FIXED_ONE_BYTE_"],[18362,7,""],[18362,0,"TRI"],[18366,2,""],[18366,0,"G"],[18368,0,"node_isolate, "],[18429,0,"\n     "],[18449,0,"FIXED_ONE_BYTE_"],[18465,7,""],[18465,0,"TRI"],[18469,2,""],[18469,0,"G"],[18471,0,"node_isolate, "],[18861,0,"FIXED_ONE_BYTE_"],[18877,3,""],[18877,0,"TRING("],[18884,4,""],[18884,0,"od"],[18887,2,""],[18887,0,"_isolate, "],[18936,0,"FIXED_ONE_BYTE_"],[18952,7,""],[18952,0,"TRI"],[18956,0,"G(node_isolat"],[18970,2,""],[18970,0,", "],[19387,0,"FIXED_ONE_BYTE_"],[19403,2,""],[19403,0,"TRING(node_"],[19415,5,""],[19415,0,"solat"],[19421,2,""],[19421,0,", "],[19451,0,"FIXED_ONE_BYTE_"],[19467,0,"TRING(node_isola"],[19484,7,""],[19485,2,""],[19485,0,", "],[19518,0,"FIXED_ONE_BYTE_"],[19534,7,""],[19534,0,"TRI"],[19538,2,""],[19538,0,"G"],[19540,0,"node_isolate, "],[21602,0,"\n       "],[21624,0,"FIXED_ONE_BYTE_"],[21640,7,""],[21640,0,"TRI"],[21644,0,"G(node_isolat"],[21658,2,""],[21658,0,", "],[23079,0,"Local<String> method_string = OneByteString(node_isolate, method);\n  "],[23167,2,""],[23168,2,""],[23189,18,""],[23195,1,""],[23195,0,"_string"],[28050,0,"\n      "],[28077,0,"FIXED_ONE_BYTE_"],[28093,7,""],[28093,0,"TRI"],[28097,2,""],[28097,0,"G"],[28099,0,"node_isolate, "],[28514,1,""],[28514,0,"L"],[28516,1,""],[28516,0,"cal<Va"],[28523,0,"ue>"],[28527,1,""],[28527,0,"mes"],[28531,3,""],[28531,0,"age;\n    L"],[28542,4,""],[28542,0,"cal<Value> nam"],[28557,2,""],[28557,0,";\n\n "],[28562,1,""],[28563,0," if ("],[28582,0,")"],[28584,2,""],[28584,0,"{"],[28592,2,""],[28592,0,"Local<Object> "],[28608,3,""],[28608,0,"r_"],[28611,0,"bj = er.As<"],[28628,0,">"],[28631,0,";\n      message = err_obj"],[28662,0,"FIXED_ONE_BYTE_"],[28678,2,""],[28678,0,"TRING(node_"],[28690,5,""],[28690,0,"solat"],[28696,2,""],[28696,0,", "],[28709,0,";\n      name = err_obj"],[28733,0,"Get(F"],[28739,2,""],[28739,0,"XED_ONE_BYTE_STRING("],[28760,0,"o"],[28763,1,""],[28763,0,"_"],[28765,0,"solate, \""],[28775,0,"am"],[28778,2,""],[28778,0,"\""],[28781,3,""],[28781,0,";"],[28787,0,"}\n\n "],[28793,1,""],[28793,0," if "],[28798,0,"m"],[28800,8,""],[28800,0,"ssag"],[28805,1,""],[28805,0,".IsEmp"],[28812,0,"y"],[28815,0," ||\n        message"],[28836,1,""],[28836,0,"IsUnd"],[28842,5,""],[28842,0,"f"],[28845,4,""],[28846,1,""],[28846,0,"d"],[28848,1,""],[28848,0,") ||\n        "],[28865,2,""],[28865,0,".IsEmpty("],[28875,0," ||\n        name"],[28907,1,""],[28907,0," {"],[28910,1,""],[28914,2,""],[28915,4,""],[28915,0," // Not an e"],[28931,1,""],[28931,0," o"],[28938,1,""],[28938,0,"."],[28940,1,""],[28940,0,"Just print as-is."],[28982,2,""],[28983,2,""],[28984,24,""],[28984,0,"ssa"],[28988,3,""],[28989,1,""],[28990,4,""],[28991,3,""],[28991,0,"r"],[29020,2,""],[29020,0,"\\n"],[29026,1,""],[29026,0,"mess"],[29031,1,""],[29031,0,"g"],[29041,0," else {"],[29049,1,""],[29053,0,"  "],[29073,0,"na"],[29076,0,"e_"],[29079,0,"trin"],[29085,11,""],[29085,0,"nam"],[29089,7,""],[29089,0,");"],[29092,14,""],[29098,27,""],[29106,1,""],[29106,0,"Utf8Valu"],[29115,1,""],[29115,0," message_string"],[29131,1,""],[29138,1,""],[29139,2,""],[29145,0,"  "],[29166,0,": %s"],[29176,0,"na"],[29179,0,"e_"],[29182,0,"trin"],[29187,0,", *message_string"],[29209,0,"  }\n  "],[30734,0,"FIXED_ONE_BYTE_"],[30750,0,"TRING(node_isola"],[30767,7,""],[30768,2,""],[30768,0,", "],[32050,0,"FromUtf8"],[32059,0,"node_isolate, "],[39059,0,"FIXED_ONE_BYTE_"],[39075,7,""],[39075,0,"TRI"],[39079,2,""],[39079,0,"G"],[39081,0,"node_isolate, "],[39127,0,"FIXED_ONE_BYTE_"],[39143,7,""],[39143,0,"TRI"],[39147,2,""],[39147,0,"G"],[39149,0,"node_isolate, "],[39200,0,"FIXED_ONE_BYTE_"],[39216,7,""],[39216,0,"TRI"],[39220,0,"G(nod"],[39226,2,""],[39226,0,"_isolate, "],[41784,0,"FIXED_ONE_BYTE_"],[41800,2,""],[41800,0,"TRING(node_"],[41812,5,""],[41812,0,"solat"],[41818,2,""],[41818,0,", "],[41967,0,"OneByte"],[41980,3,""],[41980,0,"(node_isolat"],[41993,2,""],[41993,0,", "],[44357,0," {"],[44388,0,"\n       "],[44397,0,"FIXED_ONE_BYTE_"],[44413,3,""],[44413,0,"TRING("],[44420,4,""],[44420,0,"ode_isolat"],[44431,2,""],[44431,0,", "],[44453,0,"  }\n"],[46571,0,"OneByte"],[46584,3,""],[46584,0,"(nod"],[46589,2,""],[46589,0,"_isolate, "],[47509,0,"FromUtf8"],[47518,0,"node_isolate, "],[48168,0,"FromUtf8"],[48177,0,"node_isolate, "],[48780,5,""],[48780,0,"co"],[48783,0,"st"],[48786,0,"u"],[48789,1,""],[48789,0,"t16_t* tw"],[48799,3,""],[48799,0,"_by"],[48803,1,""],[48804,1,""],[48804,0,"_b"],[48807,0,"ffe"],[48811,0," = rei"],[48818,4,""],[48818,0,"t"],[48820,4,""],[48820,0,"rpr"],[48825,0,"_cast<const uint16_t*>"],[48848,0,"buffer);"],[48857,1,""],[48861,0,"Local<String>"],[48875,0,"rc"],[48878,0,"="],[48891,1,""],[48891,0,"F"],[48893,3,""],[48893,0,"omTwoBy"],[48902,3,""],[48902,0,"(nod"],[48907,1,""],[48908,2,""],[48908,0,"i"],[48910,0,"ola"],[48914,4,""],[48914,0,"e, "],[48918,2,""],[48918,0,"wo"],[48921,0,"by"],[48924,3,""],[48924,0,"e_"],[48933,1,""],[48933,0,";\n   "],[48941,1,""],[48941,0,"t"],[48943,0,"rn info.GetReturnVa"],[48963,1,""],[48963,0,"ue("],[48967,0,".Set(rc"],[51677,1,""],[51677,0,"Local<Stri"],[51688,2,""],[51688,0,"g"],[51690,0," name = "],[51699,0,"tring::N"],[51708,0,"wFromU"],[51715,0,"f8"],[51718,0,"node_"],[51724,0,"solate,\n                                             var"],[51781,0,"\n                                            "],[51835,0,"k"],[51837,4,""],[51837,0,"orm"],[51841,0,"lSt"],[51845,0,"ing"],[51849,0,"\n                                            "],[51902,0,";\n    env->Set(i, name"],[52403,1,""],[52403,0,"co"],[52406,5,""],[52406,0,"s"],[52408,1,""],[52408,0," u"],[52411,3,""],[52411,0,"nt16_t*"],[52419,1,""],[52420,0,"wo_byte_buffe"],[52434,9,""],[52434,0," = "],[52454,0,"const "],[52473,0,";\n    env->Set(i++, TWO_BYTE_STRING(node_isolate, two_byte_buffer"],[52945,0,"FIXED_ONE_BYTE_"],[52961,7,""],[52961,0,"TRI"],[52965,0,"G(nod"],[52971,5,""],[52971,0,"_is"],[52976,1,""],[52976,0,"ate, "],[53011,0,"FIXED_ONE_BYTE_"],[53027,7,""],[53027,0,"TRI"],[53031,0,"G(nod"],[53037,5,""],[53037,0,"_is"],[53042,1,""],[53042,0,"ate, "],[53119,0,"FIXED_ONE_BYTE_"],[53135,3,""],[53135,0,"TRING("],[53142,4,""],[53142,0,"od"],[53145,5,""],[53145,0,"_is"],[53150,1,""],[53150,0,"ate, "],[53185,0,"\n"],[53197,0,"FIXED_ONE_BYTE_"],[53213,7,""],[53213,0,"TRI"],[53217,0,"G(nod"],[53223,5,""],[53223,0,"_is"],[53228,1,""],[53228,0,"ate, "],[53244,0,"\n          "],[53291,0,"FIXED_ONE_BYTE_"],[53307,3,""],[53307,0,"TRING("],[53314,4,""],[53314,0,"od"],[53317,5,""],[53317,0,"_is"],[53322,1,""],[53322,0,"ate, "],[53338,0,"\n          "],[53385,0,"FIXED_ONE_BYTE_"],[53401,7,""],[53401,0,"TRI"],[53405,0,"G(nod"],[53411,5,""],[53411,0,"_is"],[53416,1,""],[53416,0,"ate, "],[53435,0,"     "],[55218,0,"OneByte"],[55231,3,""],[55231,0,"(node_isolat"],[55244,2,""],[55244,0,", "],[55271,11,""],[55283,5,""],[55513,0,"\n      FIXED_ONE_BYTE_"],[55536,2,""],[55536,0,"TRING(node_"],[55548,5,""],[55548,0,"solat"],[55554,2,""],[55554,0,", "],[55788,0,"FIXED_ONE_BYTE_"],[55804,7,""],[55804,0,"TRI"],[55808,0,"G(nod"],[55814,2,""],[55814,0,"_isolate, "],[55971,0,"\n                   "],[56002,0,"\n        "],[56012,0,"           FIXED_ONE_BYTE_"],[56039,7,""],[56039,0,"TRI"],[56043,2,""],[56043,0,"G"],[56045,0,"node_isolate, "],[56366,0,"\n"],[56369,23,""],[56369,0,"c"],[56373,1,""],[56373,0,"t char"],[56380,1,""],[56391,5,""],[56391,0,"_ve"],[56395,0,"s"],[56397,0,"o"],[56399,9,""],[56399,0,"[]"],[56402,3,""],[56402,0,"="],[56404,14,""],[56445,0,"\n                                    "],[56507,0,"                 "],[56565,0,";\n  READONLY_PROPERTY(versions,\n                    \"http_parser\",\n                    FIXED_ONE_BYTE_STRING(node_isolate, http_parser_version"],[56711,0,"\n"],[56779,0,"\n                   "],[56807,0,"\n                 "],[56826,0,"  OneByte"],[56841,3,""],[56841,0,"(node_isolat"],[56854,2,""],[56854,0,", "],[56868,0," "],[56870,0," "],[56905,0,"\n                   "],[56931,0,"\n            "],[56945,0,"       OneByte"],[56965,3,""],[56965,0,"(node_isolat"],[56978,2,""],[56978,0,", "],[57029,0,"\n                   "],[57055,0,"\n       "],[57064,0,"            OneByte"],[57089,3,""],[57089,0,"(node_isolat"],[57102,2,""],[57102,0,", "],[57156,0,"\n                   "],[57184,0,"\n                "],[57202,0,"   FIXED_ONE_BYTE_"],[57221,0,"TRING(node_isola"],[57238,0,"e, ZLIB_VERSION));\n\n  const cha"],[57270,0," node_modules_vers"],[57289,0,"o"],[57291,3,""],[57291,0,"[] = NODE_STRI"],[57306,2,""],[57306,0,"GIFY"],[57311,1,""],[57311,0,"NODE_MODU"],[57321,2,""],[57321,0,"E"],[57330,1,""],[57414,13,""],[57414,0,"FIXED_"],[57421,1,""],[57421,0,"NE_BYT"],[57435,3,""],[57436,4,""],[57436,0,"node"],[57441,6,""],[57441,0,"isolate, node_modules"],[57463,8,""],[57463,0,"version"],[57474,0,"\n"],[57835,0,"\n      "],[57852,4,""],[57858,10,""],[57875,14,""],[57875,0,"OneByte"],[57888,5,""],[57889,0,"node_isolate, "],[58003,0,"OneByte"],[58016,5,""],[58017,0,"node_isolate, "],[58090,0,"\n                   "],[58122,0,"\n              "],[58138,0,"     OneByte"],[58156,3,""],[58156,0,"(node_isolat"],[58169,2,""],[58169,0,", "],[58287,2,""],[58287,0,"0, S"],[58292,1,""],[58292,0,"rin"],[58296,2,""],[58301,0,"FromUtf8"],[58310,3,""],[58322,1,""],[58324,12,""],[58397,3,""],[58398,4,""],[58399,39,""],[58412,1,""],[58412,0,"j, Stri"],[58420,2,""],[58421,2,""],[58426,0,"FromUtf8"],[58435,3,""],[58447,1,""],[58452,0,"v[i])"],[58464,1,""],[58465,2,""],[58466,12,""],[58479,0,"FIXED_ONE_BYTE_"],[58495,7,""],[58495,0,"TRI"],[58499,0,"G(nod"],[58505,5,""],[58505,0,"_is"],[58510,1,""],[58510,0,"ate, "],[58578,1,""],[58578,0,"_a"],[58683,1,""],[58683,0,"_a"],[58694,2,""],[58694,0,"i, S"],[58699,1,""],[58699,0,"rin"],[58703,2,""],[58708,0,"FromUtf8"],[58717,3,""],[58729,1,""],[58731,12,""],[58745,15,""],[58761,0,"FIXED_ONE_BYTE_"],[58777,7,""],[58777,0,"TRI"],[58781,0,"G(nod"],[58787,5,""],[58787,0,"_is"],[58792,1,""],[58792,0,"ate, "],[58814,1,""],[58814,0,"_a"],[58821,1,""],[59282,0,"FIXED_ONE_BYTE_"],[59298,7,""],[59298,0,"TRI"],[59302,0,"G(nod"],[59308,5,""],[59308,0,"_is"],[59313,1,""],[59313,0,"ate, "],[59488,0,"\n      FIXED_ONE_BYTE_"],[59511,7,""],[59511,0,"TRI"],[59515,0,"G(node_isolat"],[59529,2,""],[59529,0,", "],[59558,12,""],[59564,5,""],[59593,7,""],[59599,10,""],[59697,0,"\n                     "],[59728,0,"\n                     "],[59762,0,"FromUtf8"],[59771,0,"node_isolate, "],[60415,3,""],[60416,0,"xec_path_len"],[60432,0," "],[60434,0," "],[60457,1,""],[60457,0,"_p"],[60474,3,""],[60475,0,"xec_path_len"],[60492,0,"Local<Str"],[60502,0,"ng> exec_path_value;\n  i"],[60544,1,""],[60544,0,"_p"],[60552,3,""],[60553,0,"xec_path_len"],[60567,1,""],[60568,0,"="],[60579,3,""],[60579,0,"exec_path_v"],[60591,1,""],[60591,0,"lue"],[60595,1,""],[60595,0,"="],[60597,3,""],[60597,0,"S"],[60599,2,""],[60599,0,"r"],[60601,0,"ng::NewFromU"],[60614,4,""],[60615,1,""],[60615,0,"8(node_is"],[60625,1,""],[60625,0,"la"],[60628,0,"e"],[60630,0,"\n                                  "],[60666,8,""],[60667,2,""],[60668,7,""],[60669,2,""],[60673,4,""],[60674,5,""],[60674,0,"x"],[60676,0,"c_pa"],[60681,1,""],[60681,0,"h,\n                                          "],[60734,0,"k"],[60736,4,""],[60736,0,"or"],[60739,2,""],[60739,0,"a"],[60741,2,""],[60741,0,"String,\n                                          "],[60795,1,""],[60795,0,"_p"],[60800,1,""],[60800,0,"_len"],[60805,1,""],[60805,0,";\n  } else {\n    exec_path_value ="],[60851,0,"FromUtf8"],[60860,0,"node_isol"],[60870,0,"te, a"],[60881,1,""],[60887,7,""],[60890,2,""],[60903,0,"FIXED_ONE_BYTE_"],[60919,7,""],[60919,0,"TRI"],[60923,0,"G(nod"],[60929,5,""],[60929,0,"_is"],[60934,1,""],[60934,0,"ate, "],[60951,0,"\n              "],[60967,12,""],[60971,1,""],[60971,0,"_p"],[60976,5,""],[60976,0,"_valu"],[60982,1,""],[60986,3,""],[60987,1,""],[60993,1,""],[61000,1,""],[61000,0,"_p"],[61031,0,"FIXED_ONE_BYTE_"],[61047,0,"TRING(node_isola"],[61064,7,""],[61065,2,""],[61065,0,", "],[61163,1,""],[62834,0,"FIXED_ONE_BYTE_"],[62850,7,""],[62850,0,"TRI"],[62854,0,"G(nod"],[62860,5,""],[62860,0,"_is"],[62865,1,""],[62865,0,"ate, "],[62965,0,"FIXED_ONE_BYTE_"],[62981,3,""],[62981,0,"TRING("],[62988,4,""],[62988,0,"od"],[62991,5,""],[62991,0,"_is"],[62996,1,""],[62996,0,"ate, "],[63329,0,"FIXED_ONE_BYTE_"],[63345,7,""],[63345,0,"TRI"],[63349,2,""],[63349,0,"G"],[63351,0,"node_isolate, "],[63395,0,"FIXED_ONE_BYTE_"],[63411,2,""],[63411,0,"TRING(node_"],[63423,5,""],[63423,0,"solat"],[63429,2,""],[63429,0,", "],[63910,0,"String> script_name = FIXED_ONE_BYTE_STRING(node_isolate, \"node.js\");\n  Local<"],[64033,2,""],[64033,0,"sc"],[64037,0,"pt_"],[64041,4,""],[64041,0,"am"],[64044,12,""],[70479,0,"FIXED_ONE_BYTE_"],[70495,7,""],[70495,0,"TRI"],[70499,2,""],[70499,0,"G"],[70501,0,"node_isolate, "],[70522,0,"\n       "],[70531,0,"   FIXED_ONE_BYTE_"],[70550,3,""],[70550,0,"TRING("],[70557,4,""],[70557,0,"ode_isolat"],[70568,2,""],[70568,0,", "],[70619,0,"\n "],[70622,0,"  FIXED_ONE_BYTE_"],[70640,7,""],[70640,0,"TRI"],[70644,2,""],[70644,0,"G"],[70646,0,"node_isolate, "],[70679,0,"\n   "],[70687,0,"\n "],[81004,0,"FIXED_ONE_BYTE_"],[81020,7,""],[81020,0,"TRI"],[81024,0,"G(nod"],[81030,5,""],[81030,0,"_is"],[81035,1,""],[81035,0,"ate, "],[81052,0,"\n                "],[81116,0,"\n  "],[81120,0," FIXED_ONE_BYTE_"],[81137,7,""],[81137,0,"TRI"],[81141,0,"G(node_isolat"],[81155,2,""],[81155,0,", "],[81165,0,"\n   "],[81199,0,"\n "],[52479,0,"const size_t two_byte_buffer_l"],[52511,1,""],[52511,0," = s "],[52517,1,""],[52517,0," p;\n    Local<"],[52532,0,"tring> valu"],[52544,0," = S"],[52549,1,""],[52549,0,"r"],[52551,4,""],[52551,0,"ng::NewFrom"],[52563,3,""],[52563,0,"wo"],[52566,10,""],[52566,0,"yte"],[52583,0,"\n                                                "],[52649,0,"\n                                                 String::kNormalString,\n                                             "],[52768,1,""],[52769,1,""],[52770,1,""],[52770,0," two_byte_buffer_len"],[52791,0,";\n    env->Set(i++, value"]],"_dtSpan":[334195,340877]},{"parents":[328],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[18409,67,""],[18410,32,""],[18532,30,""],[18533,1,""],[18535,91,""],[18559,31,""],[18560,15,""],[18647,7,""],[18648,12,""],[18649,25,""],[18650,18,""],[18651,8,""],[3531,0,"static Persistent<Array> p_domain_box;\n"],[4959,0,"// easily communicate domain depth\nstatic struct {\n  uint32_t count;\n} domain_flag;\n\n"],[18827,0,"  if (!args[0]->IsArray()) {\n    fprintf(stderr, \"_setupDomainUse first argument must be an array\\n\");\n    abort();\n  }\n  p_domain_box.Reset(node_isolate, args[0].As<Array>());\n  if (!args[1]->IsObject()) {\n    fprintf(stderr, \"_setupDomainUse second argument must be an object\\n\");\n    abort();\n  }\n  Local<Object> flag = args[1].As<Object>();\n  flag->SetIndexedPropertiesToExternalArrayData(&domain_flag,\n                                                kExternalUnsignedIntArray,\n                                                1);\n}\n\n\nbool InDomain() {\n  return using_domains && domain_flag.count > 0;\n}\n\n\nHandle<Value> GetDomain() {\n  // no domain can exist if no domain module has been loaded\n  if (!InDomain() || p_domain_box.IsEmpty())\n    return Null(node_isolate);\n\n  return PersistentToLocal(node_isolate, p_domain_box)->Get(0);\n"]],"_dtSpan":[340877,342177]},{"parents":[329],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[23059,0,"// Internal only.\nHandle<Value>\nMakeCallback(const Handle<Object> object,\n             uint32_t index,\n             int argc,\n             Handle<Value> argv[]) {\n  HandleScope scope(node_isolate);\n\n  Local<Function> callback = object->Get(index).As<Function>();\n  assert(callback->IsFunction());\n\n  if (using_domains)\n    return scope.Close(MakeDomainCallback(object, callback, argc, argv));\n  return scope.Close(MakeCallback(object, callback, argc, argv));\n}\n\n\n"]],"_dtSpan":[342177,342640]},{"parents":[330],"numChildren":1,"agent":40,"time":"1970-01-01T00:00:00Z","patches":[[1302,25,""]],"_dtSpan":[342640,342665]},{"parents":[331],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[4500,31,""],[69199,82,""],[69203,20,""],[69204,21,""],[69205,56,""],[69206,7,""],[79485,412,""],[79486,209,""],[83902,0,"  uv_loop_delete(uv_default_loop());\n"],[4988,213,""],[54276,0,"#ifdef OPENSSL_NPN_NEGOTIATED\n  Local<Boolean> tls_npn = True(node_isolate);\n#else\n  Local<Boolean> tls_npn = False(node_isolate);\n#endif\n"],[54472,0," tls_npn);"],[54483,3,""],[54483,0,"\n#ifdef"],[54491,0,"SSL_CTRL_SET_TLSEXT_SERVERNAME_CB\n"],[54527,0,"Local<Boolean>"],[54542,0,"tls_sni"],[54550,0,"="],[54552,0,"True(node_isolate);\n#else\n"],[54580,0,"Local<"],[54593,3,""],[54593,0,"> tls_sni = Fals"],[54610,1,""],[54611,2,""],[54611,0,"nod"],[54616,4,""],[54616,0,"isolate"],[54626,0,"#endif\n"],[54691,4,""],[54692,10,""],[54692,0,"t"],[54694,10,""],[54695,1,""],[54700,1,""],[54702,0,"\n"],[5281,0,"enum ProcessState {\n  INITIALIZING,\n  RUNNING,\n  SHUTTING_DOWN\n};\n\nstatic ProcessState process_state = INITIALIZING;\n\n"],[21751,0,"if (process_state == SHUTTING_DOWN)\n    return Undefined(node_isolate);\n\n  "],[39428,0,"MaybeCloseNamedPipe(uv_shutdown_t* req, int status) {\n  uv_handle_t* handle = reinterpret_cast<uv_handle_t*>(req->handle);\n  delete req;\n\n  if (status == UV_ECANCELED) {\n    return;  // Already closing.\n  }\n  if (status == UV_EPIPE) {\n    return;  // Read end went away before shutdown completed.\n  }\n  assert(status == 0);\n\n  if (uv_is_closing(handle)) {\n    return;\n  }\n\n  uv_close(handle, NULL);\n}\n\n\nvoid MaybeCloseHandle(uv_handle_t* handle, void* unused) {\n  if (uv_is_closing(handle)) {\n    return;\n  }\n\n  // Named pipes get special treatment: we do a shutdown first to flush\n  // pending writes.  Avoids truncated stdout/stderr output on Windows.\n  bool do_shutdown = handle->type == UV_NAMED_PIPE &&\n                     uv_is_writable(reinterpret_cast<uv_stream_t*>(handle));\n\n  if (do_shutdown == false) {\n    uv_close(handle, NULL);\n    return;\n  }\n\n  uv_shutdown_t* req = new uv_shutdown_t;\n  uv_stream_t* stream = reinterpret_cast<uv_stream_t*>(handle);\n  int err = uv_shutdown(req, stream, MaybeCloseNamedPipe);\n  if (err) {\n    assert(err == UV_ENOTCONN);\n    delete req;\n  }\n}\n\n\nvoid DisposeEventLoop(uv_loop_t* loop) {\n  // Don't call into JS land from now on.\n  process_state = SHUTTING_DOWN;\n  // Force-close open handles.\n  uv_walk(loop, MaybeCloseHandle, NULL);\n  uv_run(loop, UV_RUN_DEFAULT);\n  uv_loop_delete(loop);\n}\n\n\nvoid "],[40861,0,"int32_t "],[40873,1,""],[40873,0,"_code = "],[40893,4,""],[40893,0,"32"],[40902,0,";\n  DisposeEventLoop(uv_default_loop()"],[40943,0,"  exit(exit_code);\n"],[85377,0,"process_state = RUNNING;\n    "],[85495,1,""],[85496,14,""],[85497,4,""],[85498,5,""],[85499,34,""],[85506,7,""],[85506,0,"E"],[85508,2,""],[85508,0,"entL"],[85515,7,""],[85536,6,""],[85538,4,""],[85538,0,"V8::"],[85543,4,""],[85543,0,"ispose();"],[5281,117,""],[5282,1,""],[21630,75,""],[39220,266,""],[39221,813,""],[39222,135,""],[39223,3,""],[39224,94,""],[39225,3,""],[39226,7,""],[39227,1,""],[39228,26,""],[39319,8,""],[39324,8,""],[39324,0,"("],[39337,2,""],[39337,0,"eger"],[39345,28,""],[39346,10,""],[39351,19,""],[83762,1,""],[83765,25,""],[83766,3,""],[83857,0,"#ifndef NDEBUG\n  //"],[83877,0,"Clean"],[83883,0,"up. Not strictly necessary.\n  V8::"],[83924,1,""],[83924,0,"();\n  u"],[83932,4,""],[83932,0,"_l"],[83937,0,"_delete"],[83965,0,"#endif "],[83973,0,"//"],[83976,4,""],[83976,0,"N"],[83978,9,""],[83978,0,"EBUG"],[83928,37,""],[4335,0,"onst c"],[4344,0,"*"],[4346,1,""],[4364,33,""],[56646,0,"\n                                  const char* const* argv,\n                                  int exec_argc,\n                "],[56772,0,"                 const "],[56799,0,"*"],[56801,0,"const"],[56807,0," exec_"],[56817,2,""],[59704,23,""],[59709,1,""],[59709,0,"fo"],[59712,12,""],[59712,0," "],[59714,6,""],[59715,16,""],[59716,9,""],[59717,2,""],[59718,25,""],[59722,16,""],[59722,0,"0"],[59735,1,""],[59737,2,""],[59738,2,""],[59761,1,""],[59761,0,"i"],[59931,1,""],[59931,0,"uments"],[59951,7,""],[59952,2,""],[59952,0,"xec"],[59956,9,""],[59956,0,"argc"],[59970,6,""],[59970,0,"int"],[59981,1,""],[59981,0,"i"],[59985,7,""],[59986,6,""],[59986,0,"x"],[59988,1,""],[59988,0,"c_argc"],[59996,1,""],[59998,2,""],[59999,2,""],[60015,1,""],[60015,0,"uments"],[60064,0,"exec_"],[60074,1,""],[60074,0,"i"],[60156,1,""],[60156,0,"uments"],[68808,0,"command line argume"],[68828,0,"ts.\n//\n// argv is m"],[68849,0,"ifi"],[68853,0,"d"],[68855,0,"in pla"],[68862,0,"e. exec_argv and v8_argv are out arguments that\n// ParseArgs() all"],[68929,0,"cates "],[68936,0,"e"],[68938,0,"ory for "],[68950,0,"stores a pointer to the output\n// vector in.  The caller should free them with de"],[69032,0,"ete[].\n//\n// On exit:\n//\n//  * argv conta"],[69075,0,"s th"],[69090,0," with node and V8 options filtered out.\n//  * exec_argv contains both node and V8 options and nothing else"],[69198,0,"//  * v8_argv contain"],[69220,0," argv[0] plus any V8 options\ns"],[69274,0,"* argc,\n                      const char** argv,\n                      int*"],[69350,0,"exec_"],[69360,0,"\n                      const"],[69393,0,"*** exec_argv,\n                      int* v8_argc,\n           "],[69456,0,"          const char*"],[69479,0," v8_"],[69493,0,"const unsigned "],[69512,0,"nargs = static_cast<uns"],[69536,0,"gned int>(*argc)"],[69554,0,"  const char** new_exec_argv = new const char*[nargs];"],[69611,2,""],[69611,0,"const"],[69617,6,""],[69617,0,"char** new_v8_argv = "],[69639,0,"ew c"],[69644,0,"nst char*[nargs];\n  c"],[69666,0,"nst cha"],[69674,1,""],[69674,0,"** new_argv = new const c"],[69700,0,"ar*[nargs];\n\n  for ("],[69721,0,"nsigned "],[69730,0,"nt i = 0; i < narg"],[69749,0,"; ++i"],[69756,2,""],[69756,0,"{\n    new_exec_argv[i] = NULL;\n    new_v8_argv[i] = NULL;\n    n"],[69820,0,"w_argv[i] = NULL;\n "],[69840,1,""],[69840,0,"}\n\n  // exec_"],[69855,0,"gv "],[69859,0,"tarts with th"],[69874,0,"first "],[69883,0,"ion, the other two "],[69903,0,"tart with argv[0]."],[69924,2,""],[69924,0,"unsigned int new_exec_a"],[69948,0,"gc"],[69951,1,""],[69951,0,"= 0;\n  uns"],[69962,0,"gned"],[69967,0,"int new_v8_argc "],[69987,0,"\n "],[69990,0,"uns"],[69994,0,"gned"],[69999,1,""],[69999,0,"int"],[70003,0,"new_"],[70011,0," = 1;\n  new_v8_argv[0] = argv[0];\n  new_argv[0] = argv[0];\n\n  unsigned int index = 1"],[70096,0,"\n  while"],[70105,0,"("],[70107,2,""],[70107,0,"ndex < nargs && argv[index][0] == '-'"],[70162,1,""],[70163,0," const "],[70182,0,"ndex"],[70193,0,"unsigned int args_consumed = 1;\n\n    "],[70293,2,""],[70297,37,""],[70564,2,""],[70605,2,""],[70606,4,""],[70651,1,""],[70694,5,""],[70831,179,""],[70839,9,""],[70876,2,""],[70880,7,""],[70881,1,""],[70882,30,""],[70930,0,"."],[70969,0,"args_consumed += 1;\n        "],[71016,2,""],[71017,0,"ndex + 1"],[71036,3,""],[71036,0,"if (eval_s"],[71047,0,"r"],[71050,4,""],[71050,0,"g"],[71052,0,"=="],[71055,0,"NULL)"],[71061,0,"{\n"],[71066,3,""],[71072,2,""],[71073,0,"fpri"],[71078,2,""],[71079,2,""],[71079,0,"f(stde"],[71086,1,""],[71086,0,"r,"],[71089,1,""],[71089,0,"\"%"],[71092,0,":"],[71094,3,""],[71094,0,"%s"],[71097,0,"r"],[71099,2,""],[71099,0,"qui"],[71105,3,""],[71105,0," a"],[71109,5,""],[71110,1,""],[71110,0,"rg"],[71113,2,""],[71113,0,"m"],[71115,2,""],[71116,6,""],[71117,0,"\\n\","],[71122,2,""],[71124,2,""],[71124,0,"gv[0],"],[71131,5,""],[71131,0,"arg);"],[71137,1,""],[71142,2,""],[71144,1,""],[71145,1,""],[71146,5,""],[71147,2,""],[71148,17,""],[71148,0,"x"],[71151,2,""],[71151,0,"(1);"],[71162,2,""],[71164,1,""],[71164,0,"}\n"],[71167,6,""],[71168,4,""],[71169,7,""],[71170,7,""],[71171,11,""],[71172,4,""],[71172,0,"}"],[71174,2,""],[71175,6,""],[71176,1,""],[71177,7,""],[71177,0,"e"],[71189,0,"ndex"],[71199,1,""],[71199,0,"!"],[71206,1,""],[71207,18,""],[71207,0,"&&"],[71210,1,""],[71216,0,"ndex"],[71229,1,""],[71229,0,"!"],[71237,0,"{\n        args_"],[71254,3,""],[71255,0,"s"],[71257,0,"m"],[71259,0,"d += 1"],[71273,0,"  "],[71294,2,""],[71295,0,"ndex + 1"],[71312,0,"  "],[71355,2,""],[71355,0,"{\n          // Starts with \"\\\\-\": escaped expression, drop th"],[71417,0," backslash.\n          e"],[71450,0," += 1"],[71461,0,"    }\n      }\n    "],[71576,39,""],[71608,2,""],[71608,0,"no"],[71611,1,""],[71611,0,"de"],[71614,0,"reca"],[71622,1,""],[71639,1,""],[71639,0,"no_dep"],[71646,3,""],[71646,0,"ecat"],[71651,1,""],[71651,0,"on"],[71656,9,""],[71657,4,""],[71658,7,""],[71658,0,"u"],[71660,4,""],[71692,2,""],[71692,0,"trace"],[71726,1,""],[71726,0,"t"],[71728,15,""],[71729,3,""],[71730,19,""],[71730,0,"e"],[71783,0,"h"],[71785,3,""],[71785,0,"ow"],[71810,1,""],[71815,7,""],[71816,11,""],[71817,2,""],[71818,1,""],[71819,19,""],[71819,0,"ow"],[71872,3,""],[71872,0,"v8-"],[71876,4,""],[71877,4,""],[71881,0,"s"],[71899,0,"new_v8_"],[71911,1,""],[71911,0,"new_v8_argc"],[71926,0,"\"--help\";\n      new_v8_arg"],[71953,0," += 1;\n    } else {\n      // V8 "],[71986,0,"ptio"],[71991,0,".  Pas"],[71998,0," "],[72000,2,""],[72000,0,"hrough "],[72009,2,""],[72009,0,"-is.\n      new_v8_argv[new_v8_arg"],[72043,1,""],[72043,0,"] = "],[72049,6,""],[72049,0,"g"],[72058,4,""],[72058,0,"ne"],[72062,1,""],[72062,0,"v8_argc += 1;\n    }\n\n    m"],[72089,0,"mc"],[72092,0,"y(new_exec_a"],[72105,0,"gv + n"],[72112,0,"w_exec_arg"],[72123,0,",\n           "],[72137,1,""],[72137,0,"rgv + "],[72144,0,"ndex,\n           args_c"],[72169,0,"sumed *"],[72177,0,"sizeof(*argv));\n\n    new_exec_argc +"],[72215,1,""],[72215,0,"a"],[72217,0,"gs_cons"],[72225,0,"m"],[72227,0,"d"],[72234,0,"index += args_consumed;\n  "],[72261,0,"\n\n"],[72264,0," // Copy r"],[72275,1,""],[72275,0,"maining argument"],[72292,0,".\n  const unsign"],[72309,0,"d"],[72312,0,"nt args_le"],[72323,0,"t = nargs - index;\n "],[72344,0,"memcpy"],[72351,0,"new_"],[72359,1,""],[72359,0," + new_argc, argv + "],[72380,4,""],[72380,0,"ndex, args_left"],[72396,2,""],[72396,0,"*"],[72398,3,""],[72398,0,"sizeof(*argv"],[72411,0,");\n  new_argc +="],[72428,1,""],[72428,0,"args_left;\n"],[72442,0,"*exec_argc"],[72453,0,"="],[72455,0,"new_exec_argc;\n"],[72472,1,""],[72472,0,"*exec_a"],[72480,0,"gv = new_ex"],[72492,0,"c_"],[72495,1,""],[72495,0,"rgv"],[72502,0,"*v8_argc"],[72511,0,"="],[72513,1,""],[72513,0,"new_v8_argc;"],[72528,1,""],[72528,0,"*v8_argv = new_v8_argv;"],[72555,0,"// C"],[72561,3,""],[72561,0,"y "],[72564,0,"ew"],[72567,0,"argv ov"],[72575,0,"r argv a"],[72585,0," update argc.\n  memcpy(argv, new"],[72618,1,""],[72618,0,"argv, "],[72625,0,"ew_argc * sizeof(*argv));\n  "],[72655,1,""],[72655,0,"lete[] new_argv;\n  *argc"],[72682,0,"stat"],[72687,0,"c_cast<int>(new_argc)"],[79665,0,"void Init(int* arg"],[79684,0,",\n          const c"],[79709,5,""],[79709,0,"argv,\n          "],[79728,0,"*"],[79730,0,"exec_"],[79740,0,"\n          const"],[79761,0,"***"],[79765,1,""],[79765,0,"exec_"],[79774,2,""],[80499,0,"i"],[80501,0,"t v8_argc;\n  c"],[80516,4,""],[80516,0,"nst char** v8_argv;\n  "],[80558,0,", exec_argc, exec_argv, &v8_argc, &v8_argv"],[80603,0,"\n"],[80609,1,""],[80609,0,"The const_c"],[80621,1,""],[80622,0,"t do"],[80627,0,"sn't"],[80632,0,"viola"],[80638,1,""],[80640,1,""],[80640,0,"conceptual const-ness.  V8 do"],[80671,0,"n'"],[80675,0,"m"],[80677,0,"di"],[80680,0,"y\n  //"],[80694,1,""],[80694,0,"v"],[80696,3,""],[80696,0,"array"],[80702,1,""],[80703,0,"r"],[80709,8,""],[80710,13,""],[80710,0,"l"],[80712,1,""],[80712,0,"m"],[80714,8,""],[80714,0,"nt"],[80717,1,""],[80718,0,"it"],[80721,3,""],[80721,0,"po"],[80725,0,"ts"],[80729,1,""],[80729,0,"o.\n  V8::S"],[80740,2,""],[80740,0,"tFlagsFromC"],[80757,2,""],[80757,0,"L"],[80761,9,""],[80761,0,"(&"],[80765,0,"_"],[80770,2,""],[80770,0,","],[80772,4,""],[80772,0,"c"],[80774,3,""],[80775,1,""],[80775,0,"st"],[80778,9,""],[80779,0,"ast<c"],[80787,1,""],[80789,0,">("],[80793,0,"_"],[80798,2,""],[80798,0,"),"],[80801,1,""],[80801,0,"t"],[80803,2,""],[80803,0,"ue)"],[80811,0,"// Anyth"],[80820,7,""],[80820,0,"n"],[80822,2,""],[80822,0," th"],[80826,1,""],[80827,7,""],[80827,0,"'s s"],[80832,7,""],[80832,0,"ill"],[80836,2,""],[80836,0,"in"],[80841,0,"_"],[80850,0,"not "],[80856,4,""],[80856,0,"V8"],[80860,1,""],[80860,0,"r"],[80863,3,""],[80864,1,""],[80864,0,"node o"],[80871,1,""],[80872,0,"i"],[80874,0,"n.\n"],[80878,3,""],[80879,2,""],[80879,0,"fo"],[80882,0," ("],[80885,1,""],[80885,0,"n"],[80888,1,""],[80889,2,""],[80890,0,"= 1; i < v8_"],[80905,5,""],[80905,0,"c;"],[80908,0,"i+"],[80911,1,""],[80911,0,")"],[80913,14,""],[80913,0,"{"],[80915,2,""],[80917,2,""],[80918,2,""],[80919,2,""],[80919,0,"f"],[80921,1,""],[80921,0,"rintf("],[80928,2,""],[80929,6,""],[80931,5,""],[80932,0,"r,"],[80935,1,""],[80935,0,"\"%"],[80938,0,":"],[80940,1,""],[80941,4,""],[80941,0,"ad"],[80944,1,""],[80945,1,""],[80945,0,"p"],[80947,5,""],[80947,0,"i"],[80949,8,""],[80950,0,":"],[80952,0,"%"],[80954,4,""],[80954,0,"\\n\","],[80959,5,""],[80960,2,""],[80961,1,""],[80961,0,"gv[0], v8_"],[80972,3,""],[80972,0,"rgv["],[80977,2,""],[80977,0,"]);\n"],[80982,2,""],[80983,3,""],[80983,0,"}\n"],[80986,5,""],[80987,0,"de"],[80990,2,""],[80991,4,""],[80992,1,""],[80993,8,""],[80993,0,"[]"],[80996,11,""],[80998,0,"_"],[81002,6,""],[81002,0,"v"],[81005,2,""],[81009,0,"_"],[81016,4,""],[81017,13,""],[81017,0,"NULL"],[81023,0,"\n"],[81026,1,""],[81026,0,"if"],[81029,6,""],[81032,0,"_"],[81036,2,""],[81036,0,"c"],[81038,5,""],[81038,0,">"],[81040,12,""],[81040,0,"1"],[81043,1,""],[81043,0,"{\n   "],[81049,7,""],[81050,7,""],[81051,0,"it(1"],[81060,0,"}\n\n"],[81065,10,""],[81066,3,""],[81066,0,"f (d"],[81071,2,""],[81071,0,"bug"],[81075,0,"wa"],[81078,0,"t_con"],[81084,1,""],[81085,2,""],[81085,0,"ct) {\n  "],[81094,1,""],[81100,6,""],[81100,0," "],[81105,6,""],[81105,0," "],[81121,4,""],[81121,0,"[]"],[81124,0,"="],[81126,10,""],[81126,0,"\"--ex"],[81132,2,""],[81133,2,""],[81133,0,"s"],[81135,2,""],[81136,2,""],[81138,14,""],[81138,0,"bug"],[81142,1,""],[81144,10,""],[81144,0,"="],[81153,1,""],[81157,3,""],[81173,3,""],[81174,1,""],[81175,4,""],[81175,0,"Str"],[81180,0,"g(expos"],[81188,6,""],[81188,0,"_debu"],[81194,5,""],[81194,0,"_"],[81196,3,""],[81196,0,"s"],[81199,0,"sizeo"],[81205,2,""],[81205,0,"(expo"],[81212,0,"_debug_as) - 1"],[81229,0,"  }\n"],[82562,16,""],[83438,24,""],[83438,0,"\n"],[83443,31,""],[83443,0,"S"],[83445,14,""],[83447,60,""],[83448,20,""],[83450,32,""],[83451,9,""],[83452,20,""],[83453,5,""],[83456,2,""],[83457,5,""],[83457,0,","],[83459,5,""],[83460,7,""],[83465,64,""],[83466,6,""],[83470,5,""],[83474,2,""],[83476,45,""],[83478,36,""],[83479,2,""],[83480,5,""],[83481,11,""],[83481,0,"t"],[83487,2,""],[83488,13,""],[83488,0,">"],[83490,2,""],[83491,114,""],[83492,74,""],[83493,2,""],[83495,13,""],[83496,10,""],[83497,13,""],[83510,1,""],[83510,0,"d"],[83610,3,""],[83610,0,"Th"],[83613,1,""],[83613,0,"s"],[83615,0,"needs "],[83624,1,""],[83624,0,"r"],[83626,6,""],[83626,0,"n *b"],[83631,2,""],[83631,0,"fo"],[83634,5,""],[83634,0,"e*"],[83637,0,"V8::"],[83645,0,"ialize"],[83653,0,".  The"],[83660,1,""],[83660,0,"c"],[83662,3,""],[83662,0,"nst_cast "],[83672,1,""],[83674,6,""],[83675,0,"o"],[83677,1,""],[83683,0,"op"],[83686,1,""],[83686,0,"ion"],[83690,1,""],[83690,0,"l,"],[83693,3,""],[83693,0,"in"],[83696,1,""],[83696,0,"c"],[83698,1,""],[83700,1,""],[83701,3,""],[83701,0,"y"],[83703,0,"u're"],[83708,0,"wonder"],[83715,1,""],[83715,0,"ng"],[83721,0,"int exe"],[83729,6,""],[83729,0,"_"],[83733,2,""],[83734,3,""],[83734,0,";\n"],[83737,1,""],[83740,8,""],[83740,0,"nst ch"],[83748,3,""],[83748,0,"**"],[83751,0,"exec_"],[83760,1,""],[83762,1,""],[83764,8,""],[83764,0,"I"],[83766,5,""],[83766,0,"i"],[83768,2,""],[83768,0,"(&a"],[83772,2,""],[83772,0,"gc,"],[83776,4,""],[83776,0,"c"],[83778,9,""],[83779,17,""],[83780,2,""],[83780,0,"t_"],[83783,9,""],[83785,1,""],[83786,0,"<c"],[83789,1,""],[83790,1,""],[83790,0,"s"],[83793,8,""],[83793,0,"c"],[83795,8,""],[83796,2,""],[83796,0,"r**>("],[83805,2,""],[83805,0,"),"],[83808,6,""],[83808,0,"&exec_"],[83820,0,"&exec_"],[83830,5,""],[84227,0,"\n       "],[84265,0,", exec_argc, exec_argv"],[84946,4,""],[84946,0,"de"],[84950,6,""],[84951,1,""],[84952,0,"[]"],[84955,0,"exe"],[84959,4,""],[84959,0,"_argv;"],[84968,2,""],[84969,0,"x"],[84971,1,""],[84971,0,"c_"],[84977,6,""],[84977,0," = NULL"]],"_dtSpan":[342665,352931]},{"parents":[332],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[64572,0,"// Most of the time, it's best to use `console.error` to write\n// to the process.stderr stream.  Howe"],[64674,0,"er, in s"],[64683,0,"me cases, such as\n// when debugg"],[64716,0,"ng the stream.Writable class or the process.nextTick\n// function, it is useful to bypass JavaScript entirely.\nstatic voi"],[64838,0,"RawDebug(const FunctionCallbackInfo<Value>& args) {\n  HandleScope scope(node_isolate);\n\n  assert(args.Length() == 1 && args[0]->IsString() &&\n         \"must be called with a single string\");\n\n  String::Utf8Value message(args[0]);\n  fprintf(stderr, \"%s\\n\", *message);\n  fflush(stderr);\n}\n\n\nvoid "],[67089,0,"NODE_SET_METHOD(process_l, \"_rawDebug\", RawDebug);\n\n  "]],"_dtSpan":[352931,353540]},{"parents":[333],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[35625,0,"// uid_t is "],[35638,0,"n uint32_t on all suppo"],[35662,0,"ted platforms.\n  ar"],[35705,0,"static_cast<uint32_t>("],[35736,0,")"],[35807,0,"// gid_t is "],[35820,0,"n uint32_t on all suppo"],[35844,0,"ted platforms.\n  ar"],[35887,0,"static_cast<uint32_t>("],[35918,0,")"],[1609,0,"env.h\"\n#include \"env-inl.h\"\n#include \""],[2853,20,""],[2855,2,""],[2886,56,""],[2887,9,""],[3040,0,"// FIXME(bnoordhuis) Make these per-context?\n"],[3214,964,""],[3505,28,""],[3558,181,""],[3559,2,""],[3560,18,""],[3562,11,""],[3563,20,""],[3564,166,""],[4702,3,""],[4702,0,"Environm"],[4711,1,""],[4711,0,"n"],[4713,3,""],[4713,0,"* e"],[4717,3,""],[4717,0,"v"],[4719,1,""],[4721,3,""],[4721,0,"Environm"],[4730,2,""],[4730,0,"nt::from"],[4749,3,""],[4752,6,""],[4752,0,"ck_h"],[4757,2,""],[4757,0,"ndl"],[4761,2,""],[4762,2,""],[4762,0,"h"],[4764,8,""],[4764,0,"ndle"],[4771,1,""],[4773,2,""],[4773,0,"Co"],[4776,2,""],[4776,0,"t"],[4778,0,"xt::"],[4788,1,""],[4790,3,""],[4791,9,""],[4793,17,""],[4793,0,"x"],[4795,1,""],[4796,0,"s"],[4798,16,""],[4798,0,"o"],[4800,20,""],[4801,45,""],[4802,3,""],[4803,3,""],[4803,0,"nv->c"],[4809,2,""],[4809,0,"n"],[4812,11,""],[4812,0,"x"],[4814,10,""],[4814,0,"()"],[4818,4,""],[4819,1,""],[4834,0,"env, env->"],[4852,1,""],[4852,0,"object()"],[4862,0,"env->"],[4887,11,""],[4887,0,"tring()"],[4942,7,""],[4946,5,""],[4947,2,""],[4999,0,"."],[5003,4,""],[5003,0,"// TODO(bnoo"],[5016,2,""],[5016,0,"d"],[5018,0,"uis) M"],[5025,3,""],[5025,0,"yb"],[5029,10,""],[5030,4,""],[5031,1,""],[5031,0,"k"],[5033,2,""],[5033,0," lib"],[5038,7,""],[5038,0,"v"],[5041,2,""],[5041,0,"cc"],[5044,1,""],[5044,0,"p"],[5046,3,""],[5046,0," NULL idle callb"],[5063,2,""],[5063,0,"ck"],[5066,7,""],[5066,0,"."],[10923,0,"Environment* env = Environment::GetCurrent(node_isolate);\n\n  "],[11372,302,""],[11796,1,""],[11808,0,"nv->e"],[11819,5,""],[11819,0,"tring()"],[11877,0,"env->"],[11888,5,""],[11888,0,"tring()"],[11907,0,"\n"],[11918,0," != NULL"],[11928,0,"{\n    "],[11944,2,""],[11944,0,"nv->"],[11954,5,""],[11954,0,"tring()"],[12007,0,"}\n\n  "],[12023,0," != NULL"],[12033,0,"{\n    "],[12048,0,"env->"],[12062,5,""],[12062,0,"tring()"],[12112,0,"}\n\n  "],[12361,1,""],[12362,2,""],[12363,18,""],[12364,53,""],[12365,4,""],[12365,0,"v"],[12367,1,""],[12367,0,"r"],[12369,3,""],[12369,0,"nm"],[12372,14,""],[12372,0,"nt*"],[12376,3,""],[12377,2,""],[12378,8,""],[12378,0,"v"],[12382,13,""],[12383,8,""],[12384,4,""],[12384,0,"v"],[12386,1,""],[12386,0,"r"],[12388,7,""],[12388,0,"nm"],[12391,2,""],[12392,14,""],[12393,31,""],[12393,0,"::"],[12396,4,""],[12397,6,""],[12398,0,"Curr"],[12403,5,""],[12403,0,"n"],[12405,44,""],[12417,7,""],[12418,1,""],[12420,4,""],[13692,1,""],[13754,0,"nv->e"],[13765,5,""],[13765,0,"tring()"],[13823,0,"env->"],[13834,5,""],[13834,0,"tring()"],[13853,0,"\n"],[13864,0," != NULL"],[13874,0,"{\n    "],[13890,2,""],[13890,0,"nv->"],[13900,5,""],[13900,0,"tring()"],[13922,0,"}\n\n  "],[13938,0," != NULL"],[13948,0,"{\n    "],[13963,0,"env->"],[13977,5,""],[13977,0,"tring()"],[14027,0,"}\n\n  "],[14914,0,"Environment* env = Environment::GetCurrent(node_isolate);\n\n  "],[15123,19,""],[15124,16,""],[15125,44,""],[15126,90,""],[15127,133,""],[15550,1,""],[15563,0,"nv->e"],[15574,5,""],[15574,0,"tring()"],[15621,0,"\n"],[15632,0," != NULL"],[15642,0,"{\n    "],[15658,2,""],[15658,0,"nv->"],[15668,5,""],[15668,0,"tring()"],[15721,0,"}\n\n  "],[15737,0," != NULL"],[15747,0,"{\n    "],[15762,0,"env->"],[15776,5,""],[15776,0,"tring()"],[15826,0,"}\n\n  "],[15917,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n\n  "],[15987,0,"env->"],[16005,0,"()"],[16019,0,"env->set_using_domains(true);\n\n  "],[16083,24,""],[16108,0,"_object"],[16118,7,""],[16119,10,""],[16120,13,""],[16120,0,"v->"],[16131,1,""],[16131,0,"object("],[16141,0,"\n"],[16150,1,""],[16150,0,"String> tick_c"],[16166,0,"lback_f"],[16174,3,""],[16174,0,"nc"],[16177,2,""],[16177,0,"ion"],[16181,1,""],[16181,0,"key"],[16193,13,""],[16251,0,";\n  Local<Function> tick_callback_function =\n      process_object->Get(tick_callback_function_key).As<Function>("],[16366,0,"\n"],[16375,1,""],[16375,0,"ick_callba"],[16386,0,"k"],[16388,1,""],[16388,0,"function"],[16510,45,""],[16520,0,"_object"],[16586,0,"\n                     "],[16610,1,""],[16610,0,"ick_callback_fun"],[16627,0,"tion"],[16636,4,""],[16637,0,"nv->"],[16642,1,""],[16642,0,"et"],[16649,1,""],[16649,0,"_c"],[16658,11,""],[16659,0,"funct"],[16665,1,""],[16666,0,"n(tick_ca"],[16676,0,"lb"],[16679,0,"ck_func"],[16687,6,""],[16687,0,"ion"],[16693,0,"\n"],[16816,1,""],[16816,0,"env->set"],[16832,19,""],[16833,4,""],[16833,0,"rray("],[16860,0,"\n"],[16984,0,"\n"],[17001,0,"domain_"],[17012,0,"_obj"],[17043,0,"Environment::DomainFlag* domain_"],[17079,0," = env"],[17087,0,"domain_flag();\n  domain_flag_obj->"],[17161,1,""],[17161,0,"\n      "],[17179,0,"->fields()"],[17191,17,""],[17197,25,""],[17224,39,""],[17230,44,""],[17236,11,""],[17241,1,""],[17241,0,"->fields_"],[17255,4,""],[17255,0,"())"],[17278,1,""],[17278,0,"Mak"],[17282,1,""],[17288,0,"Callback"],[17297,1,""],[17297,0,"Environment*"],[17310,1,""],[17310,0,"env,"],[17317,2,""],[17318,2,""],[17319,6,""],[17320,3,""],[17321,5,""],[17322,2,""],[17323,2,""],[17324,6,""],[17325,6,""],[17326,3,""],[17327,4,""],[17328,7,""],[17330,2,""],[17331,12,""],[17332,2,""],[17333,24,""],[17337,6,""],[17338,21,""],[17340,6,""],[17341,31,""],[17342,57,""],[17342,0,"      "],[17349,3,""],[17396,0,"              "],[17462,0,"              "],[17505,0,"              "],[17548,5,""],[17548,0,"If you hit "],[17560,1,""],[17560,0,"his ass"],[17568,3,""],[17569,1,""],[17569,0,"t"],[17571,2,""],[17571,0,"on,"],[17575,1,""],[17575,0,"y"],[17577,2,""],[17577,0,"u"],[17582,2,""],[17582,0,"g"],[17584,9,""],[17585,5,""],[17589,1,""],[17590,4,""],[17590,0,"nt"],[17593,0,"r"],[17595,0,"t"],[17597,2,""],[17598,12,""],[17599,6,""],[17599,0,"v8::C"],[17605,3,""],[17606,0,"text"],[17611,5,""],[17613,2,""],[17613,0,"r"],[17615,6,""],[17615,0,"t."],[17620,7,""],[17620,0,"ass"],[17625,13,""],[17626,1,""],[17627,9,""],[17629,0,"v->con"],[17637,8,""],[17637,0,"xt()"],[17643,0,"="],[17645,22,""],[17645,0,"e"],[17647,4,""],[17647,0,"v->"],[17657,3,""],[17657,0,"()->G"],[17663,1,""],[17664,1,""],[17664,0,"Cur"],[17668,8,""],[17669,2,""],[17669,0,"n"],[17671,5,""],[17671,0,"C"],[17673,26,""],[17674,9,""],[17675,4,""],[17677,1,""],[17678,1,""],[17678,0,"()"],[17683,0,"\n"],[17686,0,"//"],[17689,23,""],[17689,0,"TO"],[17692,1,""],[17693,14,""],[17694,0,"trev"],[17700,3,""],[17700,0,"rr"],[17704,0,") Hook f"],[17713,0,"r "],[17716,0,"ong st"],[17723,0,"ck "],[17727,0,"rac"],[17731,1,""],[17731,0,"s"],[17733,6,""],[17733,0,"t"],[17735,1,""],[17735,0," b"],[17738,0," ma"],[17742,4,""],[17742,0,"e"],[17744,2,""],[17744,0,"here."],[17789,0,"env->"],[17802,5,""],[17802,0,"tring()"],[17836,24,""],[17837,17,""],[17838,7,""],[17839,1,""],[17973,4,""],[17973,0,".As<"],[17983,0,">"],[17988,30,""],[18009,0,"env->"],[18024,5,""],[18024,0,"tring()"],[18128,1,""],[18128,0,"\n"],[18131,6,""],[18132,1,""],[18148,5,""],[18148,0," en"],[18152,1,""],[18152,0,"er =\n        "],[18179,0,"v->en"],[18189,3,""],[18189,0,"tring()).As<Functi"],[18208,2,""],[18208,0,"n>("],[18225,1,""],[18230,1,""],[18230,0,"->"],[18234,3,""],[18234,0,"Func"],[18239,1,""],[18239,0,"ion"],[18514,1,""],[18517,4,""],[18518,2,""],[18533,5,""],[18533,0," exi"],[18538,1,""],[18538,0," =\n        "],[18562,0,"nv->e"],[18572,3,""],[18572,0,"tring()).As<Functi"],[18591,2,""],[18591,0,"n>("],[18608,1,""],[18612,1,""],[18612,0,"->"],[18616,3,""],[18616,0,"Func"],[18621,1,""],[18621,0,"ion"],[18747,0,"Environment::T"],[18762,0,"ckIn"],[18767,0,"o*"],[18770,1,""],[18779,1,""],[18779,0," = env->tick_inf"],[18796,2,""],[18796,0,"();\n\n  if (tick_info->"],[18828,0,"()"],[18852,4,""],[18852,0,"->set_"],[18868,3,""],[18868,0,"("],[18870,0,")"],[18909,4,""],[18909,0,"->"],[18918,0,"()"],[18965,4,""],[18965,0,"->"],[18973,0,"()"],[18997,4,""],[18997,0,"->set_"],[19008,3,""],[19008,0,"("],[19010,0,")"],[19091,0,"_object"],[19101,1,""],[19102,6,""],[19103,23,""],[19103,0,"v->"],[19114,1,""],[19114,0,"object("],[19142,0,"tick_callback_"],[19157,0,"unctio"],[19167,7,""],[19169,0,"v->"],[19173,4,""],[19173,0,"ick_"],[19180,9,""],[19181,0,"b"],[19183,0,"ck_func"],[19191,2,""],[19191,0,"ion();\n "],[19200,8,""],[19204,1,""],[19204,0,"_c"],[19213,5,""],[19213,0,"_"],[19215,0,"unctio"],[19236,0,"_object"],[19359,1,""],[19359,0," "],[19373,0,"Environment* env,\n                           "],[19460,0,"              "],[19520,0,"              "],[19557,0,"              "],[19600,0,"If you hit this assertion, you forgot to enter the v8::Context first.\n  assert(env->context() == env->isolate()->GetCurrentContext());\n\n  // "],[19825,0,"_object"],[19835,7,""],[19837,23,""],[19837,0,"v->"],[19848,1,""],[19848,0,"object("],[19865,0,"env->"],[19883,0,"()"],[19917,0,"env, "],[19953,45,""],[19956,99,""],[19957,93,""],[19958,147,""],[20139,0,"Environment::TickInfo* tick_info = env->tick_info();\n\n  "],[20208,4,""],[20208,0,"->"],[20217,0,"()"],[20264,4,""],[20264,0,"->"],[20272,0,"()"],[20296,4,""],[20296,0,"->set_"],[20307,3,""],[20307,0,"("],[20309,0,")"],[20338,2,""],[20338,0,"lazy l"],[20345,4,""],[20345,0,"ad"],[20349,0,"o domain n"],[20362,1,""],[20362,0," t"],[20367,1,""],[20368,6,""],[20372,0,"backs"],[20396,0,"tick_callback_"],[20411,0,"unctio"],[20421,1,""],[20422,2,""],[20422,0,"nv->tick_callback_function();\n  "],[20455,1,""],[20455,0,"f ("],[20459,1,""],[20459,0,"ick_callback_fu"],[20475,0,"c"],[20477,1,""],[20477,0,"i"],[20479,0,"n.IsEmpty()) {\n    "],[20503,0,"<String> tick_callback_function_key =\n        FIXED_ONE_BYTE_STRING"],[20585,0,"\"_tickCallback\");\n    tick_callback_function =\n        process_object->Get(tick_callback_function_key).As<Function>();\n    if (!tick_callback_function->IsFunction()) {\n      fprintf(stderr, \""],[20783,0,"."],[20797,0," assigned to non-function\\n\");\n      abort("],[20845,0,"  }\n    env->set_tick_callback_function(tick_callback_"],[20900,0,"unctio"],[20907,0,");\n  }\n\n  // process nextTicks after call\n  tick_callback_function"],[20987,0,"_object"],[21128,1,""],[21128,0," "],[21142,0,"Environment* env,\n                           "],[21229,0,"              "],[21272,0,"              "],[21309,0,"              "],[21349,1,""],[21349,0,"// If you hit this "],[21369,0,"ssertion, you forgot to e"],[21395,2,""],[21395,0,"ter th"],[21402,2,""],[21402,0," v8::C"],[21409,1,""],[21409,0,"nt"],[21412,0,"xt first.\n "],[21424,0,"as"],[21427,0,"ert(env->"],[21438,1,""],[21438,0,"nt"],[21441,0,"xt"],[21444,0,") == e"],[21451,4,""],[21451,0,"v->"],[21461,0,"("],[21463,0,"->GetCurrentContext())"],[21593,0,"env->"],[21611,0,"("],[21613,0,") {"],[21628,12,""],[21647,0,"env, "],[21681,1,""],[21685,0,"}\n\n  "],[21697,12,""],[21710,0,"env, "],[21743,1,""],[21763,1,""],[21763,0," "],[21777,0,"Environment* env,\n                           "],[21864,0,"              "],[21920,0,"              "],[21957,0,"              "],[21997,1,""],[21997,0,"// If you hit this "],[22017,0,"ssertion, you forgot to e"],[22043,2,""],[22043,0,"t"],[22045,2,""],[22045,0,"r the v8::C"],[22057,1,""],[22057,0,"nt"],[22060,0,"xt first.\n"],[22071,0," a"],[22074,0,"sert(env->"],[22086,1,""],[22086,0,"nt"],[22089,0,"xt"],[22092,0,") == e"],[22099,4,""],[22099,0,"v->"],[22109,0,"("],[22111,0,"->GetCurrentContext())"],[22242,0,"env->"],[22260,0,"()"],[22263,0," {"],[22277,12,""],[22296,0,"env, "],[22329,1,""],[22334,0,"}\n\n  "],[22346,12,""],[22359,0,"env, "],[22392,1,""],[22412,1,""],[22412,0," "],[22426,0,"Environment* env,\n                           "],[22513,0,"              "],[22560,0,"              "],[22597,0,"              "],[22637,1,""],[22637,0,"// If you hit this "],[22657,0,"ssertio"],[22665,2,""],[22665,0,", you forgot to enter th"],[22690,2,""],[22690,0," v8::C"],[22697,1,""],[22697,0,"nt"],[22700,0,"xt first.\n "],[22712,0,"as"],[22715,0,"ert(env->"],[22726,1,""],[22726,0,"nt"],[22729,0,"xt"],[22732,0,") == e"],[22739,4,""],[22739,0,"v->"],[22749,0,"()->GetCurrentContext()"],[22775,1,""],[22846,0,"return MakeCallback(env, object, method_string, argc, argv);\n}\n\n\nHandle<Value> MakeCallback(const "],[22951,0,"Object> object,\n                           const char* method,\n                           int argc,\n                           Handle<"],[23092,0,"a"],[23094,0,"gv[]) {\n  Local<Cont"],[23115,0,"x"],[23117,0,">"],[23119,0,"context "],[23129,0,"object->CreationContext();\n  Environment* env = Environment::GetCurrent(context);\n  Context::Scope context_scope(context);\n  HandleScope handle_scope(env->isolate());\n  return handle_scope.Close("],[23337,0,"env, "],[23356,0,", argc, argv));\n}\n\n\nHandle<Value> MakeCallback(const Handle<Object> object,\n                           const Handle<String> symbol,\n                           int argc,\n                           Handle<Value> argv[]) {\n  Local<Context> context = object->CreationContext();\n  Environment* env = Environment::GetCurrent(context);\n  Context::Scope context_scope(context);\n  HandleScope handle_scope(env->isolate());\n  return handle"],[23787,0,"cope.Close(MakeCallback(env, object, symbol, argc, argv));\n}\n\n\nHandle<Value> MakeCallback(const Handle<Object> object,\n                           const Handle<Function> callback,\n                           in"],[23996,0," argc,\n                           Handle<Value> a"],[24046,0,"gv[]) {\n  Local<Context> context = object->CreationContext();\n  Environment* env = Environment::GetCurrent(context);\n  Context::Scope context_scope(context);\n  HandleScope handle_scope(env->"],[24237,0,"solate());\n  return handle_scope.Close(MakeCallback(e"],[24291,0,"v, object, callback, ar"],[24315,0,"c"],[24321,0,"v));\n}\n\n\nHandle<Value> MakeDomainCallback(const Handle<Object> object,\n                                 const Handle<Function> callback,\n                                 int arg"],[24500,0,"\n                                 Handle<Value>"],[24552,0,"[]"],[24555,0," {\n  Local<Context> context = object->CreationContext();\n  Environment* env = Environment::GetCurrent(context)"],[24667,0,"  Context::Scope context_scope(context);\n  HandleScope handle_scope(env->isolate());"],[24761,0,"handle_"],[24780,1,""],[24780,0,"\n      MakeDomainCallback(env, obj"],[24815,0,"c"],[24817,0,", callback, argc, argv)"],[40556,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[40633,0,"handle_"],[40646,3,""],[40646,0,"args.G"],[40653,2,""],[40653,0,"tI"],[40661,0,"()"],[40680,1,""],[40788,92,""],[40789,35,""],[40790,7,""],[40791,22,""],[40792,43,""],[40793,10,""],[40796,2,""],[40798,70,""],[40802,22,""],[40803,22,""],[40905,0,"\n"],[40908,3,""],[40908,0,"L"],[40910,1,""],[40910,0,"cal<Integer"],[40922,4,""],[40922,0," "],[40933,8,""],[40933,0," ="],[40936,1,""],[40942,5,""],[40999,11,""],[41000,26,""],[41013,1,""],[41017,1,""],[41017,0,"Local<I"],[41025,3,""],[41025,0,"teger"],[41031,4,""],[41031,0," "],[41041,8,""],[41041,0," ="],[41044,6,""],[41106,0," node_isolate);\n"],[41125,0,"Local<Object>"],[41139,1,""],[41139,0,"info"],[41144,0,"="],[41146,0,"Object::New();\n"],[41163,0,"info->Set(env->rss_string(),"],[41192,0,"Number::New(node_isolate,"],[41218,0,"rss));\n"],[41227,0,"info->Set(env->heap_total_string(),"],[41263,0,"heap_total);\n"],[41278,22,""],[41278,0,"i"],[41280,0,"f"],[41282,0,"->Set(env->heap_use"],[41302,0,"_string(), h"],[41315,0,"ap"],[41318,1,""],[41318,0,"u"],[41320,4,""],[41321,1,""],[41321,0,"d"],[42992,0,"//\n// FIXME(bnoordhuis) Not multi-context ready. TBD how to resol"],[43058,0,"e the c"],[43066,0,"nfl"],[43070,0,"ct\n// when two contexts try to load the same share"],[43122,0,"object. Maybe have a shadow\n// cache that's a plain C list or hash table that's shared across contexts?\nvoid "],[43283,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[43360,0,"handle_"],[43373,3,""],[43373,0,"args.G"],[43380,2,""],[43380,0,"tI"],[43388,0,"()"],[43659,0,"Local<Str"],[43669,1,""],[43669,0,"ng>"],[43673,1,""],[43682,11,""],[43683,4,""],[43683,0,"ring"],[43688,2,""],[43688,0,"="],[43690,3,""],[43691,0,"nv->e"],[43704,40,""],[43705,8,""],[43706,3,""],[43706,0,"ing("],[43712,4,""],[43760,5,""],[43760,0,"tring"],[43858,0,"e"],[43860,4,""],[43860,0,"v->"],[43870,0,"()"],[45510,0,"if (mod->register_context_func != NULL) {\n    mod->register_context_func(exports, module, env->context());\n  } else if ("],[45648,0," != NULL) {\n    mod->register_func"],[45701,0,"  } else {"],[45714,0,"  return ThrowError(\"Module has no declared entry point.\");\n  }\n\n  "],[46428,1,""],[46429,2,""],[46430,13,""],[46430,0,"Env"],[46434,0,"r"],[46437,3,""],[46438,9,""],[46438,0,"en"],[46441,4,""],[46441,0,"*"],[46443,2,""],[46443,0,"env"],[46447,0,"="],[46449,14,""],[46449,0,"Env"],[46453,0,"r"],[46456,3,""],[46457,34,""],[46457,0,"ent::"],[46463,0,"etCurrent"],[46482,8,""],[46484,5,""],[46485,6,""],[46487,5,""],[46511,0,"_object"],[46521,1,""],[46522,0,"nv->p"],[46528,0,"oce"],[46532,1,""],[46533,1,""],[46533,0,"_obj"],[46538,1,""],[46538,0,"c"],[46540,2,""],[46540,0,"();\n  "],[46551,1,""],[46551,0,"<Stri"],[46557,0,"g> fatal_excepti"],[46574,2,""],[46574,0,"n"],[46576,0,"str"],[46580,3,""],[46580,0,"ng = env->f"],[46593,0,"al_"],[46597,5,""],[46597,0,"x"],[46600,0,"ption_"],[46607,3,""],[46607,0,"tring("],[46624,3,""],[46624,0,"F"],[46626,1,""],[46626,0,"nction"],[46640,1,""],[46640,0,"exception_function"],[46660,0,"\n     "],[46674,0,"_object"],[46704,3,""],[46704,0,"tring).As<Functi"],[46721,1,""],[46721,0,"n>("],[46741,1,""],[46741,0,"exception_function"],[46971,61,""],[47202,0,"\n     "],[47215,0,"exception_"],[47226,0,"unction"],[47247,0,"_object"],[48068,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[48145,0,"handle_"],[48158,3,""],[48158,0,"args.G"],[48165,2,""],[48165,0,"tI"],[48173,0,"()"],[48263,28,""],[48288,1,""],[48289,6,""],[48290,23,""],[48290,0,"v->"],[48306,0,"_object("],[48620,7,""],[48622,23,""],[48622,0,"v->"],[48641,0,"_array("],[48741,2,""],[48741,0,"node_module_struct*"],[48761,2,""],[48764,1,""],[48796,1,""],[48796,0,";\n  if (mod"],[48902,4,""],[48903,3,""],[48921,0,"assert("],[48931,1,""],[48946,1,""],[48946,0," == NULL);\n    ass"],[48965,2,""],[48965,0,"rt(m"],[48970,0,"d->registe"],[48981,0,"_contex"],[48989,0,"_func != NULL);\n    Local<Value> unu"],[49026,1,""],[49026,0,"ed ="],[49041,0,"e"],[49043,0,"v->is"],[49049,0,"late());\n    mo"],[49065,0,"->regist"],[49074,0,"r"],[49076,1,""],[49076,0,"context_func(exports, unu"],[49102,0,"ed, env->c"],[49113,2,""],[49113,0,"n"],[49116,0,"xt("],[57111,0,"Environment* env = Environment::GetCurrent("],[57162,1,""],[57162,0,"Isolat"],[57169,0,"());\n  cons"],[57181,0," "],[57183,1,""],[57183,0,"v_check_t* immediate_check_handle = e"],[57221,1,""],[57221,0,"v->immediate_check_h"],[57242,0,"nd"],[57245,1,""],[57248,2,""],[57248,0,";\n  bool activ"],[57263,0," = uv_is_ac"],[57275,0,"ive"],[57279,0,"\n      rei"],[57290,0,"t"],[57292,0,"rpr"],[57296,0,"t_cast<const uv_han"],[57316,0,"le"],[57319,0,"t*>("],[57334,1,""],[57334,0,"heck_handle)"],[57349,0,"  info.GetReturnValue().Set(active);\n"],[57430,0,"\n    "],[57459,16,""],[57463,20,""],[57483,12,""],[57487,24,""],[57520,0," info"],[57531,0,"Environment* env = Environment::GetCurrent(info.GetIsolate());\n  "],[57608,0,"handle_"],[57621,0,"i"],[57623,0,"f"],[57625,1,""],[57625,0,".G"],[57628,2,""],[57628,0,"tI"],[57636,0,"()"],[57644,4,""],[57644,0,"uv_check_t*"],[57656,4,""],[57656,0,"immediate_check"],[57672,1,""],[57672,0,"h"],[57674,0,"nd"],[57677,1,""],[57681,0,"en"],[57684,4,""],[57686,4,""],[57686,0,"imm"],[57690,0,"di"],[57693,2,""],[57693,0,"te_check_h"],[57704,0,"nd"],[57707,1,""],[57711,1,""],[57714,0,"bool act"],[57723,1,""],[57723,0,"ve ="],[57728,0,"uv_is_active"],[57741,0,"\n      rei"],[57752,0,"t"],[57754,0,"rpr"],[57758,0,"t_cast<const uv_han"],[57778,0,"le"],[57781,0,"t*>("],[57796,1,""],[57796,0,"heck_handle));\n\n  if (active"],[57828,1,""],[57828,0,"value->B"],[57839,2,""],[57839,0,"e"],[57841,0,"nVa"],[57847,0,"("],[57849,0,")\n   "],[57866,3,""],[57866,0,"uv_i"],[57871,0,"le"],[57874,0,"t* "],[57887,2,""],[57887,0,"idle_handle"],[57901,3,""],[57901,0,"env->immediate_id"],[57919,0,"e"],[57921,1,""],[57921,0,"h"],[57923,0,"nd"],[57926,1,""],[57927,0,"()"],[57938,1,""],[57938,0,"activ"],[57944,0,") {\n    uv_ch"],[57958,1,""],[57958,0,"ck"],[57961,0,"stop("],[57977,1,""],[57977,0,"heck_handle"],[57989,0,";\n"],[57992,0,"   uv_idle_stop(immediate_idle_handle);\n  } else "],[58062,7,""],[58072,3,""],[58075,3,""],[58075,0,"ck_ha"],[58081,1,""],[58082,0,"l"],[58084,2,""],[58084,0,", "],[58110,1,""],[58110,0,"I"],[58140,4,""],[58140,0,"stop "],[58146,3,""],[58146,0,"he"],[58159,0," from blocking in poll."],[58201,6,""],[58211,0,"i"],[58213,38,""],[58214,14,""],[58215,2,""],[58216,7,""],[58217,10,""],[58218,21,""],[58218,0,"n"],[58222,8,""],[58222,0,", I"],[58228,2,""],[58228,0,"I"],[58237,2,""],[58237,0,"D"],[58509,3,""],[58509,0,"voi"],[58513,10,""],[58533,0,"Env"],[58537,0,"ronme"],[58544,0,"*"],[58546,4,""],[58546,0,"env"],[58575,0,"int argc,\n              "],[58634,10,""],[58697,10,""],[58764,1,""],[58774,71,""],[58776,33,""],[58777,4,""],[58779,52,""],[58803,4,""],[58804,18,""],[58805,7,""],[58805,0,"v"],[58808,24,""],[58814,3,""],[58815,30,""],[58815,0,"_"],[58817,9,""],[58819,12,""],[58820,9,""],[58821,10,""],[58823,21,""],[59165,39,""],[59168,17,""],[59169,32,""],[59194,0,"\n                   "],[59232,0,"\n                 "],[59251,0,"  env->"],[59264,0,"_load_li"],[59273,0,"t_array()"],[60982,2,""],[61788,0,"process_"],[61799,1,""],[61799,0,"_t"],[61836,0,"process_"],[61847,1,""],[61847,0,"_t"],[61932,0,"         "],[61991,0,"         "],[62049,0,"         "],[62109,0,"         "],[62172,0,"         "],[62213,0,"process_"],[62227,0,"process_"],[62238,1,""],[62238,0,"_t"],[62323,0,"process_"],[65596,0,"tick_"],[65606,0,"o"],[65608,2,""],[65608,0,"j"],[65629,0,"tick_"],[65639,0,"o"],[65641,2,""],[65641,0,"j"],[65684,1,""],[65684,0,"\n      env->"],[65705,3,""],[65705,0,"()->fields()"],[65719,41,""],[65725,5,""],[65758,47,""],[65758,0,"env->tick_info()->fields_count()"],[65854,3,""],[65858,0,"tick_"],[65868,0,"o"],[65870,2,""],[65870,0,"j"],[66005,32,""],[66738,2,""],[66738,0,"Enviro"],[66745,2,""],[66745,0,"m"],[66747,6,""],[66747,0,"n"],[66749,1,""],[66749,0,"*"],[66751,4,""],[66752,4,""],[66752,0,"nv"],[66799,1,""],[66800,66,""],[66801,15,""],[66802,1,""],[66803,50,""],[68039,0,"en"],[68042,4,""],[68042,0,"->c"],[68050,12,""],[68554,0,"env->"],[68567,1,""],[68567,0,"object()"],[68623,0,"env->"],[68636,1,""],[68636,0,"object()"],[75205,0,"Environment* env = Environment::GetCurrent(node_isolate);\n  Context::Scope context_scope(env->context());\n  "],[75338,0,"e"],[75340,4,""],[75340,0,"v->"],[75350,0,"()"],[75371,3,""],[75371,0,"message"],[75398,3,""],[75398,0,"message"],[75466,0,"    "],[75620,3,""],[75620,0,"message"],[75648,0,"env, env->"],[75666,1,""],[75666,0,"object()"],[76567,2,""],[76567,0,"if"],[76570,1,""],[76570,0,"(Envir"],[76577,1,""],[76578,3,""],[76578,0,"m"],[76580,2,""],[76580,0,"n"],[76582,10,""],[76582,0,"::"],[76585,11,""],[76586,5,""],[76586,0,"tC"],[76589,3,""],[76590,16,""],[76592,7,""],[76593,7,""],[76594,23,""],[76594,0,"C"],[76597,2,""],[76598,3,""],[76598,0,"k"],[76601,6,""],[76601,0,"("],[76606,13,""],[76606,0,"_"],[76608,6,""],[76608,0,"s"],[76610,1,""],[76610,0,"lat"],[76614,13,""],[76615,0," != NULL"],[76624,0," {"],[76651,0,"  }\n"],[82116,0,"// FIXME(bnoordhuis) Should be per-isolate or per-context, not global.\n  "],[82445,0,"// FIXME(bnoordhuis) Should be per-isolate or per-context, not global.\n  "],[84093,191,""],[84391,0,"// FIXME(bnoordhuis) Should be per-i"],[84428,0,"olate or per-context, no"],[84453,0," global.\n    st"],[84860,0,"// TODO(bnoordhuis) Turn into per-context e"],[84904,0,"ent.\nv"],[84924,0,"Environment* env"],[85317,0,"Environment* en"],[85333,1,""],[85333,0,") {\n  // process.emit('exit')\n  Context"],[85374,0,"Scope context_scope(env->context());\n  "],[85419,1,""],[85419,0,"Scope handle_scope(en"],[85441,3,""],[85441,0,"->isolate());\n  Local<"],[85479,2,""],[85479,0,"object"],[85486,2,""],[85486,0,"="],[85488,4,""],[85488,0,"env->"],[85500,1,""],[85500,0,"_obj"],[85505,2,""],[85505,0,"c"],[85508,6,""],[85509,0,";"],[85521,1,""],[85521,0,"object"],[85599,0,"     "],[85754,0,"env, "],[85767,1,""],[85767,0,"object"],[85812,0,"Env"],[85816,0,"ronme"],[85823,0,"*"],[85825,2,""],[85825,0,"Cre"],[85829,1,""],[85830,1,""],[85830,0,"eEnv"],[85835,0,"ronme"],[85842,0,"(Isolate*"],[85852,0,"isol"],[85857,3,""],[85857,0,"te"],[85860,0,"\n       "],[85869,6,""],[85870,5,""],[85871,2,""],[85873,11,""],[85874,1,""],[85875,5,""],[85877,2,""],[85878,4,""],[85879,6,""],[85880,4,""],[85881,3,""],[85882,4,""],[85883,8,""],[85884,4,""],[85885,3,""],[85886,13,""],[85887,1,""],[85888,8,""],[85890,4,""],[85891,1,""],[85892,5,""],[85892,0,"in"],[85895,8,""],[85895,0," "],[85901,8,""],[85904,2,""],[85905,4,""],[85906,5,""],[85907,2,""],[85908,3,""],[85909,8,""],[85910,17,""],[85912,3,""],[85913,10,""],[85914,2,""],[85915,4,""],[85917,2,""],[85918,9,""],[85919,2,""],[85920,4,""],[85921,6,""],[85922,11,""],[85924,3,""],[85925,11,""],[85927,0,"      "],[85944,1,""],[85945,3,""],[85946,1,""],[85946,0,"onst* "],[85956,1,""],[85956,0,","],[85960,1,""],[85960,0,"                             i"],[85991,1,""],[85992,2,""],[85992,0," exec_"],[86003,0,"\n                              "],[86040,1,""],[86040,0," "],[86042,0,"h"],[86044,3,""],[86044,0,"r* "],[86052,6,""],[86053,20,""],[86054,1,""],[86064,3,""],[86065,21,""],[86066,33,""],[86069,2,""],[86094,5,""],[86105,13,""],[86106,7,""],[86107,22,""],[86145,5,""],[86155,2,""],[86196,1,""],[86198,0,"Environment* env"],[86215,0,"="],[86217,1,""],[86217,0,"Env"],[86221,0,"ro"],[86224,2,""],[86224,0,"ment::New(co"],[86237,1,""],[86237,0,"text);\n\n  uv"],[86251,1,""],[86251,0,"he"],[86254,1,""],[86254,0,"k_init("],[86262,2,""],[86262,0,"nv->"],[86267,1,""],[86267,0,"v"],[86269,0,"n"],[86271,0,"_loop"],[86277,0,"), e"],[86282,1,""],[86282,0,"v->imme"],[86290,2,""],[86291,3,""],[86294,5,""],[86294,0,"_ch"],[86299,4,""],[86299,0,"k_handl"],[86307,1,""],[86312,0,"  uv_unref("],[86328,2,""],[86329,3,""],[86330,1,""],[86331,0,"e"],[86333,2,""],[86334,0,"terpret_cast<uv_h"],[86352,0,"nd"],[86355,4,""],[86355,0,"e_t*>(en"],[86364,2,""],[86364,0,"->immedi"],[86373,3,""],[86373,0,"te_ch"],[86379,2,""],[86379,0,"ck_handl"],[86388,0,"()));\n "],[86396,1,""],[86397,1,""],[86397,0,"v_idle_init(env->even"],[86419,2,""],[86419,0,"_lo"],[86424,2,""],[86424,0,"(), e"],[86430,2,""],[86431,0,"->immediate_idle_h"],[86450,0,"nd"],[86453,1,""],[86454,1,""],[86454,0,"());\n\n "],[86462,0,"L"],[86464,0,"cal<F"],[86470,0,"nc"],[86473,0,"ionTemplate>"],[86486,0,"pr"],[86489,1,""],[86489,0,"cess_template ="],[86505,0,"Funct"],[86511,0,"onTempla"],[86520,1,""],[86520,0,"e::New();"],[86532,0,"process_template->SetClassName(FIXED_ONE_BYTE_STRING(isolate, \"process\"));\n\n"],[86632,1,""],[86632,0,"object"],[86640,1,""],[86641,3,""],[86641,0,"process_template->GetFunction()->NewInstance();\n"],[86691,0,"env->set_process_object(process_object);\n\n"],[86754,0,"env, "],[86794,1,""],[86796,1,""],[86796,0,"Load(env);\n\n"],[86809,2,""],[86810,1,""],[86812,1,""],[86813,0,"urn "],[86818,0,"nv;\n}\n\n\nint"],[86830,0,"St"],[86833,3,""],[86833,0,"rt(in"],[86839,2,""],[86840,4,""],[86840,0,"arg"],[86844,2,""],[86846,2,""],[86846,0,"char** "],[86854,1,""],[86854,0,"rgv)"],[86859,8,""],[86859,0,"{\n"],[86862,2,""],[86863,2,""],[86863,0,"ass"],[86868,1,""],[86869,3,""],[86869,0,"(ar"],[86873,2,""],[86873,0,"c"],[86875,0,">"],[86877,0,"0);\n\n"],[86887,2,""],[86887,0,"Hack"],[86892,1,""],[86892,0,"ar"],[86896,1,""],[86896,0,"nd"],[86899,3,""],[86899,0,"wi"],[86902,0,"h"],[86904,1,""],[86904,0,"th"],[86907,0," "],[86909,3,""],[86909,0,"r"],[86911,0,"v"],[86913,3,""],[86914,3,""],[86915,5,""],[86915,0,"int"],[86919,0,"r."],[86922,3,""],[86922,0,"Us"],[86925,5,""],[86926,4,""],[86927,4,""],[86927,0,"f"],[86929,3,""],[86929,0,"r "],[86938,1,""],[86938,0,".tit"],[86943,4,""],[86943,0,"e"],[86945,0,"="],[86947,6,""],[86947,0,"\"b"],[86950,1,""],[86950,0,"ah\".\n"],[86956,3,""],[86960,0,"v = "],[86965,1,""],[86965,0,"v_s"],[86969,1,""],[86970,0,"up_arg"],[86977,1,""],[86977,0,"("],[86980,1,""],[86980,0,"gc,"],[86984,2,""],[86985,4,""],[86985,0,"rgv);\n\n  // This"],[87002,1,""],[87002,0,"n"],[87004,2,""],[87005,0,"ds"],[87008,4,""],[87008,0,"to r"],[87013,2,""],[87013,0,"n *b"],[87018,1,""],[87018,0,"fore*"],[87024,0,"V8::Initi"],[87035,1,""],[87035,0,"ize()."],[87042,2,""],[87043,1,""],[87043,0,"T"],[87047,0,"con"],[87051,0,"t_"],[87054,3,""],[87054,0,"as"],[87057,0," i"],[87060,1,""],[87061,2,""],[87061,0,"not"],[87065,1,""],[87067,1,""],[87070,1,""],[87070,0,"opt"],[87074,3,""],[87074,0,"onal,"],[87080,3,""],[87080,0,"i"],[87083,1,""],[87083,0,"c"],[87085,1,""],[87085,0,"s"],[87088,1,""],[87088,0,"you'"],[87094,2,""],[87094,0," wond"],[87100,1,""],[87100,0,"ring.\n "],[87108,3,""],[87108,0,"int"],[87112,1,""],[87113,2,""],[87113,0,"x"],[87115,0,"c_a"],[87119,0,"gc;\n  con"],[87129,1,""],[87129,0,"t"],[87131,3,""],[87131,0,"char**"],[87138,1,""],[87139,0,"xec_argv;\n "],[87151,1,""],[87151,0,"I"],[87153,0,"i"],[87155,1,""],[87155,0,"(&a"],[87159,0,"gc,"],[87163,0,"cons"],[87168,0,"_cast<const c"],[87182,1,""],[87182,0,"ar**>(argv),"],[87195,1,""],[87195,0,"&exec_"],[87202,2,""],[87202,0,"rgc,"],[87207,0,"&"],[87209,0,"xec_arg"],[87217,1,""],[87217,0,");\n\n  V8::I"],[87229,0,"i"],[87231,0,"ia"],[87234,7,""],[87234,0,"ize();"],[87243,0,"{\n"],[87247,2,""],[87248,2,""],[87248,0," Lock"],[87255,0," lock"],[87261,2,""],[87262,2,""],[87262,0,"("],[87265,6,""],[87265,0,"d"],[87267,1,""],[87267,0,"_i"],[87270,1,""],[87271,2,""],[87271,0,"la"],[87274,1,""],[87275,0,");\n"],[87279,4,""],[87280,7,""],[87281,3,""],[87282,4,""],[87282,0,"Envir"],[87289,0,"m"],[87291,5,""],[87291,0,"n"],[87293,0,"*"],[87295,1,""],[87296,2,""],[87296,0,"nv ="],[87305,2,""],[87306,5,""],[87306,0,"   C"],[87312,5,""],[87312,0,"a"],[87314,1,""],[87315,0,"E"],[87317,3,""],[87317,0,"v"],[87319,4,""],[87319,0,"ronme"],[87325,1,""],[87326,1,""],[87326,0,"(n"],[87329,2,""],[87329,0,"d"],[87331,1,""],[87331,0,"_"],[87333,1,""],[87334,5,""],[87334,0,"o"],[87336,2,""],[87336,0,"ate, ar"],[87344,0,"c,"],[87348,1,""],[87348,0,"rgv,"],[87353,2,""],[87354,0,"xec_a"],[87360,0,"gc, ex"],[87367,1,""],[87367,0,"c_"],[87371,0,"gv);\n    Context::Scop"],[87395,1,""],[87396,0,"ontex"],[87402,1,""],[87402,0,"_scope(en"],[87412,0,"->cont"],[87419,0,"xt());"],[87430,4,""],[87430,0,"H"],[87432,1,""],[87432,0,"ndleS"],[87438,0,"ope "],[87443,0,"andl"],[87448,1,""],[87448,0,"_"],[87450,2,""],[87450,0,"cope(env->"],[87461,0,"sola"],[87466,8,""],[87466,0,"e());"],[87483,1,""],[87483,0,"env->e"],[87490,2,""],[87491,4,""],[87491,0,"n"],[87518,1,""],[87532,4,""],[87533,4,""],[87533,0,"nv"],[87552,0,"env"],[87560,0,"  env->Dispose();\n    env = NULL;\n  "]],"_dtSpan":[353540,370008]},{"parents":[334],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[85625,0,"\n  Handle<String> exitCode = FIXED_ONE_BYTE_STRING(node_isolate, \"exitCode\");\n"],[85705,0,"int code = process_object->Get(exitCode)->IntegerValue();\n\n  "],[85856,1,""],[85856,0,"code"],[85881,0,"\n"],[85951,0,"  exit(code);\n"],[47508,1,""],[47508,0,"1"],[73234,1,""],[73234,0,"9"],[83326,1,""],[83326,0,"9"]],"_dtSpan":[370008,370173]},{"parents":[335],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[87398,0,"#if HAVE_OPENSSL\n  // V8 on Windows doesn't have a good source of entropy. Seed it from\n  // OpenSSL's pool.\n  V8::SetEntropySource(crypto::EntropySource);\n#endif\n\n"],[87378,20,""],[87544,0,"V8::Initialize();\n  "],[2149,0,"sys/resource.h>  // getrlimit, setrlimit\n#include <"],[83971,0,"Raise the open file descriptor limit.\n  {\n    struct rlimit lim;\n    if (getrlimit(RLIMIT_NOFILE, &lim) == 0 && lim.rlim_cur != lim.rlim_max) {\n      // Do a binary search for the limit.\n      rlim_t min = lim.rlim_cur;\n      rlim_t max = 1 << 20;\n      // But if there's a defined upper bound, don't search, just set it.\n      if (lim.rlim_max != RLIM_INFINITY) {\n        min = lim.rlim_max;\n        max = lim.rlim_max;\n      }\n      do {\n        lim.rlim_cur = min + (max - min) / 2;\n        if (setrlimit(RLIMIT_NOFILE, &lim)) {\n          max = lim.rlim_cur;\n        } else {\n          min = lim.rlim_cur;\n        }\n      } while (min + 1 < max);\n    }\n  }\n  // "],[1758,0,"v8-profiler.h\"\n#include \""],[86710,0,"void SetIdle(uv_prepare_t* handle, int) {\n  Environment* env = Environment::from_idle_prepare_handle(handle);\n  env->isolate()->GetCpuProfiler()->SetIdle(true);\n}\n\n\nvoid ClearIdle(uv_check_t* handle, int) {\n  Environment* env = Environment::from_idle_check_handle(handle);\n  env->isolate()->GetCpuProfiler()->SetIdle(false);\n}\n\n\n"],[88037,0,"// Inform V8's CPU profiler when we're idle.  The profiler is sampling-based\n  // but not all samples are created equal; mark the wall clock time spent in\n  // epoll_wait() and friends so profiling tools can filter it out.  The samples\n  // still end up in v8.log but with state=IDLE rather than state=EXTERNAL.\n  // TODO(bnoordhuis): Only start when profiling.  OTOH, the performance impact\n  // is probably negligible.\n  // TODO(bnoordhuis) Depends on a libuv implementation detail that we should\n  // probably fortify in the API contract, namely that the last started prepare\n  // or check watcher runs first.  It's not 100% foolproof; if an add-on starts\n  // a prepare or check watcher after us, any samples attributed to its callback\n  // will be recorded with state=IDLE.\n  uv_prepare_init(env->event_loop(), env->idle_prepare_handle());\n  uv_prepare_start(env->idle_prepare_handle(), SetIdle);\n  uv_unref(reinterpret_cast<uv_handle_t*>(env->idle_prepare_handle()));\n\n  uv_check_init(env->event_loop(), env->idle_check_handle());\n  uv_check_start(env->idle_check_handle(), ClearIdle);\n  uv_unref(reinterpret_cast<uv_handle_t*>(env->idle_check_handle()));\n\n  "],[3581,0,"static bool v8_is_profiling = false;\n"],[82995,0,"ODO(bnoordhuis) Intercept --prof arguments and start the CPU profiler\n  // manually?  That would give us a little more control over its runtime\n  // behavior but it could also interfere with the user's intentions in ways\n  // we fail to anticipate.  Dillema.\n  for (int i = 1; i < v8_argc; ++i) {\n    if (strncmp(v8_argv[i], \"--prof\", sizeof(\"--prof\") - 1) == 0) {\n      v8_is_profiling = true;\n      break;\n    }\n  }\n\n  // T"],[88809,109,""],[89363,1,""],[89369,2,""],[89369,0,"unref(r"],[89377,3,""],[89379,1,""],[89380,1,""],[89381,4,""],[89381,0,"rpr"],[89385,0,"t_cast<u"],[89394,1,""],[89394,0,"_ha"],[89398,2,""],[89398,0,"d"],[89400,3,""],[89400,0,"e_t*>"],[89406,3,""],[89431,0,")"],[89434,0,"\n  if (v8_is_profiling) {\n  "],[89473,1,""],[89473,0,"ini"],[89477,2,""],[89477,0,"(env->even"],[89488,0,"_loop"],[89494,0,"), "],[89521,11,""],[89526,0,"  "],[89531,3,""],[89531,0,"ch"],[89534,13,""],[89534,0,"ck"],[89537,2,""],[89539,5,""],[89540,5,""],[89540,0,"r"],[89542,2,""],[89567,1,""],[89567,0,", ClearIdle"],[89581,0,"  }\n"],[58366,0,"void SetIdle(uv_prepare_t* handle, int) {\n  Environment* env = Environment::from_idle_prepare_handle(handle);\n  env->isolate()->GetCpuProfiler()->SetIdle(true);\n}\n\n\nvoid ClearIdle(uv_check_t* handle, int) {\n  Environment* env = Environment::from_idle_check_handle(handle);\n  env->isolate()->GetCpuProfiler()->SetIdle(false);\n}\n\n\nvoid StartProfilerIdleNotifier(Environment* env) {\n  uv_prepare_start(env->idle_prepare_handle(), SetIdle);\n  uv_check_start(env->idle_check_handle(), ClearIdle);\n}\n\n\nvoid StopProfilerIdleNotifier(Environment* env) {\n  uv_prepare_stop(env->idle_prepare_handle());\n  uv_check_stop(env->idle_check_handle());\n}\n\n\nvoid StartProfilerIdleNotifier(const FunctionCallbackInfo<Value>& args) {\n  StartProfilerIdleNotifier(Environment::GetCurrent(args.GetIsolate()));\n}\n\n\nvoid StopProfilerIdleNotifier(const FunctionCallbackInfo<Value>& args) {\n  StopProfilerIdleNotifier(Environment::GetCurrent(args.GetIsolate()));\n}\n\n\n"],[65284,0,"\n                 "],[65305,0,"startProfilerIdleNotifier\",\n                  StartProfilerIdleNotifier);\n  NODE_SET_METHOD(process,\n                  \"_stopProfilerIdleNotifier\",\n                  StopProfilerIdleNotifier);\n  NODE_SET_METHOD(process, \"_"],[88352,44,""],[88364,55,""],[88365,19,""],[88366,23,""],[88367,1,""],[88368,15,""],[88369,15,""],[88370,7,""],[88371,11,""],[88382,85,""],[88383,6,""],[88384,7,""],[88385,13,""],[88386,28,""],[88992,162,""],[88993,121,""],[88994,16,""],[88995,37,""],[88996,12,""],[90091,0,"Local<FunctionTemplate> process_template = FunctionTemplate::New();\n  process_template->SetClassName(FIXED_ONE_BYTE_STRING(isolate, \"process\"));\n\n  Local<Object> process_object = process_template->GetFunction()->NewInstance();\n  env->set_process_object(process_object);\n\n  SetupProcessObject(env, argc, argv, exec_argc, exec_argv);\n  Load(env);\n\n  "],[89743,6,""],[89743,0,"ch"],[89746,0,"ck"],[89749,1,""],[89749,0,"ini"],[89753,2,""],[89753,0,"(env->even"],[89764,0,"_loop"],[89770,0,"), "],[89783,6,""],[89783,0,"ch"],[89786,0,"ck"],[89797,9,""],[89972,12,""],[89972,0,"S"],[89974,10,""],[89974,0,"ar"],[89977,2,""],[89977,0,"Pr"],[89980,11,""],[89980,0,"f"],[89982,1,""],[89984,10,""],[89984,0,"rI"],[89989,19,""],[89989,0,"No"],[89992,1,""],[89992,0,"ifie"],[89997,1,""],[90001,32,""]],"_dtSpan":[370173,375719]},{"parents":[336],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[85679,0,"  // NOLINT (whitespace/braces)"]],"_dtSpan":[375719,375750]},{"parents":[337],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[3768,1,""],[3775,9,""],[3796,8,""],[3839,36,""],[3840,2,""],[3841,6,""],[76042,2,""],[76042,0,"V8 D"],[76047,0,"bug"],[76051,3,""],[76051,0,"Age"],[76055,0,"t"],[76057,0,"TCP "],[76089,5,""],[76097,0,"Debug"],[76103,2,""],[76103,0,"ge"],[76106,1,""],[76106,0,"t"],[76116,0,") {\n  "],[76131,5,""],[76131,0,"se"],[76135,4,""],[76135,0,"(&d"],[76139,3,""],[76140,1,""],[76140,0,"p"],[76143,22,""],[76144,4,""],[76144,0,"h_d"],[76151,1,""],[76151,0,"_m"],[76160,1,""],[76160,0,"_async"],[76188,2,""],[76188,0,"the main thread.\nstatic void"],[76217,0,"Enable"],[76228,0,"(bool"],[76234,1,""],[76234,0,"wait_connect) {\n  assert(debug"],[76266,0,"r_run"],[76272,0,"ing == false);\n  Isolate* isolate = node_isola"],[76319,0,"e;  //"],[76327,2,""],[76327,0,"ODO(bnoordhuis)"],[76343,0,"Multi-isola"],[76355,2,""],[76356,2,""],[76356,0," support"],[76366,0,"  I"],[76370,1,""],[76370,0,"ol"],[76374,0,"e::Scope "],[76384,0,"solate_s"],[76393,0,"ope(isolate);\n "],[76410,1,""],[76410,0,"8::Debug::SetDebugMessageD"],[76437,0,"spatchHan"],[76447,1,""],[76447,0,"ler("],[76485,1,""],[76485,0,",\n                                            false"],[76537,2,""],[76537,0,";"],[76541,0,"deb"],[76545,1,""],[76545,0,"gger"],[76550,3,""],[76550,0,"ru"],[76553,4,""],[76554,4,""],[76555,2,""],[76555,0,"ng = v8::Debug::En"],[76574,0,"bleAgen"],[76582,2,""],[76582,0,"(\"node \" NODE"],[76596,0,"VERSION,\n                                            "],[76655,4,""],[76655,0,"port,\n                                            w"],[76707,3,""],[76707,0,"it"],[76710,3,""],[76710,0,"con"],[76714,0,"e"],[76716,0,"t"],[76719,4,""],[76720,2,""],[76721,6,""],[76722,0,"i"],[76724,0," (debugge"],[76734,2,""],[76734,0,"_running =="],[76746,2,""],[76746,0,"fals"],[76751,0,") {\n "],[76757,2,""],[76757,0,"  fpr"],[76764,1,""],[76765,1,""],[76765,0,"f(stder"],[76773,5,""],[76773,0,", \"S"],[76779,0,"r"],[76782,1,""],[76782,0,"ng"],[76785,3,""],[76786,6,""],[76790,1,""],[76790,0,"ger o"],[76796,0," port %d f"],[76807,1,""],[76807,0,"i"],[76811,3,""],[76811,0,"\\"],[76813,5,""],[76813,0,"\", de"],[76819,4,""],[76820,7,""],[76820,0,"g"],[76822,0,"por"],[76826,1,""],[76826,0,");\n   "],[76833,0,"fflus"],[76839,2,""],[76839,0,"(st"],[76843,1,""],[76844,1,""],[76844,0,"rr);\n   "],[76853,0,"return;\n  }\n  fpr"],[76873,0,"f(stderr,"],[76883,0,"\"Debugger li"],[76897,1,""],[76897,0,"ening on port %d\\n\", debug_por"],[76928,0,");\n  ffl"],[76938,0,"h(stderr"],[76947,2,""],[76947,0,";\n"],[76994,4,""],[76994,0,"Check"],[77000,1,""],[77000,0,"d("],[77014,0,"if (env == NULL)\n    return;  // Still starting up.\n\n  "],[77237,3,""],[77238,1,""],[77238,0,"nv->"],[77249,0,"()"],[77298,3,""],[77299,1,""],[77299,0,"nv->"],[77310,0,"()"],[77356,1,""],[77356,0,"v"],[77390,0,"e"],[77392,4,""],[77392,0,"v->"],[77402,0,"()"],[77508,1,""],[77508,0,"v"],[77515,1,""],[77515,0,"v"],[77542,1,""],[77542,0,"ma"],[77545,1,""],[77546,2,""],[77547,2,""],[77548,1,""],[77549,1,""],[77550,27,""],[77551,5,""],[77552,23,""],[77553,31,""],[77553,0,"."],[77555,1,""],[77567,6,""],[77568,12,""],[77569,93,""],[77570,18,""],[77570,0,"p"],[77572,6,""],[77573,23,""],[77573,0,"ch"],[77587,2,""],[77588,15,""],[77588,0,"A"],[77590,3,""],[77590,0,"yn"],[77593,19,""],[77601,47,""],[77601,0,"(uv_"],[77606,1,""],[77607,16,""],[77607,0,"ync_"],[77612,8,""],[77612,0,"*"],[77614,1,""],[77615,5,""],[77618,0,"le,"],[77623,0,"n"],[77625,2,""],[77626,1,""],[77627,4,""],[77627,0,"t"],[77630,7,""],[77630,0,"u"],[77632,5,""],[77632,0,")"],[77634,13,""],[77634,0,"{"],[77638,8,""],[77638,0,"if"],[77641,5,""],[77641,0,"(d"],[77647,9,""],[77649,15,""],[77649,0,"r"],[77651,46,""],[77651,0,"r"],[77653,49,""],[77655,37,""],[77659,4,""],[77659,0,"=="],[77662,3,""],[77662,0,"fa"],[77665,12,""],[77667,4,""],[77668,3,""],[77669,13,""],[77669,0,"{\n"],[77672,4,""],[77673,13,""],[77692,0,"Starting "],[77710,4,""],[77710,0,"ag"],[77713,6,""],[77714,4,""],[77715,3,""],[77715,0,"."],[77719,12,""],[77724,2,""],[77724,0,"  Enab"],[77731,0,"eDeb"],[77736,2,""],[77736,0,"g"],[77738,0,"fal"],[77742,2,""],[77743,2,""],[77745,1,""],[77746,18,""],[77747,1,""],[77748,6,""],[77748,0,"}"],[77752,9,""],[77752,0,"Is"],[77755,2,""],[77755,0,"lat"],[77759,2,""],[77761,7,""],[77761,0,"Scop"],[77766,1,""],[77766,0," isola"],[77773,2,""],[77774,0,"_s"],[77777,1,""],[77777,0,"op"],[77780,1,""],[77794,11,""],[77794,0,";"],[77798,6,""],[77798,0,"v8::"],[77807,19,""],[77807,0,"::Pr"],[77812,1,""],[77812,0,"c"],[77814,2,""],[77815,2,""],[77815,0,"sDebugMess"],[77826,1,""],[77826,0,"g"],[77828,6,""],[77828,0,"s"],[77891,4,""],[77892,1,""],[77893,3,""],[77894,1,""],[77895,8,""],[77895,0,"s"],[77897,0,"g"],[77899,1,""],[77899,0,"o"],[77909,3,""],[77909,0,"C"],[77911,1,""],[77911,0,"ll"],[77916,0,"ly asyn"],[77924,1,""],[77925,6,""],[77926,2,""],[77927,0,"gna"],[77931,1,""],[77931,0,"-safe"],[77937,3,""],[77937,0,"f"],[77939,1,""],[77940,4,""],[77941,1,""],[77945,0,"s"],[77947,5,""],[77947,0,"here!"],[77977,0,"*static_cast<Isolate* volatile*>(&"],[78024,0,")"],[78026,1,""],[78028,3,""],[78029,5,""],[78030,4,""],[78030,0,"v"],[78032,2,""],[78032,0,"asy"],[78036,16,""],[78036,0,"c_se"],[78041,2,""],[78041,0,"d"],[78043,2,""],[78043,0,"&"],[78045,7,""],[78046,12,""],[78047,1,""],[78047,0,"p"],[78049,1,""],[78050,4,""],[78050,0,"ch_"],[78058,1,""],[78058,0,"_m"],[78061,2,""],[78061,0,"ss"],[78066,15,""],[78066,0,"s_"],[78069,12,""],[78070,1,""],[78070,0,"ync"],[78075,4,""],[78180,1,""],[78636,20,""],[78638,2,""],[78638,0,"stat"],[78643,4,""],[78643,0,"c"],[78645,21,""],[78645,0,"i"],[78647,3,""],[78647,0,"t R"],[78651,0,"gister"],[78662,4,""],[78662,0,"SignalH"],[78670,0,"n"],[78672,1,""],[78672,0,"le"],[78675,2,""],[78676,9,""],[78685,1,""],[78685,0,"FIXME(bnoo"],[78696,3,""],[78696,0,"dhuis)"],[78703,0,"Sh"],[78706,2,""],[78706,0,"uld b"],[78714,0,"e"],[78716,4,""],[78716,0,"-i"],[78719,4,""],[78719,0,"o"],[78721,0,"ate"],[78725,0,"o"],[78727,0," p"],[78730,2,""],[78731,0,"-co"],[78735,1,""],[78735,0,"t"],[78738,3,""],[78739,3,""],[78739,0,","],[78741,0,"no"],[78744,1,""],[78745,2,""],[78745,0,"global."],[78755,6,""],[78755,0,"R"],[78757,2,""],[78758,1,""],[78758,0,"ist"],[78762,2,""],[78763,3,""],[78763,0,"S"],[78765,1,""],[78766,14,""],[78767,33,""],[78767,0,"alHa"],[78772,5,""],[78773,0,"l"],[78776,1,""],[78776,0,"(SIGUSR1"],[78786,7,""],[78786,0,"E"],[78788,3,""],[78788,0,"abl"],[78792,0,"De"],[78797,0,"Si"],[78800,3,""],[78800,0,"nalH"],[78805,1,""],[78805,0,"ndl"],[78809,4,""],[78810,3,""],[78813,4,""],[78815,8,""],[78815,0,"re"],[78818,2,""],[78818,0,"u"],[78820,2,""],[78820,0,"n 0"],[78825,0,"}\n#endif"],[78835,0,"//"],[78838,0,"__POSIX__\n\n\n#ifdef"],[78857,0,"_WIN32\nDWORD"],[78870,0,"WINAPI"],[78888,0,"ThreadProc"],[78899,1,""],[78899,0,"void* "],[78906,3,""],[78906,0,"rg"],[78909,2,""],[78910,9,""],[78910,0,"{"],[78936,0,"*static_cast<Isolate* volatile*>(&"],[78983,0,")"],[78986,0,"  uv_async_send(&dispatch_debug_messages_async);"],[83549,314,""],[86274,6,""],[86275,8,""],[86279,155,""],[86280,12,""],[86281,4,""],[86282,48,""],[86283,10,""],[86284,14,""],[86286,8,""],[86304,24,""],[86305,47,""],[86307,21,""],[77863,0,"latile sig_atomic_t caught_early_debug_s"],[77904,0,"gnal;\n\n\nstatic voi"],[77925,0,"arlyDebugSig"],[77939,0,"lHandler(int signo) {\n  caught_early_de"],[77979,0,"ug_signal = 1;\n}\n\n\nstatic void InstallEarlyDebugSignalHand"],[78039,0,"r() {\n  struct sigaction sa;\n  memset(&sa, 0, sizeof(sa));\n  sa.sa_handler = Early"],[78139,0,";\n  sigaction"],[78153,0,"SIGUSR1, &sa, NULL);\n}\n\n\nstatic vo"],[78188,0,"d E"],[78192,0,"ableDebugSignalHandler(in"],[79139,0,"// If we caught a SIGUSR1 during the bootstrap process, re-"],[79199,0,"ais"],[79203,0," i"],[79206,0,"\n  // now that the debugger infrastr"],[79243,0,"ctu"],[79247,0,"e is i"],[79255,0,"place.\n  if (caught_early_debug_signal) raise(SIGUSR1);\n  return "],[90119,0,"#if !defined(_WIN32)\n  // Try hard not to lose SIGUSR1 signals during the bootstrap process.\n  InstallEarlyDebugSignalHandler();\n#endif\n\n"]],"_dtSpan":[375750,379623]},{"parents":[338],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[4558,0,"\n   "],[16063,0,"\n   "],[25052,0,"\n   "],[27608,0,"\n   "],[31977,0,"\n     "],[32632,0,"\n     "],[32767,0,"\n     "],[38322,0,"\n     "],[39973,0,"\n     "],[40523,0,"\n   "],[45078,0,"\n     "],[52472,0,"\n   "],[52976,0,"\n   "],[53274,0,"\n   "],[53881,0,"\n   "],[54442,0,"\n   "],[61879,0,"\n         "],[70752,0,"\n   "],[79384,0,"\n   "]],"_dtSpan":[379623,379717]},{"parents":[339],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[4257,0,"*"],[4259,0,"AllocateUninitialized(size_t length);\n  virtual void "],[4327,0,", size_t length"],[4680,0,"* ArrayBufferAllocator::AllocateUninitialized(size_t length) {\n  if (length > kMaxLength)\n    return NULL;\n  return new char[length];\n}\n\n\nvoid"],[4860,0,", size_t length"]],"_dtSpan":[379717,379943]},{"parents":[340],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[19205,5,""],[19316,0,"tick_info->set_in_tick(true);\n\n  "],[19571,0,"tick_info->set_in_tick(false);\n\n  "],[19638,0,"tick_info->set_last_th"],[19662,0,"w("],[19665,0,"r"],[19667,0,"e);\n    "],[19676,0,"etur"],[20719,0,"tick_info->set_in_tick(true);\n\n  "],[21426,0,"tick_info->set_in_tick(false);\n\n  "],[21493,0,"tick_info->set_last_threw(true);\n    "]],"_dtSpan":[379943,380156]},{"parents":[341],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[1467,26,""],[1487,36,""],[1488,3,""],[1489,15,""],[69775,26,""]],"_dtSpan":[380156,380262]},{"parents":[342],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[1529,0,"async-wrap.h\"\n#include \"async-wrap-inl.h\"\n#include \""],[16115,0,"AsyncListener(const FunctionCallbackInfo<Value>& args) {\n  Environment* env = Environment::GetCurrent(args.GetIsolate());\n  HandleScope handle_scope(args.GetIsolate());\n\n  assert(args[0]->IsObject() &&\n         args[1]->IsFunction() &&\n         args[2]->IsFunction() &&\n         args[3]->IsFunction() &&\n         args[4]->IsFunction() &&\n         args[5]->IsFunction());\n\n  env->set_async_listener_run_function(args[1].As<Function>());\n  env->set_async_listener_load_function(args[2].As<Function>());\n  env->set_async_listener_unload_function(args[3].As<Function>());\n  env->set_async_listener_push_function(args[4].As<Function>());\n  env->set_async_listener_strip_function(args[5].As<Function>());\n\n  Local<Object> async_listener_flag_obj = args[0].As<Object>();\n  Environment::AsyncListener* async_listener = env->async_listener();\n  async_listener_flag_obj->SetIndexedPropertiesToExternalArrayData(\n      async_listener->fields(),\n      kExternalUnsignedIntArray,\n      async_listener->fields_count());\n\n  // Do a little housekeeping.\n  env->process_object()->Delete(\n      FIXED_ONE_BYTE_STRING(args.GetIsolate(), \"_setupAsyncListener\"));\n}\n\n\nvoid Setup"],[18674,0,"\n  // Do a little housekeeping.\n  env->process_object()->Delete(\n      FIXED_ONE_BYTE_STRING(args.GetIsolate(), \"_setupDomainUse\"));\n}\n\n\nvoid SetupNextTick(const FunctionCallbackInfo<Value>& args) {\n  Environment* env = Environment::GetCurrent(args.GetIsolate());\n  HandleScope handle_scope(args.GetIsolate());\n\n  if (!args[0]->IsObject() || !args[1]->IsFunction())\n    abort();\n\n  // Values use to cross communicate with processNextTick.\n  Local<Object> tick_info_obj = args[0].As<Object>();\n  tick_info_obj->SetIndexedPropertiesToExternalArrayData(\n      env->tick_info()->fields(),\n      kExternalUnsignedIntArray,\n      env->tick_info()->fields_count());\n\n  env->set_tick_callback_function(args[1].As<Function>());\n\n  // Do a little housekeeping.\n  env->process_object()->Delete(\n      FIXED_ONE_BYTE_STRING(args.GetIsolate(), \"_setupNextTick\"));\n"],[19612,6,""],[19945,6,""],[19945,0,"Local<"],[19952,1,""],[19952,0,"bjec"],[19957,0,"> p"],[19961,0,"oc"],[19964,6,""],[19965,1,""],[19965,0,"s"],[19967,8,""],[19967,0,"="],[19969,2,""],[19969,0,"e"],[19971,9,""],[19971,0,"v->p"],[19976,1,""],[19976,0,"o"],[19980,2,""],[19980,0,"s_"],[19983,1,""],[19984,8,""],[19984,0,"j"],[19986,4,""],[19986,0,"ct();"],[20133,0,"// TODO(trevnorris): This is sucky for performance. Fix it.\n  "],[20204,0,"async_queue = object->Has(env->async_queue_string());\n  if (has_async_queue) {\n    Local<Value> argv[] = { object };\n    env->async_listener_load_function()->Call(process, ARRAY_SIZE(argv), argv);\n\n    if (try_catch.HasCaught())\n      return Undefine"],[20455,0,"(n"],[20458,0,"de_isolate);\n  }\n\n  bool has_do"],[21090,0,"async_queue) {\n    Local<Value> val = object.As<Value>();\n    env->async_listener_unloa"],[21178,0,"_functi"],[21186,0,"n()->Call(process, 1, &val);\n\n    if (try_catch.HasCaught())\n      return Undefined(node_isolate);\n  }\n\n  if (has_do"],[21856,1,""],[21857,89,""],[21858,40,""],[21859,1,""],[21889,26,""],[21903,7,""],[22148,6,""],[22322,0,"if (env->using_domains())\n    return MakeDomainCallback(env, object, callback, argc, argv);\n\n  "],[22558,0,"Local<Object> process = env->process_object();\n\n  TryCatch try_catch;\n  try_catch.SetVerbose(true);\n\n  "],[22680,0,": This"],[22687,3,""],[22687,0,"is suc"],[22694,0,"y"],[22700,1,""],[22700,0,"perf"],[22705,0,"rma"],[22709,1,""],[22709,0,"ce. Fix"],[22717,1,""],[22717,0,"i"],[22719,0,".\n  bool h"],[22730,0,"s_asyn"],[22737,1,""],[22737,0,"_queue ="],[22746,0,"objec"],[22752,1,""],[22752,0,"->Has(env->"],[22764,0,"syn"],[22768,0,"_queu"],[22774,0,"_"],[22776,1,""],[22777,1,""],[22777,0,"ring());\n"],[22787,2,""],[22788,4,""],[22788,0,"if"],[22791,0,"("],[22793,0,"as_async_qu"],[22805,1,""],[22805,0,"u"],[22807,1,""],[22807,0,") {"],[22813,0,"  "],[22821,3,""],[22821,0,"Valu"],[22826,2,""],[22828,1,""],[22828,0,"a"],[22830,6,""],[22830,0,"gv[] = { "],[22846,1,""],[22846,0,"};\n   "],[22858,0,"async_listener_load_function()->Call("],[22902,0,", ARRAY"],[22910,6,""],[22910,0,"SIZE"],[22915,0,"argv), argv"],[22932,0,"  "],[22938,10,""],[22938,0,"try"],[22942,3,""],[22942,0,"c"],[22944,2,""],[22944,0,"tch.Ha"],[22951,0,"Caught"],[22965,0,"  "],[22974,3,""],[22974,0,"Und"],[22978,4,""],[22978,0,"f"],[22981,3,""],[22981,0,"ed(node_iso"],[22993,1,""],[22994,3,""],[22994,0,"t"],[22996,3,""],[22996,0,");\n  }\n\n"],[23005,0," L"],[23008,2,""],[23008,0,"cal<Value> r"],[23021,1,""],[23022,1,""],[23023,0,"= "],[23033,0,"->Call(object"],[23064,8,""],[23064,0,"if"],[23067,0,"("],[23077,1,""],[23077,0,".HasCaught()) {"],[23095,0,"  re"],[23100,0,"u"],[23102,1,""],[23102,0,"n Undefined(node"],[23119,1,""],[23119,0,"isol"],[23125,1,""],[23125,0,"e);\n  }\n\n  if ("],[23141,9,""],[23141,0,"as_a"],[23146,0,"ync_qu"],[23153,3,""],[23156,2,""],[23156,0," {"],[23161,0,"  "],[23176,3,""],[23176,0,"val"],[23182,0,"obje"],[23187,0,"t.As<Value>();\n    env->"],[23212,0,"sync_"],[23218,0,"istener_un"],[23229,1,""],[23229,0,"o"],[23231,0,"d_fun"],[23237,1,""],[23237,0,"tion()"],[23250,0,"pr"],[23253,2,""],[23253,0,"c"],[23255,2,""],[23255,0,"ss"],[23259,4,""],[23259,0,"1"],[23262,3,""],[23262,0,"&"],[23264,0,"al"],[23272,0,"  "],[23300,2,""],[23305,0,"  "],[23426,5,""],[23572,41,""],[23573,106,""],[23574,20,""],[23575,25,""],[23576,76,""],[23577,34,""],[23580,10,""],[23580,0," n"],[23583,2,""],[23583,0,"x"],[23585,0,"T"],[23587,9,""],[23589,16,""],[23590,17,""],[23591,15,""],[23592,3,""],[23593,3,""],[23594,38,""],[23595,1,""],[23596,1,""],[23597,12,""],[23598,2,""],[23601,55,""],[23604,2,""],[23609,2,""],[23610,2,""],[23632,22,""],[23633,65,""],[23647,7,""],[24070,140,""],[24071,1,""],[24172,32,""],[24183,6,""],[24228,2,""],[24231,57,""],[24232,4,""],[24477,1,""],[24478,5,""],[24479,135,""],[24575,1,""],[24576,1,""],[24577,2,""],[24578,29,""],[24589,6,""],[24634,2,""],[24637,60,""],[24638,1,""],[24873,140,""],[68849,0,"AsyncListener\", SetupAsyncListener);\n  NODE_SET_METHOD(process, \"_setupNextTick\", SetupNextTick);\n  NODE_SET_METHOD(process, \"_setup"],[16313,3,""],[16313,0,");"],[16318,7,""],[16319,0,"ssert(a"],[16346,3,""],[16346,0,");"],[16349,6,""],[16351,1,""],[16352,0,"sse"],[16356,0,"t(ar"],[16379,3,""],[16379,0,");"],[16382,6,""],[16384,1,""],[16385,0,"sse"],[16389,0,"t(ar"],[16412,3,""],[16412,0,");"],[16415,6,""],[16417,1,""],[16418,0,"sse"],[16422,0,"t(ar"],[16445,3,""],[16445,0,");"],[16448,6,""],[16450,1,""],[16451,0,"sse"],[16455,0,"t(ar"],[17254,65,""],[17255,64,""],[17257,44,""],[17258,13,""],[17259,2,""],[17260,33,""],[17261,13,""],[17262,121,""],[17263,220,""],[17264,14,""],[17265,35,""],[17266,32,""],[17267,26,""],[17268,365,""],[17269,502,""],[17434,3,""],[17434,0,"assert"],[17441,1,""],[17461,2,""],[17461,0,"&&"],[17464,1,""],[17484,1,""],[17485,11,""],[17956,1260,""],[17957,154,""],[17960,4,""],[17962,3,""],[17964,74,""],[17966,34,""],[17967,1,""],[17968,50,""],[17969,5,""],[17970,17,""],[17972,99,""],[17973,39,""],[17974,134,""],[17975,15,""],[17976,4,""],[17977,107,""],[17978,548,""],[18206,28,""],[18207,3,""],[18208,30,""],[18209,34,""],[22221,5,""],[22222,156,""],[22223,51,""],[22224,76,""],[22225,4,""],[22228,50,""],[22230,32,""],[22231,26,""],[22232,18,""],[22233,99,""],[64219,63,""]],"_dtSpan":[380262,390095]},{"parents":[343],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[57146,12,""],[58950,0,"{\n    size_t "],[58964,0,", j, k;\n    i"],[58981,0,";\n    for (i = j = 0"],[59003,1,""],[59003,0,"k"],[59008,3,""],[59008,0,"iz"],[59011,1,""],[59011,0,"of"],[59035,2,""],[59036,0,"-"],[59038,14,""],[59038,0,"1"],[59045,1,""],[59045,0,"k"],[59048,1,""],[59050,0,"i"],[59059,0,"  "],[59094,0,"  "],[59130,0,"  "],[59152,1,""],[59152,0,"k"],[59155,1,""],[59157,0,"j"],[59170,0,"  "],[59209,0,"  "],[59235,0,"  "],[59250,0,"  "],[59260,0,"  "],[59273,0,"  "],[59279,0,"  "],[59285,0,"  "],[59312,0,"  "],[59330,0,"  "],[59349,0,"  "],[59414,0,"  }\n"],[58951,0,"  // NOLINT(whitespace/braces)"],[29205,9,""],[29205,0,"CONTAINER"],[29215,2,""],[29215,0,"OF"],[29828,9,""],[29828,0,"CONTAINER"],[29838,2,""],[29838,0,"OF"],[82795,137,""]],"_dtSpan":[390095,390432]},{"parents":[344],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[4955,0,"HandleScope scope(node_isolate);\n  "]],"_dtSpan":[390432,390467]},{"parents":[345],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[16209,0,"HandleScope handle_scope(args.GetIsolate());\n  "],[16297,9,""],[16298,38,""],[17356,0,"HandleScope handle_scope(args.GetIsolate());\n  "],[17444,15,""],[17445,32,""],[38007,0,"HandleScope handle_scope(args.GetIsolate());\n  "],[38095,15,""],[38096,32,""],[40734,0,"HandleScope handle_scope(args.GetIsolate());\n  "],[40846,7,""],[40847,40,""],[45525,0,"HandleScope handle_scope(args.GetIsolate());\n  "],[45613,9,""],[45614,38,""],[54588,0,"HandleScope handle_scope(info.GetIsolate());\n  "],[55055,0,"HandleScope handle_scope(info.GetIsolate());\n  "],[55142,4,""],[55143,5,""],[55144,38,""],[56493,0,"Handle"],[56500,1,""],[56500,0,"cope handle_scope("],[56520,0,"gs.Ge"],[56526,2,""],[56526,0,"Is"],[56529,2,""],[56530,0,"at"],[56533,0,"());\n  Envi"],[56545,3,""],[56545,0,"onm"],[56549,2,""],[56549,0,"n"],[56551,3,""],[56551,0,"* "],[56554,2,""],[56554,0,"nv = "],[56601,0,";\n  StartProfilerIdleNotifier(env"],[56716,0,"Handle"],[56723,1,""],[56723,0,"c"],[56726,2,""],[56726,0,"e handle_sc"],[56738,3,""],[56738,0,"p"],[56740,0,"(a"],[56743,0,"gs.Get"],[56750,1,""],[56750,0,"so"],[56753,0,"at"],[56756,1,""],[56756,0,"());\n  Envir"],[56769,0,"nmen"],[56774,3,""],[56774,0,"* "],[56777,2,""],[56777,0,"nv = "],[56824,0,";\n  StopProfilerIdleNotifier(env"],[74167,0,"HandleScope handle_scope(isolate);\n  "],[74905,44,""],[88557,0,"// This "],[88580,1,""],[88580,0,"is here s"],[88590,0," E"],[88593,1,""],[88593,0,"ableD"],[88599,4,""],[88599,0,"bug() "],[88606,0,"an lo"],[88612,0,"k u"],[88616,0," th"],[88620,1,""],[88620,0," curr"],[88627,0,"t\n    // en"],[88639,3,""],[88639,0,"ir"],[88643,0,"men"],[88647,0," with Environm"],[88662,1,""],[88662,0,"nt::GetCurren"],[88676,0,"Checked"],[88685,2,""],[88685,0,"."],[88691,2,""],[88691,0,"// TODO(b"],[88701,0,"oor"],[88705,0,"huis) Reorder the debugger initialization "],[88748,0,"ogic so it can\n    // be remov"],[88779,0,"d.\n    Context::"],[88801,2,""],[88801,0,"co"],[88804,2,""],[88804,0,"t"],[88806,0,"xt"],[88820,2,""],[88820,0,"c"],[88822,2,""],[88822,0,"n"],[88825,0,"xt"],[85075,2,""],[85075,0,"Ha"],[85078,1,""],[85078,0,"dl"],[85081,4,""],[85087,2,""],[85087,0,"ha"],[85090,1,""],[85090,0,"dl"],[85093,2,""],[85105,1,""],[85105,0,"is"],[85108,1,""],[85108,0,"la"],[85112,2,""],[85119,2,""],[85119,0,"Co"],[85122,2,""],[85122,0,"t"],[85124,0,"xt::"],[85134,2,""],[85134,0,"co"],[85137,2,""],[85137,0,"t"],[85139,0,"xt"],[85153,2,""],[85153,0,"c"],[85155,2,""],[85155,0,"n"],[85158,0,"xt"],[67695,1,""],[67695,0,"bo"],[67698,2,""],[67698,0,"l"],[67745,0,"*"],[67747,1,""],[67748,0,"ort"],[67754,1,""],[67754,0,"NULL"],[67767,3,""],[67767,0,"!"],[67771,0,"cmp"],[67788,6,""],[67790,7,""],[67798,1,""],[67798,0,"use_debug_agent"],[67816,1,""],[67816,0,"true;\n "],[67824,1,""],[67824,0,"}"],[67826,0,"el"],[67829,0,"e if (!s"],[67839,0,"n"],[67841,2,""],[67841,0,"mp"],[67848,9,""],[67849,1,""],[67849,0,"\"--"],[67857,6,""],[67858,0,"\","],[67861,3,""],[67861,0,"s"],[67863,0,"zeof"],[67868,1,""],[67868,0,"\"--debug=\""],[67879,2,""],[67880,0,"-"],[67882,6,""],[67882,0,"1))"],[67920,0,"port = arg + sizeof(\"--debug=\") - 1;\n  } else "],[68005,0,"use_debug_agent"],[68021,0,"="],[68023,0,"true;\n    "],[68058,14,""],[68060,2,""],[68077,0,"n"],[68095,16,""],[68095,0,"-b"],[68098,8,""],[68098,0,"k=\","],[68103,2,""],[68104,0,"iz"],[68107,2,""],[68107,0,"o"],[68109,1,""],[68110,12,""],[68126,2,""],[68126,0,"-"],[68128,3,""],[68128,0,"1)"],[68138,0,"use_debug_agent = true;\n  "],[68193,1,""],[68197,1,""],[68198,0,"ort"],[68204,1,""],[68204,0,"arg"],[68211,5,""],[68211,0,"izeof"],[68217,2,""],[68217,0,"\"--debu"],[68225,3,""],[68225,0,"-brk"],[68230,1,""],[68230,0,"\""],[68232,0," - 1"],[68240,0,"}"],[68242,0,"else"],[68247,0,"if"],[68250,0,"(!strncmp(arg,"],[68265,0,"\"--"],[68273,1,""],[68273,0,"-"],[68278,1,""],[68279,0,"\","],[68282,3,""],[68282,0,"s"],[68284,0,"zeof"],[68289,0,"\"--debug-"],[68299,0,"ort=\""],[68305,2,""],[68306,0,"-"],[68308,0,"1))"],[68312,0,"{\n"],[68315,1,""],[68316,4,""],[68317,2,""],[68318,3,""],[68318,0,"po"],[68321,1,""],[68322,2,""],[68322,0," = "],[68328,1,""],[68329,0,"+ sizeof("],[68346,0,"-port"],[68355,2,""],[68355,0,"- 1;\n "],[68362,4,""],[68362,0,"}"],[68364,0,"else "],[68375,0,"return"],[68382,0,"false;\n"],[68390,1,""],[68391,1,""],[68391,0,"}\n\n"],[68395,1,""],[68396,1,""],[68396,0,"if"],[68399,6,""],[68400,1,""],[68400,0,"po"],[68403,2,""],[68403,0,"t"],[68405,1,""],[68405,0,"!"],[68407,1,""],[68407,0," NULL"],[68413,3,""],[68414,0,"{\n"],[68439,0,"ort"],[68449,8,""],[68453,5,""],[68464,1,""],[68464,0,"<"],[68471,2,""],[68471,0,"||"],[68485,1,""],[68485,0,">"],[68487,1,""],[68491,1,""],[68491,0,"5"],[68493,3,""],[68494,53,""],[68494,0,"{"],[68498,2,""],[68499,5,""],[68550,1,""],[68550,0,"4"],[68567,1,""],[68569,0,"    "],[68588,0,"    "],[68602,0,"    }\n  "],[68613,0,"  return true;\n}\n\n"],[71415,7,""],[71415,0,"P"],[71418,7,""],[71418,0,"seD"],[71425,6,""],[71425,0,"Opt("],[71433,0,")"],[71443,0,"// Done, consumed by "],[71478,3,""],[71479,1,""],[71479,0,"."]],"_dtSpan":[390467,392329]},{"parents":[346],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[4619,0,"cha"],[4623,1,""],[4623,0,"* da"],[4628,3,""],[4628,0,"a ="],[4650,0,"  memset(data, 0, length);\n  return data;\n"]],"_dtSpan":[392329,392385]},{"parents":[347],"numChildren":1,"agent":174,"time":"1970-01-01T00:00:00Z","patches":[[27112,0,";\n\n  if (er->IsUndefined()) {\n    trace_value = Undefined"],[27170,0,"node_isolate);\n  } else {"],[27200,0,"trace_value =\n      "],[27287,1,""],[27291,0,"}\n\n  "],[27138,0," || er->IsNull()"]],"_dtSpan":[392385,392509]},{"parents":[348],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[17350,0,"DomainUse(const FunctionCallbackInfo<Value>& args) {\n  Environment* env = Environment::GetCurrent(args.GetIsolate());\n\n  if (env->using_domains())\n    return;\n  env->set_using_domains(true);\n\n  HandleScope scope(node_isolate);\n  Local<Object> process_object = env->process_object();\n\n  Local<String> tick_callback_function_key =\n      FIXED_O"],[17693,0,"E_BYTE_STRING(node_isolate, \"_tickDomainCallback\");\n  Local<Function> tick_callback_function =\n      process_object->Get(tick_callback_function_key).As<Function>();\n\n  if (!tick_callback_function->IsFunction()) {\n    fprintf(std"],[17922,0,"rr, \"process._tickDomainCallback assigned to non-function\\n\");\n    abort();\n  }\n\n  process_object->Set(FIXED_ONE_BYTE_STRING(node_isolate, \"_tickCallback\"),\n                      tick_callback_function);\n  env->set_tick_callback_function(tick_callback_function);\n\n  assert(args[0]->IsArray());\n  assert(args[1]->IsObject());\n\n  env->set_domain_array(args[0].As<Array>());\n\n  Local<Object> domain_flag_obj = args[1].As<Object>();\n  Environment::DomainFlag* domain_flag = env->domain_flag();\n  domain_flag_obj->SetInde"],[18439,0,"edProper"],[18448,0,"ies"],[18452,0,"oExternalArrayData(\n      doma"],[18483,0,"n_flag->fields(),\n      kExternalUnsignedIntArray,\n      domain_flag->fields_count());\n\n  // Do a little housekeeping.\n  env->process_object()->Delete(\n      FIXED_ONE_BYTE_STRING(args.GetIsolate(), \"_setupDomainUse\"));\n}\n\n\nvoid SetupNextTi"],[18910,0,");\n"],[18914,2,""],[18916,0,"ssert(a"],[19440,0,"DomainCallback(Environment* env,\n                                 Handle<Object> object,\n                                 const Handle<Function> callback,\n                                 int argc,\n                                 Handle<Value> argv[]) {\n  // If you hit this assertion, you forgot to enter the v8::Context first.\n  assert(env->context() == env->isolate()->GetCurrentContext());\n\n  Local<Object> process = env->process_object();\n  Local<Value> domain_v = object->Get(env->domain_string());\n  Local<Object> domain;\n\n  TryCatch try_catch;\n  try_catch.SetVerbose(true);\n\n  // TODO(trevnorris): This is sucky for performance. Fix it.\n  bool has_async_queue = object->Has(env->async_queue_string());\n  if (has_async_queue) {\n    Local<Value> argv[] = { object };\n    env->async_listener_load_function()->Call(process, ARRAY_SIZE(argv), argv);\n\n    if (try_catch.HasCaught())\n      return Undefined(node_isolate);\n  }\n\n  bool has_domain = domain_v->IsObject();\n  if (has_domain) {\n    domain = domain_v.As<Object>();\n\n    if (domain->Get(env->disposed_string())->IsTrue()) {\n      // domain has been disposed of.\n      return Undefined(node_isolate);\n    }\n\n    Local<Function> enter =\n        domain->Get(env->enter_string()).As<Function>();\n    assert(enter->IsFunction());\n    enter->Call(domain, 0, NULL);\n\n    if (try_catch.HasCaught()) {\n      return Undefined(node_isolate);\n    }\n  }\n\n  Local<Value> ret = callback->Call(object, argc, argv);\n\n  if (try_catch.HasCaught()) {\n    return Undefined(node_isolate);\n  }\n\n  if (has_domain) {\n    Local<Function> exit =\n        domain->Get(env->exit_string()).As<Function>();\n    assert(exit->IsFunction());\n    exit->Call(domain, 0, NULL);\n\n    if (try_catch.HasCaught()) {\n      return Undefined(node_isolate);\n    }\n  }\n\n  if (has_async_queue) {\n    Local<Value> val = object.As<Value>();\n    env->async_listener_unload_function()->Call(process, 1, &val);\n\n    if (try_catch.HasCaught())\n      return Undefined(node_isolate);\n  }\n\n  Environment::TickInfo* tick_info = env->tick_info();\n\n  if (tick_info->last_threw() == 1) {\n    tick_info->set_last_threw(0);\n    return ret;\n  }\n\n  if (tick_info->in_tick()) {\n    return ret;\n  }\n\n  if (tick_info->length() == 0) {\n    tick_info->set_index(0);\n    return ret;\n  }\n\n  tick_info->set_in_tick(true);\n\n  env->tick_callback_function()->Call(process, 0, NULL);\n\n  tick_info->set_in_tick(false);\n\n  if (try_catch.HasCaught()) {\n    tick_info->set_last_threw(true);\n    return Undefined(node_isolate);\n  }\n\n  return ret;\n}\n\n\nHandle<Value> Make"],[22215,0,"if (env->using_domains())\n    return MakeDomainCallback(env, object, callback, argc, argv);\n\n  "],[26322,0,"Handle<Value> MakeDomainCallback(const Handle<Object> object,\n                                 const Handle<Function> callback,\n                                 int argc,\n                                 Handle<Value> argv[]) {\n  Local<Context> context = object->CreationContext();\n  Environment* env = Environment::GetCurrent(context);\n  Context::Scope context_scope(context);\n  HandleScope handle_scope(env->isolate());\n  return handle_scope.Close(\n      MakeDomainCallback(env, object, callback, argc, argv));\n}\n\n\n"],[69237,0,"  NODE_SET_METHOD(process, \"_setupDomainUse\", SetupDomainUse);\n"]],"_dtSpan":[392509,397111]},{"parents":[320],"numChildren":2,"agent":164,"time":"1970-01-01T00:00:00Z","patches":[[43031,3,""],[43031,0,"abor"],[43037,1,""]],"_dtSpan":[397111,397119]},{"parents":[349,350],"numChildren":1,"agent":163,"time":"1970-01-01T00:00:00Z","patches":[[48280,37,""]],"_dtSpan":[397119,397156]},{"parents":[351],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[16498,32,""],[16501,3,""],[16502,16,""],[16503,15,""],[16676,131,""]],"_dtSpan":[397156,397353]},{"parents":[352],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[89664,2,""],[89665,1,""],[89665,0,"nt"],[90313,0,"r"],[90315,2,""],[90316,1,""],[90316,0,"urn "],[90324,1,""],[93051,0,"int code;\n  "],[93546,0,"code = "],[93771,1,""],[93771,0,"code"]],"_dtSpan":[397353,397391]},{"parents":[353],"numChildren":1,"agent":3,"time":"1970-01-01T00:00:00Z","patches":[[76905,0,"(index + 1 < n"],[76922,0,"s) &&\n                 arg"],[76971,0,"\n                "]],"_dtSpan":[397391,397448]},{"parents":[354],"numChildren":1,"agent":87,"time":"1970-01-01T00:00:00Z","patches":[[3590,0,"static node_module* modpending;\nstatic node_module* modlist_builtin;"],[3659,0,"static node_module* modlist_addon;\n\n"],[44888,0,"extern \"C\" void node_module_register(void* m) {\n  struct node_module* mp = reinterpret_cast<struct node_module*>(m);\n\n  if (mp->nm_flags & NM_F_BUILTIN) {\n    mp->nm_link = modlist_builtin;\n    modlist_builtin = mp;\n  } else {\n    assert(modpending == NULL);\n    modpending = mp;\n  }\n}\n\nstruct node_module* get_builtin_module(const char* name) {\n  struct node_module* mp;\n\n  for (mp = modlist_builtin; mp != NULL; mp = mp->nm_link) {\n    if (strcmp(mp->nm_modname, name) == 0)\n      break;\n  }\n\n  assert(mp == NULL || (mp->nm_flags & NM_F_BUILTIN) != 0);"],[45443,0,"  re"],[45448,0,"urn (mp);\n}\n\nt"],[46030,3,""],[46030,0,"st"],[46033,0,"uct"],[46037,2,""],[46037,0,"node_"],[46043,1,""],[46044,0,"du"],[46047,12,""],[46048,2,""],[46049,0," m"],[46052,2,""],[46070,9,""],[46102,7,""],[46161,0,"  return;\n  "],[46735,32,""],[46735,0,"/*"],[46740,4,""],[46741,2,""],[46742,8,""],[46743,2,""],[46743,0,"Objects"],[46751,1,""],[46751,0,"contain"],[46760,1,""],[46760,0,"g"],[46762,3,""],[46762,0,"v14"],[46766,3,""],[46766,0,"o"],[46768,2,""],[46770,3,""],[46771,0,"te"],[46774,1,""],[46775,6,""],[46776,0,"odul"],[46781,0,"s"],[46785,11,""],[46788,3,""],[46789,9,""],[46789,0,"av"],[46792,12,""],[46793,9,""],[46794,8,""],[46795,10,""],[46795,0,"g"],[46797,5,""],[46798,19,""],[46798,0,"t"],[46800,17,""],[46800,0,"r"],[46802,11,""],[46803,19,""],[46804,8,""],[46805,9,""],[46805,0,"h"],[46807,21,""],[46807,0,"m"],[46809,20,""],[46810,17,""],[46810,0,"lv"],[46813,5,""],[46814,9,""],[46815,7,""],[46816,2,""],[46817,11,""],[46818,2,""],[46820,5,""],[46820,0,"on"],[46827,9,""],[46827,0,"p"],[46830,1,""],[46830,0,"d"],[46832,1,""],[46833,10,""],[46833,0,"g"],[46835,2,""],[46835,0,"li"],[46839,13,""],[46840,4,""],[46842,46,""],[46843,3,""],[46843,0,"c"],[46845,17,""],[46846,11,""],[46846,0,"va"],[46850,5,""],[46851,1,""],[46852,27,""],[46853,14,""],[46854,1,""],[46855,5,""],[46856,17,""],[46857,11,""],[46858,3,""],[46859,25,""],[46859,0,"h"],[46861,5,""],[46862,7,""],[46863,8,""],[46864,4,""],[46866,20,""],[46867,4,""],[46869,7,""],[46869,0,"At"],[46872,2,""],[46873,3,""],[46873,0,"r"],[46875,3,""],[46876,1,""],[46877,4,""],[46877,0,"n"],[46879,1,""],[46879,0,","],[46881,7,""],[46882,8,""],[46883,1,""],[46884,6,""],[46884,0,"y"],[46886,2,""],[46887,5,""],[46888,2,""],[46889,1,""],[46894,5,""],[46895,12,""],[46901,1,""],[46902,1,""],[46902,0,"per "],[46907,0,"bjec"],[46913,1,""],[46913,0,"is supp"],[46921,4,""],[46922,6,""],[46922,0,"t"],[46924,0,"d"],[46935,5,""],[46935,0,"m"],[46937,2,""],[46940,2,""],[46941,1,""],[46942,1,""],[46942,0,"dpending"],[46951,0,"\n "],[46954,2,""],[46954,0,"m"],[46956,1,""],[46956,0,"dpending"],[46965,1,""],[46967,4,""],[46967,0,"NULL"],[46972,9,""],[46973,2,""],[46973,0,"\n"],[46980,1,""],[46980,0,"m"],[46982,2,""],[46986,3,""],[46986,0,"NULL"],[46991,2,""],[46992,15,""],[46992,0,"{"],[46996,3,""],[46998,1,""],[46998,0,"Thr"],[47002,4,""],[47002,0,"wErr"],[47007,0,"r(\"Mo"],[47016,7,""],[47017,3,""],[47018,4,""],[47019,6,""],[47020,10,""],[47021,11,""],[47022,23,""],[47023,40,""],[47024,9,""],[47026,2,""],[47027,1,""],[47027,0,"l"],[47029,1,""],[47029,0,"-r"],[47032,4,""],[47033,12,""],[47033,0,"i"],[47035,3,""],[47036,6,""],[47036,0,"er"],[47040,8,""],[47053,19,""],[47058,1,""],[47066,2,""],[47066,0,"p"],[47069,0,"nm_"],[47276,2,""],[47276,0,"p"],[47279,0,"nm_"],[47296,7,""],[47318,0,"  return;\n  "],[47332,0,"  if (mp->nm_flags & NM_F_BUILTIN) {"],[47371,2,""],[47372,0," Throw"],[47379,3,""],[47379,0,"rror(\"B"],[47387,0,"il"],[47390,0,"-in modul"],[47401,0,"self-regis"],[47412,1,""],[47413,0,"red.\");\n    return;\n  }\n\n"],[47439,3,""],[47441,0,"p->nm_ds"],[47450,0,"_han"],[47455,1,""],[47457,0," = lib.handle;"],[47474,0,"mp->nm_link = modl"],[47493,1,""],[47493,0,"st_addon;\n "],[47505,1,""],[47508,5,""],[47508,0,"l"],[47512,2,""],[47513,0,"addon = mp;\n\n  if (mp->nm_"],[47547,0,"register_"],[47577,2,""],[47577,0,"p"],[47580,0,"nm_context_"],[47599,8,""],[47636,0,", mp->nm_priv"],[47666,2,""],[47666,0,"p"],[47669,0,"nm_"],[47702,2,""],[47702,0,"p"],[47705,0,"nm_"],[47737,0,", mp->nm_priv"],[47768,7,""],[47821,0,"  return;\n  "],[50772,7,""],[50946,0,"nm_"],[50989,0,"nm_context_"],[51009,8,""],[51086,8,""],[51086,0,"nm"],[51097,0,"register_"],[51127,0,"\n     "],[51148,0,", mod->nm_priv"]],"_dtSpan":[397448,399596]},{"parents":[355],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[19420,3,""],[19420,0,"Valu"],[19425,2,""],[19427,3,""],[19427,0,"r"],[19430,1,""],[19430,0,"v"],[19797,4,""],[19797,0,"Obj"],[19801,0,"ct"],[19804,9,""],[19805,2,""],[19811,11,""],[19811,0,", "],[19817,6,""],[19819,4,""],[19829,3,""],[19829,0,"Valu"],[19834,2,""],[19842,0,"_v"],[19902,0,"bool has_async_queue = false;\n\n  if (recv->IsObject()) {\n    object = recv.As<Object>();\n    "],[20057,4,""],[20058,0," "],[20119,0,"  "],[20144,27,""],[20145,6,""],[20146,3,""],[20201,16,""],[20201,0,"1"],[20204,1,""],[20204,0,"&"],[20206,1,""],[20206,0,"ec"],[20217,0,"  "],[20252,0,"  "],[20288,0,"  }\n  "],[20317,0,"false;\n\n  if (!object.IsEmpty()) {\n    "],[20364,0," = object->Get(env"],[20384,0,"domain_string());\n    has_domain = domain_v->"],[20443,0,"  "],[20467,0,"  "],[20506,0,"  "],[20567,0,"  "],[20607,0,"  "],[20645,0,"  "],[20654,0,"  "],[20688,0,"  "],[20743,0,"  "],[20778,0,"  "],[20815,0,"  "],[20852,0,"  "],[20890,0,"  }\n    "],[20941,3,""],[20941,0,"r"],[20944,1,""],[20944,0,"v"],[21313,10,""],[21314,33,""],[21370,0,"rec"],[21374,2,""],[22067,3,""],[22067,0,"Valu"],[22072,2,""],[22074,3,""],[22074,0,"r"],[22077,1,""],[22077,0,"v"],[22291,3,""],[22291,0,"r"],[22294,1,""],[22294,0,"v"],[22651,0,"\n      recv->IsObject()"],[22675,1,""],[22675,0,"&& recv.As<O"],[22692,0,">()"],[22754,16,""],[22755,6,""],[22756,1,""],[22757,1,""],[22758,3,""],[22759,11,""],[22809,16,""],[22809,0,"1"],[22812,1,""],[22812,0,"&"],[22814,1,""],[22814,0,"ec"],[22820,1,""],[22930,3,""],[22930,0,"r"],[22933,1,""],[22933,0,"v"],[23051,10,""],[23052,33,""],[23108,0,"rec"],[23112,2,""],[23757,6,""],[23772,3,""],[23772,0,"r"],[23775,1,""],[23775,0,"v"],[23938,3,""],[23938,0,"r"],[23941,1,""],[23941,0,"v"],[24033,3,""],[24033,0,"r"],[24036,1,""],[24036,0,"v.As<Value>()"],[24123,1,""],[24149,5,""],[24165,3,""],[24165,0,"r"],[24168,1,""],[24168,0,"v"],[24198,6,""],[24338,3,""],[24338,0,"r"],[24341,1,""],[24341,0,"v"],[24433,3,""],[24433,0,"r"],[24436,1,""],[24436,0,"v.As<Value>()"],[24550,6,""],[24565,3,""],[24565,0,"r"],[24568,1,""],[24568,0,"v"],[24802,3,""],[24802,0,"r"],[24805,1,""],[24805,0,"v"],[24867,6,""],[24882,3,""],[24882,0,"r"],[24885,1,""],[24885,0,"v"],[25050,3,""],[25050,0,"r"],[25053,1,""],[25053,0,"v"],[25261,3,""],[25261,0,"r"],[25264,1,""],[25264,0,"v"],[25320,6,""],[25335,3,""],[25335,0,"r"],[25338,1,""],[25338,0,"v"],[25368,6,""],[25506,3,""],[25506,0,"r"],[25509,1,""],[25509,0,"v"],[25717,3,""],[25717,0,"r"],[25720,1,""],[25720,0,"v"],[25776,6,""],[25791,3,""],[25791,0,"r"],[25794,1,""],[25794,0,"v"],[25823,6,""],[25966,3,""],[25966,0,"r"],[25969,1,""],[25969,0,"v"],[26159,0,"\n      "],[26184,3,""],[26184,0,"r"],[26187,1,""],[26187,0,"v.As<Value>()"],[26263,6,""],[26278,3,""],[26278,0,"r"],[26281,1,""],[26281,0,"v"],[26316,6,""],[26471,3,""],[26471,0,"r"],[26474,1,""],[26474,0,"v"],[26695,3,""],[26695,0,"r"],[26698,1,""],[26698,0,"v"],[25025,0,"HandleScope handle_scope(node_isolate);  // FIXME(bnoordhuis) Isolate-ify.\n  "],[25244,41,""],[25245,2,""],[25246,1,""],[25514,0,"HandleScope handle_scope(node_isolate);  // FIXME(bnoordhuis) Isolate-ify.\n  "],[25737,1,""],[25738,11,""],[25739,32,""],[26007,0,"HandleScope handle_scope(node_isolate);  // FIXME(bnoordhuis) Isolate-ify.\n  "],[26227,44,""]],"_dtSpan":[399596,400788]},{"parents":[356],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[29207,3,""],[29207,0,"A"],[29209,3,""],[29209,0,"pend"],[29227,0,"Environment* env,\n                         Handle<Value> er,\n                         "],[29342,2,""],[29342,0,"if"],[29345,2,""],[29345,0,"(m"],[29348,1,""],[29348,0,"ssag"],[29353,1,""],[29353,0,".IsEmp"],[29360,0,"y())\n   "],[29370,2,""],[29371,1,""],[29372,0,"u"],[29374,3,""],[29375,2,""],[29375,0,";\n\n"],[29379,4,""],[29380,2,""],[29380,0,"Ha"],[29383,0,"dleS"],[29388,2,""],[29389,3,""],[29389,0,"pe"],[29392,1,""],[29392,0,"sc"],[29395,2,""],[29395,0,"p"],[29397,5,""],[29397,0,"("],[29399,2,""],[29399,0,"nv->"],[29404,2,""],[29404,0,"sola"],[29409,3,""],[29410,3,""],[29410,0,"());"],[29417,3,""],[29417,0,"Loc"],[29421,1,""],[29421,0,"l<Objec"],[29429,4,""],[29429,0,">"],[29431,1,""],[29431,0,"e"],[29433,6,""],[29434,0,"_"],[29436,4,""],[29436,0,"bj;\n "],[29443,1,""],[29443,0,"f"],[29445,2,""],[29445,0,"(!er"],[29450,3,""],[29451,4,""],[29452,6,""],[29452,0,"Emp"],[29456,0,"y"],[29458,5,""],[29458,0,")"],[29460,9,""],[29460,0,"&&"],[29463,1,""],[29463,0,"e"],[29465,1,""],[29465,0,"->IsObj"],[29473,0,"ct()"],[29478,1,""],[29478,0," {"],[29483,2,""],[29484,4,""],[29485,1,""],[29486,0,"rr_obj"],[29493,4,""],[29493,0,"="],[29495,0,"er.As<Objec"],[29507,1,""],[29507,0,">();\n\n"],[29514,4,""],[29515,3,""],[29516,8,""],[29517,8,""],[29517,0,"//"],[29520,1,""],[29520,0,"D"],[29522,1,""],[29523,0,"i"],[29525,2,""],[29526,3,""],[29528,3,""],[29528,0,"l"],[29533,0,"c"],[29535,10,""],[29536,8,""],[29537,3,""],[29538,4,""],[29539,2,""],[29540,5,""],[29540,0,"me"],[29543,0,"sag"],[29547,2,""],[29550,0,"  "],[29556,1,""],[29556,0,"!err_obj->GetH"],[29571,3,""],[29571,0,"ddenV"],[29577,1,""],[29577,0,"lu"],[29580,2,""],[29580,0,"("],[29582,1,""],[29582,0,"nv->p"],[29589,0,"cessed_st"],[29599,0,"ing()).IsEmpty()"],[29621,0,"  "],[29633,10,""],[29633,0,"  "],[29638,0,"_"],[29640,4,""],[29640,0,"bj->Se"],[29647,2,""],[29647,0,"Hidd"],[29652,5,""],[29652,0,"nVal"],[29657,0,"e(en"],[29662,5,""],[29662,0,"->p"],[29666,0,"oc"],[29670,0,"s"],[29672,0,"d_s"],[29676,5,""],[29676,0,"ring"],[29682,4,""],[29682,0,","],[29684,2,""],[29684,0,"T"],[29686,1,""],[29686,0,"ue(e"],[29691,3,""],[29691,0,"v->i"],[29696,0,"ola"],[29700,1,""],[29701,8,""],[29701,0,"())"],[29706,1,""],[29709,2,""],[29709,0,"}\n\n "],[29714,5,""],[29715,0,"t"],[29717,8,""],[29718,4,""],[29718,0,"ic char"],[29726,1,""],[29726,0,"arrow[1024];\n"],[29740,2,""],[29788,2,""],[29854,2,""],[29895,2,""],[29938,18,""],[29939,42,""],[29969,1,""],[29971,1,""],[30027,1,""],[30029,1,""],[30075,2,""],[30145,2,""],[30200,2,""],[30238,2,""],[30245,2,""],[30314,1,""],[30316,1,""],[30383,1,""],[30385,1,""],[30455,1,""],[30457,1,""],[30526,1,""],[30528,1,""],[30537,2,""],[30542,2,""],[30614,2,""],[30632,2,""],[30639,2,""],[30695,2,""],[30763,2,""],[30766,2,""],[30837,2,""],[30903,1,""],[30905,1,""],[30975,1,""],[30977,1,""],[31043,1,""],[31045,1,""],[31084,1,""],[31086,1,""],[31124,0,"int"],[31128,0,"off ="],[31134,1,""],[31134,0,"sn"],[31143,0,"arrow,\n                     "],[31172,2,""],[31172,0,"iz"],[31175,0,"of(a"],[31181,0,"ow)"],[31185,0,"\n                    "],[31210,0,":%i"],[31215,0,"%s\\n"],[31221,0,"\n                     filename_string,\n                     linenum,\n                    "],[31333,0,"assert(off >= 0);\n\n"],[31408,1,""],[31410,1,""],[31448,0,"assert(static_cast<size_t>(off)"],[31480,0,"<"],[31482,0,"sizeo"],[31488,4,""],[31489,0,"arrow));\n    arrow[off++] = "],[31560,9,""],[31562,2,""],[31568,2,""],[31608,0,"assert(static_cast<size_t>(off) < sizeof(arrow));\n  "],[31662,0,"arrow[of"],[31671,2,""],[31671,0,"++] = '^';\n  }\n  assert(s"],[31697,0,"atic_"],[31703,0,"ast<size_t>"],[31715,0,"off) < sizeof(arrow) - 1);\n  arrow[off++] = '\\n';\n  arrow[off] = "],[31781,1,""],[31781,0,"\\0"],[31784,0,";\n\n  Local<String> arrow_str = String::NewFromUtf8(env->isolate()"],[31851,0,"arrow);\n  Local<Value> msg;\n  Local<Value> "],[31896,0,"ack;\n\n  // Allocation faile"],[31924,0,", just print it out\n  if (arrow_str.IsEmpty() || "],[31976,0,"_obj.IsEmpty() || !err_obj->IsNativeError("],[32019,0,")\n    goto print"],[32037,0,"\n"],[32040,0,"msg"],[32044,0,"="],[32046,1,""],[32046,0,"err_obj->Get(env->message_string());"],[32085,0,"stack = err_obj->Get(env->stack_string());\n\n"],[32131,0,"i"],[32133,0," (msg.IsEmpty() || stack.IsEm"],[32163,1,""],[32164,0,"y())\n    goto print;\n\n  err_obj->Set(env->message_string(),\n               String::Con"],[32251,0,"at"],[32254,2,""],[32254,0,"arrow_str, msg->ToStri"],[32277,1,""],[32277,0,"g()));\n  err_obj->Set(env->stack_string()"],[32319,0,"\n  "],[32323,0,"            String::Concat(arrow_"],[32358,0,"r, stack->ToString()));\n  return;\n\n print:\n  if (env->printe"],[32419,0,"_"],[32423,0,"or()"],[32428,0,"\n    return;\n  env->set_printed_error(true)"],[32475,1,""],[32475,0,"uv_tty_reset_mode();\n  fprintf(stderr, \"\\n%s\", arrow);"],[32562,0,"Environment* env,\n                            "],[32625,0,"\n                           "],[32701,3,""],[32702,1,""],[32702,0,"nv->"],[32713,0,"()"],[32721,3,""],[32721,0,"Ap"],[32724,3,""],[32724,0,"end"],[32741,0,"env, er, "],[32830,2,""],[32859,3,""],[32860,1,""],[32860,0,"nv->"],[32871,0,"()"],[32878,2,""],[32882,2,""],[32900,5,""],[32901,3,""],[32921,22,""],[32921,0,"e"],[32923,14,""],[32923,0,"v->"],[32931,1,""],[32931,0,"_string("],[32942,4,""],[33481,22,""],[33481,0,"e"],[33483,14,""],[33483,0,"v->"],[33493,1,""],[33493,0,"_string("],[33553,3,""],[33554,1,""],[33554,0,"nv->"],[33565,0,"()"],[34064,0,"Environment* env, "],[34129,0,"env, "],[34232,0,"static "],[34266,0,"Environment* env,\n                                  "],[34340,0,"\n                                 "],[34421,0,"e"],[34423,4,""],[34423,0,"v->"],[34433,0,"()"],[34718,0,"env, "],[34838,0,"env, "],[50256,0,"nv, e"],[50707,0,"env, "],[50810,0,"nv, e"],[72283,3,""],[72284,1,""],[72284,0,"nv->"],[72295,0,"()"],[72350,0,"env, "],[72435,0,"env, "],[91806,0,"\n  // Reload exit"],[91824,0,"code, it"],[91833,0,"may be changed by `emit('exit')`\n  "],[91875,0,"pro"],[91879,0,"ess_object->Get(exitC"],[91903,0,")->IntegerValue()"],[3924,7,""],[3924,0,"st"],[3927,4,""],[3927,0,"t"],[3929,1,""],[3929,0,"c"],[3931,17,""],[5079,35,""],[5153,0,"HandleScope scope(env->isolate());\n  "],[11183,0,"Isolate* isolate,\n                            "],[11429,5,""],[11498,3,""],[11499,1,""],[11499,0,"nv->"],[11510,0,"()"],[11650,0,"e"],[11652,4,""],[11652,0,"v->"],[11662,0,"()"],[11749,0,"e"],[11751,4,""],[11751,0,"v->"],[11761,0,"()"],[11922,0,"e"],[11924,4,""],[11924,0,"v->"],[11934,0,"()"],[12022,3,""],[12023,1,""],[12023,0,"nv->"],[12034,0,"()"],[12124,3,""],[12125,1,""],[12125,0,"nv->"],[12136,0,"()"],[12320,0,"e"],[12322,4,""],[12322,0,"v->"],[12332,0,"()"],[12455,0,"e"],[12457,4,""],[12457,0,"v->"],[12467,0,"()"],[12559,0,"e"],[12561,4,""],[12561,0,"v->"],[12571,0,"()"],[12691,0,"Isolate* "],[12701,0,"solate,\n                         i"],[12925,5,""],[13032,3,""],[13033,1,""],[13033,0,"nv->"],[13044,0,"()"],[13111,3,""],[13112,1,""],[13112,0,"nv->"],[13123,0,"()"],[13209,0,"e"],[13211,4,""],[13211,0,"v->"],[13221,0,"()"],[13467,0,"e"],[13469,4,""],[13469,0,"v->"],[13479,0,"()"],[13544,0,"e"],[13546,4,""],[13546,0,"v->"],[13556,0,"()"],[13660,0,"e"],[13662,4,""],[13662,0,"v->"],[13672,0,"()"],[13737,0,"e"],[13739,4,""],[13739,0,"v->"],[13749,0,"()"],[13807,0,"e"],[13809,4,""],[13809,0,"v->"],[13819,0,"()"],[13916,0,"e"],[13918,4,""],[13918,0,"v->"],[13928,0,"()"],[14085,0,"e"],[14087,4,""],[14087,0,"v->"],[14097,0,"()"],[14330,3,""],[14331,1,""],[14331,0,"nv->"],[14342,0,"()"],[14536,0,"e"],[14538,4,""],[14538,0,"v->"],[14548,0,"()"],[15277,0,"Environment* env,\n                                  "],[15502,18,""],[15503,1,""],[15504,42,""],[15625,0,"e"],[15627,4,""],[15627,0,"v->"],[15637,0,"()"],[15742,3,""],[15743,1,""],[15743,0,"nv->"],[15754,0,"()"],[15842,0,"e"],[15844,4,""],[15844,0,"v->"],[15854,0,"()"],[15944,0,"e"],[15946,4,""],[15946,0,"v->"],[15956,0,"()"],[16142,0,"e"],[16144,4,""],[16144,0,"v->"],[16154,0,"()"],[16236,0,"e"],[16238,4,""],[16238,0,"v->"],[16248,0,"()"],[16340,3,""],[16341,1,""],[16341,0,"nv->"],[16352,0,"()"],[16386,0,"\n\nLocal<Value> WinapiErrnoException(int errorno,\n                                  const char* syscall,\n                                  const char* msg,\n                                  const char* path) {\n  Environment* env = Environment::GetCurrent(Isolate::GetCurrent());\n  return WinapiErrnoException(env, errorno, syscall, msg, path);\n}\n"],[17917,0,"e"],[17919,4,""],[17919,0,"v->"],[17929,0,"()"],[18035,2,""],[18036,26,""],[18036,0,"e"],[18038,15,""],[18038,0,"v->"],[18045,1,""],[18045,0,"_d"],[18052,4,""],[18052,0,"_c"],[18055,4,""],[18055,0,"_string("],[18346,22,""],[18346,0,"e"],[18348,15,""],[18348,0,"v->"],[18355,1,""],[18355,0,"_c"],[18364,1,""],[18364,0,"_string("],[18374,1,""],[18375,21,""],[20638,3,""],[20639,1,""],[20639,0,"nv->"],[20650,0,"()"],[20995,0,"e"],[20997,4,""],[20997,0,"v->"],[21007,0,"()"],[21242,0,"e"],[21244,4,""],[21244,0,"v->"],[21254,0,"()"],[21386,0,"e"],[21388,4,""],[21388,0,"v->"],[21398,0,"()"],[21633,0,"e"],[21635,4,""],[21635,0,"v->"],[21645,0,"()"],[21809,0,"e"],[21811,4,""],[21811,0,"v->"],[21821,0,"()"],[22329,0,"e"],[22331,4,""],[22331,0,"v->"],[22341,0,"()"],[23255,0,"e"],[23257,4,""],[23257,0,"v->"],[23267,0,"()"],[23385,3,""],[23386,1,""],[23386,0,"nv->"],[23397,0,"()"],[23555,0,"e"],[23557,4,""],[23557,0,"v->"],[23567,0,"()"],[24016,3,""],[24017,1,""],[24017,0,"nv->"],[24028,0,"()"],[25141,0,"e"],[25143,4,""],[25143,0,"v->"],[25153,0,"()"],[25258,0,"Isolate* isolate,\n                           "],[25486,5,""],[25495,35,""],[25749,0,"Isolate* isolate,\n                           "],[25980,5,""],[25989,35,""],[26243,0,"Isolate* isolate,\n                           "],[26478,5,""],[26487,35,""],[27262,0,"Isolate* isolate,\n                            "],[27333,0,"\n                           "],[27408,5,""],[28776,0,"Isolate* isolate,\n                    "],[28824,1,""],[28825,0," "],[28830,0,"\n                   "],[28862,0,"\n                   "],[28938,0,"i"],[28940,0,"ola"],[28944,0,"e,\n                             st"],[29159,4,""],[29159,0,"Isolate* isolate,\n                    "],[29204,4,""],[29215,0,"\n                   "],[29282,5,""],[29495,0,"isolate, "],[29642,0,"Isolate* isolate,\n                    "],[29684,1,""],[29685,0," "],[29746,4,""],[29753,4,""],[29839,0,"isolate, "],[35684,3,""],[35684,0,"args.G"],[35691,2,""],[35691,0,"tI"],[35699,0,"()"],[36223,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[36306,0,"e"],[36308,4,""],[36308,0,"v->"],[36318,0,"()"],[36420,22,""],[36420,0,"e"],[36422,0,"v->"],[36426,1,""],[36426,0,"wn"],[36429,0,"r"],[36431,1,""],[36432,3,""],[36433,6,""],[36433,0,"ri"],[36436,3,""],[36436,0,"g("],[36988,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[37071,3,""],[37072,1,""],[37072,0,"nv->"],[37083,0,"()"],[37144,7,""],[37145,30,""],[37184,0,"  return env->ThrowError(\"Bad argument.\");\n  "],[37320,0,"env->"],[37429,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[37512,3,""],[37513,1,""],[37513,0,"nv->"],[37524,0,"()"],[37764,0,"env->"],[37884,0,"e"],[37886,4,""],[37886,0,"v->"],[37896,0,"()"],[38008,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[38091,0,"e"],[38093,4,""],[38093,0,"v->"],[38103,0,"()"],[38306,0,"env->"],[38691,0,"env->"],[41100,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[41183,3,""],[41184,1,""],[41184,0,"nv->"],[41195,0,"()"],[41266,0,"env->"],[41418,0,"env->"],[41506,0,"env->"],[41621,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[41704,0,"e"],[41706,4,""],[41706,0,"v->"],[41716,0,"()"],[41787,0,"env->"],[41939,0,"env->"],[42026,0,"env->"],[42144,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[42227,0,"e"],[42229,4,""],[42229,0,"v->"],[42239,0,"()"],[42316,0,"env->"],[42502,0,"env->"],[42742,0,"e"],[42744,4,""],[42744,0,"v->"],[42754,0,"()"],[42913,0,"e"],[42915,4,""],[42915,0,"v->"],[42925,0,"()"],[43049,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[43132,0,"e"],[43134,4,""],[43134,0,"v->"],[43144,0,"()"],[43190,0,"env->"],[43529,0,"env->"],[43688,0,"env->"],[43810,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[43893,0,"e"],[43895,4,""],[43895,0,"v->"],[43905,0,"()"],[43976,0,"env->"],[44110,0,"env->"],[44457,0,"env->"],[44633,0,"env->"],[44797,0,"env->"],[44954,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[45037,0,"e"],[45039,4,""],[45039,0,"v->"],[45049,0,"()"],[45155,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[45238,0,"e"],[45240,4,""],[45240,0,"v->"],[45250,0,"()"],[45428,47,""],[45494,0,"  HandleScope scope(env->isolate());\n"],[45612,0,"env->"],[45726,0,"e"],[45728,4,""],[45728,0,"v->"],[45738,0,"()"],[45872,0,"e"],[45874,4,""],[45874,0,"v->"],[45884,0,"()"],[45981,0,"e"],[45983,4,""],[45983,0,"v->"],[45993,0,"()"],[46080,3,""],[46081,1,""],[46081,0,"nv->"],[46092,0,"()"],[46298,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[46381,0,"e"],[46383,4,""],[46383,0,"v->"],[46393,0,"()"],[46438,0,"env->"],[47096,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[47179,0,"e"],[47181,4,""],[47181,0,"v->"],[47191,0,"()"],[47329,0,"env->"],[47349,0,"\n          "],[47727,0,"e"],[47729,4,""],[47729,0,"v->"],[47739,0,"()"],[47805,0,"e"],[47807,4,""],[47807,0,"v->"],[47817,0,"()"],[49076,0,"env->"],[49653,0,"env->isolate()->"],[49993,0,"env->"],[50296,0,"env->"],[50378,0,"env->"],[50778,0,"env->"],[51379,0,"Isolate* isolate,\n                    "],[51437,0,"\n                   "],[51505,5,""],[51561,5,""],[52638,0,"Isolate* isolate, "],[52705,5,""],[52867,0,"isolate, "],[53102,0,"Isolate::GetCurrent(), "],[53860,3,""],[53861,1,""],[53861,0,"nv->"],[53872,0,"()"],[54560,0,"nv, e"],[54629,0,"env->"],[54842,0,"Environment* env = Environment::GetCurrent(info.GetIsolate());\n  "],[54925,0,"e"],[54927,4,""],[54927,0,"v->"],[54937,0,"()"],[55058,0,"e"],[55060,4,""],[55060,0,"v->"],[55070,0,"()"],[55269,0,"Environment* env = Environment::GetCurrent(info.GetIsolate());\n  "],[55352,0,"e"],[55354,4,""],[55354,0,"v->"],[55364,0,"()"],[55597,0,"Environment* env = Environment::GetCurrent(info.GetIsolate());\n  "],[55680,3,""],[55681,1,""],[55681,0,"nv->"],[55692,0,"()"],[55853,0,"e"],[55855,4,""],[55855,0,"v->"],[55865,0,"()"],[56581,0,"e"],[56583,4,""],[56583,0,"v->"],[56593,0,"()"],[56943,0,"Environment* env = Environment::GetCurrent(info.GetIsolate());\n  "],[57026,3,""],[57027,1,""],[57027,0,"nv->"],[57038,0,"()"],[57654,0,"Environment* env = Environment::GetCurrent(info.GetIsolate());\n  "],[57737,3,""],[57738,1,""],[57738,0,"nv->"],[57749,0,"()"],[58544,0,"Environment* env = Environment::GetCurrent(info.GetIsolate());\n  "],[58627,0,"e"],[58629,4,""],[58629,0,"v->"],[58639,0,"()"],[59270,0,"Environment* env = Environment::GetCurrent(info.GetIsolate());\n  "],[59353,3,""],[59354,1,""],[59354,0,"nv->"],[59365,0,"()"],[59458,0,"arr"],[59685,0,"e"],[59687,4,""],[59687,0,"v->"],[59697,0,"()"],[59880,0,"arr"],[60054,0,"arr"],[60549,0,"e"],[60551,4,""],[60551,0,"v->"],[60561,0,"()"],[60781,0,"arr"],[60913,0,"arr"],[60957,0,"Environment* env"],[60997,0,"e"],[60999,4,""],[60999,0,"v->"],[61009,0,"()"],[61108,3,""],[61109,1,""],[61109,0,"nv->"],[61120,0,"()"],[61160,0,"e"],[61162,4,""],[61162,0,"v->"],[61172,0,"()"],[61224,22,""],[61224,0,"e"],[61226,1,""],[61226,0,"v->"],[61231,0,"bug"],[61235,1,""],[61236,3,""],[61237,8,""],[61237,0,"rin"],[61241,1,""],[61241,0,"("],[61265,22,""],[61265,0,"e"],[61267,3,""],[61267,0,"v->uv"],[61273,1,""],[61274,3,""],[61275,7,""],[61275,0,"ring("],[61288,0,"e"],[61290,4,""],[61290,0,"v->"],[61300,0,"()"],[61350,25,""],[61351,11,""],[61351,0,"nv->"],[61359,1,""],[61359,0,"_lc_string("],[61378,3,""],[61379,1,""],[61379,0,"nv->"],[61390,0,"()"],[61459,0,"e"],[61461,4,""],[61461,0,"v->"],[61471,0,"()"],[61515,0,"e"],[61517,4,""],[61517,0,"v->"],[61527,0,"()"],[61550,22,""],[61550,0,"e"],[61552,14,""],[61552,0,"v->"],[61562,1,""],[61562,0,"_string("],[61657,0,"e"],[61659,4,""],[61659,0,"v->"],[61669,0,"()"],[61713,0,"e"],[61715,4,""],[61715,0,"v->"],[61725,0,"()"],[61748,22,""],[61748,0,"e"],[61750,14,""],[61750,0,"v->"],[61760,1,""],[61760,0,"_string("],[61793,22,""],[61793,0,"e"],[61795,14,""],[61795,0,"v->"],[61801,1,""],[61801,0,"_string("],[62033,0,"Environment* env = Environment::GetCurrent(info.GetIsolate());\n  "],[62116,0,"e"],[62118,4,""],[62118,0,"v->"],[62128,0,"()"],[62350,0,"Environment* env = Environment::GetCurrent(info.GetIsolate());\n  "],[62433,3,""],[62434,1,""],[62434,0,"nv->"],[62445,0,"()"],[65285,3,""],[65286,1,""],[65286,0,"nv->"],[65297,0,"()"],[65326,1,""],[65336,1,""],[65594,3,""],[65595,1,""],[65595,0,"nv->"],[65606,0,"()"],[65685,25,""],[65686,6,""],[65686,0,"nv->"],[65691,5,""],[65695,1,""],[65695,0,"_string("],[65917,0,"e"],[65919,4,""],[65919,0,"v->"],[65929,0,"()"],[66522,0,"e"],[66524,4,""],[66524,0,"v->"],[66534,0,"()"],[66692,0,"e"],[66694,4,""],[66694,0,"v->"],[66704,0,"()"],[66818,0,"e"],[66820,4,""],[66820,0,"v->"],[66830,0,"()"],[66944,0,"e"],[66946,4,""],[66946,0,"v->"],[66956,0,"()"],[67083,0,"e"],[67085,4,""],[67085,0,"v->"],[67095,0,"()"],[67211,0,"\n      "],[67228,10,""],[67234,4,""],[67245,8,""],[67251,6,""],[67273,0,"e"],[67275,4,""],[67275,0,"v->"],[67285,0,"()"],[67828,0,"e"],[67830,4,""],[67830,0,"v->"],[67840,0,"()"],[67960,3,""],[67961,1,""],[67961,0,"nv->"],[67972,0,"()"],[68102,3,""],[68103,1,""],[68103,0,"nv->"],[68114,0,"()"],[68271,3,""],[68272,1,""],[68272,0,"nv->"],[68283,0,"()"],[68317,25,""],[68318,0,"nv->argv"],[68327,1,""],[68328,3,""],[68329,5,""],[68330,0,"in"],[68333,2,""],[68333,0,"("],[68514,0,"e"],[68516,4,""],[68516,0,"v->"],[68526,0,"()"],[68565,22,""],[68565,0,"e"],[68567,14,""],[68567,0,"v->"],[68574,1,""],[68574,0,"_a"],[68579,1,""],[68579,0,"_string("],[69147,22,""],[69147,0,"e"],[69149,2,""],[69149,0,"v->"],[69153,0,"nv"],[69156,1,""],[69157,3,""],[69158,5,""],[69158,0,"ri"],[69161,2,""],[69161,0,"g("],[69240,0,"e"],[69242,4,""],[69242,0,"v->"],[69252,0,"()"],[69311,0,"env"],[69341,40,""],[69342,4,""],[69343,0,"v->n"],[69350,1,""],[69350,0,"_i"],[69354,10,""],[69354,0,"_c"],[69357,4,""],[69357,0,"_string("],[69581,0,"e"],[69583,4,""],[69583,0,"v->"],[69593,0,"()"],[69705,0,"e"],[69707,4,""],[69707,0,"v->"],[69717,0,"()"],[69821,0,"e"],[69823,4,""],[69823,0,"v->"],[69833,0,"()"],[69943,0,"e"],[69945,4,""],[69945,0,"v->"],[69955,0,"()"],[70074,0,"e"],[70076,4,""],[70076,0,"v->"],[70086,0,"()"],[70205,0,"e"],[70207,4,""],[70207,0,"v->"],[70217,0,"()"],[70439,0,"e"],[70441,4,""],[70441,0,"v->"],[70451,0,"()"],[70684,3,""],[70685,1,""],[70685,0,"nv->"],[70696,0,"()"],[70729,22,""],[70729,0,"e"],[70731,10,""],[70731,0,"v->"],[70735,4,""],[70738,1,""],[70738,0,"_p"],[70743,1,""],[70743,0,"_string("],[70753,9,""],[70754,6,""],[70818,25,""],[70819,11,""],[70819,0,"nv->"],[70828,1,""],[70828,0,"_p"],[70833,1,""],[70833,0,"_string("],[72938,22,""],[72938,0,"e"],[72940,3,""],[72940,0,"v->tick"],[72949,1,""],[72949,0,"nf"],[72952,7,""],[72953,0,"s"],[72955,0,"r"],[72957,3,""],[72958,3,""],[72958,0,"g("],[73046,22,""],[73046,0,"e"],[73048,15,""],[73048,0,"v->"],[73057,1,""],[73057,0,"_string("],[73572,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[73655,0,"e"],[73657,4,""],[73657,0,"v->"],[73667,0,"()"],[73931,0,"e"],[73933,4,""],[73933,0,"v->"],[73943,0,"()"],[74543,0,"env"],[75286,0,"env, "],[75352,0,"env, "],[82323,0,"Isolate* isolate, "],[82397,35,""],[82398,44,""],[83764,0,"node_isolate, "],[84727,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[84810,3,""],[84811,1,""],[84811,0,"nv->"],[84822,0,"()"],[84867,0,"env->"],[85030,0,"env->"],[87022,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[87105,3,""],[87106,1,""],[87106,0,"nv->"],[87117,0,"()"],[87312,0,"env->"],[87703,0,"env->"],[87723,0,"\n        "],[87753,0,"env, "],[87983,0,"env->"],[88141,0,"env->"],[88182,0,"env,\n                                             "],[88247,0,"\n                                            "],[88587,0,"env->"],[88607,0,"\n        "],[88637,0,"env, "],[88978,0,"env->"],[89019,0,"env,\n                                             "],[89084,0,"\n                                            "],[89279,0,"env->"],[89320,0,"env,\n                                             "],[89385,0,"\n                                            "],[89791,3,""],[89791,0,"args.G"],[89798,2,""],[89798,0,"tI"],[89806,0,"()"],[93144,0,"node_isolate, "],[94042,22,""],[94042,0,"e"],[94044,2,""],[94044,0,"v->"],[94048,1,""],[94048,0,"x"],[94050,4,""],[94051,4,""],[94051,0,"ing"],[94055,3,""],[94055,0,"s"],[94057,0,"r"],[94061,1,""],[94061,0,"("],[94064,20,""],[94065,2,""],[94070,0,"e"],[94072,4,""],[94072,0,"v->"],[94082,0,"()"],[94117,25,""],[94118,11,""],[94118,0,"nv->"],[94126,1,""],[94126,0,"_c"],[94131,1,""],[94131,0,"_string("],[94233,22,""],[94233,0,"e"],[94235,2,""],[94235,0,"v->"],[94239,0,"xit"],[94243,1,""],[94244,3,""],[94245,6,""],[94245,0,"r"],[94247,2,""],[94247,0,"ng("],[94276,0,"e"],[94278,4,""],[94278,0,"v->"],[94288,0,"()"]],"_dtSpan":[400788,409420]},{"parents":[357],"numChildren":1,"agent":3,"time":"1970-01-01T00:00:00Z","patches":[[15277,5,""],[15277,0,"Is"],[15280,2,""],[15280,0,"lat"],[15284,2,""],[15286,0,"isolat"],[15293,2,""],[15504,0,"Environment* env = Environment::GetCurrent(isolate);\n  "],[15797,5,""],[15804,2,""],[15890,5,""],[15897,2,""],[15985,5,""],[15992,2,""],[16176,5,""],[16183,2,""],[16263,5,""],[16270,2,""],[16360,5,""],[16367,2,""],[16398,104,""],[16399,241,""],[86690,0,"Isolate* isolate = args.GetIsolate();\n  "],[86773,9,""],[86773,0,"i"],[86780,2,""],[86803,5,""],[86810,2,""],[87394,0,"isolat"],[87401,2,""],[87448,0,"isolat"],[87455,2,""],[87840,0,"isolat"],[87847,2,""],[87885,0,"isolat"],[87892,2,""],[88294,0,"isolat"],[88301,2,""],[88348,0,"isolat"],[88355,2,""],[88693,0,"isolat"],[88700,2,""],[88738,0,"isolat"],[88745,2,""],[88792,0,"    "],[88857,0,"    "],[89010,0,"isolat"],[89017,2,""],[89055,0,"isolat"],[89062,2,""],[89109,0,"    "],[89174,0,"    "]],"_dtSpan":[409420,410039]},{"parents":[358],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[93560,0,"void EmitBeforeExit(Environment* env) {\n  Context::Scope context_scope(env->context());\n  HandleScope handle_scope(env->isolate());\n  Local<Object> process_object = env->process_object();\n  Local<Str"],[93761,0,"g> exit_code = FIXED_ONE_BYTE_STRING(env->isolate(), \"exi"],[93819,0,"Code\");\n  Local<Value> args[] = {\n "],[93855,0,"  FIX"],[93861,0,"D_ONE_BYTE_STRING(env->isolate(), \"beforeExit\"),\n    process_object->Get(exit_code)->ToInteger()\n  };\n  MakeCallback(env, process_object, \"e"],[94004,0,"\", ARRAY_SIZ"],[94017,0,"(args), args);\n}\n\n\nint EmitE"],[97879,0,"bool more;\n    do {\n      more = "],[97945,1,""],[97945,0,"ONC"],[97949,2,""],[97949,0,");\n      if (more == false) {\n        EmitBeforeExit(env);\n        more = uv_run(env->event_loop(), UV_R"],[98054,1,""],[98054,0,"N_NOWAI"],[98069,0,"  }\n    } while (more == true);\n    "]],"_dtSpan":[410039,410702]},{"parents":[359],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[98008,0,"\n        // Emit `beforeExit` if the loop became alive either after emitting\n        // event, or after running some callbacks.\n"],[98154,0,"loop_alive(env->event_loop());\n        if (uv_"],[98237,0," != 0)\n          more = true"]],"_dtSpan":[410702,410904]},{"parents":[350],"numChildren":2,"agent":164,"time":"1970-01-01T00:00:00Z","patches":[[18089,0,"_curre"],[18096,2,""],[18101,0,"Handler"]],"_dtSpan":[410904,410919]},{"parents":[360,361],"numChildren":1,"agent":163,"time":"1970-01-01T00:00:00Z","patches":[[17910,13,""]],"_dtSpan":[410919,410932]},{"parents":[362],"numChildren":1,"agent":146,"time":"1970-01-01T00:00:00Z","patches":[[37315,4,""],[37343,4,""],[37356,0,"s"],[37358,0,"ze_t cwd_le"],[37370,0," = sizeof(buf);\n  in"],[37410,5,""],[37410,0,"&cwd"],[37415,13,""],[37415,0,"len"],[37490,35,""],[37545,0,"\n                                         "],[37591,0,",\n                                          String::kNormalString,\n                                          cwd_len"],[37709,1,""]],"_dtSpan":[410932,411191]},{"parents":[363],"numChildren":1,"agent":163,"time":"1970-01-01T00:00:00Z","patches":[[37488,0,"#ifdef _WIN32\n  // TODO(tjfontaine) in the future libuv will report the size include the null\n  // for now only windows does, remove conditionals after libuv upgrade\n  cwd_len -= 1;\n#endif\n\n"]],"_dtSpan":[411191,411381]},{"parents":[364],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[2594,0,"scapableHandleScope;\nusing v8::E"],[2998,1,""],[2999,25,""],[12317,9,""],[12331,0,", errorno"],[14327,9,""],[14341,0,", errorno"],[16173,0,"isolate, "],[16188,5,""],[16189,4,""],[25135,0,"Escapable"],[25349,1,""],[25349,0,"Escape(\n      Local<Va"],[25372,0,"ue>::New(is"],[25384,1,""],[25384,0,"lat"],[25388,1,""],[25388,0,", "],[25434,0,")"],[25674,0,"Escapable"],[25888,1,""],[25888,0,"Escape(\n      Loca"],[25907,0,"<Value>::New(is"],[25923,1,""],[25923,0,"lat"],[25927,1,""],[25927,0,", "],[25973,0,")"],[26217,0,"Escapable"],[26431,2,""],[26431,0,"Escape(L"],[26440,1,""],[26440,0,"cal<Value>::N"],[26454,0,"w"],[26463,0,"  isolate,\n        "],[26540,0,")"],[26911,0,"Escapable"],[26984,2,""],[26984,0,"Escape(L"],[26993,0,"cal<Value>::New(\n      env->i"],[27023,0,"olat"],[27029,0,"),"],[27090,0,")"],[34950,0,"Escapable"],[35444,3,""],[35444,0,"E"],[35446,0,"cap"],[35610,0,"args.GetIsolate()"],[36246,0,"env->isolate()"],[42822,0,"env->isolate(), "],[42976,11,""],[42990,0,", groups[i]"],[43153,6,""],[43166,0,", egid"],[46084,0,"env->isolate(), "],[46131,16,""],[46194,0,"en"],[46197,0,"->isolate(), v"],[46240,15,""],[46241,1,""],[46279,0,"env->isolate()"],[47922,0,"env->isolate(), "],[47983,0,"env->isolate(), "],[48016,16,""],[48061,0,"env->isolate(), "],[48094,15,""],[48096,1,""],[54258,0,"env->isolate()"],[54686,0,"env->isolate()"],[54838,0,"env->isolate()"],[59792,0,"env->isolate(), "],[60404,0,"env->isolate()"],[61326,0,"Escapable"],[61405,0,"env->isolate()"],[62206,0,"env->isolate(), "],[62278,3,""],[62278,0,"E"],[62280,0,"cap"],[66546,0,"env->isolate()"],[68588,0,"env->isolate(), "],[68833,0,"nv->isolate(), e"],[69111,0,"\n     "],[69138,0,"env->isolate()"],[69514,0,"env->isolate()"],[69696,7,""],[69697,3,""],[69711,0,", getpid()"],[73221,0,"env->isolate()"],[73561,0,"env->isolate()"],[83718,0,"env->isolate()"],[95334,6,""],[95348,0,", code"],[97275,0,"isolate"],[98677,0,"{\n      "],[98735,0,"  "],[98752,0,"  "],[98765,0,"  "],[98820,0,"  "],[98851,0,"  "],[98883,0,"  "],[98961,0,"  "],[99014,0,"  "],[99065,0,"  "],[99128,0,"  "],[99149,0,"  "],[99157,0,"  "],[99187,0,"  "],[99215,0,"  "],[99237,0,"}\n    "],[11161,0,"// Convenience methods\n\n\nvoid ThrowError(v8::Isolate* isolate, const char* errmsg) {\n  Environment::GetCurrent(isolate)->ThrowError(errmsg);\n}\n\n\nvoid ThrowTypeError(v8::Isolate* isolate, const char* errmsg) {\n  Environment::GetCurrent(isolate)->ThrowTypeError(errmsg);\n}\n\n\nvoid ThrowRangeError(v8::Isolate* isolate, const char* errmsg) {\n  Environment::GetCurrent(isolate)->ThrowRangeError(errmsg);\n}\n\n\nvoid ThrowErrnoException(v8::Isolate* isolate,\n                         int errorno,\n                         const char* syscall,\n                         const char* message,\n                         const char* path) {\n  Environment::GetCurrent(isolate)->ThrowErrnoException(errorno,\n                                                        syscall,\n                                                        message,\n                                                        path);\n}\n\n\nvoid ThrowUVException(v8::Isolate* isolate,\n                      int errorno,\n                      const char* syscall,\n                      const char* message,\n                      const char* path) {\n  Environment::GetCurrent(isolate)->ThrowErrnoException(errorno,\n                                                        syscall,\n                                                        message,\n                                                        path);\n}\n\n\n"]],"_dtSpan":[411381,413636]},{"parents":[361],"numChildren":2,"agent":17,"time":"1970-01-01T00:00:00Z","patches":[[76764,0,"#if HAVE_OPENSSL\n  // V8 on Windows doesn't have a good source of entropy. Seed it from\n  // OpenSSL's pool.\n  V8::SetEntropySource(crypto::EntropySource);\n#endif\n\n"]],"_dtSpan":[413636,413800]},{"parents":[365,366],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[97160,164,""],[83972,0,"static void SetCompileTimeV8Options(const char** argv) {\n#ifdef NODE_V8_OPTIONS\n  int v8_argc;\n  static const char* v8_argv[] = { NULL, NODE_V8_OPTIONS };\n  if (ARRAY_SIZE(v8_argv) == 1)\n    return;\n\n  v8_argv[0] = argv[0];\n  v8_argc = ARRAY_SIZE(v8_argv);\n  V8::SetFlagsFromCommandLine(&v8_argc, const_cast<char**>(v8_argv), true);\n\n  // Anything that's still in v8_argv is not a V8 or a node option.\n  for (int i = 1; i < v8_argc; i++)\n    fprintf(stderr, \"%s: bad option: %s\\n\", argv[0], v8_argv[i]);\n  if (v8_argc > 1)\n    exit(9);\n#endif  "],[84519,0,"NODE_V8_OPTIONS\n}\n\n\n// "],[93096,0,"SetCompileTimeV8Options(argv);\n\n  "]],"_dtSpan":[413800,414565]},{"parents":[367],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[83972,544,""],[83975,23,""],[92527,0,"#if defined(NODE_V8_OPTIONS)\n  // Should come before the"],[92584,0,"call"],[92589,0,"to V8::"],[92599,0,"FlagsFrom"],[92611,1,""],[92611,0,"mandLine()\n  // so the user can d"],[92645,0,"sab"],[92650,1,""],[92650,0," a flag --foo at run-t"],[92675,3,""],[92675,0," by "],[92680,1,""],[92680,0,"ass"],[92684,0,"ng\n  // --n"],[92696,0,"_foo from the comma"],[92716,0,"d line.\n  V8::SetFlag"],[92738,2,""],[92738,0,"F"],[92740,0,"omStrin"],[92748,1,""],[92748,0,"(NODE_V8_OPTIONS, sizeof(NODE_V8_OPTIONS"],[92789,0," - 1)"],[92796,0,"#endif\n"],[36285,5,""],[36285,0,"String"]],"_dtSpan":[414565,415404]},{"parents":[368],"numChildren":1,"agent":146,"time":"1970-01-01T00:00:00Z","patches":[[5070,12,""],[5353,1,""],[5354,1,""],[5354,0,"ha"],[5357,1,""],[5357,0,"dle"],[65779,5,""],[65939,5,""],[85492,12,""],[39071,98,""],[39072,12,""],[39073,80,""],[39290,0," - 1"]],"_dtSpan":[415404,415640]},{"parents":[369],"numChildren":1,"agent":55,"time":"1970-01-01T00:00:00Z","patches":[[74842,2,""],[74842,0,"o"],[74872,1,""],[74872,0,"rais"],[74877,3,""],[74878,6,""],[74882,2,""],[74882,0,"o"],[86129,0,"\n                                 "],[86191,0,",\n                                  bool reset_handler = false"],[86340,0,"a.sa_flags = reset_handler ? SA_RESETHAND : 0;\n  s"],[86416,0,"CHECK_EQ("],[86453,0,", 0)"],[95028,0,", true"],[95080,0,", true"]],"_dtSpan":[415640,415831]},{"parents":[370],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[63313,0,"#if !defined(OPENSSL_NO_TLSEXT) && defined(SSL_CTX_set_tlsext_status_cb)\n  Local<Boolean> tls_ocsp = True(env->isolate());\n#else\n  Local<Boolean> tls_ocsp = False(env->isolate());\n#endif  // !defined(OPENSSL_NO_TLSEXT) && defined(SSL_CTX_set_tlsext_status_cb)\n  obj->Set(env->tls_ocsp_string(), tls_ocsp);\n\n"]],"_dtSpan":[415831,416138]},{"parents":[366],"numChildren":2,"agent":164,"time":"1970-01-01T00:00:00Z","patches":[[37569,0,"updat"],[37575,2,""],[37577,1,""],[37577,0,"im"],[37580,5,""],[37580,0,"("],[37584,0,"defa"],[37589,1,""],[37589,0,"l"],[37591,3,""],[37591,0,"_loop"],[37597,1,""],[37597,0,"));\n  "],[37609,4,""],[37610,0,"="],[37612,3,""],[37612,0,"uv_now"],[37619,6,""],[37619,0,"uv_"],[37624,6,""],[37624,0,"fault"],[37630,2,""],[37630,0,"loop()"],[37638,5,""],[37638,0,"-"],[37640,0,"p"],[37642,1,""],[37642,0,"og_s"],[37647,1,""],[37647,0,"a"],[37649,7,""],[37649,0,"t_t"],[37653,1,""],[37653,0,"m"],[37655,3,""],[37657,3,""],[37658,1,""],[37679,4,""],[37679,0,"Integ"],[37699,1,""],[37699,0,"/"],[37701,15,""],[37701,0,"1000"],[72088,4,""],[72089,7,""],[72103,0," = uv_now(uv_default_loop()"]],"_dtSpan":[416138,416318]},{"parents":[371,372],"numChildren":1,"agent":163,"time":"1970-01-01T00:00:00Z","patches":[[46678,0,"\n"],[46681,2,""],[46682,0,"v_u"],[46689,0,"e_t"],[46694,1,""],[46694,0,"e"],[46724,0," "],[46726,0," "],[46733,0,"("],[46737,0,"de"],[46744,0,"_"],[46752,1,""],[46753,2,""],[46754,0," "],[46767,0,"i"],[46769,0,"e"],[46772,0,"\n  "],[46798,2,""],[46798,0,"e"],[46800,0,"(Number::N"],[46811,1,""],[46811,0,"w("],[46814,0,"nv->isola"],[46824,0,"e"],[46826,0,"), "],[46843,0,")"]],"_dtSpan":[416318,416374]},{"parents":[373],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[85159,0,"// Assign environment to the debugger's context\n  env->AssignTo"],[85229,0,"(v8"],[85234,0,"Debug::GetDebugContext());\n\n  Context::"],[100533,0,"Assign env to the debugger's context\n    if (debugger_running) {\n      HandleScope scope(env->isolate());\n      env->AssignToContext(v8::Debug::GetDebugContext());\n    }\n    // "]],"_dtSpan":[416374,416656]},{"parents":[374],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[79402,0,"hrow-deprecation  throw an exception anytime a deprecated \"\n         \"function is used\\n\"\n         \"  --t"],[74657,342,""]],"_dtSpan":[416656,417103]},{"parents":[375],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[101302,3,""],[101302,0,"  CHECK_NE("],[101314,0,"o"],[101317,1,""],[101317,0,"_isolate,"],[101328,3,""],[101329,1,""],[101329,0,"LL);"],[101336,4,""],[101336,0,"node_iso"],[101345,0,"at"],[101348,4,""],[101348,0,"->Dis"],[101354,3,""],[101355,2,""],[101356,7,""],[101356,0,"e();\n "],[101364,0,"od"],[101367,2,""],[101367,0,"_i"],[101370,1,""],[101370,0,"ol"],[101373,3,""],[101373,0,"te = NULL;"],[101400,18,""],[37076,0,"ontainer"],[37085,10,""],[37085,0,"f"],[37087,3,""],[37087,0,"&"],[37105,2,""],[37105,0,"::"],[37122,0,", q"],[37755,0,"ontainer"],[37764,10,""],[37764,0,"f"],[37766,3,""],[37766,0,"&"],[37777,2,""],[37777,0,"::"],[37797,0,", q"]],"_dtSpan":[417103,417277]},{"parents":[372],"numChildren":1,"agent":48,"time":"1970-01-01T00:00:00Z","patches":[[4774,0,"int WRITE_UTF8_FLAGS = v8::String::HINT_MANY_WRITES_EXPECTED |"],[4837,0,"                       v8::String::NO_NULL_TERMINATION;\n\n"],[76498,0,"const char* replaceInvalid = getenv(\"NODE_INVALID_UTF8\");\n\n  if (replaceInvalid == NULL)\n    WRITE_UTF8_FLAGS |= String::REPLACE_INVALID_UTF8;\n\n  "]],"_dtSpan":[417277,417542]},{"parents":[377],"numChildren":1,"agent":164,"time":"1970-01-01T00:00:00Z","patches":[[2384,0,"#include \""],[2395,0,"til.h\"\n\nu"],[22658,4,""],[22659,1,""],[22659,0,"ode"],[25570,4,""],[25571,1,""],[25571,0,"ode"],[25815,4,""],[25816,1,""],[25816,0,"ode"],[27587,4,""],[27588,1,""],[27588,0,"ode"],[28247,4,""],[28248,1,""],[28248,0,"ode"],[28360,4,""],[28361,1,""],[28361,0,"ode"],[30384,4,""],[30385,1,""],[30385,0,"ode"],[31541,4,""],[31542,1,""],[31542,0,"ode"],[33451,4,""],[33452,1,""],[33452,0,"ode"],[33662,4,""],[33663,1,""],[33663,0,"ode"],[36749,4,""],[36750,1,""],[36750,0,"ode"],[40804,4,""],[40805,1,""],[40805,0,"ode"],[41297,4,""],[41298,1,""],[41298,0,"ode"],[44386,4,""],[44387,1,""],[44387,0,"ode"],[46035,4,""],[46036,1,""],[46036,0,"ode"],[46286,4,""],[46287,1,""],[46287,0,"ode"],[47387,4,""],[47388,1,""],[47388,0,"ode"],[47420,4,""],[47421,1,""],[47421,0,"ode"],[48011,4,""],[48012,1,""],[48012,0,"ode"],[48868,4,""],[48869,1,""],[48869,0,"ode"]],"_dtSpan":[417542,417721]},{"parents":[376,378],"numChildren":1,"agent":163,"time":"1970-01-01T00:00:00Z","patches":[[1693,0,"til.h\"\n#include \"u"],[2383,19,""],[3970,0,"solate = NULL;\n\n"],[4048,0,"\n"],[4102,13,""],[4103,3,""],[4106,1,""],[35912,4,""],[35913,1,""],[35913,0,"ode"],[40085,0,"s"],[40087,1,""],[40087,0,"ze_"],[51357,3,""],[75557,4,""],[75558,1,""],[75558,0,"ode"],[97559,5,""],[97560,5,""],[97561,14,""],[97562,1,""],[97563,30,""],[97565,2,""],[97566,15,""],[97567,2,""],[97568,6,""],[97572,16,""],[97573,2,""],[97574,3,""],[97576,45,""],[99559,0,"  const char* replaceInvalid = getenv(\"NODE_INVALID_UTF8\");\n\n  if (replaceInvalid == NULL)\n    WRITE_UTF8_FLAGS |= String::REPLACE_INVALID_UTF8;\n\n"]],"_dtSpan":[417721,418108]},{"parents":[379],"numChildren":1,"agent":180,"time":"1970-01-01T00:00:00Z","patches":[[33472,0,"if (sourceline_string[i] == '\\0' ||\n        static_c"],[33526,0,"t<"],[33529,0,"iz"],[33532,0,"_t>(off) >= sizeof(ar"],[33554,0,"ow)) {\n      break;\n    }\n    asser"],[33744,0,"if (sourceline_string[i] == '\\0' ||\n        static_cast<size_t>(off) >= sizeof("],[33824,0,"rrow)) {\n      break;\n    }\n    a"],[33966,0," - 1"],[33973,0,"="]],"_dtSpan":[418108,418337]},{"parents":[380],"numChildren":1,"agent":38,"time":"1970-01-01T00:00:00Z","patches":[[97803,0,"Handle<Context> context,\n                               "],[98074,50,""],[100674,1,""],[100674,0,"Ha"],[100677,3,""],[100677,0,"dleSc"],[100683,0,"pe ha"],[100689,1,""],[100689,0,"dl"],[100692,0,"_scope("],[100700,0,"ode_isola"],[100710,1,""],[100710,0,"e);\n   "],[100718,0,"Local<Cont"],[100729,0,"xt> co"],[100736,1,""],[100736,0,"text"],[100742,0," Context::New(node_isolate);"],[100775,0,"Environment*"],[100788,1,""],[100788,0,"env"],[100792,0,"="],[100812,0,"\n        "],[100835,0,"context, "]],"_dtSpan":[418337,418570]},{"parents":[381],"numChildren":1,"agent":67,"time":"1970-01-01T00:00:00Z","patches":[[56516,0,"cha"],[56520,0," "],[56522,2,""],[56523,1,""],[56523,0,"rmsg[1024];\n  "],[56538,1,""],[56538,0," s"],[56541,5,""],[56541,0,"p"],[56543,3,""],[56543,0,"intf(e"],[56551,0,"msg,\n             size"],[56574,0,"f(e"],[56578,1,""],[56578,0,"rmsg),\n             "],[56613,0,": %s"],[56618,0,",\n             *module_v);\n    return env->ThrowError(errmsg"]],"_dtSpan":[418570,418719]},{"parents":[382],"numChildren":1,"agent":3,"time":"1970-01-01T00:00:00Z","patches":[[16220,0,", bool* must_free"],[16492,0,"*must_free = true;\n\n    "],[16741,0,"*must_f"],[16750,0,"e = false;\n    re"],[17131,0,"bool must_free = false;\n  "],[17213,0,", &must_free"],[17979,0,"if (must_free)\n    LocalFree((HLOCAL)msg);\n\n  "]],"_dtSpan":[418719,418868]},{"parents":[383],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[100946,0,"Isolate::Scope isolate_scope(node_isolate);\n    "]],"_dtSpan":[418868,418916]},{"parents":[384],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[22356,8,""],[22357,2,""],[22412,6,""],[22412,0,"if "],[22436,1,""],[22436,0," {"],[22445,0,"  "],[22477,1,""],[22483,0,"  "],[22511,0,"\n "],[22514,2,""],[22751,7,""],[22752,1,""],[22804,6,""],[22804,0,"if "],[22827,1,""],[22827,0," {"],[22834,0,"  "],[22865,1,""],[22869,0,"  "],[22897,2,""],[22904,0,"  "]],"_dtSpan":[418916,418976]},{"parents":[385],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[85388,3,""],[85389,1,""],[85389,0,"f (is"],[85395,2,""],[85395,0,"lat"],[85399,3,""],[85400,0,"== NULL)\n    r"],[85415,0,"tur"],[85419,1,""],[85419,0,";"],[85421,1,""],[85422,3,""],[85422,0,"// St"],[85428,0,"ll sta"],[85435,0,"ting up.\n  Local<C"],[85455,1,""],[85455,0,"t"],[85457,0,"xt> co"],[85465,2,""],[85465,0,"ext = isolate->"],[85491,9,""],[85492,2,""],[85492,0,"n"],[85495,0,"xt("],[85507,1,""],[85507,0,"co"],[85510,9,""],[85510,0,"text.IsEmpty()"],[85561,0,"  Environment* env = Environment::GetCurrent(context);\n"],[101597,7,""]],"_dtSpan":[418976,419173]},{"parents":[386],"numChildren":1,"agent":174,"time":"1970-01-01T00:00:00Z","patches":[[20286,0,"void RunMicrotasks(const FunctionCallbackInfo<Value>& args) {\n  args.GetIsolate()->RunMicrotasks();\n}\n\n"],[20629,0,"  assert(args[2]->IsObject());\n"],[21003,0,"NODE_SET_METHOD(args[2].As<Object>(), \"runMicrotasks\", RunMicrotasks);\n\n  "]],"_dtSpan":[419173,419381]},{"parents":[387],"numChildren":1,"agent":125,"time":"1970-01-01T00:00:00Z","patches":[[47165,4,""],[47165,0,"32"],[48680,4,""],[48680,0,"32"],[65191,6,""],[65191,0,"Int32"],[93191,0,"static_cast<double>("],[93236,0,")"],[98019,4,""],[98019,0,"32"],[98298,4,""],[98298,0,"32"]],"_dtSpan":[419381,419437]},{"parents":[388],"numChildren":1,"agent":153,"time":"1970-01-01T00:00:00Z","patches":[[1435,0,"(NODE_HAVE_I18N_SUPPORT)\n#include"],[1469,0,"\"node_i18n.h\"\n#endif\n\n#if defined "],[3786,0,"#if defined(NODE_HAVE_I18N_SUPPORT)\n// Path to ICU data (for i18n / Intl)\nstatic const char* icu_data_dir = NULL;\n#endif\n\n"],[80327,0,"#if"],[80331,0,"defined(NODE_HAVE_I18N_SUPPORT)\n "],[80373,0,"  --icu-data-dir=dir   set ICU data load path to dir"],[80439,0,"                         (overrides NOD"],[80479,0,"_ICU_DATA)\\"],[80491,0,"\"\n#if !defined(NODE_HAVE_SMALL_ICU)\n         \"                       Note: linked-in ICU data is\\n\"\n         \"                       present.\\n\"\n#endif\n#endif\n         \"\\n\"\n         \"En"],[81141,0,"#if defined(NODE_HAVE_I18N_SUPPORT)\n         \"NODE_ICU_DATA          Data path for ICU (Intl object) data\\n\"\n#if !defined(NODE_HAVE_SMALL_ICU)\n         \"                       (will extend linked-in data)\\n\"\n#endif\n#endif\n"],[84670,0,"#if defined(NODE_HAVE_I18N_SUPPORT)\n    } else if (strncmp(arg, \"--icu-data-dir=\", 15) == 0) {\n      icu_data_dir = arg + 15;\n#endif\n"],[95379,0,"#if defined(NODE_HAVE_I18N_SUPPORT)\n  if (icu_data_dir == NULL) {\n    // if the parameter isn't given, use the env variable.\n    icu_data_dir = getenv(\"NODE_ICU_DATA\");\n  }\n  // Initialize ICU.\n  // If icu_data_dir is NULL here, it will load the 'minimal' data.\n  if (!i18n::InitializeICUDirectory(icu_data_dir)) {\n    FatalError(NULL, \"Could not initialize ICU \"\n                     \"(check NODE_ICU_DATA or --icu-data-dir parameters)\");\n  }\n#endif\n"]],"_dtSpan":[419437,420755]},{"parents":[389],"numChildren":1,"agent":174,"time":"1970-01-01T00:00:00Z","patches":[[23756,0,"env->isola"],[23767,0,"e()->RunM"],[23778,0,"rotas"],[23784,0,"s();\n  }\n\n  if (tick"],[23811,0,"length() == 0) {\n    tick_info->"],[25485,0,"env->isola"],[25496,0,"e()->RunM"],[25507,0,"rotasks();\n  }\n\n  if (tick_info->length() == 0) {\n    tic"],[100224,0,"isolate->SetAutorunMicrotasks(false);\n\n  "]],"_dtSpan":[420755,420948]},{"parents":[390],"numChildren":2,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[3161,2,""],[3162,1,""],[3163,4,""],[3164,0,"32"],[18988,2,""],[18989,1,""],[18990,4,""],[18991,0,"32"],[20276,2,""],[20277,1,""],[20278,4,""],[20279,0,"32"],[21056,2,""],[21057,1,""],[21058,4,""],[21059,0,"32"]],"_dtSpan":[420948,420984]},{"parents":[391],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[3174,177,""],[37723,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[37806,6,""],[37807,2,""],[37807,0,"nv->i"],[37928,1,""],[37928,0,"env->"],[37947,0,"()"],[38617,1,""],[38617,0,"env->"],[38639,0,"()"],[47598,1,""],[47598,0,"env->e"],[47605,2,""],[47606,4,""],[47606,0,"n"],[47636,1,""],[47636,0,"env->e"],[47643,2,""],[47644,4,""],[47644,0,"n"],[76565,0,"Environment"],[76644,0,"V8::SetFatalErrorHandler(node::OnFatalError);\n  V8::AddMessageListener(OnMessage);\n\n  "],[85772,0,"Environment* env"],[85794,0,"// TODO(indutny): move async handle to environment\n  "],[85898,32,""],[85910,2,""],[85910,0,"St"],[85913,3,""],[85913,0,"rt"],[85921,2,""],[85921,0,"Envir"],[85927,2,""],[85927,0,"nmen"],[85932,1,""],[85934,6,""],[85935,0,"nv"],[85947,8,""],[85954,6,""],[85954,0,"CHECK"],[85960,0,"!"],[85977,9,""],[85980,40,""],[85983,5,""],[85984,8,""],[85985,0,"v->"],[85989,26,""],[85993,3,""],[85993,0,"g"],[85995,5,""],[85995,0,"r_a"],[85999,1,""],[86000,0,"nt()->"],[86007,3,""],[86008,1,""],[86008,0,"t_d"],[86018,1,""],[86018,0,"_h"],[86027,0,"\n        "],[86070,51,""],[86094,0,"en"],[86097,4,""],[86097,0,"->d"],[86104,7,""],[86104,0,"g"],[86106,1,""],[86106,0,"r_a"],[86114,16,""],[86114,0,")->"],[86118,49,""],[86118,0,"tart("],[86134,3,""],[86135,41,""],[86139,8,""],[86287,17,""],[86287,0,"}\n\n\n//"],[86294,10,""],[86294,0,"Cal"],[86298,3,""],[86299,14,""],[86300,4,""],[86301,8,""],[86301,0,"f"],[86303,4,""],[86303,0,"om"],[86306,6,""],[86306,0,"t"],[86308,4,""],[86309,6,""],[86310,1,""],[86310,0,"ma"],[86313,1,""],[86313,0,"n"],[86315,6,""],[86316,15,""],[86316,0,"h"],[86319,18,""],[86320,8,""],[86320,0,"d"],[86323,5,""],[86323,0,"st"],[86326,5,""],[86327,5,""],[86327,0,"i"],[86329,6,""],[86330,4,""],[86330,0,"v"],[86332,29,""],[86333,1,""],[86333,0,"d"],[86335,3,""],[86335,0,"E"],[86337,1,""],[86337,0,"abl"],[86341,19,""],[86341,0,"D"],[86343,1,""],[86343,0,"b"],[86345,21,""],[86346,7,""],[86346,0,"("],[86363,0,") {\n"],[86368,1,""],[86369,0,"CH"],[86372,7,""],[86372,0,"CK(d"],[86377,5,""],[86377,0,"bugg"],[86382,3,""],[86383,0,"_"],[86385,1,""],[86385,0,"un"],[86388,4,""],[86388,0,"i"],[86390,4,""],[86390,0,"g"],[86400,1,""],[86400,0,"Send me"],[86409,1,""],[86409,0,"a"],[86411,10,""],[86412,2,""],[86416,2,""],[86417,0,"nable"],[86428,14,""],[86429,9,""],[86430,1,""],[86431,30,""],[86431,0," w"],[86434,2,""],[86434,0,"rk"],[86437,7,""],[86437,0,"rs"],[86442,2,""],[86442,0,"Ha"],[86445,1,""],[86445,0,"dl"],[86448,4,""],[86454,2,""],[86454,0,"ha"],[86457,1,""],[86457,0,"dl"],[86460,2,""],[86472,1,""],[86472,0,"is"],[86475,1,""],[86475,0,"la"],[86479,2,""],[86484,0,"\n"],[86859,0,"\n  // Enabled debugger, possibly making it wait on a semaphore\n  env->debugger_agent()->Enable();\n"],[87148,0,"\n"],[87155,3,""],[87155,0,"vironm"],[87162,1,""],[87162,0,"nt* "],[87167,1,""],[87167,0,"nv = Environment::GetC"],[87190,1,""],[87190,0,"rrent"],[87208,0,");\n    Context::Scope context_scope(env->context());\n\n    StartDebug(env"],[87292,0,"  EnableDebug(env);\n  "],[93673,0,"Environment* env = En"],[93695,1,""],[93695,0,"ironment"],[93705,1,""],[93705,0,"G"],[93707,1,""],[93707,0,"tC"],[93710,0,"rrent(ar"],[93719,4,""],[93720,0,".GetIsol"],[93729,0,"te());\n    env->de"],[93748,1,""],[93748,0,"ugg"],[93752,1,""],[93752,0,"r_a"],[93761,0,"->Stop()"],[97554,1,""],[97555,158,""],[97562,0,"!"],[97585,26,""],[97586,36,""],[99351,0,"// Just a convenience method\nEnvironment* CreateEnvironment(Isolate* isolate,\n                               Handle<Context> context,\n                               int argc,\n                               const char* const* argv,\n                               int exec_argc,\n                               const char* const* exec_argv) {\n  Environment* env;\n  Context::Scope context_scope(context);\n\n  env = CreateEnvironment(isolate,\n                          uv_default_loop(),\n                          context,\n                          argc,\n                          argv,\n                          exec_argc,\n                          exec_argv);\n\n  LoadEnvironment(env);\n\n  return env;\n}\n\n\nstatic void HandleCloseCb(uv_handle_t* handle) {\n  Environment* env = reinterpret_cast<Environment*>(handle->data);\n  env->FinishHandleCleanup(handle);\n}\n\n\nstatic void HandleCleanup("],[100246,0,"env,\n                          uv_handle_t* handle,\n                          void* arg) {\n  handle->data = env;\n  uv_close(handle, HandleClose"],[100390,0,"b);\n}\n\n\nEnvi"],[100403,0,"onm"],[100407,0,"nt* Cre"],[100478,0,"uv_loop_t* loop,\n                               "],[100881,0,", loop"],[101081,0,"\n"],[102093,0,"// Register handle cleanups\n  env->RegisterHandleCleanup(\n      re"],[102160,0,"nterpret_cast<uv_handle_t*>(env->immediate_check_handle()),\n      HandleCleanup,\n      NULL);\n  env->RegisterHandleCleanup(\n      reinterpret_cast<uv_handle_t*>(env->immediate_idle_handle()),\n      HandleCleanup,\n      NULL);\n  env->RegisterHandleCleanup(\n      reinterpret_cast<uv_handle_t*>(env->idle_prepare_handle()),\n      HandleCleanup,\n      NULL);\n  env->RegisterHandleCleanup(\n      reinterpret_cast<uv_handle_t*>(env->idle_check_handle()),\n      HandleCleanup,\n      NULL);\n\n  i"],[103052,13,""],[104194,0,"\n "],[104197,0,"      uv_default_loop(),\n        "],[104238,0,"\n       "],[104252,0,"\n       "],[104266,0,"\n       "],[104285,0,"\n       "],[104310,8,""],[104310,0,"Co"],[104313,1,""],[104313,0,"t"],[104315,3,""],[104315,0,"x"],[104317,0,"::Sc"],[104322,3,""],[104322,0,"p"],[104325,1,""],[104325,0,"cont"],[104330,4,""],[104330,0,"xt_scop"],[104338,4,""],[104338,0,"("],[104346,0,");\n"],[104354,2,""],[104354,0,"//"],[104357,1,""],[104357,0,"Start "],[104368,0," a"],[104372,5,""],[104373,11,""],[104373,0,"t"],[104375,0,"when"],[104380,1,""],[104381,9,""],[104381,0,"rgv"],[104385,0,"ha"],[104388,8,""],[104388,0," -"],[104391,7,""],[104391,0,"d"],[104393,4,""],[104393,0,"bug"],[104401,0,"if"],[104404,8,""],[104404,0,"(u"],[104407,9,""],[104408,8,""],[104408,0,"_d"],[104414,6,""],[104414,0,"_ag"],[104418,5,""],[104419,3,""],[104420,2,""],[104421,1,""],[104422,3,""],[104423,2,""],[104427,2,""],[104428,14,""],[104429,10,""],[104429,0,"ta"],[104432,11,""],[104432,0,"t"],[104439,4,""],[104439,0,"e"],[104441,0,"v,"],[104444,5,""],[104444,0,"deb"],[104448,2,""],[104448,0,"g_wai"],[104454,1,""],[104454,0,"_conn"],[104460,1,""],[104461,5,""],[104462,0,");\n"],[104470,8,""],[104470,0,"L"],[104472,11,""],[104472,0,"ad"],[104485,9,""],[104485,0,"("],[104488,2,""],[104488,0,"v"],[104490,1,""],[104490,0,";\n"],[104500,6,""],[104500,0,"E"],[104502,20,""],[104502,0,"abl"],[104515,31,""],[104520,2,""],[104520,0,"if"],[104523,1,""],[104523,0,"(us"],[104527,2,""],[104527,0,"_d"],[104530,3,""],[104530,0,"bug_ag"],[104537,8,""],[104537,0,"nt)"],[104547,2,""],[104547,0,"E"],[104549,1,""],[104549,0,"abl"],[104553,8,""],[104553,0,"D"],[104555,14,""],[104555,0,"bug"],[104562,10,""],[104563,1,""],[104565,2,""],[104565,0,"\n"],[104585,2,""],[104590,2,""],[104649,2,""],[104670,2,""],[104708,2,""],[104776,2,""],[104835,2,""],[104876,2,""],[104945,2,""],[104958,2,""],[104970,2,""],[104994,2,""],[105024,2,""],[105040,5,""],[68193,0,"Force"],[68257,3,""],[68262,2,""],[96640,1,""],[96640,0,"N"],[96642,0,"w();\n  Isola"],[96655,4,""],[96656,1,""],[96656,0,"::Scope isola"],[96670,0,"e_scope"],[96678,0,"node_isolate"],[1313,0,"#include \"node_v8_platform.h\"\n"],[96487,119,""],[96488,2,""],[96489,8,""],[96490,11,""],[96491,23,""],[96492,2,""],[96493,8,""],[96494,37,""],[96495,3,""],[96496,11,""],[103760,0,"V8::InitializePlatform(new Platform(4));\n\n  "],[103834,0,"\n  // Fetch a reference to the main isolate, so we have a reference to it\n  // even when we need it to access it from another (debugger) thread.\n  node_isolate = Isolate::New();\n"]],"_dtSpan":[420984,425575]},{"parents":[392],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[18152,47,""],[20431,47,""],[37711,37,""],[38316,37,""],[39064,37,""],[39466,37,""],[40160,37,""],[43199,25,""],[43200,1,""],[43201,11,""],[43683,25,""],[43684,1,""],[43685,11,""],[44169,25,""],[44170,1,""],[44171,11,""],[45064,37,""],[45788,37,""],[46830,13,""],[46831,89,""],[46979,37,""],[47293,25,""],[47294,1,""],[47295,11,""],[48148,36,""],[48149,1,""],[48896,25,""],[48897,1,""],[48898,11,""],[50619,47,""],[54886,47,""],[64978,47,""],[66826,47,""],[67005,47,""],[75389,37,""],[87519,37,""],[89795,7,""],[89796,23,""],[1889,20,""],[18198,6,""],[18198,0,"CHECK"],[18228,6,""],[18228,0,"CHECK"],[18260,6,""],[18260,0,"CHECK"],[18292,6,""],[18292,0,"CHECK"],[19729,6,""],[19729,0,"CHECK"],[19758,6,""],[19758,0,"CHECK"],[20474,6,""],[20474,0,"CHECK"],[20504,6,""],[20504,0,"CHECK"],[20536,6,""],[20536,0,"CHECK"],[21456,6,""],[21456,0,"CHECK_EQ"],[21479,3,""],[21479,0,","],[24252,6,""],[24252,0,"CHECK_EQ"],[24275,3,""],[24275,0,","],[25911,6,""],[25911,0,"CHECK"],[26311,6,""],[26311,0,"CHECK"],[31171,6,""],[31171,0,"UNREACHABLE"],[31183,1,""],[33751,6,""],[33751,0,"CHECK_GE"],[33763,3,""],[33763,0,","],[33978,6,""],[33978,0,"CHECK_LT"],[34011,2,""],[34011,0,","],[34251,6,""],[34251,0,"CHECK_LT"],[34284,2,""],[34284,0,","],[34332,6,""],[34332,0,"CHECK_LE"],[34369,3,""],[34369,0,","],[49795,6,""],[49795,0,"CHECK_EQ"],[49814,3,""],[49814,0,","],[50061,6,""],[50061,0,"CHECK"],[55676,6,""],[55676,0,"CHECK_EQ"],[55706,3,""],[55706,0,","],[55719,6,""],[55719,0,"CHECK_NE"],[55757,3,""],[55757,0,","],[75377,6,""],[75377,0,"CHECK"],[75428,1,""],[76447,6,""],[76447,0,"CHECK"],[102154,6,""],[102154,0,"CHECK_GT"],[102167,2,""],[102167,0,","],[16090,0,"// Look up environment variable unless running as setuid root.\ninline const char* secure_getenv(const char* key) {\n#ifndef _WIN32\n  if (getuid() != geteuid() || getgid() != getegid())\n    return NULL;\n#endif\n  return getenv(key);\n}\n\n\n"],[94645,0,"secure_"],[102141,0,"secure_"],[31495,63,""],[75482,35,""],[75483,31,""],[75580,1,""],[18413,12,""],[18414,1,""],[19294,6,""],[19295,6,""],[19296,1,""],[20662,6,""],[20663,7,""],[21097,5,""],[21097,0,"env->"],[21103,3,""],[21103,0,"et"],[21106,5,""],[21106,0,"ethod"],[37811,6,""],[37812,6,""],[37813,1,""],[38403,6,""],[38404,6,""],[38405,1,""],[39139,13,""],[39528,13,""],[40196,12,""],[40197,1,""],[43235,13,""],[43706,12,""],[43707,1,""],[44178,6,""],[44179,6,""],[44180,1,""],[45049,6,""],[45050,7,""],[45760,6,""],[45761,7,""],[46950,13,""],[47250,6,""],[47251,7,""],[48081,6,""],[48082,7,""],[48828,13,""],[50588,6,""],[50589,7,""],[54846,12,""],[54847,1,""],[66773,13,""],[66936,12,""],[66937,1,""],[72923,5,""],[72923,0,"env->"],[72929,3,""],[72929,0,"et"],[72932,5,""],[72932,0,"ethod"],[72947,1,""],[73011,1,""],[73041,5,""],[73041,0,"env->"],[73047,3,""],[73047,0,"et"],[73050,5,""],[73050,0,"ethod"],[73082,1,""],[73111,1,""],[73157,5,""],[73157,0,"env->"],[73163,3,""],[73163,0,"et"],[73166,5,""],[73166,0,"ethod"],[73225,5,""],[73225,0,"env->"],[73231,3,""],[73231,0,"et"],[73234,5,""],[73234,0,"ethod"],[73291,5,""],[73291,0,"env->"],[73297,3,""],[73297,0,"et"],[73300,5,""],[73300,0,"ethod"],[73338,5,""],[73338,0,"env->"],[73344,3,""],[73344,0,"et"],[73347,5,""],[73347,0,"ethod"],[73381,5,""],[73381,0,"env->"],[73387,3,""],[73387,0,"et"],[73390,5,""],[73390,0,"ethod"],[73424,5,""],[73424,0,"env->"],[73430,3,""],[73430,0,"et"],[73433,5,""],[73433,0,"ethod"],[73464,5,""],[73464,0,"env->"],[73470,3,""],[73470,0,"et"],[73473,5,""],[73473,0,"ethod"],[73556,5,""],[73556,0,"env->"],[73562,3,""],[73562,0,"et"],[73565,5,""],[73565,0,"ethod"],[73601,5,""],[73601,0,"env->"],[73607,3,""],[73607,0,"et"],[73610,5,""],[73610,0,"ethod"],[73647,5,""],[73647,0,"env->"],[73653,3,""],[73653,0,"et"],[73656,5,""],[73656,0,"ethod"],[73692,5,""],[73692,0,"env->"],[73698,3,""],[73698,0,"et"],[73701,5,""],[73701,0,"ethod"],[73738,5,""],[73738,0,"env->"],[73744,3,""],[73744,0,"et"],[73747,5,""],[73747,0,"ethod"],[73789,5,""],[73789,0,"env->"],[73795,3,""],[73795,0,"et"],[73798,5,""],[73798,0,"ethod"],[73840,5,""],[73840,0,"env->"],[73846,3,""],[73846,0,"et"],[73849,5,""],[73849,0,"ethod"],[73940,5,""],[73940,0,"env->"],[73946,3,""],[73946,0,"et"],[73949,5,""],[73949,0,"ethod"],[73983,5,""],[73983,0,"env->"],[73989,3,""],[73989,0,"et"],[73992,5,""],[73992,0,"ethod"],[74041,5,""],[74041,0,"env->"],[74047,3,""],[74047,0,"et"],[74050,5,""],[74050,0,"ethod"],[74095,5,""],[74095,0,"env->"],[74101,3,""],[74101,0,"et"],[74104,5,""],[74104,0,"ethod"],[74146,5,""],[74146,0,"env->"],[74152,3,""],[74152,0,"et"],[74155,5,""],[74155,0,"ethod"],[74192,5,""],[74192,0,"env->"],[74198,3,""],[74198,0,"et"],[74201,5,""],[74201,0,"ethod"],[74238,5,""],[74238,0,"env->"],[74244,3,""],[74244,0,"et"],[74247,5,""],[74247,0,"ethod"],[74283,5,""],[74283,0,"env->"],[74289,3,""],[74289,0,"et"],[74292,5,""],[74292,0,"ethod"],[74339,5,""],[74339,0,"env->"],[74345,3,""],[74345,0,"et"],[74348,5,""],[74348,0,"ethod"],[74387,5,""],[74387,0,"env->"],[74393,3,""],[74393,0,"et"],[74396,5,""],[74396,0,"ethod"],[74457,5,""],[74457,0,"env->"],[74463,3,""],[74463,0,"et"],[74466,5,""],[74466,0,"ethod"],[74517,5,""],[74517,0,"env->"],[74523,3,""],[74523,0,"et"],[74526,5,""],[74526,0,"ethod"],[77277,5,""],[77277,0,"env->"],[77283,3,""],[77283,0,"et"],[77286,5,""],[77286,0,"ethod"],[87271,12,""],[87272,1,""],[89469,40,""],[89512,0,"args);\n  Isolate* "],[89537,0," = args.GetIsolate("],[92449,13,""],[3359,4,""],[3359,0,"nullptr"],[3725,4,""],[3725,0,"nullptr"],[4002,4,""],[4002,0,"nullptr"],[4859,4,""],[4859,0,"nullptr"],[5052,4,""],[5052,0,"nullptr"],[5629,4,""],[5629,0,"nullptr"],[13075,4,""],[13075,0,"nullptr"],[13921,4,""],[13921,0,"nullptr"],[14031,4,""],[14031,0,"nullptr"],[15937,4,""],[15937,0,"nullptr"],[16014,4,""],[16014,0,"nullptr"],[16318,4,""],[16318,0,"nullptr"],[16545,4,""],[16545,0,"nullptr"],[16670,4,""],[16670,0,"nullptr"],[16757,4,""],[16757,0,"nullptr"],[18090,4,""],[18090,0,"nullptr"],[18193,4,""],[18193,0,"nullptr"],[22822,4,""],[22822,0,"nullptr"],[23213,4,""],[23213,0,"nullptr"],[23922,4,""],[23922,0,"nullptr"],[25688,4,""],[25688,0,"nullptr"],[31808,4,""],[31808,0,"nullptr"],[37947,4,""],[37947,0,"nullptr"],[38539,4,""],[38539,0,"nullptr"],[41347,4,""],[41347,0,"nullptr"],[41423,4,""],[41423,0,"nullptr"],[41619,4,""],[41619,0,"nullptr"],[41694,0,"\n     "],[41707,4,""],[41707,0,"nullptr"],[41806,4,""],[41806,0,"nullptr"],[41943,4,""],[41943,0,"nullptr"],[42019,4,""],[42019,0,"nullptr"],[42245,4,""],[42245,0,"nullptr"],[42320,0,"\n     "],[42333,4,""],[42333,0,"nullptr"],[42432,4,""],[42432,0,"nullptr"],[44326,4,""],[44326,0,"nullptr"],[46407,4,""],[46407,0,"nullptr"],[49885,4,""],[49885,0,"nullptr"],[50044,4,""],[50044,0,"nullptr"],[50148,4,""],[50148,0,"nullptr"],[51679,4,""],[51679,0,"nullptr"],[51701,4,""],[51701,0,"nullptr"],[52297,4,""],[52297,0,"nullptr"],[52425,4,""],[52425,0,"nullptr"],[55616,4,""],[55616,0,"nullptr"],[55775,4,""],[55775,0,"nullptr"],[55829,4,""],[55829,0,"nullptr"],[59865,4,""],[59865,0,"nullptr"],[60569,4,""],[60569,0,"nullptr"],[60758,4,""],[60758,0,"nullptr"],[60927,4,""],[60927,0,"nullptr"],[60936,4,""],[60936,0,"0"],[61844,4,""],[61844,0,"nullptr"],[61999,4,""],[61999,0,"nullptr"],[64055,0,"\n                       "],[64112,4,""],[64112,0,"nullptr"],[77699,4,""],[77699,0,"nullptr"],[78356,4,""],[78356,0,"nullptr"],[81563,4,""],[81563,0,"nullptr"],[81593,4,""],[81593,0,"nullptr"],[81620,4,""],[81620,0,"nullptr"],[82577,4,""],[82577,0,"nullptr"],[82628,4,""],[82628,0,"nullptr"],[82859,4,""],[82859,0,"nullptr"],[83049,4,""],[83049,0,"nullptr"],[86764,4,""],[86764,0,"nullptr"],[87368,4,""],[87368,0,"nullptr"],[88966,4,""],[88966,0,"nullptr"],[89202,4,""],[89202,0,"nullptr"],[89467,4,""],[89467,0,"nullptr"],[89825,4,""],[89825,0,"nullptr"],[89852,4,""],[89852,0,"nullptr"],[89880,4,""],[89880,0,"nullptr"],[89953,4,""],[89953,0,"nullptr"],[90374,4,""],[90374,0,"nullptr"],[90823,4,""],[90823,0,"nullptr"],[91260,4,""],[91260,0,"nullptr"],[91283,4,""],[91283,0,"nullptr"],[91484,4,""],[91484,0,"nullptr"],[91596,4,""],[91596,0,"nullptr"],[91668,4,""],[91668,0,"nullptr"],[91694,4,""],[91694,0,"nullptr"],[92261,4,""],[92261,0,"nullptr"],[92312,4,""],[92312,0,"nullptr"],[92363,4,""],[92363,0,"nullptr"],[92419,4,""],[92419,0,"nullptr"],[94375,4,""],[94375,0,"nullptr"],[94545,4,""],[94545,0,"nullptr"],[94660,4,""],[94660,0,"nullptr"],[95197,4,""],[95197,0,"nullptr"],[96743,4,""],[96743,0,"nullptr"],[101082,4,""],[101082,0,"nullptr"],[101217,4,""],[101217,0,"nullptr"],[101350,4,""],[101350,0,"nullptr"],[101481,4,""],[101481,0,"nullptr"],[102045,4,""],[102045,0,"nullptr"],[104151,4,""],[104151,0,"nullptr"],[104190,4,""],[104190,0,"nullptr"],[104244,4,""],[104244,0,"nullptr"],[104307,4,""],[104307,0,"nullptr"],[4461,0," override"],[4524,0," override"],[4581,0," override"],[4632,0,"DIS"],[4636,10,""],[4636,0,"LLOW_COPY_"],[4647,15,""],[4647,0,"ND_"],[4651,39,""],[4651,0,"SSIGN"],[4657,6,""],[4677,1,""],[4419,2,""],[4419,0,"= default;"],[4635,2,""],[4635,0,"= default;"]],"_dtSpan":[425575,429757]},{"parents":[391],"numChildren":2,"agent":47,"time":"1970-01-01T00:00:00Z","patches":[[3174,177,""],[37723,0,"Environment* env = Environment::GetCurrent(args.GetIsolate());\n  "],[37806,6,""],[37807,2,""],[37807,0,"nv->i"],[37928,1,""],[37928,0,"env->"],[37947,0,"()"],[38617,1,""],[38617,0,"env->"],[38639,0,"()"],[47598,1,""],[47598,0,"env->e"],[47605,2,""],[47606,4,""],[47606,0,"n"],[47636,1,""],[47636,0,"env->e"],[47643,2,""],[47644,4,""],[47644,0,"n"],[76565,0,"Environment"],[76644,0,"V8::SetFatalErrorHandler(node::OnFatalError);\n  V8::AddMessageListener(OnMessage);\n\n  "],[85772,0,"Environment* env"],[85794,0,"// TODO(indutny): move async handle to environment\n  "],[85898,32,""],[85910,2,""],[85910,0,"St"],[85913,3,""],[85913,0,"rt"],[85921,2,""],[85921,0,"Envir"],[85927,2,""],[85927,0,"nmen"],[85932,1,""],[85934,6,""],[85935,0,"nv"],[85947,8,""],[85954,6,""],[85954,0,"CHECK"],[85960,0,"!"],[85977,9,""],[85980,40,""],[85983,5,""],[85984,8,""],[85985,0,"v->"],[85989,26,""],[85993,3,""],[85993,0,"g"],[85995,5,""],[85995,0,"r_a"],[85999,1,""],[86000,0,"nt()->"],[86007,3,""],[86008,1,""],[86008,0,"t_d"],[86018,1,""],[86018,0,"_h"],[86027,0,"\n        "],[86070,51,""],[86094,0,"en"],[86097,4,""],[86097,0,"->d"],[86104,7,""],[86104,0,"g"],[86106,1,""],[86106,0,"r_a"],[86114,16,""],[86114,0,")->"],[86118,49,""],[86118,0,"tart("],[86134,3,""],[86135,41,""],[86139,8,""],[86287,17,""],[86287,0,"}\n\n\n//"],[86294,10,""],[86294,0,"Cal"],[86298,3,""],[86299,14,""],[86300,4,""],[86301,8,""],[86301,0,"f"],[86303,4,""],[86303,0,"om"],[86306,6,""],[86306,0,"t"],[86308,4,""],[86309,6,""],[86310,1,""],[86310,0,"ma"],[86313,1,""],[86313,0,"n"],[86315,6,""],[86316,15,""],[86316,0,"h"],[86319,18,""],[86320,8,""],[86320,0,"d"],[86323,5,""],[86323,0,"st"],[86326,5,""],[86327,5,""],[86327,0,"i"],[86329,6,""],[86330,4,""],[86330,0,"v"],[86332,29,""],[86333,1,""],[86333,0,"d"],[86335,3,""],[86335,0,"E"],[86337,1,""],[86337,0,"abl"],[86341,19,""],[86341,0,"D"],[86343,1,""],[86343,0,"b"],[86345,21,""],[86346,7,""],[86346,0,"("],[86363,0,") {\n"],[86368,1,""],[86369,0,"CH"],[86372,7,""],[86372,0,"CK(d"],[86377,5,""],[86377,0,"bugg"],[86382,3,""],[86383,0,"_"],[86385,1,""],[86385,0,"un"],[86388,4,""],[86388,0,"i"],[86390,4,""],[86390,0,"g"],[86400,1,""],[86400,0,"Send me"],[86409,1,""],[86409,0,"a"],[86411,10,""],[86412,2,""],[86416,2,""],[86417,0,"nable"],[86428,14,""],[86429,9,""],[86430,1,""],[86431,30,""],[86431,0," w"],[86434,2,""],[86434,0,"rk"],[86437,7,""],[86437,0,"rs"],[86442,2,""],[86442,0,"Ha"],[86445,1,""],[86445,0,"dl"],[86448,4,""],[86454,2,""],[86454,0,"ha"],[86457,1,""],[86457,0,"dl"],[86460,2,""],[86472,1,""],[86472,0,"is"],[86475,1,""],[86475,0,"la"],[86479,2,""],[86484,0,"\n"],[86859,0,"\n  // Enabled debugger, possibly making it wait on a semaphore\n  env->debugger_agent()->Enable();\n"],[87148,0,"\n"],[87155,3,""],[87155,0,"vironm"],[87162,1,""],[87162,0,"nt* "],[87167,1,""],[87167,0,"nv = Environment::GetC"],[87190,1,""],[87190,0,"rrent"],[87208,0,");\n    Context::Scope context_scope(env->context());\n\n    StartDebug(env"],[87292,0,"  EnableDebug(env);\n  "],[93673,0,"Environment* env = En"],[93695,1,""],[93695,0,"ironment"],[93705,1,""],[93705,0,"G"],[93707,1,""],[93707,0,"tC"],[93710,0,"rrent(ar"],[93719,4,""],[93720,0,".GetIsol"],[93729,0,"te());\n    env->de"],[93748,1,""],[93748,0,"ugg"],[93752,1,""],[93752,0,"r_a"],[93761,0,"->Stop()"],[97554,1,""],[97555,158,""],[97562,0,"!"],[97585,26,""],[97586,36,""],[99351,0,"// Just a convenience method\nEnvironment* CreateEnvironment(Isolate* isolate,\n                               Handle<Context> context,\n                               int argc,\n                               const char* const* argv,\n                               int exec_argc,\n                               const char* const* exec_argv) {\n  Environment* env;\n  Context::Scope context_scope(context);\n\n  env = CreateEnvironment(isolate,\n                          uv_default_loop(),\n                          context,\n                          argc,\n                          argv,\n                          exec_argc,\n                          exec_argv);\n\n  LoadEnvironment(env);\n\n  return env;\n}\n\n\nstatic void HandleCloseCb(uv_handle_t* handle) {\n  Environment* env = reinterpret_cast<Environment*>(handle->data);\n  env->FinishHandleCleanup(handle);\n}\n\n\nstatic void HandleCleanup("],[100246,0,"env,\n                          uv_handle_t* handle,\n                          void* arg) {\n  handle->data = env;\n  uv_close(handle, HandleClose"],[100390,0,"b);\n}\n\n\nEnvi"],[100403,0,"onm"],[100407,0,"nt* Cre"],[100478,0,"uv_loop_t* loop,\n                               "],[100881,0,", loop"],[101081,0,"\n"],[102093,0,"// Register handle cleanups\n  env->RegisterHandleCleanup(\n      re"],[102160,0,"nterpret_cast<uv_handle_t*>(env->immediate_check_handle()),\n      HandleCleanup,\n      NULL);\n  env->RegisterHandleCleanup(\n      reinterpret_cast<uv_handle_t*>(env->immediate_idle_handle()),\n      HandleCleanup,\n      NULL);\n  env->RegisterHandleCleanup(\n      reinterpret_cast<uv_handle_t*>(env->idle_prepare_handle()),\n      HandleCleanup,\n      NULL);\n  env->RegisterHandleCleanup(\n      reinterpret_cast<uv_handle_t*>(env->idle_check_handle()),\n      HandleCleanup,\n      NULL);\n\n  i"],[103052,13,""],[104194,0,"\n "],[104197,0,"      uv_default_loop(),\n        "],[104238,0,"\n       "],[104252,0,"\n       "],[104266,0,"\n       "],[104285,0,"\n       "],[104310,8,""],[104310,0,"Co"],[104313,1,""],[104313,0,"t"],[104315,3,""],[104315,0,"x"],[104317,0,"::Sc"],[104322,3,""],[104322,0,"p"],[104325,1,""],[104325,0,"cont"],[104330,4,""],[104330,0,"xt_scop"],[104338,4,""],[104338,0,"("],[104346,0,");\n"],[104354,2,""],[104354,0,"//"],[104357,1,""],[104357,0,"Start "],[104368,0," a"],[104372,5,""],[104373,11,""],[104373,0,"t"],[104375,0,"when"],[104380,1,""],[104381,9,""],[104381,0,"rgv"],[104385,0,"ha"],[104388,8,""],[104388,0," -"],[104391,7,""],[104391,0,"d"],[104393,4,""],[104393,0,"bug"],[104401,0,"if"],[104404,8,""],[104404,0,"(u"],[104407,9,""],[104408,8,""],[104408,0,"_d"],[104414,6,""],[104414,0,"_ag"],[104418,5,""],[104419,3,""],[104420,2,""],[104421,1,""],[104422,3,""],[104423,2,""],[104427,2,""],[104428,14,""],[104429,10,""],[104429,0,"ta"],[104432,11,""],[104432,0,"t"],[104439,4,""],[104439,0,"e"],[104441,0,"v,"],[104444,5,""],[104444,0,"deb"],[104448,2,""],[104448,0,"g_wai"],[104454,1,""],[104454,0,"_conn"],[104460,1,""],[104461,5,""],[104462,0,");\n"],[104470,8,""],[104470,0,"L"],[104472,11,""],[104472,0,"ad"],[104485,9,""],[104485,0,"("],[104488,2,""],[104488,0,"v"],[104490,1,""],[104490,0,";\n"],[104500,6,""],[104500,0,"E"],[104502,20,""],[104502,0,"abl"],[104515,31,""],[104520,2,""],[104520,0,"if"],[104523,1,""],[104523,0,"(us"],[104527,2,""],[104527,0,"_d"],[104530,3,""],[104530,0,"bug_ag"],[104537,8,""],[104537,0,"nt)"],[104547,2,""],[104547,0,"E"],[104549,1,""],[104549,0,"abl"],[104553,8,""],[104553,0,"D"],[104555,14,""],[104555,0,"bug"],[104562,10,""],[104563,1,""],[104565,2,""],[104565,0,"\n"],[104585,2,""],[104590,2,""],[104649,2,""],[104670,2,""],[104708,2,""],[104776,2,""],[104835,2,""],[104876,2,""],[104945,2,""],[104958,2,""],[104970,2,""],[104994,2,""],[105024,2,""],[105040,5,""],[68193,0,"Force"],[68257,3,""],[68262,2,""],[96640,1,""],[96640,0,"N"],[96642,0,"w();\n  Isola"],[96655,4,""],[96656,1,""],[96656,0,"::Scope isola"],[96670,0,"e_scope"],[96678,0,"node_isolate"]],"_dtSpan":[429757,433872]},{"parents":[393,394],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[37870,52,""],[37871,7,""],[37874,11,""],[37982,5,""],[38001,2,""],[38624,5,""],[38648,2,""],[47106,1,""],[47107,1,""],[47108,2,""],[47109,3,""],[47145,2,""],[47146,2,""],[47147,3,""],[67330,5,""],[75575,11,""],[75725,1,""],[75726,47,""],[75729,38,""],[84796,16,""],[84871,11,""],[84872,8,""],[84873,34,""],[84936,2,""],[84937,2,""],[84945,5,""],[84951,4,""],[84961,2,""],[84983,5,""],[84984,1,""],[85009,3,""],[85016,1,""],[85019,3,""],[85030,6,""],[85035,3,""],[85041,2,""],[85051,9,""],[85120,2,""],[85121,3,""],[85129,1,""],[85133,3,""],[85141,3,""],[85147,5,""],[85317,6,""],[85318,3,""],[85326,1,""],[85327,2,""],[85331,1,""],[85336,2,""],[85337,1,""],[85340,1,""],[85345,1,""],[85347,2,""],[85351,1,""],[85354,1,""],[85358,1,""],[85359,1,""],[85364,3,""],[85366,1,""],[85367,1,""],[85371,1,""],[85387,4,""],[85395,2,""],[85396,4,""],[85405,4,""],[85407,1,""],[85411,2,""],[85412,1,""],[85415,1,""],[85430,2,""],[85431,5,""],[85433,1,""],[85440,5,""],[85457,2,""],[85458,2,""],[85461,2,""],[85466,2,""],[85471,2,""],[85480,2,""],[85483,2,""],[85496,2,""],[85501,2,""],[85507,1,""],[85880,88,""],[85881,10,""],[86171,1,""],[86178,5,""],[86179,1,""],[86186,4,""],[86189,4,""],[86190,10,""],[86192,8,""],[86214,1,""],[86215,3,""],[86216,1,""],[86304,72,""],[86310,20,""],[86311,2,""],[92673,3,""],[92674,12,""],[92675,3,""],[92676,1,""],[92679,2,""],[92699,8,""],[92710,1,""],[92711,2,""],[92714,7,""],[92716,1,""],[92723,6,""],[92724,19,""],[92725,1,""],[92740,1,""],[92741,1,""],[92742,1,""],[92746,3,""],[92749,6,""],[92750,2,""],[95474,10,""],[95475,24,""],[95476,11,""],[96387,1,""],[99061,29,""],[99074,2,""],[99075,4,""],[99077,81,""],[99079,12,""],[99083,81,""],[99105,210,""],[99108,263,""],[99123,15,""],[99124,138,""],[99152,1,""],[99153,189,""],[99230,12,""],[99234,3,""],[99242,7,""],[99273,48,""],[99709,6,""],[99908,1,""],[100986,5,""],[100987,1,""],[100988,7,""],[100989,25,""],[100992,28,""],[101488,488,""],[103265,17,""],[103266,12,""],[103268,3,""],[103276,3,""],[103312,2,""],[103313,5,""],[103320,1,""],[103325,8,""],[103339,8,""],[103358,8,""],[103385,2,""],[103386,1,""],[103388,1,""],[103394,4,""],[103395,1,""],[103398,4,""],[103410,7,""],[103411,1,""],[103422,3,""],[103427,2,""],[103436,6,""],[103441,2,""],[103447,1,""],[103452,4,""],[103454,3,""],[103460,2,""],[103463,1,""],[103464,2,""],[103469,3,""],[103474,2,""],[103479,2,""],[103483,2,""],[103490,3,""],[103504,2,""],[103505,1,""],[103513,1,""],[103514,2,""],[103517,3,""],[103521,5,""],[103530,1,""],[103531,3,""],[103532,1,""],[103538,2,""],[103539,1,""],[103543,1,""],[103547,2,""],[103558,1,""],[103562,1,""],[103563,2,""],[103573,1,""],[103575,3,""],[103595,2,""],[103596,3,""],[103602,2,""],[103603,6,""],[103610,3,""],[103620,1,""],[103622,3,""],[103627,1,""],[103631,3,""],[103637,1,""]],"_dtSpan":[433872,436483]},{"parents":[395],"numChildren":1,"agent":111,"time":"1970-01-01T00:00:00Z","patches":[[61988,11,""]],"_dtSpan":[436483,436494]},{"parents":[396],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[32326,7,""]],"_dtSpan":[436494,436501]},{"parents":[394],"numChildren":2,"agent":146,"time":"1970-01-01T00:00:00Z","patches":[[40199,4,""]],"_dtSpan":[436501,436505]},{"parents":[397,398],"numChildren":1,"agent":159,"time":"1970-01-01T00:00:00Z","patches":[[3519,0,"bool node_is_initialized = false;\nstatic "],[3650,0,"linked;\nst"],[3661,0,"tic no"],[3668,0,"e_mo"],[3673,0,"ule* modlist_add"],[49917,0,"if (!node_is_initialized) {\n    // \"Linked\" modules are included as part of the node project.\n    // Like builtins they are registered *before* node::Init runs.\n    mp->nm_flags = NM_F_LINKED;\n    mp->nm_link = modlist_linked;\n    modlist_linked = mp;\n  } else "],[50184,0,"// Once node::Init was called we can only register dynamic modules.\n    // See DLOpen.\n    "],[50625,0,"struct node_module* get_linked_module(const char* name) {\n  s"],[50687,0,"ruct node_module* mp;\n\n  for (mp = modlist_linked; mp != NULL; mp = mp->nm_link) {\n    if (strcmp(mp->nm_modname, name) == 0)\n      break;\n  }\n\n  CHECK(mp == NULL || (mp->nm_flags & NM_F_LINKED) != 0);\n  return mp;\n}\n\nt"],[57242,0,"static void LinkedBinding(const FunctionCallbackInfo<Value>& args) {\n  Environment* env = Environment::GetCurrent(args.GetIsolate());"],[57376,0,"\n  Local<String> module = arg"],[57406,0,"[0]->ToS"],[57415,0,"ring();\n\n  Loc"],[57430,0,"l<Objec"],[57438,0,"> cache = env->b"],[57455,0,"nding_cache_obje"],[57472,0,"t();\n  Local<Value>"],[57492,0,"exports_"],[57501,0," = cache->Get(m"],[57517,0,"dule);\n\n  "],[57528,0,"f (exports_v->IsObject())\n    return args.GetReturnValue().Set(exports_v.As<Object>());\n\n  node::Utf8Value module_v(module);\n  node_module* mod = get_linked_module(*module_v);\n\n  if (mod == NULL) {\n    char errmsg[1024];\n    snprintf(errmsg,\n             sizeof(errmsg),\n             \"No such module was linked: %s\",\n             *module_v);\n    return env->ThrowError(errmsg);\n  }\n\n  Local<Object> exports = Object::New(env->isolate());\n\n  if (mod->nm_context_register_func != NULL) {\n    mod->nm_context_register_func(exports,\n                                  mo"],[58094,0,"ule,\n                                  env->context(),\n                                  mod->nm_priv);\n  } else if (mod->nm_register_func != NULL) {\n    mod->nm_register_func(exports, module, mod->nm_priv);\n  } else {\n "],[58315,0,"  return env->ThrowError(\"Linked module has no declared entry point.\");\n  }\n\n  cache->Set(module, exports);\n\n  args.GetReturnValue().Set(exports);\n}\n\nstatic void "],[76478,0,"  env->SetMethod(process, \"_linkedBinding\", LinkedBinding);\n"],[104809,0,"  node_is_initialized = true;\n"]],"_dtSpan":[436505,438526]},{"parents":[399],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[50281,0,"N"],[50283,1,""]],"_dtSpan":[438526,438528]},{"parents":[400],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[50744,4,""],[50744,0,"nullptr"],[50848,4,""],[50848,0,"nullptr"],[57724,4,""],[57724,0,"nullptr"],[58015,4,""],[58015,0,"nullptr"],[58248,4,""],[58248,0,"nullptr"]],"_dtSpan":[438528,438583]},{"parents":[401],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[18428,792,""],[18429,45,""],[18430,49,""],[21094,150,""],[21095,3,""],[21096,38,""],[21097,115,""],[21098,2,""],[21099,8,""],[21100,15,""],[21103,13,""],[21104,16,""],[21105,29,""],[21107,10,""],[22093,25,""],[22094,1,""],[22096,144,""],[23286,1,""],[23287,61,""],[23290,269,""],[23416,1,""],[23417,24,""],[23418,2,""],[23420,143,""],[74597,70,""],[20556,6,""],[20583,3,""],[20610,3,""],[20630,6,""],[20717,6,""],[20727,3,""],[20754,3,""],[21002,1,""],[21002,0,"bo"],[21005,2,""],[21006,2,""],[21006,0," h"],[21009,5,""],[21009,0,"s_"],[21017,5,""],[21018,0,"="],[21020,4,""],[21020,0,"f"],[21022,35,""],[21022,0,"l"],[21025,6,""],[21030,4,""],[21030,0,"if"],[21033,2,""],[21033,0,"(env->u"],[21041,0,"ing"],[21051,0,"s()) {\n  "],[21061,1,""],[21062,3,""],[21062,0,"CHECK(recv->I"],[21076,0,"Obj"],[21080,0,"ct())"],[21087,1,""],[21089,2,""],[21090,2,""],[21090,0," "],[21097,0," = recv"],[21105,1,""],[21105,0,"A"],[21107,3,""],[21107,0,"<Objec"],[21114,1,""],[21114,0,">"],[21117,1,""],[21117,0,";\n"],[21120,2,""],[21123,0,"Local<Value>"],[21281,1,""],[21337,2,""],[21338,1,""],[21345,18,""],[21346,21,""],[21384,0,"}\n"],[21393,0,"TryCatch try_catch;\n  try_catch.SetVerbose(true);\n\n  if (has_domain) {\n"],[21474,1,""],[21474,0,"Val"],[21478,6,""],[21478,0,"e"],[21486,0,"_v"],[21523,15,""],[21525,1,""],[21529,1,""],[21538,0,"_v"],[21571,0,"_v.As<Function>()"],[21622,2,""],[21649,1,""],[21657,1,""],[21690,8,""],[21764,8,""],[21765,2,""],[21766,40,""],[21767,24,""],[21788,1,""],[21788,0,"Val"],[21792,6,""],[21792,0,"e"],[21799,0,"_v"],[21834,15,""],[21849,0,"_v"],[21879,0,"_v.As<Function>()"],[22009,1,""],[22011,8,""],[22013,27,""],[22021,17,""],[22022,9,""],[22023,38,""],[22024,103,""],[22025,191,""],[22064,350,""],[22065,49,""],[22066,4,""],[22067,93,""],[22068,76,""],[22128,51,""],[22131,52,""],[22135,14,""],[22136,3,""],[22137,39,""],[23017,1,""],[23017,0,"Val"],[23021,6,""],[23021,0,"e"],[23025,3,""],[23026,3,""],[23026,0,"_v"],[23047,15,""],[23058,3,""],[23059,3,""],[23059,0,"_v"],[23078,1,""],[23124,3,""],[23125,1,""],[23125,0,"_v.As<Fun"],[23135,1,""],[23135,0,"tion>()"],[23400,1,""],[23400,0,"Val"],[23404,6,""],[23404,0,"e"],[23408,3,""],[23409,3,""],[23409,0,"_v"],[23431,15,""],[23442,3,""],[23443,3,""],[23443,0,"_v"],[23508,3,""],[23509,1,""],[23509,0,"_v.As<Fun"],[23519,1,""],[23519,0,"tion>()"],[25519,25,""],[25520,525,""],[21011,0,"async_queue = false;\n  bool has_"],[21066,0,"r"],[21068,1,""],[21068,0,"c"],[21072,0,"IsObject()) {\n    object = recv.As<Object>();\n    Local<Val"],[21132,0,"e> a"],[21137,1,""],[21137,0,"y"],[21139,1,""],[21139,0,"c_queue"],[21147,1,""],[21147,0,"v = "],[21152,1,""],[21152,0,"bject->Get(env->"],[21169,1,""],[21169,0,"sy"],[21172,0,"c_queue_"],[21181,0,"tring"],[21189,2,""],[21189,0,";"],[21195,5,""],[21195,0,"if "],[21199,1,""],[21199,0,"async_queu"],[21210,1,""],[21210,0,"_"],[21225,0,"\n      has_async_queue = true"],[21258,0,"}\n\n"],[21263,3,""],[21263,0,"if ("],[21268,2,""],[21268,0,"nv->using_domains()) {\n  "],[21294,1,""],[21295,0,"CHECK("],[21305,2,""],[21305,0,"->I"],[21309,1,""],[21315,1,""],[21317,0,")"],[21905,0,"if (has_async_queue) {\n    try_catch.SetVerbose(false);\n    env->async_hooks_pre_function()->Call(object, 0, nullptr);\n    if (try_catch.HasCaught())\n      FatalError(\"node:;MakeCallback\", \"pre hook threw\");\n    try_catch.SetVerbose(true);\n  }\n\n  "],[22216,0,"async_queue) {\n    try_catch.SetVerbose(false);\n    env->async_hooks_post_function()->Call(object, 0, nullptr);\n    if (try_catch.HasCaught())\n      FatalError(\"node::MakeCallback\", \"post hook threw\");\n    try_catch.SetVerbose(true);\n  }\n\n  if (has_"]],"_dtSpan":[438583,443650]},{"parents":[398],"numChildren":1,"agent":160,"time":"1970-01-01T00:00:00Z","patches":[[3506,0,"bool node_is_initialized = false;\nstatic "],[3637,0,"linked;\nst"],[3648,0,"tic no"],[3655,0,"e_mo"],[3660,0,"ule* modlist_add"],[50571,0,"if (!node_is_initialized) "],[50603,0,"// \"Linked\" modules are included as p"],[50641,0,"rt of the node project.\n    // Like builtin"],[50685,0," they are regi"],[50700,0,"tered *b"],[50709,0,"fo"],[50712,0,"e* node::Ini"],[50725,1,""],[50725,0," runs.\n    "],[50737,0,"p->nm_flags = NM_F_LINKED;\n    mp->nm_link = modlist_linked;\n    m"],[50805,0,"list_linked = m"],[50821,0,";\n  } "],[50828,0,"lse {\n    // Once "],[50847,0,"o"],[50849,0,"e::In"],[50855,0,"t was called we can o"],[50877,0,"ly re"],[50883,0,"ister"],[50889,2,""],[50889,0,"dynamic modules.\n    // See DLOpen.\n  "],[50928,0," CHECK_"],[50936,0,"E(modpending, N"],[51271,0,"struct node_module* get_linked_module(const char* name) {\n  struct node_module* mp;\n\n  for (mp = modlist_linked; mp != NULL; mp = mp->nm_link) {\n    if (strcmp(mp->nm_modname, name) == 0)\n      break;\n  }\n\n  CHECK(mp == NULL || (mp->nm_flags & NM_F_LINKED) != 0);\n  return mp;\n}\n\n"],[57987,0,"static void LinkedBinding(const FunctionCallbackInfo<Value>& args) {\n  Environment* env = Environment::GetCurrent(args.GetIsolate());\n\n  Local<String> module = args[0]->ToString();\n\n  Local<Object> cache = env->binding_cache_object();\n  Local<Value> exports_v = cache->Get(module);\n\n  if (exports_v->IsObject())\n    return args.GetReturnValue().Set(exports_v.As<Object>());\n\n  node::Utf8Value module_v(module);\n  node_module* mod = get_linked_module(*module_v);\n\n  if (mod == NULL) {\n    char errmsg[1024];\n    snprintf(errmsg,\n             sizeof(errmsg),\n             \"No such module was linked: %s\",\n             *module_v);\n    return env->ThrowError(errmsg);\n  }\n\n  Local<Object> exports = Object::New(env->isolate());\n\n  if (mod->nm_context_register_func != NULL) {\n    mod->nm_context_register_func(exports,\n                                  module,\n                                  env->context(),\n                                  mod->nm_priv);\n  } else if (mod->nm_register_func != NULL) {\n    mod->nm_register_func(exports, module, mod->nm_priv);\n  } else {"],[59058,0,"    return env->ThrowError(\"Linked module ha"],[59103,0," no declared entry poin"],[59127,0,".\");\n  }\n\n  c"],[59141,0,"che->Set(module, exports);\n\n  args.Ge"],[59179,0,"ReturnValue().Set(exports);\n}\n\nstat"],[77388,0,"  NODE_SET_METHOD(process, \"_linkedBinding\", LinkedBinding);\n"],[105974,0,"node_is_initialized = true;\n  "]],"_dtSpan":[443650,445678]},{"parents":[403],"numChildren":1,"agent":171,"time":"1970-01-01T00:00:00Z","patches":[[50929,8,""],[50929,0,"assert"],[50946,1,""],[50947,0,"== "],[18140,694,""],[18141,151,""],[18142,105,""],[20908,3,""],[20910,3,""],[20911,256,""],[20912,7,""],[20913,130,""],[21877,1,""],[21878,24,""],[21881,145,""],[23072,331,""],[23198,1,""],[23199,24,""],[23200,1,""],[23202,144,""],[75429,71,""],[20347,6,""],[20374,4,""],[20401,2,""],[20421,3,""],[20448,3,""],[20481,2,""],[20508,4,""],[20518,6,""],[20646,6,""],[20646,0,"CHECK"],[20792,1,""],[20792,0,"bo"],[20795,6,""],[20796,3,""],[20797,0,"has_"],[20807,6,""],[20808,21,""],[20808,0,"="],[20810,5,""],[20810,0,"f"],[20812,12,""],[20812,0,"l"],[20815,6,""],[20820,4,""],[20820,0,"if"],[20823,2,""],[20823,0,"(env->u"],[20831,0,"ing"],[20841,0,"s()) {\n "],[20850,1,""],[20851,3,""],[20851,0," CHECK(recv->I"],[20866,0,"Obj"],[20870,0,"ct())"],[20876,1,""],[20879,2,""],[20880,2,""],[20880,0," "],[20887,0," = recv"],[20895,1,""],[20895,0,"A"],[20897,3,""],[20897,0,"<Objec"],[20904,1,""],[20904,0,">"],[20907,1,""],[20907,0,";\n"],[20910,2,""],[20913,0,"Local<Value>"],[21070,1,""],[21127,42,""],[21174,0,"}\n"],[21183,0,"TryCatch try_catch;\n "],[21205,0,"try_catch.SetVerbose(true);\n\n"],[21236,0,"if"],[21239,0,"(has_domain) {\n    "],[21264,1,""],[21264,0,"Val"],[21268,6,""],[21268,0,"e"],[21276,0,"_v"],[21312,15,""],[21315,2,""],[21328,0,"_v"],[21354,2,""],[21359,0,"_v.As<Function>()"],[21407,2,""],[21434,1,""],[21442,1,""],[21475,8,""],[21537,28,""],[21538,31,""],[21539,10,""],[21540,1,""],[21541,4,""],[21573,1,""],[21573,0,"Val"],[21577,6,""],[21577,0,"e"],[21584,0,"_v"],[21618,1,""],[21619,14,""],[21634,0,"_v"],[21662,33,""],[21663,3,""],[21664,2,""],[21665,5,""],[21665,0,"v"],[21667,2,""],[21667,0,"A"],[21669,21,""],[21669,0,"<F"],[21672,52,""],[21673,5,""],[21674,7,""],[21675,4,""],[21676,2,""],[21677,4,""],[21678,2,""],[21679,9,""],[21681,18,""],[21683,1,""],[21683,0,"C"],[21685,38,""],[21686,179,""],[21687,5,""],[21688,31,""],[21689,38,""],[21690,35,""],[21690,0,"m"],[21692,12,""],[21693,1,""],[21694,16,""],[21706,1,""],[21708,32,""],[21710,0,"  "],[21738,2,""],[21743,33,""],[21783,3,""],[21785,12,""],[21786,94,""],[21787,20,""],[21789,517,""],[21789,0,"}"],[22671,1,""],[22671,0,"Val"],[22675,6,""],[22675,0,"e"],[22679,3,""],[22680,3,""],[22680,0,"_v"],[22700,15,""],[22705,6,""],[22705,0,"CHECK"],[22712,3,""],[22713,3,""],[22713,0,"_v"],[22732,1,""],[22778,3,""],[22779,1,""],[22779,0,"_v.As<Fun"],[22789,1,""],[22789,0,"tion>()"],[23054,1,""],[23054,0,"Val"],[23058,6,""],[23058,0,"e"],[23062,3,""],[23063,3,""],[23063,0,"_v"],[23085,15,""],[23089,6,""],[23089,0,"CHECK"],[23096,3,""],[23097,3,""],[23097,0,"_v"],[23162,3,""],[23163,1,""],[23163,0,"_v.As<Fun"],[23173,1,""],[23173,0,"tion>()"],[25164,479,""],[25165,10,""],[25170,5,""],[25171,13,""],[25172,7,""],[25174,36,""],[20801,0,"async_queue = false;\n  bool has_"],[20856,0,"r"],[20858,1,""],[20858,0,"c"],[20862,0,"IsObject()) {\n    object = recv.As<Object>();\n    Local<Val"],[20922,0,"e> a"],[20927,1,""],[20927,0,"y"],[20929,1,""],[20929,0,"c_queue"],[20937,1,""],[20937,0,"v = "],[20942,1,""],[20942,0,"bject->Get(env->"],[20959,1,""],[20959,0,"sy"],[20962,0,"c_queue_"],[20971,0,"tring"],[20979,2,""],[20979,0,";"],[20985,5,""],[20985,0,"if "],[20989,1,""],[20989,0,"async_queu"],[21000,1,""],[21000,0,"_"],[21015,1,""],[21020,4,""],[21020,0,"  has_asyn"],[21031,1,""],[21031,0,"_queue"],[21040,0,"t"],[21042,0,"ue;\n  }\n\n  if ("],[21058,0,"nv->using_domains()) {\n    CHECK(re"],[21095,2,""],[21095,0,"->I"],[21099,1,""],[21105,1,""],[21107,0,")"],[21690,0,"if (has_async_queue) {\n    try_catch.SetVerbose(false);\n    env->async_hooks_pre_function()->Call(object, 0, NUL"],[21803,0,");\n    if (try_catch.HasCaught())\n      FatalErr"],[21852,0,"r(\"node:;MakeCallback\", \"pre hook threw\");\n    try_"],[21905,0,"tch.SetVerbose(true);\n  }\n\n  Loca"],[21998,0,"async_queue) {\n    try_catch.SetVerbose(false);\n    env->async_hooks_post_function()->Call(object, 0, NULL);\n    if (try_catch.HasCaught())\n      FatalError(\"node::MakeCallback\", \"post hook threw\");\n    try_catch.SetVerbose(true);\n  }\n\n  if (has_"]],"_dtSpan":[445678,450963]},{"parents":[402,404],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[3560,5,""],[3565,36,""],[3650,10,""],[3667,6,""],[3672,19,""],[3673,1,""],[18428,0,"Do"],[20609,0," "],[20654,0,"   "],[20715,0,"  "],[20751,0,"   "],[20863,5,""],[20997,17,""],[20998,15,""],[21011,1,""],[21013,3,""],[21049,1,""],[21050,1,""],[21051,1,""],[21051,0," "],[21053,0,"a"],[21055,10,""],[21056,3,""],[21057,38,""],[21059,28,""],[21059,0,"\n"],[21061,1,""],[21062,16,""],[21064,0," "],[21136,0,"s"],[21146,0,"_"],[21151,0,"o"],[21171,2,""],[21193,20,""],[21194,21,""],[21219,3,""],[21254,80,""],[21309,5,""],[21320,3,""],[21324,12,""],[21481,0,"\n"],[21538,0,"\n        "],[21587,2,""],[21590,23,""],[21591,29,""],[21592,2,""],[21593,2,""],[21594,15,""],[21675,3,""],[21680,1,""],[21687,2,""],[21723,0,")"],[21729,0," "],[21739,2,""],[21765,0,"  "],[21772,17,""],[22148,26,""],[22149,32,""],[22150,1,""],[22152,53,""],[22153,48,""],[22154,51,""],[22156,33,""],[22200,55,""],[22200,0,"g"],[22202,144,""],[22205,31,""],[22208,5,""],[22318,4,""],[22318,0,"nullptr"],[22485,3,""],[22490,1,""],[22496,2,""],[22531,0,")"],[22546,2,""],[22574,0,"it"],[22593,0,"->Call(domai"],[22606,0,", 0, n"],[22618,0,");\n      "],[22628,0,"f ("],[22632,0,"ry"],[22635,1,""],[22635,0,"catch"],[22641,1,""],[22641,0,"Ha"],[22644,2,""],[22644,0,"Caught())\n        ret"],[22666,0,"rn U"],[22671,0,"defined(env-"],[22684,1,""],[22684,0,"isol"],[22689,0,"te());\n    }\n  }\n  env->tick_cal"],[22722,1,""],[22722,0,"back_funct"],[22733,0,"o"],[22735,0,"()->Call(process"],[22761,0,"tr);\n"],[22768,1,""],[22776,0,"(env->context()"],[22792,0," env->isolate()->GetCurrentContext());\n\n  "],[22907,0," "],[23714,3,""],[23718,1,""],[23723,2,""],[23743,0,")"],[23748,5,""],[23758,2,""],[23822,9,""],[23839,7,""],[24100,3,""],[24102,1,""],[24108,2,""],[24137,5,""],[24142,2,""],[24215,9,""],[24223,7,""],[26207,0,"s<Value>()"],[47126,14,""],[47127,10,""],[47128,2,""],[47234,193,""],[47234,0,"("],[47238,15,""],[47239,6,""],[47240,18,""],[47241,1,""],[47242,5,""],[47243,18,""],[47244,8,""],[47246,23,""],[47247,20,""],[47254,23,""],[47636,1,""],[47656,32,""],[47657,28,""],[47693,66,""],[47694,7,""],[47695,41,""],[47696,60,""],[47698,28,""],[47699,8,""],[47700,9,""],[54199,117,""],[54200,3,""],[54201,4,""],[54202,7,""],[54203,2,""],[54674,11,""],[54675,25,""],[54676,62,""],[54677,7,""],[54678,6,""],[54679,96,""],[54680,2,""],[54681,63,""],[54682,13,""],[54690,28,""],[54691,312,""],[54692,43,""],[54694,2,""],[54696,2,""],[54697,7,""],[54698,43,""],[54699,13,""],[54700,8,""],[54701,346,""],[73459,18,""],[73460,43,""],[101911,30,""]],"_dtSpan":[450963,454186]},{"parents":[405],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[47135,126,""],[48241,26,""],[48262,0,"CHECK_EQ(modpending, nullptr);\n\n  "],[48504,1,""],[48507,1,""],[48507,0,"c"],[48509,5,""],[48509,0,"ns"],[48512,1,""],[48512,0," bool "],[48519,0,"s_dlope"],[48527,3,""],[48527,0,"_"],[48529,2,""],[48529,0,"rr"],[48533,2,""],[48533,0," = uv"],[48539,0,"dlopen(*filename, &lib);\n\n  // Object"],[48577,0," con"],[48582,1,""],[48582,0,"ain"],[48589,1,""],[48589,0,"v14 or"],[48596,0,"later modul"],[48608,1,""],[48608,0,"s will ha"],[48618,2,""],[48619,3,""],[48619,0," "],[48621,0,"egistered "],[48632,0,"hem"],[48636,1,""],[48636,0,"elve"],[48641,0,"\n  // on "],[48651,1,""],[48651,0,"he pend"],[48661,4,""],[48662,0,"list. "],[48669,2,""],[48669,0,"A"],[48671,0,"tiv"],[48675,0,"te a"],[48680,4,""],[48680,0,"l of th"],[48688,1,""],[48688,0,"m now.  A"],[48698,1,""],[48699,2,""],[48700,1,""],[48701,0,"esen"],[48706,1,""],[48706,0,", only one\n "],[48719,1,""],[48719,0,"//"],[48728,3,""],[48728,0," p"],[48731,2,""],[48731,0,"r obj"],[48737,1,""],[48737,0,"ct is sup"],[48750,1,""],[48750,0,"ed.\n  node"],[48761,0,"module* con"],[48774,1,""],[48774,0," mp = modpend"],[48790,4,""],[48790,0,";\n  m"],[48796,3,""],[48796,0,"dp"],[48799,1,""],[48799,0,"nding = nullp"],[48813,2,""],[48813,0,"r"],[48823,2,""],[48823,0,"is"],[48832,5,""],[48832,0,"_"],[48834,10,""],[48834,0,"rror"],[48839,1,""],[49149,6,""],[49150,76,""],[49151,7,""],[49152,3,""],[49153,18,""],[49154,10,""],[49156,124,""],[49723,0,"Local<String> exports_string = env->exports_string();\n  Local<Object> exports = module->Get(exports_string)->ToObject();\n\n  "],[27832,4,""],[27832,0,"char"],[27923,0,"CHECK_NE(encoding, UCS2);\n  "],[27986,24,""],[27987,0,"buf,"],[27992,0,"len,"],[27997,2,""],[27997,0,"encoding);\n}\n\nLocal<Value>"],[28024,0,"Encode(I"],[28033,1,""],[28033,0,"ol"],[28037,0,"e* "],[28041,3,""],[28041,0,"sol"],[28045,1,""],[28046,1,""],[28046,0,"e, "],[28055,4,""],[28055,0,"uint16_t"],[28064,2,""],[28064,0," "],[28068,1,""],[28069,5,""],[28070,1,""],[28070,0,"size_t"],[28077,22,""],[28080,8,""],[28080,0,")"],[28082,0,"{\n"],[28086,4,""],[28086,0,"return"],[28093,15,""],[28093,0,"StringByt"],[28103,0,"s::E"],[28111,0,"e("],[28114,0,"solate, buf, le"],[28130,1,""]],"_dtSpan":[454186,455310]},{"parents":[406],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[13860,0,"env->isolate()"],[15841,0,"env->isolate()"],[18105,0,"env->isolate()"],[32221,0,"env->isolate()"],[32333,0,"env->isolate()"],[32884,0,"env->isolate()"],[48571,0,"env->isolate()"],[49188,0,"env->isolate()"],[49993,0,"env->isolate()"],[52786,0,"env->isolate()"],[52990,0,"env->isolate()"],[54509,0,"env->isolate()"],[74654,4,""],[74654,0,"env->isolate()->"],[74714,4,""],[74714,0,"env->isolate()->"],[96464,0,"env->isolate()"],[26555,0,"isolat"],[26562,0,", e"],[29539,0,"env->isolate(), "],[29736,0,"env->isolate(), "],[32993,0,"env->isolate(), "],[33824,0,"nv->isolate(), e"],[33932,0,"env->isolate(), "],[33992,0,"env->isolate(), "],[36628,0,".GetIsolate(), args"],[37940,0,"env->isolate(), "],[39869,0,"// TODO(trevnorris): Fix to not use GetCurrent().\n    "],[39944,0,"Isolate::GetCurrent(), "],[40157,0,"// TODO(trev"],[40171,0,"rris): Fix to not use GetCurrent().\n    no"],[40232,0,"Isolate::GetCurrent(), "],[43601,0,"env->isolate(), "],[48934,0,"env->isolate(), "],[53156,0,"env->isolate(), "],[55089,0,"env->isolate(), "],[56617,0,"env->isolate(), "],[56974,0,"env->isolate(), "],[58334,0,"env->isolate(), "],[58383,0,"env->isolate(), "],[59131,0,"env->isolate(), "],[59998,0,"env->isolate(), "],[74955,0,".GetIsolate(), args"]],"_dtSpan":[455310,456005]},{"parents":[407],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[69528,0,"NODE_"],[69564,1,""],[69564,0,"#ifdef"],[69571,5,""],[69571,0,"_WI"],[69575,20,""],[69575,0,"32"],[69580,0,"//"],[69583,0,"As"],[69586,2,""],[69586,0,"determined"],[69597,0,"by"],[69600,0,"gyp,"],[69605,0,"NODE_PLATFORM"],[69619,0,"equals"],[69626,0,"'win'"],[69632,0,"on"],[69635,0,"windows."],[69644,0,"However\n"],[69654,0,"//"],[69657,0,"for"],[69661,0,"historic"],[69670,0,"reasons"],[69678,1,""],[69679,0,"rocess.p"],[69694,3,""],[69695,6,""],[69695,0,"should"],[69702,0,"be"],[69705,0,"'win32'.\n"],[69716,0,"Local<String>"],[69730,0,"platform"],[69739,0,"="],[69741,0,"OneByteString(env->isolate(),"],[69771,0,"\"win32\");\n#else\n"],[69789,0,"Local<String>"],[69803,0,"platform"],[69812,0,"="],[69844,0,"NODE_"],[69858,0,";\n#endif\n  READONLY_PROPERTY(process, \"platform\", platform"]],"_dtSpan":[456005,456318]},{"parents":[408],"numChildren":1,"agent":28,"time":"1970-01-01T00:00:00Z","patches":[[36514,23,""],[36515,18,""],[36531,0,"Type"]],"_dtSpan":[456318,456363]},{"parents":[409],"numChildren":1,"agent":174,"time":"1970-01-01T00:00:00Z","patches":[[69527,6,""],[69528,0," READONLY"],[69538,5,""],[69538,0,"PROPERTY(process,"],[69558,2,""],[69559,2,""],[69560,10,""],[69561,2,""],[69562,4,""],[69563,13,""],[69564,6,""],[69565,5,""],[69566,2,""],[69567,8,""],[69568,8,""],[69570,2,""],[69571,3,""],[69572,8,""],[69573,7,""],[69574,8,""],[69574,0,"  \""],[69585,0,"\",\n      "],[69595,6,""],[69596,2,""],[69597,9,""],[69599,13,""],[69600,8,""],[69601,1,""],[69602,29,""],[69603,16,""],[69605,13,""],[69606,8,""],[69607,1,""],[69652,58,""]],"_dtSpan":[456363,456666]},{"parents":[410],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[92927,0,"  // TODO(bnoordhuis) V8 3.32 is unshipping Harmony classes for the moment.\n  // We're currently at 3.31, disable classes for feature parity.  Remove\n  // again when we upgrade.\n  V8::SetFlagsFromString(\"--noharmony_classes\",\n                         sizeof(\"--noharmony_classes\") - 1);\n\n"],[93214,0,"  V8::SetFlagsFromString(\"--noharmony_object_literals\",\n                         sizeof(\"--noharmony_object_literals\") - 1);\n"]],"_dtSpan":[456666,457079]},{"parents":[411],"numChildren":1,"agent":191,"time":"1970-01-01T00:00:00Z","patches":[[0,1134,""]],"_dtSpan":[457079,458213]},{"parents":[412],"numChildren":1,"agent":77,"time":"1970-01-01T00:00:00Z","patches":[[67496,0,"  READONLY_PROPERTY(versions,\n                    \"ares\",\n                    FIXED_ONE_BYTE_STRING(env->isolate(), ARES_VERSION_STR));\n"]],"_dtSpan":[458213,458349]},{"parents":[413],"numChildren":1,"agent":149,"time":"1970-01-01T00:00:00Z","patches":[[79033,0,"s"],[79037,1,""],[79037,0,"i"],[79039,2,""]],"_dtSpan":[458349,458354]},{"parents":[414],"numChildren":1,"agent":80,"time":"1970-01-01T00:00:00Z","patches":[[77101,1,""],[77101,0,"i"],[77103,2,""],[77103,0,"js"],[77175,1,""],[77175,0,"i"],[77177,2,""],[77177,0,"js"]],"_dtSpan":[458354,458366]},{"parents":[415],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[91928,413,""]],"_dtSpan":[458366,458779]},{"parents":[416],"numChildren":1,"agent":199,"time":"1970-01-01T00:00:00Z","patches":[[47577,1,""],[47577,0,"!="]],"_dtSpan":[458779,458782]},{"parents":[417],"numChildren":1,"agent":29,"time":"1970-01-01T00:00:00Z","patches":[[94928,0,"\n  // We should set node_is_initialized here instead of in node::Start,\n  // otherwise embedders using node::Init to initialize everything will not be\n  // able to set it and native modules will not load for them.\n  node_is_initialized = true;\n"],[101579,30,""]],"_dtSpan":[458782,459056]},{"parents":[418],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[77288,1,""],[77288,0,"i"],[77290,3,""],[77290,0,".j"]],"_dtSpan":[459056,459063]},{"parents":[419],"numChildren":1,"agent":77,"time":"1970-01-01T00:00:00Z","patches":[[66795,0,"\n                                     \".\"\n                                     NODE_STRINGIFY(HTTP_PARSER_VERSION_PATCH)"]],"_dtSpan":[459063,459183]},{"parents":[420],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[91402,0,"inline void PlatformInit() {\n#ifdef __POSIX__\n  // Raise the open file descriptor limit.\n  struct rlimit lim;\n  if (getrlimit(RLIMIT_NOFILE, &lim) == 0 && lim.rlim_cur != lim.rlim_max) {\n    // Do a binary search for the limit.\n    rlim_t min = lim.rlim_cur;\n    rlim_t max = 1 << 20;\n    // But if there's a defined upper bound, don't search, just set it.\n    if (lim.rlim_max != RLIM_INFINITY) {\n      min = lim.rlim_max;\n      max = lim.rlim_max;\n    }\n    do {\n      lim.rlim_cur = min + (max - min) / 2;\n      if (setrlimit(RLIMIT_NOFILE, &lim)) {\n        max = lim.rlim_cur;\n      } else {\n        min = lim.rlim_cur;\n      }\n    } while (min + 1 < max);\n  }\n  // Ignore SIGPIPE\n  RegisterSignalHandler(SIGPIPE, SIG_IGN);\n  RegisterSignalHandler(SIGINT, SignalExit, true);\n  RegisterSignalHandler(SIGTERM, SignalExit, true);\n#endif  // __POSIX__\n}\n\n\n"],[94926,36,""],[94927,10,""],[94928,90,""],[94929,379,""],[94930,45,""],[94932,167,""],[94933,89,""],[94934,12,""],[94937,51,""],[94938,7,""],[94939,2,""],[94940,13,""],[100763,0,"PlatformInit();\n\n  "],[85055,8,""],[85056,24,""],[85057,26,""],[85059,12,""],[85060,3,""],[85061,36,""],[85062,36,""],[85063,72,""],[85064,32,""],[85082,13,""],[85083,65,""],[86199,6,""],[86199,0,"Unblo"],[86205,7,""],[86205,0,"k"],[86214,0,". "],[86217,0,"A pen"],[86223,2,""],[86227,3,""],[86227,0,"SIGUSR1"],[86235,4,""],[86236,2,""],[86236,0,"ign"],[86240,1,""],[86240,0,"l"],[86242,14,""],[86242,0,"w"],[86244,7,""],[86244,0,"ll"],[86247,3,""],[86251,7,""],[86251,0,"b"],[86256,4,""],[86256,0,"liv"],[86261,0,"ed.\n"],[86266,0," s"],[86269,4,""],[86269,0,"g"],[86271,0,"e"],[86273,3,""],[86273,0,"_"],[86275,3,""],[86276,0,"s"],[86278,0,"gma"],[86282,0,"k;\n"],[86286,2,""],[86287,0,"sigem"],[86293,1,""],[86293,0,"tyset(&sigm"],[86305,3,""],[86305,0,"sk);"],[86312,0,"s"],[86314,6,""],[86315,4,""],[86316,4,""],[86317,0,"ds"],[86320,4,""],[86320,0,"t(&"],[86326,1,""],[86326,0,"m"],[86328,1,""],[86328,0,"sk, SIGUSR1"],[86340,0,";"],[86344,0,"CHECK_EQ(0,"],[86356,1,""],[86356,0,"pth"],[86360,0,"e"],[86362,0,"d_s"],[86366,0,"gma"],[86370,1,""],[86370,0,"k"],[86375,0,"_"],[86377,3,""],[86377,0,"NBLOCK, &sigmask, nullptr)"],[91157,0,"sigset_t sigmask;\n  sigemptyset(&sigmask);\n  sigaddset(&sigmask, SIGUSR1);\n  CHECK_EQ(0, pthread_sigmask(SIG_SETMASK, &sigmask, nullptr));\n  RegisterSignalHandler(SIGPIPE, SIG_IGN);\n  RegisterSignalHandler(SIGINT, SignalExit, true);\n  RegisterSignalHandler(SIGTERM, SignalExit, true);\n  "],[92060,166,""],[100761,130,""],[100762,7,""],[91296,0,"\n"],[91299,0,"// "],[91304,0,"store si"],[91313,0,"nal d"],[91320,0,"posi"],[91325,0,"ions, th"],[91334,0," pa"],[91338,0,"ent process may have changed them.\n  struct sigaction act;\n  memset(&act, 0, sizeof(act));\n\n  // The hard-coded upper limit is because N"],[91475,0,"IG is not very reliable; on Linux,\n  // it evaluates to 32, 34 or 64, depend"],[91552,0,"n"],[91554,0," o"],[91557,0," whether RT sign"],[91575,1,""],[91575,0,"s are enabled.\n  // Counting up to SIGRTMIN doesn't work for the same reason.\n  for (unsigned nr = 1; nr < 32; nr += 1) {\n    if (nr == SIGKILL || nr == SIGSTOP)\n      continue;\n    "],[91758,0,"ct.sa_ha"],[91771,0," = "],[91775,0,"nr == "],[91788,1,""],[91788,0,")"],[91790,0,"? "],[91799,0," : SIG_DFL;\n    CHECK_EQ(0, sigaction(nr, &act, nullptr)"],[91860,0,"}\n\n  "],[91966,0,"\n"]],"_dtSpan":[459183,462641]},{"parents":[421],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[25184,1,""],[25184,0,"con"],[25188,2,""],[25188,0,"t ch"],[25193,2,""],[25193,0,"r"],[25196,6,""],[25197,0,"ncoding"],[25234,2,""],[25234,0,"enum encodi"],[25246,0,"g "],[25249,1,""],[25250,2,""],[25250,0,"f"],[25252,1,""],[25253,0,"lt_"],[25257,1,""],[25257,0,"ncoding)"],[25266,0,"{\n  switch ("],[25286,2,""],[25286,0,"[0]) {\n    case 'u':\n      // utf8"],[25321,0," utf16le"],[25336,0,"if"],[25339,0,"(encoding[1]"],[25352,0,"=="],[25355,0,"'t'"],[25359,0,"&&"],[25362,0,"encoding[2]"],[25374,0,"=="],[25377,0,"'f')"],[25382,0,"{\n"],[25392,0,"// Skip `-`\n  "],[25414,2,""],[25414,0,"coding +="],[25432,0,"[3] == '-' ? 4 : 3;\n      "],[25459,1,""],[25459,0," if (enco"],[25469,0,"ing[0] == '8' && "],[25487,2,""],[25487,0,"ncoding[1] == '\\0')\n          ret"],[25521,0,"rn UTF8;\n        if (strncmp(encoding, \"16"],[25564,1,""],[25564,0,"e\", 4"],[25571,1,""],[25571,0,"== 0)"],[25579,2,""],[25579,0,"        retur"],[25593,1,""],[25593,0," UCS2;\n\n      // ucs2\n      } e"],[25625,0,"s"],[25627,1,""],[25627,0," if (en"],[25636,1,""],[25636,0,"ding[1] == 'c' && "],[25655,0,"ncoding[2] =="],[25669,0,"'"],[25671,0,"') {\n        en"],[25688,1,""],[25688,0,"ding += "],[25697,0,"ncoding[3] == '-' ? 4 : 3;\n        if "],[25736,0,"encod"],[25742,1,""],[25742,0,"ng[0] == '2' && enc"],[25762,2,""],[25762,0,"ding[1] == '\\0')\n          re"],[25792,0,"urn UCS2;\n      }\n      br"],[25819,1,""],[25819,0,"ak"],[25823,0,"    case 'b':"],[25839,0,"    // b"],[25848,0,"nary\n      i"],[25863,1,""],[25871,5,""],[25871,0,"[1] == 'i') {\n        if ("],[25898,1,""],[25900,0,"ncmp(encod"],[25913,1,""],[25913,0," + 2, \"nary\", 4"],[25929,0," == 0"],[25940,0,"      "],[25953,8,""],[25953,0,"BINARY"],[25964,3,""],[25964,0,"    // buff"],[25976,8,""],[25976,0,"r\n      } e"],[25988,1,""],[25988,0,"s"],[25991,0,"if ("],[26003,1,""],[26003,0,"[1] == 'u') {\n        "],[26026,0,"f ("],[26030,3,""],[26031,0,"rncmp("],[26038,0,"ncoding + 2"],[26051,0,"\"ff"],[26055,0,"r\", 4) == 0)\n          retur"],[26084,0," BUFFER;\n      }\n      break;\n    "],[26119,0,"ase '\\0':\n      return default_enc"],[26158,3,""],[26160,0,"    default:"],[26175,0,"    break;\n  }\n\n  "],[26208,1,""],[26275,1,""],[26343,1,""],[26412,1,""],[26483,1,""],[26550,1,""],[26618,1,""],[26688,1,""],[26759,1,""],[26830,1,""],[26901,1,""],[26966,1,""],[27178,1,""],[27402,0,"default_encoding;\n  }\n}\n\n\nenum encoding ParseEncoding(Isolate* isolate,\n                            Handle<Value> encoding_v,\n                            enum encoding default_encoding) {\n  if (!encoding_v->IsString())\n    return default"],[27640,0,"enco"],[27645,0,"ing;\n\n  nod"],[27657,0,"::Ut"],[27662,0,"8V"],[27665,0,"l"],[27667,0,"e encoding(iso"],[27682,0,"a"],[27684,0,"e, encoding_v)"],[27700,0,"\n"],[27703,1,""],[27703,0,"return ParseEncoding(*encoding, default_encoding);"]],"_dtSpan":[462641,463885]},{"parents":[422],"numChildren":1,"agent":21,"time":"1970-01-01T00:00:00Z","patches":[[11349,0,",\n                      const char* dest"],[11427,0,"\n      "],[11441,5,""],[11441,0,"UV"],[11461,15,""],[11462,41,""],[11470,27,""],[11471,29,""],[11479,39,""],[11480,17,""],[11484,0,", dest"],[12972,2,""],[12972,0,"static Local<String>"],[12993,0,"StringFromPat"],[13007,0,"(Isol"],[13013,0,"te* isolate, const char* path) {\n#ifdef _WIN32\n  if (strn"],[13071,1,""],[13071,0,"mp(path, \"\\\\\\\\?\\\\UNC\\\\\", 8) == 0) {\n "],[13109,0,"  return String::Conc"],[13131,0,"t(FIXED_ONE_BYTE_STRING(iso"],[13159,0,"ate, \"\\\\\\\\\"),\n                          String::N"],[13209,0,"wF"],[13212,0,"omUtf8(isolate, pa"],[13231,1,""],[13231,0,"h + 8));\n  } else"],[13249,0,"if (strn"],[13258,1,""],[13258,0,"mp("],[13262,1,""],[13262,0,"ath, \"\\\\\\\\?\\\\\", 4)"],[13281,0,"== 0) {\n    return String::NewFromUtf8(is"],[13323,0,"late, path + 4);\n  }\n#endi"],[13350,0,"\n\n "],[13354,1,""],[13355,0,"etu"],[13360,0," String::NewFromUtf8(isolate, path);\n}\n\n\nL"],[13403,0,"cal<Value> UV"],[13425,0,"(Isolate* isolate,\n                         int errorno"],[13481,0,"\n                  "],[13501,0,"      cons"],[13512,1,""],[13512,0," char* syscall,\n                         co"],[13556,2,""],[13556,0,"st char* msg,\n                       "],[13594,1,""],[13594,0," c"],[13597,0,"nst cha"],[13605,0,"*"],[13607,0,"path) {\n  ret"],[13621,1,""],[13621,0,"rn UVException(isolate,"],[13650,0,"no, syscall, m"],[13665,0,"g, path, nullptr);\n}\n\n"],[13804,0,"*"],[13806,1,""],[13850,0,"*"],[13852,1,""],[13892,0,"*"],[13894,1,""],[13898,0,",\n                         const char* dest"],[14073,1,""],[14073,0,"j"],[14075,5,""],[14075,0,"_code"],[14097,5,""],[14104,2,""],[14145,2,""],[14145,0,"js_"],[14149,0,"y"],[14151,0,"c"],[14153,2,""],[14153,0,"ll"],[14172,5,""],[14179,2,""],[14181,1,""],[14182,1,""],[14182,0,"yscall"],[14207,0,"js_path;\n  Lo"],[14221,0,"al<String> js_dest;\n\n  L"],[14246,0,"cal<Stri"],[14255,0,"g> js_m"],[14263,1,""],[14263,0,"g"],[14266,0," js_code;"],[14278,0,"js_msg"],[14285,2,""],[14285,0,"="],[14302,1,""],[14302,0,"j"],[14304,4,""],[14304,0,"_ms"],[14332,5,""],[14339,2,""],[14342,1,""],[14342,0,":"],[14349,1,""],[14350,13,""],[14351,3,""],[14351,0,"j"],[14353,1,""],[14353,0,"_msg"],[14375,3,""],[14375,0,"j"],[14377,3,""],[14377,0,"_"],[14379,2,""],[14380,1,""],[14381,6,""],[14381,0,","],[14383,10,""],[14383,0,"On"],[14386,2,""],[14386,0,"Byt"],[14390,11,""],[14396,18,""],[14397,26,""],[14398,3,""],[14399,8,""],[14399,0,"ol"],[14403,17,""],[14403,0,"e"],[14406,1,""],[14406,0,"msg"],[14410,5,""],[14411,2,""],[14411,0,";"],[14413,3,""],[14415,5,""],[14415,0,"js"],[14418,0,"m"],[14420,2,""],[14420,0,"g"],[14439,0,"js_msg, "],[14469,5,""],[14476,2,""],[14479,4,""],[14479,0,", "],[14483,1,""],[14483,0,");"],[14488,0,"js_msg"],[14495,0,"="],[14497,28,""],[14505,5,""],[14505,0,"C"],[14507,7,""],[14508,7,""],[14508,0,"c"],[14511,1,""],[14512,1,""],[14512,0,"js_msg"],[14520,1,""],[14520,0,"js_sysc"],[14528,7,""],[14528,0,"ll"],[14533,5,""],[14533,0,"\n"],[14535,4,""],[14539,8,""],[14544,1,""],[14545,15,""],[14545,0,"!"],[14548,1,""],[14548,0,"nullptr"],[14563,2,""],[14563,0,"js_"],[14570,4,""],[14579,5,""],[14583,1,""],[14583,0,"Pa"],[14586,2,""],[14586,0,"h"],[14588,5,""],[14595,2,""],[14601,4,""],[14604,0,"\n"],[14609,4,""],[14609,0,"j"],[14611,14,""],[14612,0,"m"],[14614,2,""],[14614,0,"g"],[14626,5,""],[14626,0,"C"],[14628,0,"ncat(js_"],[14637,4,""],[14637,0,"sg, FIXED_ONE_BYTE_STRING"],[14663,5,""],[14670,2,""],[14672,4,""],[14672,0,"\" '\")"],[14684,5,""],[14684,0,"j"],[14686,10,""],[14687,0,"m"],[14689,2,""],[14689,0,"g"],[14701,5,""],[14701,0,"C"],[14703,7,""],[14704,7,""],[14704,0,"c"],[14707,1,""],[14708,1,""],[14708,0,"js_msg"],[14716,0,"js_"],[14725,8,""],[14730,11,""],[14730,0,"js_ms"],[14736,1,""],[14737,6,""],[14738,1,""],[14739,7,""],[14754,3,""],[14754,0,"j"],[14756,1,""],[14756,0,"_msg"],[14784,5,""],[14791,2,""],[14794,1,""],[14802,0,"}\n\n"],[14807,9,""],[14808,3,""],[14808,0,"f"],[14810,3,""],[14810,0,"(de"],[14814,1,""],[14814,0,"t"],[14816,0,"!"],[14818,1,""],[14819,0,"nullptr)"],[14828,0,"{\n"],[14834,0,"js_dest"],[14842,0,"="],[14850,3,""],[14850,0,"Fr"],[14853,2,""],[14853,0,"mP"],[14857,0,"h"],[14859,3,""],[14859,0,"i"],[14861,4,""],[14861,0,"ol"],[14865,2,""],[14865,0,"e, de"],[14872,1,""],[14875,0,"\n"],[14880,11,""],[14880,0,"js_ms"],[14886,1,""],[14887,6,""],[14888,7,""],[14889,1,""],[14904,3,""],[14904,0,"j"],[14906,1,""],[14906,0,"_msg"],[14934,5,""],[14941,2,""],[14944,0," -> "],[14958,1,""],[14958,0,"js_msg"],[14967,5,""],[14967,0,"S"],[14969,0,"r"],[14971,1,""],[14972,0,"g"],[14975,3,""],[14975,0,"C"],[14977,2,""],[14977,0,"n"],[14979,2,""],[14979,0,"at(js_m"],[14987,7,""],[14987,0,"g,"],[14990,0,"js_d"],[14995,1,""],[14996,3,""],[14996,0,"t);"],[15004,1,""],[15004,0,"js_msg"],[15013,5,""],[15013,0,"S"],[15015,0,"r"],[15017,1,""],[15018,0,"g"],[15021,0,"Concat(js_msg, FIX"],[15040,4,""],[15040,0,"D_ONE_BYTE_STRING"],[15058,1,""],[15058,0,"is"],[15061,3,""],[15061,0,"late, \"'\")"],[15095,3,""],[15095,0,"e"],[15099,0,"Exc"],[15103,0,"ption::Error(js_msg)"],[15134,5,""],[15141,1,""],[15142,1,""],[15144,0,"\n"],[15193,0,"; the user has no way of"],[15220,0,"// knowing which uv errno value maps to which err"],[15270,2,""],[15270,0,"r.\n  e"],[15316,5,""],[15323,2,""],[15338,3,""],[15338,0,"e"],[15365,0,"js_code);\n  e->Set("],[15385,0,"nv->"],[15390,0,"yscall_s"],[15403,0,"(), js_syscall"],[15419,1,""],[15426,0,"!js_"],[15434,8,""],[15434,0,".IsEm"],[15441,1,""],[15441,0,"y()"],[15445,2,""],[15450,3,""],[15450,0,"e"],[15477,0,"js_"],[15484,4,""],[15486,4,""],[15487,1,""],[15493,0,"!j"],[15496,1,""],[15496,0,"_dest.I"],[15504,12,""],[15504,0,"Em"],[15508,1,""],[15508,0,"y()"],[15512,2,""],[15517,3,""],[15517,0,"e"],[15529,2,""],[15529,0,"de"],[15532,4,""],[15532,0,"t"],[15544,14,""],[15544,0,"js_d"],[15549,5,""],[15550,3,""],[15551,2,""],[15552,11,""],[15553,4,""]],"_dtSpan":[463885,466063]},{"parents":[423],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[93528,0,"Block SIGPROF signals when sleeping in epoll_wait/kevent/etc.  Avoids the\n  // performance penalty of frequent EINTR wakeups when the profiler is running.\n  uv_loop_configure(uv_default_loop(), UV_LOOP_BLOCK_SIGNAL, SIGPROF);\n\n  // "]],"_dtSpan":[466063,466295]},{"parents":[424],"numChildren":1,"agent":59,"time":"1970-01-01T00:00:00Z","patches":[[466,0,"f defined HAVE_LTTNG\n#include \"node_lttng.h\"\n#endif\n\n#i"],[77317,0,"LTTNG\n  InitLTTNG(env, global);\n#endif\n\n#if defined HAVE_"]],"_dtSpan":[466295,466407]},{"parents":[425],"numChildren":1,"agent":174,"time":"1970-01-01T00:00:00Z","patches":[[40191,0,"Isolate* isolate, "],[40322,54,""],[40348,1,""],[40348,0,"i"],[40353,6,""],[40354,4,""],[40355,4,""],[40429,0,"Isolate* isolate, "],[40560,54,""],[40586,1,""],[40586,0,"i"],[40591,6,""],[40592,4,""],[40593,4,""],[41286,0,"env->isolate(), "],[41773,0,"env->isolate(), "],[43259,0,"env->isolate(), "],[44340,0,"env->isolate(), "]],"_dtSpan":[466407,466647]},{"parents":[426],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[665,1,""],[665,0,"-wrap.h\"\n#include \"req-"],[692,0,"-inl"],[35682,22,""],[35696,16,""],[35696,0,"for"],[35700,19,""],[35701,14,""],[35702,2,""],[35703,6,""],[35704,2,""],[35704,0,"o"],[35708,1,""],[35708,0,":"],[35710,14,""],[35710,0,"*"],[35712,7,""],[35712,0,"n"],[35714,6,""],[35714,0,"-"],[35716,2,""],[35730,4,""],[35730,0,"()"],[35733,1,""],[35766,1,""],[35767,3,""],[35768,0,"=="],[35771,0,"false)\n"],[35780,10,""],[35812,4,""],[36157,1,""],[36158,6,""],[36159,15,""],[36223,13,""],[36223,0,"for "],[36228,2,""],[36228,0,"auto w :"],[36237,0,"*"],[36265,69,""],[21551,1,""],[21551,0,":"],[92684,11,""],[92684,0,"const int err ="],[92747,0,";\n\n  // Make sure file descriptors 0-2 are valid before we start logging anything.\n  for (int fd = STDIN_FILENO; fd <= STDERR_FILENO; fd += 1) {\n    struct stat ignored;\n    if (fstat(fd, &ignored) == 0)\n      continue;\n    // Anything but EBADF means something is seriously wrong.  We don't\n    // have to special-case EINTR, fstat() is not interruptible.\n    if (errno != EBADF)\n      abort();\n    if (fd != open(\"/dev/null\", O_RDWR))\n      abort();\n  }\n\n  CHECK_EQ(err, 0"]],"_dtSpan":[466647,467449]},{"parents":[427],"numChildren":1,"agent":121,"time":"1970-01-01T00:00:00Z","patches":[[1992,0,"mise;\nusing v8::PromiseRejectMessage;\nusing v8::Pro"],[20061,0,"void PromiseRejectCallback(PromiseRejectMessage message) {\n  Local<Promise> promise = message.GetPromise();\n  Isolate* isolate = promise->GetIsolate();\n  Local<Value> value = message.GetValue();\n  Local<Integer> event = Integer::New(isolate, message.GetEvent());\n\n  Environment* env = Environment::GetCurrent(isolate);\n  Local<Function> callback = env->promise_reject_function();\n\n  if (value.IsEmpty())\n    value = Undefined(isolate);\n\n  Local<Value> args[] = { event, promise, value };\n  Local<Object> process = env->process_object();\n\n  callback->Call(process, ARRAY_SIZE(args), args);\n}\n\nvoid SetupPromises(const FunctionCallbackInfo<Value>& args) {\n  Environment* env = Environment::GetCurrent(args);\n  Isolate* isolate = env->isolate();\n\n  CHECK(args[0]->IsFunction());\n\n  isolate->SetPromiseRejectCallback(PromiseRejectCallback);\n  env->set_promise_reject_function(args[0].As<Function>());\n\n  env->process_object()->Delete(\n      FIXED_ONE_BYTE_STRING(args.GetIsolate(), \"_setupPromises\"));\n}\n\n"],[68166,0,"#define READONLY_DONT_ENUM_PROPERTY(obj, str, var)                            \\\n  do {                                                                        \\\n    obj->ForceSet(OneByteString(env->isolate(), str),                         \\\n                  var,                                                        \\\n                  static_cast<v8::PropertyAttribute>(v8::ReadOnly |           \\\n                                                     v8::DontEnum));          \\\n  } while (0)\n\n"],[70892,0,"  // process._promiseRejectEvent\n  Local<Object> promiseRejectEvent = Object::New(env->isolate());\n  READONLY_DONT_ENUM_PROPERTY(process,\n                              \"_promiseRejectEvent\",\n                              promiseRejectEvent);\n  READONLY_PROPERTY(promiseRejectEvent,\n                    \"unhandled\",\n                    Integer::New(env->isolate(),\n                                 v8::kPromiseRejectWithNoHandler));\n  READONLY_PROPERTY(promiseRejectEvent,\n                    \"handled\",\n                    Integer::New(env->isolate(),\n                                 v8::kPromiseHandlerAddedAfterReject));\n\n"],[76859,0,"Promises\", SetupPromises);\n  env->SetMethod(process, \"_setup"]],"_dtSpan":[467449,469681]},{"parents":[428],"numChildren":1,"agent":30,"time":"1970-01-01T00:00:00Z","patches":[[2331,0,"bool abort_on_uncaught_ex"],[2357,0,"epti"],[2363,0," = fal"],[2370,0,"e;\nsta"],[2377,0,"ic"],[2381,0,"onst c"],[86065,0,"abort-on-uncaught-exception\") == 0 ||\n               strcmp(arg, \"--abort_on_uncaught_exception\") == 0) {\n      abort_on_uncaught_exception = true;\n    } else if (strcmp(arg, \"--"],[107091,0,"    env->set_using_abort_on_uncaught_exc(abort_on_uncaught_exception);"]],"_dtSpan":[469681,469978]},{"parents":[429],"numChildren":1,"agent":121,"time":"1970-01-01T00:00:00Z","patches":[[97595,3,""],[97596,3,""],[97596,0,"ai"],[97599,2,""],[97599,0," th"],[97603,0,"ea"],[97606,1,""],[97606,0," "],[97608,1,""],[97609,1,""],[97609,0,"es"],[97612,3,""],[97613,1,""],[97613,0,"v_"],[97616,2,""],[97617,8,""],[97617,0,"fau"],[97621,1,""],[97622,2,""],[97622,0,"_lo"],[97626,2,""],[97627,23,""],[102630,0,"static Environment* CreateEnvironment(Isolate* isolate,"],[102686,0,"                                      Handle<Context> context,\n                                      NodeIn"],[102796,0,"nceDa"],[102802,0,"a* "],[102806,0,"nstan"],[102812,0,"e_data) {\n "],[102824,0,"return CreateEn"],[102840,0,"ir"],[102843,0,"nment(isolate,\n                           "],[102886,0,"nstance_"],[102895,0,"ata->event_loop(),\n                           context,\n  "],[102953,0,"                        instance_data->argc(),\n                           instance_data->argv(),\n                           instance_data->exec_argc(),\n                           instance_data->exec_argv());\n}\n\n\nstatic void "],[106197,1,""],[106197,0,"// E"],[106203,0,"ry"],[106206,6,""],[106206,0,"po"],[106211,23,""],[106212,4,""],[106215,10,""],[106216,0,"new"],[106220,1,""],[106220,0,"n"],[106222,0,"de i"],[106229,3,""],[106230,8,""],[106230,0,"n"],[106233,3,""],[106233,0,"s, "],[106238,4,""],[106238,0,"so"],[106241,2,""],[106242,7,""],[106242,0,"all"],[106246,26,""],[106246,0,"d"],[106248,1,""],[106248,0,"d"],[106250,3,""],[106252,3,""],[106253,5,""],[106253,0,"t"],[106255,2,""],[106255,0,"y"],[106257,2,""],[106257,0,"for"],[106261,5,""],[106262,3,""],[106262,0,"he"],[106265,26,""],[106265,0,"ma"],[106269,47,""],[106270,2,""],[106273,7,""],[106273,0,"n"],[106275,2,""],[106276,8,""],[106278,7,""],[106280,0,"s"],[106282,16,""],[106282,0,"an"],[106285,8,""],[106286,9,""],[106288,12,""],[106289,1,""],[106290,3,""],[106291,7,""],[106291,0,"ti"],[106294,1,""],[106295,3,""],[106296,11,""],[106296,0,"o"],[106298,5,""],[106299,1,""],[106300,0,"S"],[106302,2,""],[106302,0,"a"],[106304,7,""],[106304,0,"tN"],[106307,1,""],[106307,0,"d"],[106309,6,""],[106311,1,""],[106311,0,"s"],[106313,1,""],[106314,3,""],[106314,0,"nc"],[106318,0,"void* arg"],[106328,1,""],[106329,0,"{\n"],[106332,3,""],[106333,1,""],[106333,0,"N"],[106335,0,"deI"],[106341,1,""],[106341,0,"an"],[106344,0,"eD"],[106347,1,""],[106348,0,"a*"],[106352,2,""],[106353,10,""],[106353,0,"s"],[106355,3,""],[106356,4,""],[106357,1,""],[106358,9,""],[106359,4,""],[106359,0,"_"],[106361,11,""],[106361,0,"a"],[106363,6,""],[106364,5,""],[106365,0,"="],[106367,3,""],[106369,13,""],[106370,10,""],[106371,8,""],[106371,0,"i"],[106373,4,""],[106379,1,""],[106379,0,"N"],[106381,0,"deI"],[106387,1,""],[106387,0,"an"],[106390,1,""],[106390,0,"eDat"],[106395,2,""],[106401,26,""],[106404,18,""],[106406,15,""],[106406,0,"I"],[106408,2,""],[106409,11,""],[106409,0,"l"],[106411,18,""],[106412,8,""],[106413,1,""],[106413,0,"*"],[106416,20,""],[106417,2,""],[106418,1,""],[106419,13,""],[106419,0,"a"],[106421,9,""],[106422,33,""],[106423,0,"="],[106425,4,""],[106426,14,""],[106426,0,"s"],[106428,8,""],[106430,16,""],[106431,4,""],[106432,6,""],[106434,9,""],[106434,0,"N"],[106436,0,"w"],[106441,1,""],[106443,0,"  "],[106589,0,"if (insta"],[106599,0,"ce_data->is_main())\n    n"],[106638,1,""],[106638,0,"i"],[106645,7,""],[106669,5,""],[106712,5,""],[106751,5,""],[106803,5,""],[106854,14,""],[106860,15,""],[106861,12,""],[106862,6,""],[106863,2,""],[106871,1,""],[106872,7,""],[106872,0,"inst"],[106877,2,""],[106877,0,"n"],[106879,24,""],[106880,3,""],[106881,0,"d"],[106883,18,""],[106883,0,"t"],[106885,3,""],[106935,0,"if (instance_data->is_main())\n      "],[107093,0,"instance_data->"],[107123,0,"()"],[107229,0,"instance_data->"],[107259,0,"()"],[107716,0,"\n "],[107721,0,"int"],[107725,0,"exit_"],[107756,0,"if (instance_data->is_main())\n      instance_data->set_exit_code(exit_code);\n    "],[107909,0,"isolate, "],[107919,0,"ullptr);\n  isolate->Dispose();\n  is"],[107955,0,"late = nullptr;\n  if (instance_"],[107987,0,"ata->is_main())\n    nod"],[108019,0," = nullptr;\n}\n\nint Start(int argc"],[108054,0,"char** argv) {\n  PlatformInit();\n\n  co"],[108093,0,"st char* replace_invalid = sec"],[108124,0,"re_getenv(\"NODE_INVALID_UTF8\");\n\n  if (rep"],[108167,0,"ace_invalid == nul"],[108190,0,"\n    WRITE_UTF8_FLAGS |= String::REPLACE_INVALID_UTF8;\n\n  CHECK_GT(argc, 0)"],[108267,0,"\n  //"],[108273,0,"Hack"],[108278,0,"arou"],[108283,0,"d with the argv p"],[108301,0,"inter. Use"],[108312,0," for process.title = \"blah\".\n  argv = uv_s"],[108355,0,"tup"],[108359,0,"args(argc, argv);\n\n  // Th"],[108387,0," needs t"],[108396,0," run *before* V8::Initia"],[108421,0,"ize().  The const_c"],[108441,0,"s"],[108443,4,""],[108443,0," "],[108446,0," not\n  // o"],[108458,0,"ti"],[108461,0,"nal, in ca"],[108473,0," you're wondering.\n  int exec_argc;\n  const char** exec_argv;\n  Init(&argc, const_cast<const char**>"],[108574,0,"argv), &exec_argc, &exec_argv"],[108606,0,"\n#if HAVE_OPENSSL\n "],[108626,0,"//"],[108629,0,"V8 on Windows does"],[108648,0,"'t have a go"],[108662,0," source of "],[108674,1,""],[108674,0,"ntropy. Seed "],[108688,0,"t from\n  // OpenSSL'"],[108709,0," po"],[108714,0,".\n  V8::SetEntropySource(crypto::EntropySource);\n#endif\n\n  V8::InitializePlatform(new Pl"],[108804,0,"form(4));\n  V8::Initialize();\n\n  int exit_cod"],[108853,0,"1;\n  {\n    NodeI"],[108870,0,"stanceData instance_data(NodeInstanceType::MAIN,\n                                   uv_defa"],[108963,0,"t_"],[108966,0,"oo"],[108969,0,"(),\n                                   argc,\n                                   const_cast<const char**>(argv),\n                                   exec_argc,\n                                   exec_argv,\n                                   use_debug_agent);\n    S"],[109232,0,"a"],[109234,0,"tNodeInstance(&instance_data)"],[109267,0,"  exit_code = instance_data.exit_code();\n  }\n  "],[109385,0,"exit_"]],"_dtSpan":[469978,473022]},{"parents":[430],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[3136,120,""],[107960,31,""],[107961,3,""],[107962,13,""],[107963,3,""],[107964,19,""],[107965,89,""]],"_dtSpan":[473022,473300]},{"parents":[431],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[88568,0,"HandleScope scope(node_isolate);\n    "],[100730,2,""],[100730,0,"Ha"],[100733,1,""],[100733,0,"dl"],[100736,4,""],[100742,2,""],[100742,0,"ha"],[100745,1,""],[100745,0,"dl"],[100748,2,""],[100760,1,""],[100760,0,"is"],[100763,1,""],[100763,0,"la"],[100767,2,""],[100774,2,""],[100774,0,"Co"],[100777,2,""],[100777,0,"t"],[100779,0,"xt::"],[100789,2,""],[100789,0,"co"],[100792,2,""],[100792,0,"t"],[100794,0,"xt"],[100808,2,""],[100808,0,"c"],[100810,2,""],[100810,0,"n"],[100813,0,"xt"]],"_dtSpan":[473300,473393]},{"parents":[432],"numChildren":1,"agent":4,"time":"1970-01-01T00:00:00Z","patches":[[2422,0,"unsigned int preload_module_count = 0;\nstatic const char** preload_modules = nullptr;\nstatic "],[74147,0,"if (preload_module_count) {\n    CHECK(preload_modules);\n    Local<Array> array = Array::New(env->isolate());\n    for (unsigned int i = 0; i < preload_module_count; ++i) {\n      Local<String> module = String::NewFromUtf8(env->isolate(),\n                                                 preload_modules[i]);\n      array->Set(i, module);\n    }\n    READONLY_PROPERTY(process,\n                      \"_preload_modules\",\n                      array);\n  }\n\n  "],[81855,0,"r, --require        module to preload (option can be repeated)\\n\"\n         \"  -"],[84323,0,"  const char** local_preload_modules = new const char*[nargs];\n"],[84523,0,"  local_preload_modules[i] = nullptr;\n  "],[86304,0,"require\") == 0 ||\n               strcmp(arg, \"-r\") == 0) {\n      const char* module = argv[index + 1];\n      if (module == nullptr) {\n        fprintf(stderr, \"%s: %s requires an argument\\n\", argv[0], arg);\n        exit(9);\n      }\n      args_consumed += 1;\n      local_preload_modules[preload_module_count++] = module;\n    } else if (strcmp(arg, \"--"],[88169,0,"\n  // Copy the preload_modules from the local array to an appropriately sized\n  // global array.\n  if (preload_module_count > 0) {\n    CHECK(!preload_modules);\n    preload_modules = new const char*[preload_module_count];\n    memcpy(preload_modules, local_preload_modules,\n           preload_module_count * sizeof(*preload_modules));\n  }\n  delete[] local_preload_modules;\n"]],"_dtSpan":[473393,474839]},{"parents":[433],"numChildren":1,"agent":30,"time":"1970-01-01T00:00:00Z","patches":[[2422,93,""],[74050,112,""],[74051,61,""],[74052,96,""],[74054,182,""],[81293,51,""],[81294,28,""],[83673,63,""],[83820,40,""],[85530,3,""],[85535,3,""],[85538,2,""],[85539,236,""],[85540,1,""],[85546,16,""],[85552,88,""],[87092,371,""]],"_dtSpan":[474839,476285]},{"parents":[434],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[12099,1,""],[12178,1,""],[12179,13,""],[12184,1,""],[12206,1,""],[12221,0,"Local<String> path_string;\n  "],[12258,0," != nullptr"],[12277,1,""],[12277,0,"// FIXME(bno"],[12290,1,""],[12290,0,"rdhuis) It's question"],[12312,0,"ble to interpret the fi"],[12336,1,""],[12336,0,"e path as UTF-8.\n    path_string = "],[12377,0,"::NewFromUtf8(env-"],[12396,0,"isolate(), path);\n "],[12416,2,""],[12416,0,"}\n\n  if (path_stri"],[12435,0,"g.I"],[12439,1,""],[12439,0,"Empty()"],[12448,1,""],[12448,0,"="],[12450,0,"false)"],[12457,0,"{\n"],[12463,0,"cons"],[12468,0,"="],[12489,1,""],[12537,1,""],[12540,13,""],[12545,1,""],[12547,7,""],[12548,1,""],[12567,1,""],[12569,1,""],[12569,0,"path_s"],[12580,35,""],[12587,2,""],[12588,12,""],[12591,1,""],[12593,4,""],[12594,4,""],[12613,1,""],[12660,2,""],[12662,31,""],[12663,7,""],[12666,2,""],[12691,1,""],[12694,4,""],[12870,0,"_string.IsEmpty()"],[12888,1,""],[12889,0,"="],[12891,2,""],[12891,0,"fa"],[12894,4,""],[12894,0,"se"],[12933,1,""],[12933,0,"pa"],[12936,0,"h_st"],[12944,35,""],[46321,5,""],[46321,0,"Numb"],[46348,5,""],[46348,0,"Numb"],[46359,12,""],[46418,5,""],[46418,0,"Numb"],[46444,5,""],[46444,0,"Numb"],[46455,12,""],[82314,127,""]],"_dtSpan":[476285,476915]},{"parents":[435],"numChildren":1,"agent":4,"time":"1970-01-01T00:00:00Z","patches":[[2422,0,"unsigned int preload_module_count = 0;\nstatic const char** preload_modules = nullptr;\nstatic "],[74164,0,"if (preload_module_count) {\n    CHECK(preload_modules);\n    Local<Array> array = Array::New(env->isolate());\n    for (unsigned int i = 0; i < preload_module_count; ++i) {\n      Local<String> module = String::NewFromUtf8(env->isolate(),\n                                                 preload_modules[i]);\n      array->Set(i, module);\n    }\n    READONLY_PROPERTY(process,\n                      \"_preload_modules\",\n                      array);\n  }\n\n  "],[81872,0,"r, --require        module to preload (option can be repeated)\\n\"\n         \"  -"],[84213,0,"  const char** local_preload_modules = new const char*[nargs];\n"],[84413,0,"  local_preload_modules[i] = nullptr;\n  "],[86194,0,"require\") == 0 ||\n               strcmp(arg, \"-r\") == 0) {\n      const char* module = argv[index + 1];\n      if (module == nullptr) {\n        fprintf(stderr, \"%s: %s requires an argument\\n\", argv[0], arg);\n        exit(9);\n      }\n      args_consumed += 1;\n      local_preload_modules[preload_module_count++] = module;\n    } else if (strcmp(arg, \"--"],[88059,0,"\n  // Copy the preload_modules from the local array to an appropriately sized\n  // global array.\n  if (preload_module_count > 0) {\n    CHECK(!preload_modules);\n    preload_modules = new const char*[preload_module_count];\n    memcpy(preload_modules, local_preload_modules,\n           preload_module_count * sizeof(*preload_modules));\n  }\n  delete[] local_preload_modules;\n"]],"_dtSpan":[476915,478361]},{"parents":[436],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[77697,0,"#ifdef __FreeBSD__\n  // FreeBSD has a nasty bug, see RegisterSignalHandler for details\n  struct sigaction sa;\n  memset(&sa, 0, sizeof(sa));\n"],[77839,0,"sa.sa_handle"],[77852,0," = SIG_DFL;\n  CHECK_EQ(sigaction(signo, &sa, nullptr), 0);\n#endif\n  r"],[90908,0,"#ifndef"],[90916,0,"__FreeBSD__\n  // FreeBSD"],[90941,0,"ha"],[90944,0," "],[90946,0," nasty bug with SA_RESETHAND reseting the SA_SIGINFO, that is\n  // in turn set for a libthr wrapper. This leads to a crash.\n  // Work around the issue by manually setting SIG_DFL in the signal handler\n  sa"],[91197,0,"#endif\n"]],"_dtSpan":[478361,478828]},{"parents":[437],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[57427,13,""],[57840,7,""],[57841,5,""],[57842,1,""],[58169,7,""],[58170,6,""],[59190,17,""],[59192,60,""],[59193,1,""],[59194,38,""],[59400,7,""],[59401,6,""],[60127,13,""],[61020,7,""],[61021,5,""],[61022,1,""],[61753,7,""],[61754,6,""],[64902,7,""],[64903,5,""],[64904,1,""],[65207,13,""],[65665,7,""],[65666,5,""],[65667,1,""],[66119,7,""],[66120,6,""],[68878,0,",\n                       env->as_external()"],[73137,9,""],[73138,3,""],[73142,1,""],[73142,0,"a"],[73144,3,""],[73144,0,"_ex"],[73149,0,"rnal"],[73156,1,""],[73467,0,"                 "],[73519,0,"                 "],[73563,0,",\n                       env->as_external()"],[75543,0,",\n                       env->as_external()"],[57380,89,""],[57494,1,""],[57494,0,"i"],[57496,4,""],[57496,0,"fo.GetI"],[57708,1,""],[57709,3,""],[57710,49,""],[57711,25,""],[57712,11,""],[57730,0,"info.G"],[57737,5,""],[57737,0,"tI"],[57951,5,""],[57951,0,"Is"],[57954,2,""],[57954,0,"lat"],[57958,2,""],[57960,0,"isolat"],[57967,2,""],[57970,3,""],[57971,1,""],[57971,0,"nf"],[57974,7,""],[57974,0,"."],[57976,6,""],[57977,1,""],[57978,22,""],[57978,0,"I"],[57980,1,""],[57981,11,""],[57986,1,""],[58028,5,""],[58035,2,""],[58152,5,""],[58159,2,""],[58873,5,""],[58880,2,""],[59109,52,""],[59110,37,""],[59149,1,""],[59149,0,"i"],[59151,4,""],[59151,0,"fo.GetI"],[59201,1,""],[59201,0,"i"],[59203,4,""],[59203,0,"fo.GetI"],[59755,22,""],[59756,5,""],[59758,62,""],[59850,1,""],[59850,0,"i"],[59852,4,""],[59852,0,"fo.GetI"],[60560,52,""],[60561,1,""],[60562,11,""],[60563,25,""],[60618,0,"info.G"],[60625,5,""],[60625,0,"tI"],[61210,5,""],[61210,0,"Is"],[61213,4,""],[61213,0,"la"],[61216,2,""],[61217,4,""],[61217,0,"*"],[61219,3,""],[61220,1,""],[61220,0,"s"],[61222,9,""],[61222,0,"la"],[61225,4,""],[61226,10,""],[61227,0,"="],[61229,2,""],[61229,0,"i"],[61231,11,""],[61231,0,"f"],[61233,1,""],[61233,0,".G"],[61236,7,""],[61236,0,"tI"],[61245,1,""],[61353,5,""],[61360,2,""],[61572,5,""],[61579,2,""],[61954,5,""],[61961,2,""],[62431,5,""],[62438,2,""],[64280,18,""],[64281,1,""],[64282,24,""],[64286,46,""],[64494,52,""],[64497,3,""],[64498,14,""],[64499,20,""],[65271,47,""]],"_dtSpan":[478828,480230]},{"parents":[438],"numChildren":1,"agent":174,"time":"1970-01-01T00:00:00Z","patches":[[86637,0,"if (strcmp(arg, \"--expose-internals\") == 0 ||\n               strcmp(arg, \"--expose_internals\") == 0) {\n      // consumed in js\n    } else "]],"_dtSpan":[480230,480368]},{"parents":[439],"numChildren":1,"agent":4,"time":"1970-01-01T00:00:00Z","patches":[[73661,0,"\n    delete[] preload_modules;\n    preload_modules = nullptr;\n    preload_module_count = 0;\n"]],"_dtSpan":[480368,480460]},{"parents":[440],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[179,29,""],[180,1,""],[740,0,"libplatform/libplatform.h\"\n#include \""],[3235,0,"static v8::Platform* default_platform;\n"],[108410,0,"v8::platfor"],[108422,0,"::PumpMessageLo"],[108438,0,"p(default_platfo"],[108455,0,"m, isolat"],[108465,0,");\n     "],[108474,0,"more "],[108521,0,"\n"],[108557,0,"v8::platform::PumpMessageLoop(default_platform, isolate);\n        "],[109838,0,"const int thread_pool_size = 4;\n  default_platform = v8::platform::CreateDefaultPlatform(thread_pool_size);\n  "],[109971,1,""],[109971,0,"d"],[109973,3,""],[109973,0,"fault_p"],[109987,3,""],[110514,0," default_platform;\n  default_platform = nullptr;\n\n  delete"]],"_dtSpan":[480460,480880]},{"parents":[441],"numChildren":1,"agent":14,"time":"1970-01-01T00:00:00Z","patches":[[81699,66,""]],"_dtSpan":[480880,480946]},{"parents":[442],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[98879,0,"__arm__)\n  // See https://github.com/iojs/io.js/issues/1376\n  // and https://code.google.com/p/v8/issues/detail?id=4019\n  // TODO(bnoordhuis): Remove test/parallel/test-arm-math-exp-regress-1376.js\n  // and this workaround when v8:4019 has been fixed and the patch back-ported.\n  V8::SetFlagsFromString(\"--nofast_math\", sizeof(\"--nofast_math\") - 1);\n#endif\n\n#if defined("],[98881,3,""],[98881,0,"ARM_ARCH_6__) || \\\n    defined(__ARM_ARCH_6J__) || \\\n    defined(__ARM_ARCH_6K__) || \\\n    defined(__ARM_ARCH_6M__) || \\\n    defined(__ARM_ARCH_6T2__) || \\\n    defined(__ARM_ARCH_6ZK__) || \\\n    defined(__ARM_ARCH_6Z"]],"_dtSpan":[480946,481535]},{"parents":[443],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[2080,0,"ealHandleScope;\nusing v8::S"],[108928,0,"{\n      SealHandleScope seal(isolate);\n      "],[108988,0,"  "],[109001,0,"  "],[109067,0,"  "],[109123,0,"  "],[109154,0,"  "],[109222,0,"  "],[109254,0,"  "],[109332,0,"  "],[109385,0,"  "],[109436,0,"  "],[109499,0,"  "],[109520,0,"  "],[109528,0,"  "],[109554,0,"    }\n"]],"_dtSpan":[481535,481639]},{"parents":[444],"numChildren":1,"agent":44,"time":"1970-01-01T00:00:00Z","patches":[[42028,0,"GetEUid(const FunctionCallbackInfo<Value>& args) {\n  // uid_t is an uint32_t on all supported platforms.\n  args.GetReturnValue().Set(static_cast<uint32_t>(geteuid()));\n}\n\n\nstatic void GetEGid(const FunctionCallbackInfo<Value>& args) {\n  // gid_t is an uint32_t on all supported platforms.\n  args.GetReturnValue().Set(static_cast<uint32_t>(getegid()));\n}\n\n\nstatic void "],[42886,0,"EGid(const FunctionCallbackInfo<Value>& args) {\n  Environment* env = Environment::GetCurrent(args);\n\n  if (!args[0]->Is"],[43007,0,"nt32() && !args[0]->IsString()) {\n    return env->ThrowTypeError(\"setegid argument must be a number or string\");\n  }\n\n  gid_t gid = gid_by_name(env->isolate(), args[0]);\n\n  if (gid == gid_not_found) {\n    return env->ThrowError(\"setegid group id does not exist\");\n  }\n\n  if (setegi"],[43290,0,"gid)) {\n    return env->ThrowErrnoException(errno, \"setegid\");\n  }\n}\n\n\nstatic void SetUid("],[43859,0,"SetEUid(const FunctionCallbackInfo<Value>& args) {\n  Environment* env = Environment::GetCurrent(args);\n\n  if (!args[0]->IsUint32() && !args[0]->IsString()) {\n    return env->ThrowTypeError(\"seteuid argument must be a number or string\");\n  }\n\n  uid_t uid = uid_by_name(env->isolate(), args[0]);\n\n  if (uid == uid_not_found) {\n    return env->ThrowError(\"seteuid user id does not exist\");\n  }\n\n  if (seteuid(uid)) {\n    return env->ThrowErrnoException(errno, \"seteuid\");\n  }\n}\n\n\nstatic void "],[77045,0,"geteuid\", GetEUid);\n  env->SetMethod(process, \""],[77110,0,"  env->SetMethod(process, \"seteuid\", SetEUid);\n\n  env->SetMethod(process, \"setgid\", SetGid);"],[77233,0,"e"],[77243,0,"E"],[77295,0,"  env->SetMethod(process, \"getegid\", GetEGid);\n"]],"_dtSpan":[481639,483174]},{"parents":[445],"numChildren":1,"agent":51,"time":"1970-01-01T00:00:00Z","patches":[[100691,1,""],[100691,0,"n"],[100693,0,"de"]],"_dtSpan":[483174,483178]},{"parents":[446],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[2108,0,"ackF"],[2113,0,"ame;\nus"],[2123,0," v8::StackTrace"],[2150,0,"String;\nusing v8::"],[2458,0,"bool trace_syn"],[2473,0,"_i"],[2476,0," = false;\nstatic co"],[75643,0,"// --trace-sync-io\n  if (trace_sync_io) {\n    READONLY_PROPERTY(process, \"traceSyncIO\", True(env->isolate()));\n    // Don't env->set_trace_sync_io(true) because it will be enabled\n    // after LoadEnvironment() has run.\n  }\n\n  "],[83515,0,"trace-sync-io      show stack trace when use of sync IO\\n\"\n         \"                       is detected after the first tick\\n\"\n         \"  --"],[88220,0,"race-sync-io\") == 0) {\n      trace_sync_io = true;\n    } else if (strcmp(arg, \"--t"],[110905,0,"env->set_trace_sync_io(trace_sync_io);\n\n    "],[111676,0,"env->set_trace_sync_io(false);\n\n    "]],"_dtSpan":[483178,483788]},{"parents":[447],"numChildren":1,"agent":44,"time":"1970-01-01T00:00:00Z","patches":[[168,0,"options.h\"\n#include \"node_"],[2283,362,""],[2285,36,""],[2298,70,""],[2505,36,""],[2508,4,""],[2508,0,"cli"],[2512,1,""],[2513,7,""],[2513,0,"p"],[2515,4,""],[2515,0,"i"],[2517,5,""],[2518,8,""],[2518,0,"s"],[2520,3,""],[2520,0,"NodeOp"],[2528,3,""],[2531,1,""],[2532,10,""],[2532,0,"no"],[2535,3,""],[2535,0,"e"],[2537,10,""],[2537,0,"o"],[2540,7,""],[2541,1,""],[2541,0,"ons;"],[28313,0,"de"],[28316,0,"options.no_"],[28539,0,"de"],[28542,0,"options.no_"],[65308,0,"no"],[65312,0,"_options.de"],[65510,0,"node_options."],[73859,0,"node_options."],[74006,0,"\n                                      "],[74046,0,"   nod"],[74053,0,"_options.e"],[74105,0,"node_o"],[74112,0,"tions.p"],[74235,0,"node_options."],[74341,0,"node_options."],[74388,0,"node_o"],[74395,0,"tions.p"],[74505,0,"node_o"],[74512,0,"tions.p"],[74596,0,"\n          "],[74623,10,""],[74633,29,""],[74633,0,"node_options."],[74819,0,"node_o"],[74826,0,"tions.p"],[74853,0,"node_options."],[74897,0,"node_o"],[74904,0,"tions.p"],[74971,0,"de_options.no"],[75107,0,"node_op"],[75115,0,"ions.t"],[75251,0,"node_options."],[75391,0,"node_op"],[75399,0,"ions.t"],[81410,3823,""],[81411,129,""],[81412,3,""],[81413,50,""],[81414,4,""],[81415,135,""],[81416,940,""],[81417,48,""],[81418,22,""],[81419,14,""],[81420,64,""],[81421,90,""],[81422,3,""],[81423,103,""],[81425,114,""],[81426,66,""],[81429,22,""],[81430,68,""],[81432,159,""],[81434,7,""],[81435,47,""],[81436,1336,""],[81438,161,""],[81439,702,""],[81440,11,""],[81441,6,""],[81442,21,""],[81444,26,""],[81445,19,""],[81446,86,""],[81447,3,""],[81448,2,""],[81449,3,""],[81450,11,""],[81451,55,""],[81876,0,"no"],[81880,0,"_options.de"],[81900,0,"\n                                                 "],[82012,0,"\n           "],[82065,0,"\n      "],[82073,0,"     node_options."],[93400,0,"node_options."],[93478,0,"  no_deprecation = node_options.no_deprecation;"],[94886,0,"node_options."],[95141,0,"node_options."],[102280,0,"\n          node_options."],[102445,0,"no"],[102449,0,"_options.de"],[102534,0,"node_op"],[102542,0,"ions.t"],[104771,0,"node_options."],[168,26,""],[2272,0,"print_eval = false;\nstatic bool force_repl = false;\nstatic bool trace_deprecation = false;\nstatic bool throw_deprecation = false;\nstatic bool abort_on_uncaught_exception = false;\nstatic bool trace_sync_io = false;\nstatic const char* eval_string = nullptr;\nstatic unsigned int preload_module_count = 0;\nstatic const char** preload_modules = nullptr;\nstatic bool use_debug_agent = false;\nstatic bool debug_wait_connect = false;\nstatic int debug_port = 5858;\nstatic bool "],[2947,0,"#if defined(NODE_HAVE_I18N_SUPPORT)\n"],[2986,3,""],[2986,0,"Path"],[2991,0,"t"],[2993,1,""],[2993,0," ICU da"],[3001,0,"a (for "],[3009,1,""],[3009,0,"18n / I"],[3017,1,""],[3017,0,"tl)"],[3021,6,""],[3021,0,"sta"],[3026,0,"c c"],[3032,0,"t"],[3034,4,""],[3034,0,"char* icu"],[3044,2,""],[3044,0,"da"],[3047,0,"a_d"],[3051,1,""],[3051,0,"r = "],[3056,1,""],[3056,0,"ullptr"],[3064,0,"#endif\n"],[28838,2,""],[28839,11,""],[29051,2,""],[29052,11,""],[65807,2,""],[65809,11,""],[65996,13,""],[74332,13,""],[74466,29,""],[74467,16,""],[74468,10,""],[74510,6,""],[74511,7,""],[74627,13,""],[74720,13,""],[74754,6,""],[74755,7,""],[74858,6,""],[74859,7,""],[74936,11,""],[74962,13,""],[74962,0,"                                       "],[75174,6,""],[75175,7,""],[75195,13,""],[75226,6,""],[75227,7,""],[75285,13,""],[75410,7,""],[75411,6,""],[75541,13,""],[75668,7,""],[75669,6,""],[81699,0,"static void PrintHelp();\n\nstatic bool ParseDebugOpt(const char* arg) {\n  const char* port = nullptr;\n\n  if (!strcmp(arg, \"--debug\")) {\n    use_debug_agent = true;\n  } else if (!strncmp(arg, \"--debug=\", sizeof(\"--debug=\") - 1)) {\n    use_debug_agent = true;\n    port = arg + sizeof(\"--debug=\") - 1;\n  } else if (!strcmp(arg, \"--debug-brk\")) {\n    use_debug_agent = true;\n    debug_wait_connect = true;\n  } else if (!strncmp(arg, \"--debug-brk=\", sizeof(\"--debug-brk=\") - 1)) {\n    use_debug_agent = true;\n    debug_wait_connect = true;\n    port = arg + sizeof(\"--debug-brk=\") - 1;\n  } else if (!strncmp(arg, \"--debug-port=\", sizeof(\"--debug-port=\") - 1)) {\n    port = arg + sizeof(\"--debug-port=\") - 1;\n  } else {\n    return false;\n  }\n\n  if (port != nullptr) {\n    debug_port = atoi(port);\n    if (debug_port < 1024 || debug_port > 65535) {\n      fprintf(stderr, \"Debug port must be in range 1024 to 65535.\\n\");\n      PrintHelp();\n      exit(12);\n    }\n  }\n\n  return true;\n}\n\nstatic void PrintHelp() {\n  printf(\"Usage: iojs [options] [ -e script | script.js ] [arguments] \\n\"\n         \"       iojs debug script.js [arguments] \\n\"\n         \"\\n\"\n         \"Options:\\n\"\n         \"  -v, --version        print io.js version\\n\"\n         \"  -e, --eval script    evaluate script\\n\"\n         \"  -p, --print          evaluate script and print result\\n\"\n         \"  -i, --interactive    always enter the REPL even if stdin\\n\"\n         \"                       does not appear to be a terminal\\n\"\n         \"  -r, --require        module to preload (option can be repeated)\\n\"\n         \"  --no-deprecation     silence deprecation warnings\\n\"\n         \"  --throw-deprecation  throw an exception anytime a deprecated \"\n         \"function is used\\n\"\n         \"  --trace-deprecation  show stack traces on deprecations\\n\"\n         \"  --trace-sync-io      show stack trace when use of sync IO\\n\"\n         \"                       is detected after the first tick\\n\"\n         \"  --v8-options         print v8 command line options\\n\"\n#if defined(NODE_HAVE_I18N_SUPPORT)\n         \"  --icu-data-dir=dir   set ICU data load path to dir\\n\"\n         \"                         (overrides NODE_ICU_DATA)\\n\"\n#if !defined(NODE_HAVE_SMALL_ICU)\n         \"                       Note: linked-in ICU data is\\n\"\n         \"                       present.\\n\"\n#endif\n#endif\n         \"\\n\"\n         \"Environment variables:\\n\"\n#ifdef _WIN32\n         \"NODE_PATH              ';'-separated list of directories\\n\"\n#else\n         \"NODE_PATH              ':'-separated list of directories\\n\"\n#endif\n         \"                       prefixed to the module search path.\\n\"\n         \"NODE_DISABLE_COLORS    Set to 1 to disable colors in the REPL\\n\"\n#if defined(NODE_HAVE_I18N_SUPPORT)\n         \"NODE_ICU_DATA          Data path for ICU (Intl object) data\\n\"\n#if !defined(NODE_HAVE_SMALL_ICU)\n         \"                       (will extend linked-in data)\\n\"\n#endif\n#endif\n         \"\\n\"\n         \"Documentation can be found at https://iojs.org/\\n\");\n}\n\n\n// Parse command line arguments.\n//\n// argv is modified in place. exec_argv and v8_argv are out arguments that\n// ParseArgs() allocates memory for and stores a pointer to the output\n// vector in.  The caller should free them with delete[].\n//\n// On exit:\n//\n//  * argv contains the arguments with node and V8 options filtered out.\n//  * exec_argv contains both node and V8 options and nothing else.\n//  * v8_argv contains argv[0] plus any V8 options\nstatic void ParseArgs(int* argc,\n                      const char** argv,\n                      int* exec_argc,\n                      const char*** exec_argv,\n                      int* v8_argc,\n                      const char*** v8_argv) {\n  const unsigned int nargs = static_cast<unsigned int>(*argc);\n  const char** new_exec_argv = new const char*[nargs];\n  const char** new_v8_argv = new const char*[nargs];\n  const char** new_argv = new const char*[nargs];\n  const char** local_preload_modules = new const char*[nargs];\n\n  for (unsigned int i = 0; i < nargs; ++i) {\n    new_exec_argv[i] = nullptr;\n    new_v8_argv[i] = nullptr;\n    new_argv[i] = nullptr;\n    local_preload_modules[i] = nullptr;\n  }\n\n  // exec_argv starts with the first option, the other two start with argv[0].\n  unsigned int new_exec_argc = 0;\n  unsigned int new_v8_argc = 1;\n  unsigned int new_argc = 1;\n  new_v8_argv[0] = argv[0];\n  new_argv[0] = argv[0];\n\n  unsigned int index = 1;\n  while (index < nargs && argv[index][0] == '-') {\n    const char* const arg = argv[index];\n    unsigned int args_consumed = 1;\n\n    if (ParseDebugOpt(arg)) {\n      // Done, consumed by ParseDebugOpt().\n    } else if (strcmp(arg, \"--version\") == 0 || strcmp(arg, \"-v\") == 0) {\n      printf(\"%s\\n\", NODE_VERSION);\n      exit(0);\n    } else if (strcmp(arg, \"--help\") == 0 || strcmp(arg, \"-h\") == 0) {\n      PrintHelp();\n      exit(0);\n    } else if (strcmp(arg, \"--eval\") == 0 ||\n               strcmp(arg, \"-e\") == 0 ||\n               strcmp(arg, \"--print\") == 0 ||\n               strcmp(arg, \"-pe\") == 0 ||\n               strcmp(arg, \"-p\") == 0) {\n      bool is_eval = strchr(arg, 'e') != nullptr;\n      bool is_print = strchr(arg, 'p') != nullptr;\n      print_eval = print_eval || is_print;\n      // --eval, -e and -pe always require an argument.\n      if (is_eval == true) {\n        args_consumed += 1;\n        eval_string = argv[index + 1];\n        if (eval_string == nullptr) {\n          fprintf(stderr, \"%s: %s requires an argument\\n\", argv[0], arg);\n          exit(9);\n        }\n      } else if ((index + 1 < nargs) &&\n                 argv[index + 1] != nullptr &&\n                 argv[index + 1][0] != '-') {\n        args_consumed += 1;\n        eval_string = argv[index + 1];\n        if (strncmp(eval_string, \"\\\\-\", 2) == 0) {\n          // Starts with \"\\\\-\": escaped expression, drop the backslash.\n          eval_string += 1;\n        }\n      }\n    } else if (strcmp(arg, \"--require\") == 0 ||"],[87611,0,"               strcmp(arg, \"-r\") == 0) {\n      const char* module = argv[index + 1];\n      if (module == nullptr) {\n        fprintf(stderr, \"%s: %s requires an argument\\n\", argv[0], arg);\n        exit(9);\n      }\n      args_consumed += 1;\n      local_preload_modules[preload_module_count++] = module;\n    } else if (strcmp(arg, \"--interactive\") == 0 || strcmp(arg, \"-i\") == 0) {\n      force_repl = true;\n    } else if (strcmp(arg, \"--no-deprecation\") == 0) {\n      no_deprecation = true;\n    } else if (strcmp(arg, \"--trace-deprecation\") == 0) {\n      trace_deprecation = true;\n    } else if (strcmp(arg, \"--trace-sync-io\") == 0) {\n      trace_sync_io = true;\n    } else if (strcmp(arg, \"--throw-deprecation\") == 0) {\n      throw_deprecation = true;\n    } else if (strcmp(arg, \"--abort-on-uncaught-exception\") == 0 ||\n               strcmp(arg, \"--abort_on_uncaught_exception\") == 0) {\n      abort_on_uncaught_exception = true;\n    } else if (strcmp(arg, \"--v8-options\") == 0) {\n      new_v8_argv[new_v8_argc] = \"--help\";\n      new_v8_argc += 1;\n#if defined(NODE_HAVE_I18N_SUPPORT)\n    } else if (strncmp(arg, \"--icu-data-dir=\", 15) == 0) {\n      icu_data_dir = arg + 15;\n#endif\n    } else if (strcmp(arg, \"--expose-internals\") == 0 ||\n               strcmp(arg, \"--expose_internals\") == 0) {\n      // consumed in js\n    } else {\n      "],[88950,0,"V8 option.  Pass through as-is.\n      new_v8_argv[new_v8_argc] = arg;\n      new_v8_argc += 1;\n    }\n\n    memcpy(new_exec_argv + new_exec_argc,\n           argv + index,\n           args_consumed * sizeof(*argv));\n\n    new_exec_argc += args_consumed;\n    index += args_consumed;\n  }\n\n  // Copy remaining arguments.\n  const unsigned int args_left = nargs - index;\n  memcpy(new_argv + new_argc, argv + index, args_left * sizeof(*argv));\n  new_argc += args_left;\n\n  *exec_argc = new_exec_argc;\n  *exec_argv = new_exec_argv;\n  *v8_argc = new_v8_argc;\n  *v8_argv = new_v8_argv;\n\n  // Copy new_argv over argv and update argc.\n  memcpy(argv, new_argv, new_argc * sizeof(*argv));\n  delete[] new_argv;\n  *argc = static_cast<int>(new_argc);\n\n  // Copy the preload_modules from the local array to an appropriately sized\n  // global array.\n  if (preload_module_count > 0) {\n    "],[89814,0,"HECK(!prelo"],[89826,0,"d_modu"],[89833,0,"es);\n    preload_modu"],[89856,0,"s = new const char*[preloa"],[89883,0,"_module_count];\n   "],[89903,0,"memcpy(preload_modules, local_preload_modules,\n           preload_module_count * sizeo"],[89990,0,"(*p"],[89994,0,"el"],[89997,0,"ad_"],[90001,0,"odules));\n "],[90013,0,"}\n  delete[] local_preload_modules;\n}\n\n\n// Called from "],[90493,2,""],[90495,11,""],[90504,13,""],[90505,37,""],[90566,10,""],[90567,2,""],[90607,7,""],[90608,18,""],[101917,13,""],[101982,47,""],[103343,13,""],[103585,13,""],[110711,24,""],[110852,2,""],[110854,11,""],[110928,7,""],[110929,6,""],[113152,13,""]],"_dtSpan":[483788,502904]},{"parents":[448],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[109881,0,"  LoadAsyncWrapperInfo(env);\n"]],"_dtSpan":[502904,502933]},{"parents":[449],"numChildren":1,"agent":25,"time":"1970-01-01T00:00:00Z","patches":[[75643,227,""],[2493,0,"bool track_heap_objects = false;\nstati"],[2532,0," c"],[82710,0," "],[82767,0," "],[82820,0," "],[82890,0," "],[82963,0," "],[83033,0," "],[83113,0," "],[83179,0," "],[83285,0," "],[83356,0," "],[83430,0," "],[83481,0,"track-heap-objects  track heap object allocations for heap \"\n         \"snapshots\\n\"\n         \"  --"],[83598,0," "],[83701,0," "],[83770,0," "],[83867,0," "],[83932,0," "],[84056,0," "],[84133,0," "],[84211,0," "],[84284,0," "],[84396,0," "],[84504,0," "],[88235,0,"rack-"],[88241,0,"eap-objects\") == 0) {\n      t"],[88271,0,"ack_heap_"],[88281,0,"bjects = true;\n    } else if (strcmp(arg, \"--thro"],[110200,0,"if (track_heap_objects) {\n    isolate->GetHeapProfiler()->StartTrackingHeapObjects(true);\n  }\n\n"]],"_dtSpan":[502933,503507]},{"parents":[450],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[23490,125,""],[179,0,"#include \"node_internals.h\"\n"],[3449,0,"bool using_old_buffer = false;\n\n"],[4163,12,""],[4164,1,""],[4165,16,""],[4172,11,""],[4173,6,""],[4174,9,""],[4174,0,"llo"],[4178,4,""],[4178,0,"("],[4185,16,""],[4187,9,""],[4187,0,"1"],[4191,15,""],[4261,27,""],[4262,1,""],[4264,1,""],[4271,2,""],[4271,0,"ma"],[4275,18,""],[4275,0,"o"],[4277,4,""],[4277,0,"("],[4284,1,""],[4284,0,")"],[4354,1,""],[4354,0,"fr"],[4357,3,""],[4358,21,""],[75452,0,"// --use-old_buffer\n  if (using_old_buffer) {\n    READONLY_PROPERTY(process, \"useOldBuffer\", True(env->isolate()));\n  }\n\n  "],[83524,0,"         \"  --use-old-buffer      Revert to old Buffer implementation\\n\"\n"],[88898,0,"} else if (strcmp(arg, \"--use-old-buffer\") == 0 ||\n               strcmp(arg, \"--use_old_buffer\") == 0) {\n      using_old_buffer = true;\n\n    "]],"_dtSpan":[503507,504220]},{"parents":[451],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[2234,2,""],[2234,0,"Uint32Array"],[2258,4,""],[2258,0,"8"],[2271,7,""],[2271,0,"V"],[2274,11,""],[2274,0,"ue"],[3440,32,""],[18837,20,""],[18838,11,""],[18884,1,""],[18884,0,"// D"],[18889,1,""],[18889,0," "],[18891,0," "],[18893,4,""],[18893,0,"ittl"],[18898,3,""],[18899,1,""],[18899,0,"h"],[18901,2,""],[18901,0,"usekeep"],[18910,4,""],[18911,4,""],[18911,0,".\n"],[18914,1,""],[18915,1,""],[18915,0,"env->p"],[18922,1,""],[18922,0,"oce"],[18926,5,""],[18927,2,""],[18927,0,"_o"],[18934,1,""],[18936,1,""],[18936,0,"->Delete("],[18948,0,"    FIXED_ONE_BYT"],[18966,3,""],[18966,0,"_STRING(a"],[18976,3,""],[18976,0,"gs.G"],[18981,1,""],[18982,3,""],[18982,0,"Is"],[18985,5,""],[18987,2,""],[18987,0,"te(),"],[18993,6,""],[18993,0,"\""],[18995,7,""],[18995,0,"s"],[18997,5,""],[18997,0,"tupD"],[19006,6,""],[19006,0,"Use\")"],[19014,0,"\n"],[19017,4,""],[19017,0,"u"],[19020,5,""],[19020,0,"t32"],[19024,0,"t* c"],[19029,8,""],[19030,11,""],[19030,0,"s"],[19032,0," f"],[19036,10,""],[19037,11,""],[19037,0,"ds"],[19040,0,"="],[19042,4,""],[19042,0,"env->"],[19058,0,"()"],[19070,1,""],[19070,0,";"],[19074,14,""],[19074,0,"u"],[19080,7,""],[19080,0,"_t"],[19083,2,""],[19083,0,"const"],[19089,0,"fields_count"],[19102,0,"="],[19104,0,"env->"],[19120,0,"()"],[19137,1,""],[19143,4,""],[19143,0,"L"],[19145,1,""],[19145,0,"c"],[19147,1,""],[19148,4,""],[19148,0,"<ArrayBuff"],[19159,0,"r>"],[19162,2,""],[19162,0,"array_b"],[19170,1,""],[19170,0,"ff"],[19173,8,""],[19173,0,"r ="],[19179,0,"    ArrayBuff"],[19193,0,"r::New(e"],[19205,2,""],[19205,0,"is"],[19208,1,""],[19208,0,"late(), fi"],[19219,0,"ld"],[19222,0,", "],[19225,1,""],[19225,0,"ize"],[19229,2,""],[19229,0,"f(*fi"],[19235,3,""],[19235,0,"lds"],[19239,3,""],[19239,0," * fi"],[19246,1,""],[19246,0,"ds_coun"],[19254,2,""],[19254,0,");\n"],[19258,2,""],[19260,24,""],[19268,4,""],[19268,0,"ReturnV"],[19276,0,"lue().Se"],[19285,0,"(Uint32Array::N"],[19301,0,"w"],[19303,1,""],[19303,0,"array_buffer"],[19317,3,""],[19317,0,"0, fi"],[19323,4,""],[19323,0,"lds_c"],[19329,3,""],[19329,0,"u"],[19331,4,""],[19331,0,"t"],[19572,30,""],[19603,1,""],[19603,0,"1"],[19608,107,""],[19609,7,""],[19610,23,""],[19612,49,""],[19613,6,""],[19614,38,""],[19615,29,""],[19617,16,""],[19660,1,""],[19660,0,"0"],[19703,1,""],[19703,0,"1"],[19885,0,"\n  // Values use to cross communicate with processNextTick.\n  uint32_t* const fields = env->tick_info()->fields();\n  uint32_t const fields_count = env->tick_info()->fields_count();\n\n  Local<ArrayBuffer> array_buffer =\n      ArrayBuffer::New(env->isolate(), fields, sizeof(*fields) * fields_count);\n\n  args.GetReturnValue().Set(Uint32Array::New(array_buffer, 0, fields_count));\n"],[75467,16,""],[75468,28,""],[75469,19,""],[75470,60,""],[88809,48,""],[88810,50,""],[88811,12,""],[88821,32,""]],"_dtSpan":[504220,505790]},{"parents":[452],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[33657,6,""],[33666,1,""],[33666,0,"S"],[33669,17,""],[33669,0,"H"],[33671,17,""],[33671,0,"dd"],[33674,13,""],[33675,46,""],[33675,0,"V"],[33677,43,""],[33677,0,"lu"],[33680,1,""],[33686,4,""],[33687,5,""],[33688,38,""],[33689,1,""],[33692,5,""],[33693,13,""],[33694,5,""],[33695,32,""],[33696,1,""],[33697,2,""],[33697,0,"ge"],[33709,9,""],[33710,21,""],[33719,32,""],[33720,2,""],[34129,0,"  Local<Value> arrow;\n"],[34192,0," {"],[34242,0,"} "],[34248,0," {"],[34255,3,""],[34255,0,"Lo"],[34258,3,""],[34260,1,""],[34260,0,"<Obj"],[34265,0,"ct> err_obj"],[34307,0,";\n\n    trace_value = err_obj"],[34363,0,"    arrow = err_obj->GetHiddenValue(env->arrow_message_string());\n  }\n"],[34607,0,"i"],[34609,0," (arrow.IsEmpty() || !arrow->IsString()) {\n      f"],[34693,0,"  "],[34708,0,"  node::Utf8Value arrow_string(env->isolate(), arrow);\n      fprintf(stderr, \"%s\\n%s\\n\", *arrow_string, *trace);\n    }\n  } else {\n    "],[35670,0,"\n      if (arrow.IsEmpty() || !arrow->IsString()) {\n        fprintf(stderr, \"%s: %s\\n\", *name_string, *message_string);\n      } else {\n"],[35811,0,"  node::Ut"],[35822,0,"8Value arrow_string(env->isolate(), arrow);\n        f"],[35889,0,"\n               "],[35909,0,"\\n%s"],[35921,0,"\n                *arrow_string,\n               "],[35982,0,"\n               "],[36021,0,"  }\n    "]],"_dtSpan":[505790,506739]},{"parents":[453],"numChildren":1,"agent":130,"time":"1970-01-01T00:00:00Z","patches":[[73047,0,"release\n  Local<Object> release = Object::New(env->isolate());\n  READONLY_PROPERTY(process, \"release\", release);\n  READONLY_PROPERTY(release, \"name\", OneByteString(env->isolate(), \"io.js\"));\n\n// if this is a release build and no explicit base has been set\n// substitute the standard release download URL\n#ifndef NODE_RELEASE_URLBASE\n# if NODE_VERSION_IS_RELEASE\n#  define NODE_RELEASE_URLBASE \"https://iojs.org/download/release/\"\n# endif\n#endif\n\n#if defined(NODE_RELEASE_URLBASE)\n#  define _RELEASE_URLPFX NODE_RELEASE_URLBASE \"v\" NODE_VERSION_STRING \"/\"\n#  define _RELEASE_URLFPFX _RELEASE_URLPFX \"iojs-v\" NODE_VERSION_STRING\n\n  READONLY_PROPERTY(release,\n                    \"sourceUrl\",\n                    OneByteString(env->isolate(),\n                    _RELEASE_URLFPFX \".tar.gz\"));\n  READONLY_PROPERTY(release,\n                    \"headersUrl\",\n                    OneByteString(env->isolate(),\n                    _RELEASE_URLFPFX \"-headers.tar.gz\"));\n#  ifdef _WIN32\n  READONLY_PROPERTY(release,\n                    \"libUrl\",\n                    OneByteString(env->isolate(),\n                    _RELEASE_URLPFX \"win-\" NODE_ARCH \"/iojs.lib\"));\n#  endif\n#endif\n\n  // process."],[84943,73,""],[85056,2,""]],"_dtSpan":[506739,507998]},{"parents":[454],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[102870,0,"  // See https://github.com/nodejs/io.js/pull/2220#issuecomment-126200059\n  // and https://code.google.com/p/v8/issues/detail?id=4338\n  // TODO(targos): Remove this workaround when v8:4338 has been fixed and the\n  // patch back-ported.\n  V8::SetFlagsFromString(\"--novector_ics\", sizeof(\"--novector_ics\") - 1);\n"]],"_dtSpan":[507998,508308]},{"parents":[455],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[54109,0,"p"]],"_dtSpan":[508308,508309]},{"parents":[456],"numChildren":1,"agent":86,"time":"1970-01-01T00:00:00Z","patches":[[52362,0,"    uv_dlclose(&lib);\n"],[52658,0,"uv_dlclos"],[52668,0,"(&lib);\n    e"],[52797,0,"uv_dlclose(&lib);\n    "],[53087,0,"uv_dlclos"],[53097,0,"(&lib);\n    e"],[53653,0,"uv_dlclose(&lib);\n    "]],"_dtSpan":[508309,508419]},{"parents":[457],"numChildren":1,"agent":44,"time":"1970-01-01T00:00:00Z","patches":[[104760,0,"if (v8_argc != 0)\n    "]],"_dtSpan":[508419,508441]},{"parents":[458],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[85058,0,"HAVE_OPENSSL\n         \"  --tls-cipher-list=val use an alternative default TLS cipher list\\n\"\n#endif\n#if "],[90210,0,"HAVE_OPENSSL\n    } else if (strncmp(arg, \"--tls-cipher-list=\", 18) == 0) {\n      default_cipher_list = arg + 18;\n#endif\n#if "]],"_dtSpan":[508441,508669]},{"parents":[459],"numChildren":1,"agent":186,"time":"1970-01-01T00:00:00Z","patches":[[73339,1,""],[73339,0,"n"],[73341,0,"de"],[73562,1,""],[73562,0,"n"],[73564,0,"de"],[73761,1,""],[73761,0,"n"],[73763,2,""],[73763,0,"de"],[74303,1,""],[74303,0,"n"],[74305,2,""],[74305,0,"de"],[83956,1,""],[83956,0,"n"],[83958,2,""],[83958,0,"de"],[84030,1,""],[84030,0,"n"],[84032,2,""],[84032,0,"de"],[84143,1,""],[84143,0,"N"],[84145,0,"de"],[86143,1,""],[86143,0,"n"],[86145,0,"de"],[102909,1,""],[102909,0,"n"],[102911,3,""],[102911,0,"de"],[103251,1,""],[103251,0,"n"],[103253,3,""],[103253,0,"de"],[73343,3,""]],"_dtSpan":[508669,508726]},{"parents":[460],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[21664,36,""],[21665,5,""],[21670,8,""],[23459,56,""],[23467,63,""],[23467,0,"!"],[23470,20,""],[23473,15,""],[23473,0,"K"],[23476,5,""],[23477,136,""],[23477,0,"N"],[23479,5,""],[23482,80,""],[23485,33,""],[23486,20,""],[23487,38,""],[23488,1,""],[23526,4,""]],"_dtSpan":[508726,509254]},{"parents":[461],"numChildren":1,"agent":44,"time":"1970-01-01T00:00:00Z","patches":[[104481,2,""],[104481,0,">"],[104483,1,""],[104483,0,"1"]],"_dtSpan":[509254,509259]},{"parents":[462],"numChildren":1,"agent":86,"time":"1970-01-01T00:00:00Z","patches":[[1048,0,"LEAK_SANITIZER)\n#include <sanitizer/lsan_interface.h>\n#endif\n\n#if defined("],[113528,0,"#if defined(LEAK_SANITIZER)\n    __lsan_do_leak_check();\n#endif\n\n"]],"_dtSpan":[509259,509397]},{"parents":[463],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[3514,625,""],[3515,39,""],[3516,10,""],[3517,15,""],[3518,9,""],[3519,13,""],[3520,18,""],[3521,42,""],[3522,31,""],[3527,86,""],[104177,70,""],[110746,0,"::CreateParams params;\n  ArrayBufferAllocator array_buffer_allocator;\n  params.array_buffer_allocator = &array_buffer_allocator;\n  Isolate"],[110909,0,"params"]],"_dtSpan":[509397,510499]},{"parents":[464],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[1883,18,""],[20435,1,""],[20435,0,"Loc"],[20439,2,""],[20440,1,""],[20506,1,""],[20506,0,"Loc"],[20510,2,""],[20511,1,""],[20558,1,""],[20558,0,"Loc"],[20562,2,""],[20563,1,""],[20648,1,""],[20648,0,"Loc"],[20652,2,""],[20653,1,""],[22728,1,""],[22728,0,"Loc"],[22732,2,""],[22733,1,""],[22799,1,""],[22799,0,"Loc"],[22803,2,""],[22804,1,""],[22926,1,""],[22926,0,"Loc"],[22930,2,""],[22931,1,""],[23101,1,""],[23101,0,"Loc"],[23105,2,""],[23106,1,""],[23172,1,""],[23172,0,"Loc"],[23176,2,""],[23177,1,""],[23219,1,""],[23219,0,"Loc"],[23223,2,""],[23224,1,""],[23305,1,""],[23305,0,"Loc"],[23309,2,""],[23310,1,""],[23481,1,""],[23481,0,"Loc"],[23485,2,""],[23486,1,""],[23552,1,""],[23552,0,"Loc"],[23556,2,""],[23557,1,""],[23683,1,""],[23683,0,"Loc"],[23687,2,""],[23688,1,""],[23842,1,""],[23842,0,"Loc"],[23846,2,""],[23847,1,""],[23913,1,""],[23913,0,"Loc"],[23917,2,""],[23918,1,""],[24044,1,""],[24044,0,"Loc"],[24048,2,""],[24049,1,""],[24375,1,""],[24375,0,"Loc"],[24379,2,""],[24380,1,""],[24446,1,""],[24446,0,"Loc"],[24450,2,""],[24451,1,""],[24493,1,""],[24493,0,"Loc"],[24497,2,""],[24498,1,""],[24579,1,""],[24579,0,"Loc"],[24583,2,""],[24584,1,""],[24910,1,""],[24910,0,"Loc"],[24914,2,""],[24915,1,""],[24981,1,""],[24981,0,"Loc"],[24985,2,""],[24986,1,""],[25028,1,""],[25028,0,"Loc"],[25032,2,""],[25033,1,""],[25118,1,""],[25118,0,"Loc"],[25122,2,""],[25123,1,""],[27819,1,""],[27819,0,"Loc"],[27823,2,""],[27824,1,""],[28554,1,""],[28554,0,"Loc"],[28558,2,""],[28559,1,""],[29043,1,""],[29043,0,"Loc"],[29047,2,""],[29048,1,""],[29253,1,""],[29253,0,"Loc"],[29257,2,""],[29258,1,""],[29295,1,""],[29295,0,"Loc"],[29299,2,""],[29300,1,""],[32564,1,""],[32564,0,"Loc"],[32568,2,""],[32569,1,""],[32609,1,""],[32609,0,"Loc"],[32613,2,""],[32614,1,""],[34954,1,""],[34954,0,"Loc"],[34958,2,""],[34959,1,""],[35010,1,""],[35010,0,"Loc"],[35014,2,""],[35015,1,""],[40077,1,""],[40077,0,"Loc"],[40081,2,""],[40082,1,""],[40314,1,""],[40314,0,"Loc"],[40318,2,""],[40319,1,""],[49794,1,""],[49794,0,"Loc"],[49798,2,""],[49799,1,""],[52924,1,""],[52924,0,"Loc"],[52928,2,""],[52929,1,""],[52964,1,""],[52964,0,"Loc"],[52968,2,""],[52969,1,""],[54445,1,""],[54445,0,"Loc"],[54449,2,""],[54450,1,""],[54469,1,""],[54469,0,"Loc"],[54473,2,""],[54474,1,""],[63187,1,""],[63187,0,"Loc"],[63191,2,""],[63192,1,""],[105783,1,""],[105783,0,"Loc"],[105787,2,""],[105788,1,""],[106283,1,""],[106283,0,"Loc"],[106287,2,""],[106288,1,""],[106966,1,""],[106966,0,"Loc"],[106970,2,""],[106971,1,""],[107881,1,""],[107881,0,"Loc"],[107885,2,""],[107886,1,""]],"_dtSpan":[510499,510839]},{"parents":[465],"numChildren":1,"agent":4,"time":"1970-01-01T00:00:00Z","patches":[[101817,309,""]],"_dtSpan":[510839,511148]},{"parents":[466],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[101253,584,""]],"_dtSpan":[511148,511732]},{"parents":[467],"numChildren":1,"agent":86,"time":"1970-01-01T00:00:00Z","patches":[[29695,21,""],[31105,0,"char arrow[1024];\n  "],[31129,0,"max_off = sizeof(arrow) - 2;\n\n  int "],[31388,0,"  if (off > max_off) {\n    off = max_off;\n  }\n"],[31566,4,""],[31567,24,""],[31570,1,""],[31574,7,""],[31574,0,"m"],[31576,2,""],[31576,0,"x_"],[31579,2,""],[31579,0,"ff"],[31616,20,""],[31620,1,""],[31622,7,""],[31622,0,"m"],[31624,2,""],[31624,0,"x_"],[31627,2,""],[31627,0,"ff"],[31777,7,""],[31778,21,""],[31781,1,""],[31785,7,""],[31785,0,"m"],[31787,2,""],[31787,0,"x_"],[31790,1,""],[31790,0,"ff"],[31793,1,""],[31828,20,""],[31831,1,""],[31833,4,""],[31833,0,"max_"],[31839,7,""],[31839,0,"f"],[31881,20,""],[31885,5,""],[31887,4,""],[31887,0,"max_"],[31893,11,""],[31893,0,"f"],[31908,2,""],[31929,0," + 1"]],"_dtSpan":[511732,512070]},{"parents":[468],"numChildren":1,"agent":132,"time":"1970-01-01T00:00:00Z","patches":[[83923,1,""],[83923,0,"n"],[84340,1,""],[84340,0,"s"],[84452,1,""],[84452,0,"d"],[84616,0,"NODE_REPL_HISTORY       path to the persistent REPL history file\\n\"\n         \""]],"_dtSpan":[512070,512154]},{"parents":[469],"numChildren":1,"agent":130,"time":"1970-01-01T00:00:00Z","patches":[[72177,0,"NODE"],[72256,0,"NODE"],[72277,0,"NODE"],[72459,0,"NODE"],[72626,0,"NODE"],[72813,0,"strcmp(NODE"],[72825,0,"A"],[72827,0,"CH, \"ia32\") ? NODE_R"],[72867,0,"\n                                               "],[72937,0,"\n                                              : NODE_RELEASE_URLPFX\n                                                \"win-x86/node.lib\""]],"_dtSpan":[512154,512389]},{"parents":[470],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[51330,5,""],[51331,17,""],[51512,0,"\n    // NOTE: `mp` is allocated inside of the shared library's memory, calling\n    // `uv_dlclose` will deallocate it\n    uv_dlclose(&lib);\n"]],"_dtSpan":[512389,512551]},{"parents":[471],"numChildren":1,"agent":113,"time":"1970-01-01T00:00:00Z","patches":[[100114,220,""],[100115,12,""],[102231,0,"def __POSIX__\n  // Block SIGPROF signals when sleeping in epoll_wait/kevent/etc.  Avoids the\n  // performance penalty of frequent EINTR wakeups when the profiler is running.\n  // Only do this for v8.log profiling, as it breaks v8::CpuProfiler users.\n  if (v8_is_profiling) {\n    uv_loop_configure(uv_default_loop(), UV_LOOP_BLOCK_SIGNAL, SIGPROF);\n  }\n#endif\n\n#if"]],"_dtSpan":[512551,513146]},{"parents":[472],"numChildren":1,"agent":102,"time":"1970-01-01T00:00:00Z","patches":[[6836,0,"#"],[6838,0,"if"],[6842,0,"NOTEMPTY != EEXIST\n  E"],[6887,0," endif\n#"],[9479,0,"# if SIGLOST != SIGABRT\n"],[9527,0," endif\n#"]],"_dtSpan":[513146,513211]},{"parents":[473],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[17291,0,"* ArrayBufferAllocator::Allocate(size_t size) {\n  if (env_ == nullptr || !env_->array_buffer_allocator_info()->no_zero_fill())\n    return calloc(size, 1);\n  env_->array_buffer_allocator_info()->reset_fill_flag();\n  return malloc(size);\n}\n\n\nvoid"],[110629,0,"*"],[110653,0," = new ArrayBufferAllocator()"],[110718,1,""],[111331,0,"array_buffer_allocator->set_env(env);\n    "],[112691,0,"array_buff"],[112702,0,"r_allocator->set_e"],[112722,0,"(nullptr);\n    env"],[112852,0,"delete array_buffer_allocator;\n  "],[104023,0,"// Unconditionally force typed arrays to allocate outside the v8 heap. This\n  // is to prevent memory pointers from being moved around that are returned by\n  // Buffer::Data().\n  const char no_typed_array_heap[] = \"--typed_array_max_size_in_heap=0\";\n  V8::SetFlagsFromString(no_typed_array_heap, sizeof(no_typed_array_heap) - 1);\n\n  "]],"_dtSpan":[513211,513940]},{"parents":[474],"numChildren":1,"agent":141,"time":"1970-01-01T00:00:00Z","patches":[[27577,438,""]],"_dtSpan":[513940,514378]},{"parents":[475],"numChildren":1,"agent":44,"time":"1970-01-01T00:00:00Z","patches":[[18133,5,""],[18133,0,"ABORT"],[36471,5,""],[36471,0,"ABORT"],[52611,5,""],[52611,0,"ABORT"],[52766,5,""],[52766,0,"ABORT"],[99219,5,""],[99219,0,"ABORT"],[99275,5,""],[99275,0,"ABORT"],[54019,0,"if (abort_on_uncaught_"],[54043,0,"cept"],[54048,0,"on) {\n      ABORT();\n    } else {\n      exi"],[54099,0,"  }\n  "]],"_dtSpan":[514378,514513]},{"parents":[476],"numChildren":1,"agent":141,"time":"1970-01-01T00:00:00Z","patches":[[79943,0,"i"]],"_dtSpan":[514513,514514]},{"parents":[477],"numChildren":1,"agent":44,"time":"1970-01-01T00:00:00Z","patches":[[1048,0,"NODE_HAVE_I18N_SUPPORT)\n#include <unicode/uvernum.h>\n#endif\n\n#if defined("],[70160,0,"#if defined(NODE_HAVE_I18N_SUPPORT) && defined(U_ICU_VERSION)\n  READONLY_PROPERTY(versions,\n                    \"icu\",\n                    OneByteString(env->isolate(), U_ICU_VERSION));\n#endif\n\n"]],"_dtSpan":[514514,514781]},{"parents":[478],"numChildren":1,"agent":36,"time":"1970-01-01T00:00:00Z","patches":[[2484,0,"syn"],[2488,0,"ax_check_only = false;\nstatic bool t"],[75200,0,"c, --check\n  if (syntax_check_only) {\n    READONLY_PROPERTY(process, \"_syntax_check_only\", True(env->isolate()));\n  }\n\n  // -"],[83554,0,"c, --check           syntax check script without execut"],[83610,0,"ng\\n\"\n         \"  -i"],[88816,0,"check\") == 0 || strcmp(arg, \"-c\") == 0) {\n      syntax_check_only = true;\n    } else if (strcmp(arg, \"--"]],"_dtSpan":[514781,515124]},{"parents":[479],"numChildren":1,"agent":76,"time":"1970-01-01T00:00:00Z","patches":[[2601,38,""],[2602,11,""],[17594,0,"static bool IsDomainActive(const Environment* env) {\n  if (!env->using_domains())\n    return false;\n\n  Local<Array> domain_array = env->domain_array().As<Array>();\n  if (domain_array->Length() == 0)\n    return false;\n\n  Local<Value> domain_"],[17835,0," = domain_array->Get(0);\n  return !d"],[17872,0,"ma"],[17875,0,"n_v->IsNull();\n}\n\n\nstatic bool Shoul"],[17912,0,"AbortOnUncaughtException(Isolate*"],[17946,0,"isolate) {\n  Handle"],[17966,0,"cope scope(isolate);\n\n  Environment* env = Environment::G"],[18025,0,"C"],[18027,0,"rrent(isolate);\n  Local<Object> process_object = env->"],[18082,0,"rocess_object();\n  Local<String> emitting_top_level_domain_error_key =\n    env->emitting_top_level_domain_error_string();\n  bool isEmittingTopLevelDomainError =\n      process_object->Get(emitting_top_level_domain_error_key)->BooleanValue();\n\n  return !IsDomainActive(env) || isEmittingTopLevelDomainError;\n}\n\n\nvoid Setup"],[54879,3,""],[54880,19,""],[54882,4,""],[54883,43,""],[54888,6,""],[90119,7,""],[90120,61,""],[90135,110,""],[112489,0,"\n"],[112494,5,""],[112495,5,""],[112495,0,"od"],[112499,6,""],[112501,2,""],[112501,0,"ol"],[112504,12,""],[112504,0,"t"],[112506,2,""],[112508,1,""],[112508,0,"S"],[112511,8,""],[112511,0,"A"],[112516,2,""],[112516,0,"O"],[112518,2,""],[112518,0,"U"],[112526,1,""],[112526,0,"Exc"],[112530,1,""],[112530,0,"ptionCallba"],[112542,0,"k"],[112544,1,""],[112544,0,"\n        ShouldA"],[112564,2,""],[112564,0,"O"],[112566,2,""],[112566,0,"U"],[112574,2,""],[112574,0,"E"],[112586,0,"\n"]],"_dtSpan":[515124,516323]},{"parents":[480],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[21990,0,"Function> pre_fn = env->async_hooks_pre_function();\n  Local<Function> post_fn = env->async_hooks_post_function();\n  Local<"],[22143,1,""],[22143,0,"r"],[22145,1,""],[22145,0,"n"],[22147,3,""],[22147,0,"i"],[22149,1,""],[22149,0,"it"],[22152,5,""],[22152,0,"callback"],[22200,0,"// TODO(trevnorris): Adding \"_asyncQueue\" to the \"this\" in the init callback\n  // "],[22283,0,"s a horrible way to detect usage. Rethink how detection should happen.\n  i"],[22526,1,""],[22526,0,"r"],[22528,1,""],[22528,0,"n"],[22530,0,"init_c"],[22537,3,""],[22537,0,"llba"],[22542,6,""],[22542,0,"k"],[23205,1,""],[23205,0,"r"],[23207,1,""],[23207,0,"n"],[23209,3,""],[23209,0,"i"],[23211,0,"it_callba"],[23221,5,""],[23221,0,"k && !pr"],[23230,0,"_fn.IsEmpty()"],[23284,17,""],[23289,6,""],[23290,2,""],[23506,1,""],[23506,0,"r"],[23508,1,""],[23508,0,"n"],[23510,3,""],[23510,0,"i"],[23512,0,"it_"],[23516,0,"allback && !post"],[23533,5,""],[23533,0,"fn.IsEmpty()"],[23586,17,""],[23592,1,""],[23593,7,""]],"_dtSpan":[516323,516786]},{"parents":[481],"numChildren":1,"agent":92,"time":"1970-01-01T00:00:00Z","patches":[[102619,76,""],[113058,0," {"],[113085,0,"    } else {\n      uv_unref(reinterpret_cast<uv_handle_t*>(&dispatch_debug_messages_async));\n    }\n"]],"_dtSpan":[516786,516963]},{"parents":[482],"numChildren":1,"agent":27,"time":"1970-01-01T00:00:00Z","patches":[[1035,0,"#include <vector>\n"],[3590,0,"PrintErrorString(const char* format, ...) {\n  va_list ap;\n  va_start(ap, format);\n#ifdef _WIN32\n  HANDLE stderr_handle = GetStdHandle(STD_ERROR_HANDLE);\n\n  // "],[3754,0," if stderr is something other than a tty/console\n  if (stderr_handle == "],[3827,0,"NVALID_HANDLE_VALUE ||\n      stderr_handle == nullptr ||\n      uv_guess_handle(_fileno(stderr)) != UV_TTY) {\n    vfprintf(stderr, for"],[3961,0,"at, ap);\n    return;\n  }\n\n  // Fill in any placeholders\n  int n = _vscprintf(format, ap);\n  std::vector<char> out(n + 1);\n  vsprintf(out.data(), for"],[4110,0,"at, ap);\n\n  // Get r"],[4131,0,"quire"],[4137,0," w"],[4140,0,"de buffer size\n  n = MultiByteToWideCh"],[4179,0,"r(CP_UTF8, 0, ou"],[4196,0,".data(), -1, nullptr, 0);\n\n  std::vector<wchar_t> wbuf(n);\n  MultiByteToWid"],[4272,0,"Char"],[4277,0,"CP_UTF8, 0, o"],[4291,0,"t.data(), -1, wbuf.data(), n);\n  WriteConsoleW(stderr_handle, wbuf.data(), n, nullptr, nullptr);\n#else\n  "],[4397,0,"fprintf(stderr, format, ap);\n#endif\n  va_end(ap);\n}\n\n\nstatic void CheckImmediate(uv"],[34280,2,""],[34280,0,"P"],[34285,6,""],[34285,0,"E"],[34288,2,""],[34288,0,"orString("],[35099,2,""],[35099,0,"P"],[35104,3,""],[35104,0,"ErrorS"],[35111,3,""],[35112,2,""],[35112,0,"ing("],[35211,2,""],[35211,0,"P"],[35216,3,""],[35216,0,"ErrorS"],[35223,2,""],[35224,3,""],[35224,0,"ing("],[35945,2,""],[35945,0,"P"],[35950,6,""],[35950,0,"E"],[35953,2,""],[35953,0,"orString("],[36174,2,""],[36174,0,"P"],[36179,3,""],[36179,0,"ErrorS"],[36186,2,""],[36187,3,""],[36187,0,"ing("],[36319,2,""],[36319,0,"P"],[36324,6,""],[36324,0,"E"],[36327,18,""],[36327,0,"orString("],[36368,0,"         "],[36408,0,"         "],[36447,0,"         "],[54513,2,""],[54513,0,"P"],[54517,4,""],[54518,2,""],[54518,0,"E"],[54521,2,""],[54521,0,"orString("],[54589,2,""],[54589,0,"P"],[54594,3,""],[54594,0,"ErrorS"],[54601,2,""],[54602,3,""],[54602,0,"ing("],[81873,2,""],[81873,0,"P"],[81878,6,""],[81878,0,"E"],[81881,2,""],[81881,0,"orString("]],"_dtSpan":[516963,518086]},{"parents":[483],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[20682,0,"ProcessObject(const FunctionCallbackInfo<Value>& args) {\n  Environment* env = Environment::GetCurrent(args);\n\n  CHECK(args[0]->IsFunction());\n\n  env->set_add_properties_by_index_function(args[0].As<Function>());\n  env->process_object()->Delete(\n      FIXED_ONE_BYTE_STRING(env->isolate(), \"_setupProcessObject\"));\n}\n\n\nvoid Setup"],[37903,0,"Local<Context> ctx = env->context();\n  Local<Funct"],[37954,0,"o"],[37956,0,"> fn = env->add_properties_by_index_function();\n  static const size_t argc = 8;\n  Local<Value> argv[argc];\n  size_"],[38119,0," {"],[38165,0," {"],[38176,1,""],[38176,0,"gv[i++ % argc] = w"],[38196,0,"object();\n      if ((i % argc) == 0) {\n        Handle"],[38250,0,"cope scope(env->isolate());\n        fn->Call(ctx, ary, argc, argv).ToLocalChecked();\n        for (auto&& arg : argv) {\n          arg = Local<Value>();\n        }\n      }\n    }\n  }\n\n  const siz"],[38442,0,"_"],[38444,0," remainder = i % argc;\n  if "],[38473,0,"rema"],[38478,3,""],[38478,0,"nder"],[38483,2,""],[38484,0," 0) {\n    HandleSc"],[38503,2,""],[38503,0,"p"],[38505,0," s"],[38508,0,"ope(env->isola"],[38523,0,"e"],[38529,0,"    fn->Call(ctx, ary, remainder, argv).ToLocalChecked();"],[38589,0,"}\n\n  "],[81634,0,"ProcessObject\", SetupProcessObject);\n  env->SetMethod(process, \"_setup"]],"_dtSpan":[518086,519058]},{"parents":[484],"numChildren":1,"agent":149,"time":"1970-01-01T00:00:00Z","patches":[[66719,0,"TLSEXT_TYPE_application_layer_protocol_negotiation\n  Local<Boolean> tls_alpn = True(env->isolate());\n#else\n  Local<Boolean> tls_alpn = False(env->isolate());\n#endif\n  obj->Set(env->tls_alpn_string(), tls_alpn);\n\n#ifdef "]],"_dtSpan":[519058,519277]},{"parents":[485],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[1729,0,"#ifdef __APPLE__\n#include \"atomic-polyfill.h\"  // NOLINT(build/i"],[1794,0,"clude_order)\nn"],[1823,0," template <typename T> using atomic = nonstd::atomic<T>; }"],[1882,0,"#else"],[1888,0,"#incl"],[1894,0,"de <atomic>\nname"],[1911,0,"pace node { template <typename T> us"],[1951,0,"atomic = std::atomic<T>; }\n#endif\n\nnamespace node {\n\nusing "],[3761,0,"node::atomic<"],[3782,0,">"],[3796,10,""],[95662,0,"an arbitrary "],[95677,0,"r"],[95679,0,"ad.\nstatic void"],[95695,0,"TryStartDebugger() {\n  // Call only async signal-safe functions here!  Don't retry the exchange,\n  // it will deadlock when the thread is interrupted inside a critical section.\n  if (auto isolate = node_isolate.exchange(nullptr)) {\n    v8::Debug::DebugBreak(isolate);\n    uv_async_send(&dispatch_debug_messages_async);\n    CHECK_EQ(nullptr, node_isolate.exchange(isolate));\n  }\n}\n\n\n// Called from the "],[96180,0,"// Synchronize with s"],[96202,0,"gnal handler, see TryStartDebugger.\n  Isolate* isolate;\n  do {\n    isolate = node_isolate.exchange(nullptr);\n  } while (isolate == nullptr);\n\n  i"],[96453,5,""],[96510,5,""],[96625,0,"\n"],[96657,5,""],[96704,0,"  CHECK_EQ(nullptr, node_isolate.exchange(isolate));\n"],[96828,4,""],[96829,4,""],[96830,7,""],[96830,0,"Tr"],[96833,19,""],[96833,0,"S"],[96835,7,""],[96835,0,"a"],[96837,9,""],[96837,0,"t"],[96843,6,""],[96844,2,""],[96845,35,""],[96845,0,"r"],[96847,14,""],[96850,49,""],[98335,17,""],[98335,0,"T"],[98337,48,""],[98337,0,"yS"],[98340,10,""],[98341,16,""],[98341,0,"r"],[98343,4,""],[98343,0,"D"],[98348,6,""],[98350,7,""],[98350,0,"r("],[115073,0,"CHECK_EQ("],[115083,0,"ullptr, n"],[115103,3,""],[115103,0,".exchange("],[115120,0,"))"],[115124,0,"\n"],[115456,5,""],[116905,0,"if (instance_data->is_main()) {\n    // Synchronize with signal handler, see TryStartDebugger.\n    while (isolate != node_isolate.exchange(nullptr));  // NOLINT\n  }\n\n  "],[117173,60,""],[105350,0,"  uv_unref(reinterpret_cast<uv_handle_t*>(&dispatch_debug_messages_async));\n"],[115888,2,""],[115912,99,""]],"_dtSpan":[519277,520943]},{"parents":[486],"numChildren":1,"agent":203,"time":"1970-01-01T00:00:00Z","patches":[[4235,0,"va_end(ap);\n    "]],"_dtSpan":[520943,520959]},{"parents":[487],"numChildren":1,"agent":32,"time":"1970-01-01T00:00:00Z","patches":[[863,0,"fdef NODE_ENABLE_VTUNE_PROFILING\n#i"],[905,0,"\"../deps/v8/src/third_party/vtune/v8-vtune.h\"\n#endif\n\n#include "],[114943,0,"#ifdef NODE_ENABLE_VTUNE_PROFILING\n  params.code_event_handler = vTune::GetVtuneCodeEventHandler();\n#endif\n"]],"_dtSpan":[520959,521164]},{"parents":[488],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[1358,21,""],[1400,2,""],[1400,0,"GetCurr"],[1408,0,"n"],[1410,2,""],[1410,0,"ProcessI"]],"_dtSpan":[521164,521205]},{"parents":[489],"numChildren":1,"agent":186,"time":"1970-01-01T00:00:00Z","patches":[[36588,0,"Stri"],[36593,3,""],[36593,0,"g"],[36612,13,""],[36614,3,""],[36619,0,"\n"],[36659,0," ? *message :\n                                          \"<toString() threw exception>\""]],"_dtSpan":[521205,521316]},{"parents":[490],"numChildren":1,"agent":98,"time":"1970-01-01T00:00:00Z","patches":[[3282,0,"prof_process = false;\nstatic bool "],[79679,0,"prof-process\n  if (prof_process) {\n    READONLY_PROPERTY(process, \"profProcess\", True(env->isolate()));\n  }\n\n  // --"],[87966,0,"prof-process        process v8 profiler output generated\\n\"\n         \"                        using --prof\\n\"\n         \"  --"],[90737,0,"bool short_circuit = false;\n  "],[90812,0," && !short_circuit"],[93261,0,"prof-process\") == 0) {\n      prof_process = true;\n      short_circuit = true;\n    } else if (strcmp(arg, \"--"]],"_dtSpan":[521316,521746]},{"parents":[491],"numChildren":1,"agent":84,"time":"1970-01-01T00:00:00Z","patches":[[18884,0,"static bool DomainHasErrorHandler(const Environment* env,"],[18942,0,"                                  con"],[18981,0," Loc"],[18986,0,"l<Objec"],[18994,0,">& doma"],[19002,0,"n) {\n  HandleS"],[19017,0,"ope scope(env->isolate());\n\n"],[19046,1,""],[19046,0," L"],[19049,0,"cal<Value> d"],[19062,0,"main_event_"],[19074,0,"isteners_v ="],[19087,0,"domain->Get(env->events_string());\n  if (!domain_event_listeners_v->"],[19157,1,""],[19157,0,"Object())\n    return false;\n\n  L"],[19190,0,"cal<Object> domain_event_listeners_o =\n      do"],[19241,0,"_event_listeners_v."],[19261,0,"s<Obje"],[19269,0,">();\n\n  Local<Value> domain_error_l"],[19305,0,"steners_"],[19314,0," =\n      domain_ev"],[19333,0,"nt_listeners_o->Get(env->error_string());\n\n  if (domain_error_listeners_v->IsFunction() ||\n      (domain_error_listeners_v->IsArray() &&\n      domain_error_listeners_v.As<Array>()->Length() > 0))\n    return true;\n\n  return false;\n}\n\nstatic bool DomainsStackHasErrorHandler"],[19634,0,"HandleScope scope(env->isolate());\n\n  "],[19739,0,"s"],[19741,0,"st"],[19744,0,"ck_a"],[19766,0,"s_stack"],[19807,0,"s"],[19809,0,"st"],[19812,0,"ck_a"],[19858,0,"uint32_t domains_stack_length = domains_stack_array->Length();\n  for (uint32_t i = domains_stack_length; i > 0; --i) {\n    "],[20011,0,"s"],[20013,0,"st"],[20016,0,"ck_a"],[20030,1,""],[20030,0,"i - 1"],[20040,0,"  if (!domain_v->IsObject())\n      "],[20082,1,""],[20082,0,"false;\n\n    Local<Object> domain = "],[20125,1,""],[20125,0,".As<Object"],[20136,1,""],[20136,0,"();\n    if (DomainHa"],[20157,3,""],[20157,0,"ErrorHand"],[20167,0,"er"],[20170,0,"env, domain"],[20182,0,")\n      return true;\n  }\n\n  return false"],[20665,19,""],[20666,2,""],[20667,3,""],[20696,0," || !DomainsStackHasErrorHandler(env)"],[21569,0,"CHECK(args[1]->IsArray());\n  env->set_domains_stack_array(args[1].As<Array>());\n\n  "]],"_dtSpan":[521746,522951]},{"parents":[492],"numChildren":1,"agent":180,"time":"1970-01-01T00:00:00Z","patches":[[35785,42,""]],"_dtSpan":[522951,522993]},{"parents":[493],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[22375,4,""],[22376,7,""],[22376,0,"ush_valu"],[22387,1,""],[22387,0,"to_arra"],[22395,6,""],[39535,4,""],[39536,7,""],[39536,0,"ush_valu"],[39547,1,""],[39547,0,"to_arra"],[39555,6,""],[39570,32,""],[39588,4,""],[39588,0,"NODE_PUSH_VAL_TO_ARRAY_MAX"],[39627,0,"dx"],[39711,0,")\n "],[39715,2,""],[39716,6,""],[39717,2,""],[39719,0,"continue;\n"],[39739,9,""],[39739,0,"dx"],[39758,1,""],[39762,1,""],[39766,1,""],[39766,0,"++"],[39769,0,"dx"],[39772,1,""],[39772,0,">="],[39775,0,"ARRAY_SIZE("],[39789,1,""],[39789,0,"v"],[39791,5,""],[39795,1,""],[39801,44,""],[39820,4,""],[39820,0,"idx"],[39855,41,""],[39855,0,"idx"],[39861,14,""],[39861,0,"0"],[39863,18,""],[39877,7,""],[39878,30,""],[39881,4,""],[39882,1,""],[39883,2,""],[39883,0,"x"],[39896,39,""],[39915,4,""],[39916,1,""],[39917,2,""],[39917,0,"x"],[40295,0,"Local<Context> ctx = env->context();\n  Local<Funct"],[40346,0,"on> fn = env->push_values_to_array_fu"],[40384,0,"c"],[40386,0,"ion();\n  Local<Value>"],[40408,0,"argv[NODE_PUSH_VAL_TO_ARRAY_MAX];\n  s"],[40446,0,"ze_t"],[40451,0,"idx "],[40790,4,""],[40790,0,"gv[idx] = own"],[40804,2,""],[40804,0,"r;\n    "],[40812,0,"f ("],[40817,0,"idx >= ARRAY_SIZE(argv)) {\n      fn->Call(ctx, ary"],[40869,0,"idx, argv).ToL"],[40884,1,""],[40884,0,"calChecked();\n      idx = 0;\n    }\n  }\n  if (idx > 0) {\n    f"],[40946,1,""],[40946,0,"->Call(ctx, a"],[40960,0,"y, idx, argv).ToLocalChecked("],[52442,0,"!"],[52447,2,""],[52447,0,"[1]->IsUnd"],[52458,0,"fi"],[52461,3,""],[52461,0,"ed"],[52465,4,""],[52469,1,""],[52471,10,""],[52472,1,""],[52473,1,""],[52474,19,""],[52483,1,""],[52483,0,"1"],[52589,1,""],[52603,3,""],[52604,3,""],[52605,0,"gs.GetRetu"],[52616,0,"nV"],[52619,2,""],[52619,0,"lue().Set(true);\n "],[52638,7,""],[52638,0,"}\n\n"],[52642,1,""],[52654,0,"Buffer"],[52661,3,""],[52661,0," "],[52663,3,""],[52663,0,"b = "],[52674,22,""],[52674,0,".A"],[52677,3,""],[52677,0,"<U"],[52681,0,"t32"],[52689,1,""],[52690,3,""],[52691,1,""],[52694,9,""],[52694,0,"B"],[52696,0,"ff"],[52699,0,"r"],[52704,1,""],[52706,1,""],[52710,2,""],[52710,0,"32"],[52714,0,"*"],[52716,4,""],[52716,0,"field"],[52725,0,"stat"],[52730,0,"c_cast<ui"],[52740,3,""],[52740,0,"t32_t*>("],[52749,1,""],[52749,0,"b"],[52755,0,"Contents"],[52764,1,""],[52765,5,""],[52765,0,".Da"],[52769,3,""],[52770,3,""],[52772,0,")"],[52775,0,"\n"],[52778,0,"//"],[52781,0,"These"],[52788,6,""],[52788,0,"hre"],[52792,2,""],[52792,0," i"],[52796,0,"ice"],[52801,1,""],[52801,0,"will"],[52806,17,""],[52806,0,"co"],[52809,0,"t"],[52811,0,"i"],[52813,5,""],[52814,4,""],[52814,0,"the"],[52818,3,""],[52818,0,"v"],[52821,2,""],[52821,0,"ues fo"],[52828,0," the h"],[52835,3,""],[52835,0,"time"],[52845,0,". The\n "],[52853,1,""],[52853,0,"//"],[52856,8,""],[52856,0,"s"],[52858,3,""],[52858,0,"co"],[52861,0,"ds "],[52865,2,""],[52865,0,"alue "],[52872,0," br"],[52876,3,""],[52876,0,"k"],[52878,8,""],[52878,0,"n"],[52880,0,"into"],[52886,0,"he "],[52891,1,""],[52891,0,"p"],[52893,3,""],[52893,0,"r/low"],[52899,0,"r 32 bi"],[52907,3,""],[52907,0,"s"],[52909,1,""],[52909,0,"a"],[52911,0,"d s"],[52915,3,""],[52915,0,"o"],[52917,3,""],[52918,0,"d in t"],[52925,2,""],[52926,2,""],[52926,0,"\n  // ui"],[52935,1,""],[52935,0,"t32 f"],[52941,2,""],[52942,0,"l"],[52944,1,""],[52944,0,"s to b"],[52951,0," co"],[52956,2,""],[52956,0,"erted back in JS.\n  f"],[52978,0,"eld"],[52982,5,""],[52982,0,"[0] = "],[52989,3,""],[53007,1,""],[53007,0," >> 32"],[53017,33,""],[53017,0,"f"],[53019,2,""],[53020,0,"l"],[53022,7,""],[53023,8,""],[53023,0,"[1] ="],[53029,0,"("],[53032,1,""],[53032,0,"/"],[53048,1,""],[53048,0," & 0xffffffff"],[53065,3,""],[53065,0,"field"],[53071,3,""],[53071,0,"[2] = "],[53078,0," % NANOS_PE"],[53090,13,""],[53090,0,"_"],[53092,9,""],[53092,0,"EC"],[66145,0,"Environment* env = Environment::GetCurrent(info);\n  "],[66216,0,"env->"],[66222,0,"solate();\n  Local<Co"],[66243,1,""],[66243,0,"text> ctx = env->c"],[66262,2,""],[66262,0,"nt"],[66265,0,"x"],[66267,1,""],[66267,0,"();\n  Local<Function> fn = env->push_value"],[66310,0,"_t"],[66313,1,""],[66313,0,"_"],[66315,0,"rray_func"],[66325,1,""],[66325,0,"ion"],[66332,0,"  Local<Value> argv[NODE_PUSH_VAL_TO_ARRAY_MAX];\n  size_t idx = 0;\n\n"],[66512,6,""],[66677,3,""],[66678,4,""],[66679,2,""],[66680,6,""],[66680,0,"v[idx]"],[66718,4,""],[66754,5,""],[66759,6,""],[66795,3,""],[66854,0,"length);\n  "],[66867,0,"if (++idx >= ARRAY_SIZE(argv))"],[66898,0,"{\n"],[66906,0,"fn->Ca"],[66913,0,"l(ctx, "],[66922,0,"varr, idx, ar"],[66936,1,""],[66936,0,"v).ToLocalC"],[66948,0,"ecked("],[66961,0,"  idx = 0;\n    }\n  }\n  if (idx > 0) {\n    fn->Call(ctx, "],[67023,6,""],[67023,0,", "],[67026,0,"dx"],[67030,1,""],[67031,1,""],[67031,0,"rgv).ToLocalCheck"],[67049,0,"d("],[67267,13,""],[67648,3,""],[67649,4,""],[67650,2,""],[67651,2,""],[67652,4,""],[67652,0,"[idx]"],[67692,6,""],[67731,4,""],[67748,7,""],[67787,3,""],[67810,8,""],[67849,2,""],[67875,0,"if (++idx >= ARRAY_SIZE(argv)) {\n      fn->Call(ctx, "],[67934,6,""],[67934,0,", "],[67937,2,""],[67937,0,"dx"],[67941,0,"arg"],[67945,0,").ToLoc"],[67954,1,""],[67954,0,"Ch"],[67957,0,"cked("],[67969,0,"  idx = 0;\n    }\n    "],[68019,0,"if (idx > 0) {\n    fn->Call(ctx, envarr, idx, argv).ToLocalChecked();\n  }\n  "]],"_dtSpan":[522993,525078]},{"parents":[494],"numChildren":1,"agent":27,"time":"1970-01-01T00:00:00Z","patches":[[32951,0,"bool IsExceptionDecorated(Environment* en"],[32993,0,", L"],[32997,0,"cal<Value> er) {\n  "],[33017,0,"f (!er.IsEmpty() && er->IsObject()) {\n    Local<Object> err_obj = er.As<Object>();\n    Local<Value> decorate"],[33127,0,"= err_obj->GetHiddenValue(env->decorated_string());\n    return !decorated.IsEmpty() && decorated->IsTrue();\n  }\n  return false;\n}\n\nvoid "],[36721,0,"  const bool decorated = IsExceptionDecorated(env, er);\n"],[37274,0," || decorated"],[38433,0," || decorated"]],"_dtSpan":[525078,525467]},{"parents":[495],"numChildren":1,"agent":44,"time":"1970-01-01T00:00:00Z","patches":[[52745,53,""],[52761,94,""],[52762,11,""],[52763,23,""],[52769,73,""],[52770,4,""]],"_dtSpan":[525467,525725]},{"parents":[496],"numChildren":1,"agent":122,"time":"1970-01-01T00:00:00Z","patches":[[61210,0,"_name"],[61351,0,"_name"],[61477,0,"name_"],[61506,0,"_name"],[61561,0,"name_"],[61735,0,"name_"],[61801,0,"module = Object::New(env->isolate());\n  Local<Object> "],[61894,0,"  Local<String> exports_prop = String::NewFromUtf8(env->isolate(), \"exports\");\n  module->Set(exports_prop, exports);\n"],[62462,0,"_name"],[62469,0,"module->Get("],[62488,0,"_prop)"]],"_dtSpan":[525725,525949]},{"parents":[497],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[33104,1,""],[33104,0,"aut"],[33108,1,""],[33108,0," m"],[33111,3,""],[33111,0,"ybe_v"],[33120,1,""],[33121,9,""],[33121,0,"=\n      "],[33130,1,""],[33143,1,""],[33143,0,"Pr"],[33146,2,""],[33146,0,"vat"],[33150,0,"(env->co"],[33159,4,""],[33159,0,"t"],[33161,0,"xt"],[33164,0,"), "],[33182,2,""],[33182,0,"p"],[33185,2,""],[33185,0,"vate_symbol"],[33205,0,"Local<Value> decorated;\n    "],[33240,1,""],[33240,0,"maybe_value.ToLocal(&"],[33270,9,""],[33632,0,"auto context = env->context();\n    auto processed_private_symbol = env->processed_private_symbol();\n    "],[33775,1,""],[33784,3,""],[33785,0,"asPr"],[33790,5,""],[33790,0,"v"],[33792,2,""],[33792,0,"t"],[33795,0,"cont"],[33800,4,""],[33800,0,"xt, "],[33814,2,""],[33814,0,"p"],[33817,4,""],[33817,0,"vate_symbol"],[33830,1,""],[33830,0,"FromJu"],[33837,3,""],[33838,1,""],[33872,1,""],[33872,0,"Pr"],[33875,5,""],[33875,0,"v"],[33877,2,""],[33877,0,"t"],[33880,0,"\n        cont"],[33894,4,""],[33894,0,"xt,\n        "],[33916,2,""],[33916,0,"p"],[33919,4,""],[33919,0,"vate_symbol"],[33931,0,"\n       "],[36294,10,""],[36295,3,""],[36296,11,""],[36297,18,""],[36298,0,"!"],[36319,2,""],[36319,0,"&&"],[36322,0,"!"],[36341,2,""],[36341,0,"&&"],[36344,1,""],[36369,0," {"],[36372,2,""],[36373,5,""],[36374,8,""],[36388,1,""],[36388,0,"Pr"],[36391,2,""],[36391,0,"vate(\n        "],[36407,4,""],[36407,0,"v->cont"],[36415,0,"xt"],[36418,0,"),\n        "],[36448,2,""],[36448,0,"p"],[36451,2,""],[36451,0,"vate_symbol"],[36465,0,"\n       "],[36488,0,"  "],[36498,0,"  }\n"],[36504,0," // Allocation failed, just "],[36537,1,""],[36537,0," it out."],[37234,0,"\n       "],[37255,1,""],[37255,0,"Pr"],[37258,2,""],[37258,0,"vate(\n            "],[37278,4,""],[37278,0,"v->cont"],[37286,0,"xt"],[37289,0,"),\n            "],[37323,2,""],[37323,0,"p"],[37326,2,""],[37326,0,"vate_symbol"],[37340,0,".ToLocalChecked()"]],"_dtSpan":[525949,526585]},{"parents":[498],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[207,0,"#include \"node_revert.h\"\n"],[45647,1,""],[82284,0,"// --security-revert flags\n#define V(code, _, __)                                                        \\\n  do {                                                                        \\\n    if (IsReverted(REVERT_ ## code)) {                                        \\\n      READONLY_PROPERTY(process, \"REVERT_\" #code, True(env->isolate()));      \\\n    }                                                                         \\\n  } while (0);\n  REVERSIONS(V)\n#undef V\n\n  "],[91503,0," "],[91581,0," "],[91660,0," "],[91734,0," "],[91847,0," "],[91956,0," "],[92037,0," "],[96089,0,"ncmp(arg, \"--security-revert=\", 18) == 0) {\n      const char* cve = arg + 18;\n      Revert(cve);\n    } else if (str"]],"_dtSpan":[526585,527203]},{"parents":[499],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[26031,33,""],[26154,1,""],[26156,31,""],[26263,33,""],[26395,0,"}\n\n"],[26400,0,"// If "],[26407,0,"he "],[26411,0,"eturn value is empt"],[26431,1,""],[26431,0," then the "],[26443,1,""],[26443,0,"llba"],[26448,0,"k t"],[26452,0,"rew"],[26456,1,""],[26456,0,"\n  if (r"],[26466,1,""],[26466,0,".IsEmpty()) {\n    r"],[26486,0,"tu"],[26489,3,""],[26489,0,"n Und"],[26495,0,"fined"],[26501,0,"env->isola"],[26512,2,""],[26513,0,"()"],[26766,4,""],[26769,70,""],[24980,0,"Environment::AsyncCallbackScope callback_scope(env);\n\n  "],[26856,0,"&callback_scope"],[119419,0,"{\n      Environment::AsyncCallbackScope callback_scope(env);\n      "],[119508,0,"    }\n"],[24455,1,""],[24474,1,""],[24532,1,""],[24594,1,""],[25740,0,"(env->isolate())"],[25722,69,""],[25840,0,"if"],[25843,1,""],[25843,0,"("],[25892,1,""],[25892,0,".IsEmpty()) {"],[25912,2,""],[25913,1,""],[25913,0," Fa"],[25917,0,"alErro"],[25924,9,""],[25924,0,"(\"node::M"],[25934,1,""],[25934,0,"ke"],[25938,7,""],[25938,0,"llback\","],[25955,6,""],[25956,2,""],[25956,0,"          \""],[25968,2,""],[25968,0,"oma"],[25973,0," "],[25975,2,""],[25975,0,"nt"],[25978,7,""],[25978,0,"r ca"],[25983,0,"lb"],[25986,0,"ck "],[25990,0,"hr"],[25993,2,""],[25993,0,"w, please report this\""],[26022,0,"  }\n    "],[26089,0,"if ("],[26125,19,""],[26126,2,""],[26126,0,"I"],[26128,5,""],[26128,0,"Emp"],[26132,0,"y"],[26309,0,"if ("],[26346,19,""],[26347,2,""],[26347,0,"I"],[26349,5,""],[26349,0,"Emp"],[26353,0,"y"],[26422,7,""],[26423,3,""],[26424,13,""],[26425,36,""],[26605,0,"if ("],[26656,1,""],[26656,0,".IsEmpty()) {"],[26676,2,""],[26677,1,""],[26677,0," Fa"],[26681,0,"alE"],[26685,9,""],[26685,0,"ror(\"node::M"],[26698,1,""],[26698,0,"ke"],[26702,7,""],[26702,0,"llback\","],[26719,6,""],[26720,2,""],[26720,0,"          \""],[26732,2,""],[26732,0,"oma"],[26737,0," "],[26739,7,""],[26739,0,"x"],[26741,2,""],[26741,0,"t ca"],[26746,0,"lb"],[26749,0,"ck "],[26753,0,"hr"],[26756,2,""],[26756,0,"w, please report this\""],[26785,0,"  }\n    "],[26842,0," {"],[26883,0,"  }\n"]],"_dtSpan":[527203,528143]},{"parents":[500],"numChildren":1,"agent":122,"time":"1970-01-01T00:00:00Z","patches":[[62740,0,"auto effective_exports = module->Get(exports_prop);\n  "],[62818,5,""],[62819,3,""],[62819,0,"ff"],[62822,0,"c"],[62824,1,""],[62824,0,"ive_"],[62835,6,""],[62868,0,"ffective_e"]],"_dtSpan":[528143,528229]},{"parents":[501],"numChildren":1,"agent":150,"time":"1970-01-01T00:00:00Z","patches":[[3734,0,"#if HAVE_OPENSSL && NODE_FIPS_MODE\n// used by crypto module\nbool enable_fips_crypto = false;\nbool force_fips_crypto = false;\n#endif\n\n"],[91230,0,"if NODE_FIPS_MODE\n         \"  --"],[91264,0,"able-fips         enable FIPS crypto at startup\\n\"\n         \"  --force-fips          force FIPS crypto (cannot be "],[91380,0,"sabled)\\n\"\n#endi"],[91397,0,"  /* NODE_FIPS_MODE */"],[91421,0,"end"],[91427,0,"/* HAVE_OPENSSL */\n#if "],[96896,0,"if NODE_FIPS_MODE\n    } els"],[96924,0," if (strcmp(arg, \"--e"],[96946,0,"able-fips\") == 0) {\n      enable_fips_crypto = true;\n    } else if (strcmp(arg, \"--force-fips\") == 0) {\n      force_fips_crypto = true;\n#endif /* NODE_FIPS_MODE */\n#en"],[97116,0," /* HAVE_OPENSSL */"],[121929,0,"#ifdef NODE_FIPS_MODE\n  // In the case of FIPS builds we should make sure\n  // the random source is properly initialized first.\n  OPENSSL_init();\n#endif  // NODE_FIPS_MODE\n"]],"_dtSpan":[528229,528978]},{"parents":[502],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[39658,0,"(env->isolate())"],[58720,0,"(isolate)"],[87160,0,"(env->isolate())"],[2462,0,"aybeLocal;\nusing v8::M"],[2648,0,"criptOrigin;\nusing v8::S"],[39868,0,"ScriptOrigin origin(filename);\n  Maybe"],[39932,0,"\n     "],[39959,0,"env->context(), "],[39983,1,""],[39983,0,"&orig"],[39989,2,""],[39990,3,""],[40104,0,".ToLocalChecked()"],[21924,0,"env->context(),\n      "],[22006,0,".FromJust()"],[22706,0,"env->context(),\n      "],[22789,0,".FromJust()"],[23187,0,"env->context(),\n      "],[23268,0,".FromJust()"],[24598,0,"env->context(),\n      "],[24679,0,".FromJust()"],[35640,0,"env->context()).FromJust("],[35702,0,"env->context()).FromJust("],[60415,0,"env->context(), "],[60438,0,".FromJust()"],[101236,0,"isolate"]],"_dtSpan":[528978,529369]},{"parents":[503],"numChildren":1,"agent":4,"time":"1970-01-01T00:00:00Z","patches":[[2503,0,"ame;\n"],[2509,0,"sing v8::Nu"],[63432,6,""],[63432,0,"Name"],[63708,6,""],[63708,0,"Name"],[71000,6,""],[71000,0,"Name"],[71166,6,""],[71166,0,"Name"],[71576,6,""],[71576,0,"Name"],[71987,6,""],[71987,0,"Name"],[74754,0,"auto maybe = "],[74793,0,"context(),\n                                    env->"],[74884,0,"             "],[74940,0,"             "],[74996,0,"             "],[75030,0,"  CHECK(maybe.FromJust());\n"],[81160,0,"maybe = "],[81194,0,"co"],[81197,0,"t"],[81199,0,"xt(),\n                               "],[81237,0,"nv->nee"],[81286,0,"        "],[81346,0,"        "],[81406,0,"        "],[81435,0,"  CHECK(maybe.FromJust());\n"],[84074,0,"maybe = "],[84108,0,"context(),\n                               env->"],[84199,0,"        "],[84247,0,"        "],[84295,0,"        "],[84324,0,"  CHECK(maybe.FromJust());\n\n"]],"_dtSpan":[529369,529789]},{"parents":[504],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[73862,1,""],[73862,0,"DefineOwnPr"],[73874,0,"pe"],[73877,1,""],[73877,0,"ty("],[73881,1,""],[73881,0,"nv->cont"],[73890,0,"x"],[73893,0,"),                                    \\\n                           "],[73996,0,"               \\\n                           "],[74045,0,"                                              \\\n                           "],[74133,0,".FromJust()"],[74150,0,"                     "],[74357,1,""],[74357,0,"DefineOwnPr"],[74369,0,"pe"],[74372,0,"ty(env->"],[74381,0,"ont"],[74385,2,""],[74385,0,"x"],[74388,0,"),                                    \\\n                           "],[74506,0,"\\\n"],[74517,2,""],[74586,0,"\\\n"],[74597,2,""],[74666,0,"\\\n"],[74677,2,""],[74744,0,"  \\\n        .FromJust()"],[74778,0,"                                                "],[81334,0,"\n     "],[81375,0,"env->context()"],[81390,0,".ToLocalChecked()"],[119580,0,"\n     "],[119632,0,"context).ToLocalChecked("]],"_dtSpan":[529789,530280]},{"parents":[505],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[26776,0,"if (callback_scope.in_makecallback())\n      return ret;\n    // NOTE: Undefined() is returned here for backwards compatibility.\n    else\n      "]],"_dtSpan":[530280,530422]},{"parents":[506],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[18937,0,"\n     "],[18996,0," ||\n      zero_fill_all_buffers"],[92415,0,"zero-fill-buffers   automatically zero-fill all newly allocated\\n\"\n         \"                        Buffer and SlowBuffer instances\\n\"\n         \"  --"],[98176,0,"zero-fill-buffers\") == 0) {\n      zero_fill_all_buffers = true;\n    } else if (strcmp(arg, \"--"]],"_dtSpan":[530422,530703]},{"parents":[507],"numChildren":1,"agent":73,"time":"1970-01-01T00:00:00Z","patches":[[91150,0,"// XXX: If you add an o"],[91174,0,"tion he"],[91182,0,"e, please also add "],[91202,0,"t to /doc/node.1\n  pri"],[91944,1,""],[91945,2,""],[91945,0,"ace"],[91963,1,""],[91963,0,"s"],[91965,1,""],[91968,0,"st"],[91971,4,""],[91972,6,""],[91972,0,"k"],[91974,3,""],[91975,2,""],[91975,0,"rac"],[91979,0,"s"],[91981,1,""],[91981,0,"on"],[91991,20,""],[91995,2,""],[91996,5,""],[92015,0,"h"],[92017,3,""],[92017,0,"ow"],[92034,1,""],[92034,0,"t"],[92036,0,"r"],[92040,2,""],[92041,0,"n ex"],[92046,1,""],[92046,0,"eption"],[92053,0,"any"],[92057,3,""],[92057,0,"im"],[92060,1,""],[92061,2,""],[92061,0,"a"],[92071,0,"ed \"\n         \"funct"],[92094,0," is u"],[92100,0,"ed"],[91207,1,""],[91217,0," and\n  // doc/api/cli.markdown"]],"_dtSpan":[530703,530927]},{"parents":[508],"numChildren":1,"agent":166,"time":"1970-01-01T00:00:00Z","patches":[[3364,0,"const int v8_default_thread_pool_size = 4;\nstatic int v8_thread_pool_size = v8_default_thread_pool_size;\nstatic "],[4293,1,""],[92829,0,"         \"  --v8-pool-size=num    set v8's thread pool size\\n\"\n"],[98632,0,"    } else if (strncmp(arg, \"--v8-pool-size=\", 15) == 0) {\n      v8_thread_pool_size = atoi(arg + 15);\n"],[124242,7,""],[124243,3,""],[124244,5,""],[124245,9,""],[124246,10,""],[124299,0,"v8_"]],"_dtSpan":[530927,531243]},{"parents":[509],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[4044,0,"true if process warnings should be suppressed\nbool no_process_warnings = false;\nbool trace_warnings = false;\n\n// "],[83499,0,"if (no_process_warnings) {\n    READONLY_PROPERTY(process, \"noProcessWarnings\", True(env->isolate()));\n  }\n\n  if (trace_warnings) {\n    READONLY_PROPERTY(process, \"traceProcessWarnings\", True(env->isolate()));\n  }\n\n  "],[92589,0,"no-warnings         silence all process warnings\\n\"\n         \"  --trace-warnings      show stack traces on process warnings\\n\"\n         \"  --"],[98343,0,"no-warnings\") == 0) {\n      no_process_warnings = true;\n    } else if (strcmp(arg, \"--trace-warnings\") == 0) {\n      trace_warnings = true;\n    } else if (strcmp(arg, \"--"]],"_dtSpan":[531243,531883]},{"parents":[510],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[83844,0,"#ifdef NODE_NO_BROWSER_GLOBALS\n  // configure --no-browser-globals\n  READONLY_PROPERTY(process, \"_noBrowserGlobals\", True(env->isolate()));\n#endif  // NODE_NO_BROWSER_GLOBALS\n\n"]],"_dtSpan":[531883,532059]},{"parents":[511],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[27536,1,""],[27536,0,"callback_scope.in_makecallback()) {\n    return ret;\n  }\n\n  Environment::TickInfo* tick_info = env->tick_info();\n\n  if (tick_info->length() == 0) {\n    env->isolate()->RunMicrotasks();\n  }\n\n  Local<Obj"],[27737,0,"ct> process = e"],[27756,1,""],[27756,0,"process_object();\n\n  "],[27778,0,"f (ti"],[27785,1,""],[27785,0,"_info->l"],[27794,1,""],[27794,0,"ng"],[27797,1,""],[27797,0,"h() == 0) {\n    t"],[27817,0,"_info->set_index"],[27834,1,""],[27834,0,"0);\n  }\n\n  if (env->ti"],[27857,0,"k_c"],[27868,1,""],[27868,0,"fun"],[27872,0,"ti"],[27875,0,"n()->Call("],[27886,0,"roc"],[27890,0,"ss, 0, nullptr).IsEmpty("],[27037,2,""],[27037,0,"// NOTE: For"],[27050,5,""],[27054,1,""],[27054,0,"ward"],[27059,0," "],[27062,0,"m"],[27064,2,""],[27064,0,"atib"],[27069,8,""],[27070,0,"ity with pub"],[27083,2,""],[27083,0,"i"],[27085,5,""],[27086,0,"API"],[27090,1,""],[27090,0,"we"],[27093,2,""],[27099,18,""],[27111,0,"\n    //"],[27120,1,""],[27120,0,"f"],[27122,1,""],[27122,0,"th"],[27125,0," "],[27127,3,""],[27127,0,"op lev"],[27134,1,""],[27134,0,"l call"],[27141,0,"t"],[27143,0,"r"],[27145,0,"w.\n    "],[27154,3,""],[27154,0,"tu"],[27157,0,"n"],[27159,0,"call"],[27167,4,""],[27167,0,"_"],[27169,1,""],[27171,0,"pe.in_"],[27178,1,""],[27179,2,""],[27179,0,"kecall"],[27186,6,""],[27186,0,"ack() ?"],[27198,6,""],[27202,1,""],[27205,3,""],[27206,0,": "],[27233,0,".As<Value>()"],[26897,0,"Local<Value> d"],[26912,0,"d_throw = Boolean::New(env->isolate(), ret.IsEmpty());\n    // Currently there's no way to retrieve an uid "],[27019,0,"rom"],[27023,0,"node::MakeCallback"],[27042,0,").\n    // This needs to be fixed.\n    Local<Value> vals[] =\n        { Undefined(env->isolate()).As<Value>(), did_throw };\n    if ("],[27194,1,""],[27194,0,"ARRAY_SIZE(vals)"],[27212,3,""],[27212,0,"va"],[27215,3,""],[27215,0,"s"],[26677,0,"TryCatch try_catch(env->"],[26702,1,""],[26702,0,"solate());\n    MaybeLocal<Value> ar ="],[26740,1,""],[26753,0,"env->context(), "],[26788,0,";\n    if (ar"],[26811,0," {"],[26820,0,"Clear"],[26831,2,""],[26831,0,"xcepti"],[26838,3,""],[26839,1,""],[26839,0,"Han"],[26843,0,"l"],[26845,5,""],[26845,0,"rs("],[26849,1,""],[26849,0,"nv);\n      Fat"],[26865,0,"Exception(env->iso"],[26884,1,""],[26885,3,""],[26885,0,"te()"],[26891,2,""],[26891,0,"t"],[26893,2,""],[26893,0,"y_catc"],[26900,3,""],[26900,0,");\n     "],[26909,0,"re"],[26912,1,""],[26912,0,"u"],[26914,0,"n Local<Valu"],[26927,2,""],[26927,0,">("],[26934,0,"  }\n  "],[27323,0,"TryCatch try_catch(env->"],[27348,1,""],[27348,0,"solate());\n   "],[27363,1,""],[27363,0,"MaybeLocal<Value> ar =\n        "],[27408,0,"env->context(), "],[27455,0,";\n    if (ar"],[27478,0," {"],[27487,0,"Clear"],[27498,2,""],[27498,0,"xcepti"],[27505,3,""],[27506,1,""],[27506,0,"Han"],[27510,0,"l"],[27512,5,""],[27512,0,"rs("],[27516,1,""],[27516,0,"nv);\n      Fat"],[27532,3,""],[27532,0,"Ex"],[27535,5,""],[27535,0,"e"],[27537,0,"ti"],[27540,0,"n(env->i"],[27549,0,"ola"],[27553,0,"e(),"],[27558,0,"try_catc"],[27567,3,""],[27567,0,");\n"],[27571,0,"     re"],[27579,1,""],[27579,0,"u"],[27581,0,"n Local<Valu"],[27594,2,""],[27594,0,">("],[27601,0,"  "],[27605,0,"  }\n"],[61487,0,"void ClearFatalExceptionHandlers(Environment* env) {\n  Local<Object> process = env->process_object();\n  Local<Value> events =\n      process->Get(env->context(), env->events_string()).ToLocalChecked();\n\n  if (events->IsObject()) {\n    events.As<Object>()->Set(\n        env->context(),\n        OneByteString(env->isolate(), \"uncaughtException\"),\n        Undefined(env->isolate())).FromJust();\n  }\n\n  process->Set(\n      env->context(),\n      env->domain_string(),\n      Undefined(env->isolate())).FromJust();\n}\n\n\n"]],"_dtSpan":[532059,533846]},{"parents":[512],"numChildren":1,"agent":73,"time":"1970-01-01T00:00:00Z","patches":[[2520,0,"ll;\nusing v8::Nu"],[92195,0,"// Expose the global object as a property on itself\n  // (Allows you to set stuff on `global` from anywhere in JavaScript.)\n  global->Set(FIXED_ONE_BYTE_STRING(env->isolate(), \"global\"), global);\n\n  "],[92446,1,""],[92446,0,"Nul"],[92450,0,"(env->is"],[92459,1,""],[92459,0,"l"],[92461,1,""],[92461,0,"te())"],[92468,1,""],[92468,0,"ARRAY_SIZE(&arg)"]],"_dtSpan":[533846,534098]},{"parents":[513],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[92468,16,""],[92468,0,"1"],[24518,10,""],[24518,0,"arraysize"],[27447,10,""],[27447,0,"arraysize"],[42324,10,""],[42324,0,"arraysize"],[43372,10,""],[43372,0,"arraysize"],[66508,10,""],[66508,0,"arraysize"],[66769,10,""],[66769,0,"arraysize"],[69989,10,""],[69989,0,"arraysize"],[70996,10,""],[70996,0,"arraysize"],[104166,10,""],[104166,0,"arraysize"],[107496,10,""],[107496,0,"arraysize"],[109320,10,""],[109320,0,"arraysize"],[118115,10,""],[118115,0,"arraysize"],[118669,10,""],[118669,0,"arraysize"]],"_dtSpan":[534098,534362]},{"parents":[514],"numChildren":1,"agent":70,"time":"1970-01-01T00:00:00Z","patches":[[11441,0,"INFO\n# if !defined(SIGPWR) || SIGINFO != SIGPWR\n  SIGNO_CASE(SIGINFO);\n# endif\n#endif\n\n#ifdef SIG"]],"_dtSpan":[534362,534459]},{"parents":[515],"numChildren":1,"agent":27,"time":"1970-01-01T00:00:00Z","patches":[[89234,2,""],[89234,0,"L"],[89237,0,"al<Obj"],[89244,3,""],[89244,0,"ct"],[89247,1,""],[89247,0," ev"],[89251,0,"n"],[89253,0,"s_obj = Object::New"],[89278,0,"isolate());\n  "],[89299,1,""],[89299,0,"obj->Se"],[89307,0,"P"],[89309,1,""],[89309,0,"ototype(e"],[89319,1,""],[89319,0,"v->context"],[89333,8,""],[89334,2,""],[89334,0,"ull"],[89356,0,"  process->Set(env->events_string(), events_obj);\n"]],"_dtSpan":[534459,534604]},{"parents":[516],"numChildren":1,"agent":141,"time":"1970-01-01T00:00:00Z","patches":[[89292,0,"mayb"],[89297,0," = e"],[89366,0,"CHECK(maybe.FromJust());\n  "]],"_dtSpan":[534604,534639]},{"parents":[517],"numChildren":1,"agent":128,"time":"1970-01-01T00:00:00Z","patches":[[93805,3,""],[93806,3,""]],"_dtSpan":[534639,534645]},{"parents":[518],"numChildren":1,"agent":141,"time":"1970-01-01T00:00:00Z","patches":[[2732,44,""]],"_dtSpan":[534645,534689]},{"parents":[519],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[43194,13,""],[43194,0,"!"],[43207,4,""],[43207,0,"HasR"],[43213,0,"(w"]],"_dtSpan":[534689,534713]},{"parents":[520],"numChildren":1,"agent":114,"time":"1970-01-01T00:00:00Z","patches":[[2260,0,"loat64Array;\n"],[2274,0,"si"],[2277,0,"g v8::Fun"],[55454,0,"// Microseconds in a second, as a float, used in CPUUsage() below\n#define MICROS_PER_SEC 1e6\n\n// CPUUsage use libuv's uv_getrusage() this-process resource usage accessor,\n// to access ru_utime (user CPU time used) and ru_stime (system CPU time used),\n// which are uv_timeval_t structs (long tv_sec, long tv_usec).\n// Returns those values as Float64 microseconds in the elements of the array\n// passed to the function.\nvoid CPUUsage(const FunctionCallbackInfo<Value>& args) {\n  uv_rusage_t rusage;\n\n  // Call libuv to get the values we'll return.\n  int err = uv_getrusage(&rusage);\n  if (err) {\n    // On error, return the strerror version of the error code.\n    Local<String> errmsg = OneByteString(args.GetIsolate(), uv_strerror(err));\n    args.GetReturnValue().Set(errmsg);\n    return;\n  }\n\n  // Get the double array pointer from the Float64Array argument.\n  CHECK(args[0]->IsFloat64Array());\n  Local<Float64Array> array = args[0].As<Float64Array>();\n  CHECK_EQ(array->Length(), 2);\n  Local<ArrayBuffer> ab = array->Buffer();\n  double* fields = static_cast<double*>(ab->GetContents().Data());\n\n  // Set the Float64Array elements to be user / system values in microseconds.\n  fields[0] = MICROS_PER_SEC * rusage.ru_utime.tv_sec + rusage.ru_utime.tv_usec;\n  fields[1] = MICROS_PER_SEC * rusage.ru_stime.tv_sec + rusage.ru_stime.tv_usec;\n}\n\n"],[90010,0,"cpuUsage\", CPUUsage);\n\n  env->SetMethod(process, \""]],"_dtSpan":[534713,536127]},{"parents":[521],"numChildren":1,"agent":153,"time":"1970-01-01T00:00:00Z","patches":[[80543,0,"\n  if (icu_data_dir != nullptr) {\n    // Did the user attempt (via env var or parameter) to set an ICU path?\n    READONLY_PROPERTY(process,\n                      \"icu_data_dir\",\n                      OneByteString(env->isolate(), icu_data_dir));\n  }\n"]],"_dtSpan":[536127,536377]},{"parents":[522],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[1390,28,""],[32481,1,""],[32481,0,"S"],[32484,1,""],[32484,0,"ingEqu"],[32491,0,"lNoCa"],[32498,3,""],[32516,5,""],[32550,1,""],[32550,0,"S"],[32553,1,""],[32553,0,"ingEqu"],[32560,0,"lNoCa"],[32567,3,""],[32586,5,""],[32620,1,""],[32620,0,"S"],[32623,1,""],[32623,0,"ingEqualNoC"],[32637,3,""],[32656,5,""],[32691,1,""],[32691,0,"S"],[32694,1,""],[32694,0,"ingEqu"],[32701,0,"lNoCa"],[32708,3,""],[32728,5,""],[32764,1,""],[32764,0,"S"],[32767,1,""],[32767,0,"ingEqualNoC"],[32781,3,""],[32799,5,""],[32833,1,""],[32833,0,"S"],[32836,1,""],[32836,0,"ingEqualNoC"],[32850,3,""],[32869,5,""],[32903,1,""],[32903,0,"S"],[32906,1,""],[32906,0,"ingEqualNoC"],[32920,3,""],[32941,5,""],[32975,1,""],[32975,0,"S"],[32978,1,""],[32978,0,"ingEqu"],[32985,0,"lNoCa"],[32992,3,""],[33014,5,""],[33048,1,""],[33048,0,"S"],[33051,1,""],[33051,0,"ingEqualNoC"],[33065,3,""],[33085,5,""],[33121,1,""],[33121,0,"S"],[33124,1,""],[33124,0,"ingEqu"],[33131,0,"lNoCa"],[33138,3,""],[33158,5,""],[33194,1,""],[33194,0,"S"],[33197,1,""],[33197,0,"ingEqualNoC"],[33211,3,""],[33228,5,""]],"_dtSpan":[536377,536647]},{"parents":[523],"numChildren":1,"agent":4,"time":"1970-01-01T00:00:00Z","patches":[[87422,0,"debug-brk\n  if (debug_wait_connect) {\n    READONLY_PROPERTY(process, \"_debugWaitConnect\", True(env->isolate()));\n  }\n\n  // --"],[118208,171,""]],"_dtSpan":[536647,536943]},{"parents":[524],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[1474,0,"pthread.h>\n#include <"],[1824,183,""],[1825,5,""],[1826,67,""],[1827,2,""],[4061,0,"uv_mutex_t "],[4076,2,""],[4076,0,"_isol"],[4083,1,""],[4083,0,"e_"],[4086,0,"utex;\nstat"],[4098,1,""],[4098,0," v8::"],[4111,1,""],[4166,0,"#ifdef __POSIX__\nstatic uv_sem_t debug_semaphore;\n#endif\n\n"],[106173,14,""],[106174,5,""],[106175,13,""],[106176,27,""],[106176,0,"v_mu"],[106181,3,""],[106183,25,""],[106183,0,"_"],[106188,4,""],[106188,0,"(&"],[106191,10,""],[106191,0,"o"],[106193,1,""],[106193,0,"e_"],[106197,3,""],[106197,0,"ola"],[106202,2,""],[106202,0,"_m"],[106205,1,""],[106207,28,""],[106207,0,"x);"],[106243,9,""],[106244,9,""],[106337,0,"}\n"],[106341,5,""],[106341,0,"uv"],[106344,4,""],[106344,0,"m"],[106346,0,"tex_un"],[106353,6,""],[106353,0,"ock(&"],[106370,15,""],[106370,0,"_mu"],[106375,1,""],[106375,0,"x"],[106378,4,""],[106486,13,""],[106486,0,"uv_mut"],[106493,11,""],[106493,0,"x_"],[106496,3,""],[106496,0,"ock(&"],[106502,0,"o"],[106504,1,""],[106505,3,""],[106505,0,"_i"],[106508,8,""],[106508,0,"ol"],[106511,1,""],[106512,1,""],[106513,1,""],[106513,0,"_m"],[106516,2,""],[106516,0,"t"],[106518,2,""],[106518,0,"x);"],[106524,8,""],[106524,0,"if"],[106527,4,""],[106527,0,"("],[106529,0,"u"],[106531,6,""],[106532,4,""],[106533,2,""],[106555,17,""],[106556,3,""],[106557,16,""],[106557,0,"{\n"],[106560,2,""],[106561,11,""],[106600,0,"  "],[106654,0,"  "],[106688,0,"  "],[106747,0,"  "],[106800,0,"  "],[106830,0,"  "],[106852,0,"  "],[106859,0,"  "],[106902,0,"  "],[106948,5,""],[106948,0,"}\n  uv"],[106955,4,""],[106955,0,"m"],[106957,3,""],[106958,3,""],[106958,0,"ex_u"],[106963,0,"l"],[106965,0,"ck(&no"],[106980,9,""],[106981,6,""],[106981,0,"_mu"],[106986,1,""],[106986,0,"x"],[107063,7,""],[107063,0,"uv_sem_pos"],[107074,1,""],[107074,0,"(&d"],[107080,1,""],[107081,0,"_s"],[107084,0,"mapho"],[107090,1,""],[107090,0,"e"],[108091,0,"inline void* DebugSignalThreadMain(void* unused) {\n  for (;;) {\n    uv_sem_wait(&debug_semaphore);\n    TryStartDebugger();\n  }\n  return nullptr;\n}\n\n\n"],[108287,5,""],[108287,0,"Start a watchdog thread for calling v8::Debug::DebugBreak"],[108345,0,") "],[108348,0,"ecause\n  // it's "],[108367,0,"t safe t"],[108376,0," call di"],[108385,0,"ectly from the signal han"],[108411,0,"ler, it can\n  // deadlock with t"],[108444,0,"e thread it interr"],[108463,0,"pts.\n  CHECK_EQ(0, uv_sem_"],[108490,0,"nit(&debug_"],[108502,0,"emaphore, 0)"],[108515,0,";\n "],[108519,0,"pthread_attr_t attr;\n  CHECK_EQ(0, pthread_attr_init(&attr));\n  // Don't shrink the thread's stack on FreeB"],[108627,0,"D.  Said platform decided to\n  // follow the pthreads specification to t"],[108700,0,"e letter rather than in spirit:\n  // https://lists.freebsd."],[108760,0,"rg/pipermail/freebsd-c"],[108783,0,"rrent/2014-March/048885.htm"],[108811,0,"\n#ifn"],[108817,0,"ef"],[108820,1,""],[108820,0,"__Fre"],[108826,0,"BSD__\n  CHECK_EQ(0, pthread_attr_setstacksize(&attr, PTHREAD_STACK_MIN));\n#endif  // __FreeBSD__\n  CHECK_EQ(0,"],[108938,0,"thread_attr_setd"],[108955,0,"tachstate(&att"],[108970,1,""],[108970,0,", PTHREAD_CREATE_DETACHED));\n  s"],[109003,0,"gset_t sigma"],[109016,0,"k;\n  sigfillset(&sigmask);\n  CHECK_EQ(0, pthread_sigmask(SIG_SETMASK, &sigmask, &sigmask));\n  pthread_t thread;\n  c"],[109132,0,"nst int err =\n      pthread_create(&thread, &attr, DebugSigna"],[109194,0,"ThreadM"],[109202,0,"in, nullp"],[109212,0,"r);\n  CHECK_EQ(0, pthr"],[109235,0,"ad_sigmask(SIG_SETMASK,"],[109259,1,""],[109259,0,"&sigmask, nullpt"],[109276,0,"));\n"],[109281,0," CHECK_EQ(0, "],[109295,0,"thread_attr_d"],[109309,0,"st"],[109312,2,""],[109313,1,""],[109313,0,"y(&at"],[109319,0,"r));\n  if ("],[109331,1,""],[109331,0,"rr != 0) {\n    fprin"],[109352,0,"f(stderr"],[109362,0,"\""],[109365,0,"de[%d]: p"],[109375,0,"hread_create: %s\\n\","],[109397,1,""],[109397,0,"etpid(), strerr"],[109413,0,"r(err));\n    fflush(stderr);\n    // Leave SIGUSR1 "],[109464,0,"locked.  We don't inst"],[109488,0,"l a signal handler,\n    // receiving the signal would terminate the process"],[109567,0,"  return -err;\n  }\n  "],[109722,1,""],[109723,7,""],[109724,12,""],[116737,0,"CHECK_EQ(0, uv_mutex_init(&node_isolate_mutex));\n\n  "],[126490,0,"\n"],[126493,4,""],[126493,0,"uv_mu"],[126499,2,""],[126499,0,"ex_lo"],[126506,2,""],[126506,0,"(&nod"],[126512,2,""],[126513,0,"is"],[126516,2,""],[126516,0,"lat"],[126520,1,""],[126520,0,"_mu"],[126524,1,""],[126524,0,"ex"],[126527,2,""],[126527,0,";"],[126531,0,"if"],[126534,1,""],[126534,0,"("],[126536,0,"n"],[126538,2,""],[126538,0,"t"],[126540,5,""],[126540,0,"nc"],[126543,0,"_da"],[126547,2,""],[126548,11,""],[126550,7,""],[126550,0,"is_m"],[126555,2,""],[126557,12,""],[126558,4,""],[126559,3,""],[126559,0,")"],[126561,2,""],[126561,0,"{"],[126565,2,""],[126566,7,""],[126567,6,""],[126567,0,"CHECK_EQ("],[126577,4,""],[126578,3,""],[126578,0,"d"],[126580,6,""],[126580,0,"_"],[126590,2,""],[126590,0,"nullptr);\n"],[126601,2,""],[126602,4,""],[126603,1,""],[126604,6,""],[126605,1,""],[126605,0,"od"],[126608,2,""],[126608,0,"_is"],[126612,0,"late"],[126617,0,"= "],[126620,0,"sola"],[126625,0,"e;"],[126630,2,""],[126630,0,"}\n"],[126633,4,""],[126634,2,""],[126634,0,"uv_mut"],[126641,0,"x_u"],[126645,4,""],[126645,0,"lock(&"],[126652,0,"od"],[126655,3,""],[126655,0,"_"],[126657,9,""],[126658,7,""],[126659,2,""],[126659,0,"l"],[126661,2,""],[126662,1,""],[126663,6,""],[126663,0,"_m"],[126666,6,""],[126667,2,""],[126668,3,""],[126668,0,"x);\n"],[126679,3,""],[126680,0,"r"],[126682,1,""],[126683,0,"k_h"],[126687,0,"ap"],[126690,2,""],[126690,0,"objec"],[126696,4,""],[126697,6,""],[126698,1,""],[126698,0," {"],[126705,12,""],[126705,0,"iso"],[126709,0,"ate->GetHea"],[126721,1,""],[126721,0,"P"],[126723,3,""],[126724,3,""],[126724,0,"f"],[126726,2,""],[126727,0,"er()->St"],[126736,0,"r"],[126738,6,""],[126738,0,"Tr"],[126741,0,"cki"],[126746,0,"H"],[126748,2,""],[126748,0,"apObject"],[126757,3,""],[126757,0,"("],[126759,0,"ru"],[126762,1,""],[126765,0,"  }\n"],[128522,7,""],[128522,0,"uv_mu"],[128528,3,""],[128529,0,"x"],[128531,0,"lock(&no"],[128540,0,"e_isol"],[128548,5,""],[128548,0,"e"],[128551,5,""],[128551,0,"utex"],[128556,2,""],[128556,0,";"],[128560,1,""],[128560,0,"if"],[128563,5,""],[128563,0,"("],[128565,3,""],[128566,3,""],[128566,0,"d"],[128568,2,""],[128568,0,"_"],[128570,3,""],[128571,4,""],[128571,0,"o"],[128573,2,""],[128574,3,""],[128574,0,"t"],[128576,2,""],[128577,0,"== i"],[128582,8,""],[128582,0,"ol"],[128585,1,""],[128586,1,""],[128587,7,""],[128587,0,")"],[128593,4,""],[128593,0,"nod"],[128597,2,""],[128597,0,"_"],[128606,1,""],[128609,0,"ullptr;\n  uv_mutex_unlock(&n"],[128647,2,""],[128648,9,""],[128648,0,"_m"],[128651,3,""],[128652,2,""],[128652,0,"ex"],[128656,15,""]],"_dtSpan":[536943,539837]},{"parents":[525],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[3889,0,"Set in node.cc by ParseArgs when --"],[3926,0,"eserve-symlinks is used.\n// Used in node_c"],[3969,0,"nfig.c"],[3976,0," to s"],[3982,0,"t a con"],[3990,0,"tant on proce"],[4004,0,"s.binding('config')\n// that is used by lib/module.js\nbool config_preserve_symlinks = false;\n\n// process"],[97903,0,"         \"  --preserve-symlinks   preserve symbolic links when resolving\\n\"\n         \"                        and caching modules.\\n\"\n"],[103027,0,"eserve-symlinks\") == 0) {\n      config_preserve_symlinks = true;\n    } else if (strcmp(arg, \"--pr"],[64793,0,"nv->isolate(), e"]],"_dtSpan":[539837,540295]},{"parents":[526],"numChildren":1,"agent":29,"time":"1970-01-01T00:00:00Z","patches":[[94518,0,"\nvoid FreeEnvironment(Environment* env) {\n  CHECK_NE(env, nullptr);\n  env->Dispose();\n}\n\n\n"]],"_dtSpan":[540295,540385]},{"parents":[527],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[37203,4,""],[37203,0,"Maybe"],[37209,0,"0"],[37267,4,""],[37267,0,"Maybe"],[37273,0,"0"]],"_dtSpan":[540385,540405]},{"parents":[528],"numChildren":1,"agent":116,"time":"1970-01-01T00:00:00Z","patches":[[2982,0,"#if HAVE_INSPECTOR\nstatic bool use_inspector = false;\n#endif\n"],[95374,0,"#if HAVE_INSPECTOR\n  // Specifying both --inspect and --debug means debugging is on, using Chromium\n  // inspector.\n  } else if (!strcmp(arg, \"--inspect\")) {\n    use_debug_agent = true;\n    use_inspector = true;\n  } else if (!strncmp(arg, \"--inspect=\", sizeof(\"--inspect=\") - 1)) {\n    use_debug_agent = true;\n    use_inspector = true;\n    port = arg + sizeof(\"--inspect=\") - 1;\n#else\n"],[95768,0,"if (!strncmp(arg, \"--inspect\", sizeof(\"--inspect\") - 1)) "],[95831,0,"fprintf(stderr,\n            \"Inspecto"],[95869,0," support is not available with this Node.js build\\n\");\n    r"],[95942,0,"#endif\n"],[95952,0," else {"],[95960,0,"    return false;"],[95980,0,"}\n\n  "],[106312,0,"#if HAVE_INSPECTOR"],[106333,0,"if (us"],[106340,0,"_i"],[106343,0,"spector) {\n    en"],[106363,0,"inspector_agent()->Start("],[106390,0,"fault_platform, debug_port, wait);\n    debugger_running = true;\n  } else {\n#endif\n    env->de"],[106529,0,"  "],[106570,0,"  "],[106639,0,"#if"],[106643,0,"HAVE_INSPECTOR\n  }\n#endif\n\n "],[106922,0,"#if HAVE_INSPECTOR"],[106943,0,"if (use_inspector) {\n    return;\n  }\n#endif\n\n  "],[115814,0,"#if HAVE_INSPECTOR\n    if (use_inspector) {\n      env->inspector_agent()->Stop();\n    } else {\n#endif\n  "],[115953,0,"#if HAVE_INSPECTOR\n    }\n#endif\n"],[129955,0,"HAVE_INSPECTOR\n    if (env->inspector_agent()->connected()) {\n      // Restore signal dispositions, the app is done and is no longer\n      // capable of handling signals.\n#ifdef __POSIX__\n      struct sigaction act;\n      memset(&act, 0, sizeof(act));\n      for (unsigned nr = 1; nr < 32; nr += 1) {\n        if (nr == SIGKILL || nr == SIGSTOP || nr == SIGPROF)\n          continue;\n        act.sa_handler = (nr == SIGPIPE) ? SIG_IGN : SIG_DFL;\n        CHECK_EQ(0, sigaction(nr, &act, nullptr));\n      }\n#endif\n      env->inspector_agent()->WaitForDisconnect();\n    }\n#endif\n\n#if "]],"_dtSpan":[540405,542016]},{"parents":[529],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[123229,1146,""],[123231,6,""],[123233,80,""],[123576,5,""],[123576,0,"Is"],[123579,2,""],[123579,0,"lat"],[123583,1,""],[123583,0,"Da"],[123586,0,"a"],[123595,5,""],[123595,0,"Is"],[123598,2,""],[123598,0,"lat"],[123602,1,""],[123602,0,"Da"],[123605,0,"a"],[123624,1,""],[123625,0,"uv_loop_t*"],[123636,0,"loop)"],[123642,0,"{\n"],[123646,0,"return"],[123653,0,"new"],[123657,0,"IsolateData(isolate,"],[123678,0,"loop);\n}\n\n\nvoid"],[123694,0,"FreeIsolateData(IsolateData*"],[123723,0,"isolate_data)"],[123737,0,"{\n"],[123741,0,"delete"],[123748,0,"isolate_data;\n}\n\n\nEnvironment*"],[123779,17,""],[123779,0,"CreateEn"],[123788,2,""],[123788,0,"ir"],[123791,0,"nment(Is"],[123800,2,""],[123800,0,"lateDa"],[123807,0,"a"],[123810,2,""],[123810,0,"is"],[123813,1,""],[123813,0,"late_data"],[124087,0,"Isolate* isolate = context->GetIsolate();\n  "],[124246,1,""],[124246,0,"is"],[124249,1,""],[124249,0,"la"],[124253,1,""],[124253,0,"_da"],[124257,0,"a"],[124260,2,""],[124260,0,"c"],[124262,1,""],[124262,0,"ntext"],[127496,0,"Context::Scope context_scope(context);\n\n    // FIXM"],[127548,0,"(b"],[127551,0,"oordhuis) Work around V8 bug: v8::Pri"],[127589,0,"ate::ForAp"],[127600,0,"() dereferences\n    // a nullpt"],[127632,0," when a c"],[127643,0,"text hasn't been entered first.  The sy"],[127683,0,"bol r"],[127689,0,"gistry\n    // is a lazily created JS object but object instantiation does not work\n    // without a co"],[127793,0,"ext.\n    IsolateData isolate_data(isolate, instance_data->event_loop());\n\n    Environment"],[127908,0,"&"],[127916,0,"_data"],[127922,0,"\n                                        "],[127972,0,"\n                                         instance_data->argc(),\n                                         instance_data->argv(),\n                                         instance_data->exec_argc(),\n                                        "],[128224,0,"->exec_argv()"],[128240,0,"\n"],[128280,43,""],[127444,1,""],[127444,0,"Is"],[127447,2,""],[127448,13,""],[127448,0,"a"],[127451,1,""],[127451,0,"Da"],[127454,2,""],[127454,0,"a"],[127456,1,""],[127456,0,"is"],[127459,1,""],[127459,0,"la"],[127463,1,""],[127463,0,"_da"],[127467,5,""],[127467,0,"a"],[127476,3,""],[127476,0,","],[127478,5,""],[127478,0,"i"],[127480,3,""],[127480,0,"s"],[127482,3,""],[127482,0,"an"],[127485,2,""],[127486,4,""],[127486,0,"_da"],[127490,0,"a->"],[127494,1,""],[127494,0,"ven"],[127499,2,""],[127499,0,"lo"],[127503,1,""],[127504,7,""],[127505,0,")"],[127508,1,""],[127512,11,""],[127512,0,"L"],[127514,14,""],[127514,0,"c"],[127516,1,""],[127516,0,"l<C"],[127520,1,""],[127521,19,""],[127523,38,""],[127523,0,"x"],[127525,6,""],[127525,0,">"],[127527,2,""],[127535,3,""],[127535,0,"= Co"],[127540,1,""],[127541,6,""],[127542,1,""],[127542,0,"x"],[127544,2,""],[127544,0,"::N"],[127548,3,""],[127548,0,"w("],[127551,1,""],[127552,12,""],[127553,23,""],[127555,9,""],[127557,1,""],[127557,0,");\n"],[127561,2,""],[127562,6,""],[127563,3,""],[127564,0,"C"],[127566,7,""],[127567,1,""],[127568,2,""],[127568,0,"ex"],[127571,4,""],[127571,0,"::Sc"],[127576,4,""],[127576,0,"p"],[127578,5,""],[127579,22,""],[127586,7,""],[127586,0,"_"],[127588,0,"c"],[127590,15,""],[127590,0,"p"],[127592,5,""],[127593,2,""],[127593,0,"c"],[127595,7,""],[127596,1,""],[127597,3,""],[127598,11,""],[127598,0,"x"],[127600,7,""],[127602,1,""],[19330,26,""],[19330,0,"z"],[19332,6,""],[19333,3,""],[19333,0,"o"],[19335,3,""],[19336,4,""],[19336,0,"i"],[19339,6,""],[19340,2,""],[19341,9,""],[19341,0,"i"],[19343,2,""],[19343,0,"ld"],[19346,6,""],[19349,5,""],[19350,1,""],[19403,0,"z"],[19405,7,""],[19406,2,""],[19406,0,"o"],[19408,2,""],[19409,5,""],[19409,0,"i"],[19412,6,""],[19413,2,""],[19414,12,""],[19415,1,""],[19415,0,"e"],[19417,0,"d"],[19419,6,""],[19419,0," = 1"],[126682,1,""],[126705,29,""],[126741,0,"&"],[127375,0,",\n                             array_buffer_allocator.zero_fill_field()"],[127922,43,""],[129828,46,""],[130080,32,""],[130081,1,""],[19403,1,""],[19404,6,""],[19405,3,""],[19405,0,"s"],[19407,3,""],[19407,0,"\n"],[19409,1,""],[19410,3,""],[2071,28,""],[76025,435,""],[76029,41,""],[76030,12,""],[76031,142,""],[76164,0,"env->"],[76195,3,""],[76329,0,"env->"],[76359,3,""],[122447,301,""],[122448,2,""],[122449,17,""],[122450,6,""],[122452,21,""],[123048,1,""],[123148,31,""],[123149,10,""],[123152,2,""],[123153,32,""],[123159,288,""],[123159,0,"S"],[123161,11,""],[123163,45,""],[123165,2,""],[123166,15,""],[123167,6,""],[123168,7,""],[123169,226,""],[123170,7,""],[123171,2,""],[123172,14,""],[123173,232,""],[123173,0,"g"],[123175,14,""],[123178,212,""],[123178,0,"x"],[123180,1,""],[123181,4,""],[123182,1,""],[123183,23,""],[123184,26,""],[123185,75,""],[123186,32,""],[123187,51,""],[123188,6,""],[123189,130,""],[123189,0,"x"],[123191,10,""],[123192,35,""],[123193,26,""],[123194,17,""],[123195,12,""],[123196,44,""],[123197,58,""],[123198,19,""],[123199,4,""],[123214,37,""],[123216,406,""],[93814,89,""],[123003,10,""],[123003,0,"au"],[123006,1,""],[123006,0,"o"],[123014,0,"new "],[123029,5,""],[123137,0,"void FreeEnvironment(Environment* env) {\n  delete env;\n}\n\n\n"],[124334,7,""],[124335,2,""],[124336,4,""],[124338,8,""],[124353,40,""],[124354,1,""],[124361,1,""],[124361,0,");"],[124364,11,""],[124368,26,""],[124368,0,"env.Start("],[124401,7,""],[124415,20,""],[124438,9,""],[124452,18,""],[124480,11,""],[124494,16,""],[124520,0,",\n              v8_is_profiling"],[124753,0,"&"],[124840,0,"&"],[124869,0,"&"],[124890,2,""],[124890,0,"."],[125009,0,"&"],[125179,2,""],[125179,0,"."],[125331,0,"&"],[125504,2,""],[125504,0,"."],[125544,2,""],[125544,0,"."],[125659,2,""],[125659,0,"."],[125716,0,"&"],[125818,0,"&"],[125856,2,""],[125856,0,"."],[126347,2,""],[126347,0,"."],[126464,40,""]],"_dtSpan":[542016,548690]},{"parents":[530],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[11648,1238,""],[27404,40,""],[27405,20,""],[27406,1,""],[27407,25,""],[27408,26,""],[27409,44,""],[27410,32,""],[27411,203,""]],"_dtSpan":[548690,550319]},{"parents":[531],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[30466,0,"l':\n      // latin1\n      if (encoding[1] == 'a') {\n        if (strncmp(encoding + 2, \"tin1\", 4) == 0)\n          return LATIN1;\n      }\n    case '"],[30732,1,""],[30732,0,"LAT"],[30737,3,""],[30737,0,"1"],[31572,0,"latin1\")) {\n    return LATIN1;\n  } else if (StringEqualNoCase(encoding, \""],[32894,1,""],[32894,0,"lat"],[32899,3,""],[32899,0,"1"],[32770,179,""]],"_dtSpan":[550319,550733]},{"parents":[532],"numChildren":1,"agent":4,"time":"1970-01-01T00:00:00Z","patches":[[3129,0,"int inspector_port = 9229;\nstatic "],[93598,6,""],[93598,0,"int "],[93606,0,"_int"],[93633,6,""],[93637,0,"_int"],[93652,6,""],[93656,0,"_int"],[93786,0,"  if (use_inspector) {\n      inspector_port = port_int;\n    } else {\n      debug_port = port_int;\n    }\n  "],[104096,1,""],[104096,0,"insp"],[104101,3,""],[104101,0,"ctor"],[104332,19,""],[104335,10,""],[104374,0,"  "],[104450,0,"  "],[104472,0,"  "],[104484,0,"  "],[104488,0,"#if HAVE_INSPECTOR\n  }\n#endif\n"]],"_dtSpan":[550733,550986]},{"parents":[533],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[124438,1,""],[124438,0,"IsC"]],"_dtSpan":[550986,550990]},{"parents":[534],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[30640,0,"  break;\n    "]],"_dtSpan":[550990,551003]},{"parents":[535],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[93797,0,"#if HAVE_INSPECTOR\n"],[93887,0,"#endif\n"],[93923,0,"#if HAVE_INSPECTOR\n"],[93948,0,"#endif\n"]],"_dtSpan":[551003,551055]},{"parents":[536],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[4494,0,"static const unsigned kMaxSignal = 32;\n"],[51440,0,"static void WaitForInspectorDisconnect(Environment* env) {\n#if HAVE_INSPECTOR\n  if (env->inspector_agent()->IsConnected()) {\n    // Restore signal dispositions, the app is done and is no longer\n    // capable of handling signals.\n#ifdef __POSIX__\n    struct sigaction act;\n    memset(&act, 0, sizeof(act));\n    for (unsigned nr = 1; nr < kMaxSignal; nr += 1) {\n      if (nr == SIGKILL || nr == SIGSTOP || nr == SIGPROF)\n        continue;\n      act.sa_handler = (nr == SIGPIPE) ? SIG_IGN : SIG_DFL;\n      CHECK_EQ(0, sigaction(nr, &act, nullptr));\n    }\n#endif\n    env->inspector_agent()->WaitForDisconnect();\n  }\n#endif\n}\n\n\n"],[52119,0,"WaitForInspectorDisconnect(Environment::GetCurrent(args));\n  "],[115566,2,""],[115566,0,"kMaxSignal"],[125183,68,""],[125184,70,""],[125185,1,""],[125189,92,""],[125189,0,"W"],[125191,8,""],[125192,7,""],[125193,110,""],[125194,13,""],[125195,35,""],[125196,26,""],[125197,84,""],[125202,16,""],[125203,1,""],[125216,0,"&env"],[125222,14,""]],"_dtSpan":[551055,552341]},{"parents":[537],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[90840,171,""],[91142,0,"// Execute the lib/internal/bootstrap_node.js file which was included as a\n  // static C string in node_natives.h by node_js2c.\n  // 'internal_bootstrap_node_native' is the string containing that source code.\n  "],[91418,0,"\n                                                   "],[91472,0,"bootstrap_"]],"_dtSpan":[552341,552785]},{"parents":[538],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[89805,7,""],[107134,7,""],[107173,4,""],[107200,3,""],[107229,6,""],[107256,1,""],[107274,8,""]],"_dtSpan":[552785,552821]},{"parents":[539],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[31754,0,"LATIN1;  // "],[31772,1,""],[31772,0," is a deprecated alias of LATIN1."],[4339,4,""],[4339,0,"M"],[4344,2,""],[106250,4,""],[106250,0,"M"],[106255,0,"::ScopedLock scoped"],[106280,1,""],[106429,40,""],[106536,4,""],[106536,0,"M"],[106541,0,"::ScopedLock scoped"],[106566,1,""],[107015,40,""],[116876,12,""],[116877,40,""],[123056,4,""],[123056,0,"{\n    M"],[123067,0,"::ScopedLock scoped"],[123092,1,""],[123115,0,"  "],[123153,0,"  "],[123192,0,"  "],[123220,0,"  "],[123226,37,""],[123226,0,"}"],[125289,4,""],[125289,0,"{\n    M"],[125300,0,"::ScopedLock scoped"],[125325,1,""],[125348,0,"  "],[125383,0,"  "],[125411,37,""],[125411,0,"}"]],"_dtSpan":[552821,553206]},{"parents":[540],"numChildren":1,"agent":150,"time":"1970-01-01T00:00:00Z","patches":[[785,0,"f NODE_USE_V8_PLATFORM\n#i"],[846,0,"end"],[850,0,"f  // NODE_USE_V8_PLATFORM\n#i"],[4456,0,"\n"],[4464,0,"struct {\n#if NODE_USE_V8_PLATFORM\n  void Initialize(int thread_pool_size) {\n    platform_ = "],[4560,0,"platform::CreateDefault"],[4591,0,"(thread_pool_size);\n    V8::InitializePlatform(platform_);\n  }\n\n  void PumpMessageLoop(Isolate"],[4687,0,"isolate) {\n    v8::platform::PumpMessageLoop(platform_, isolate);\n  }\n\n  voi"],[4764,0," Dispos"],[4772,0,"() {\n    delete plat"],[4793,0,"orm_;\n    pl"],[4806,0,"tform_ = n"],[4818,0,"lp"],[4821,0,"r;\n  }\n\n#if HAVE"],[4838,0,"INSPECTOR\n  void StartIns"],[4864,0,"ector(Environment *env, int port, boo"],[4902,0," w"],[4905,0,"i"],[4907,0,") {\n    env->inspector_agent()->Start(plat"],[4953,0,"_, port, wait)"],[4969,0,"  }"],[4974,0,"end"],[4979,0,"  // HAVE_INSPECTOR\n\n  v8::Platform* platform_;\n#else  // !NODE_USE_V8_PLATFORM\n  void Initialize(int thread_pool_size) {}\n  void PumpMessageLoop(Isolate* isolate) {}\n  void Dispose() {}\n#if HAVE_INSPECTOR\n  void StartInspector(Environment *env, int port, bool wait) {\n    env->ThrowError(\"Node compiled with NODE_USE_V8_PLATFORM=0\");\n  }\n#endif  // HAVE_INSPECTOR\n\n#en"],[5349,0,"if  // !NODE_USE_V8_PLATFORM\n} v8_platform;\n\n#ifd"],[105926,2,""],[105927,5,""],[105927,0,"8_"],[105930,2,""],[105930,0,"la"],[105933,0,"f"],[105936,10,""],[105936,0,"m."],[105943,2,""],[105943,0,"Insp"],[105948,4,""],[105948,0,"c"],[105950,6,""],[105952,1,""],[105952,0,"(env"],[125392,2,""],[125392,0,"_"],[125401,2,""],[125401,0,"."],[125418,18,""],[125524,2,""],[125524,0,"_"],[125533,2,""],[125533,0,"."],[125550,18,""],[127140,18,""],[127141,1,""],[127144,2,""],[127144,0,"_"],[127153,6,""],[127153,0,".Ini"],[127158,4,""],[127158,0,"i"],[127160,4,""],[127161,6,""],[127161,0,"ize"],[127203,8,""],[127204,16,""],[127207,20,""],[127705,14,""],[127705,0,"v8"],[127716,12,""],[127716,0,".Dis"],[127721,4,""],[127722,12,""],[127722,0,"se()"]],"_dtSpan":[553206,554403]},{"parents":[541],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[117897,0,"CHECK_EQ(0, "],[117958,0,"            "],[118018,0,"            "],[118065,0,")"],[61080,0,"DumpBacktrace(stderr);\n  "],[61080,25,""],[43116,0,"NO_RETURN void Abort() {\n  DumpBacktrace(stderr);\n  fflush(stderr);\n  ABORT_NO_BACKTRACE();\n}\n\n\n"],[43276,4,""],[43276,0,"bort"],[43212,0,"NO_RETURN void Assert(const char* const (*args)[4]) {\n  auto filename = (*args)[0];\n  auto linenum = (*args)[1];\n  auto message = (*args)[2];\n  auto function = (*args)[3];\n\n  char exepath[256];\n  size_t exepath_size = sizeof(exepath);\n  if (uv_exepath(exepath, &exepath_size))\n    snprintf(exepath, sizeof(exepath), \"node\");\n\n  char pid[12] = {0};\n#ifndef _WIN32\n  snprintf(pid, sizeof(pid), \"[%u]\", getpid());\n#endif\n\n  fprintf(stderr, \"%s%s: %s:%s:%s%s Assertion `%s' failed.\\n\",\n          exepath, pid, filename, linenum,\n          function, *function ? \":\" : \"\", message);\n  fflush(stderr);\n\n  Abort();\n}\n\n\n"]],"_dtSpan":[554403,555205]},{"parents":[542],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[34705,0,",\n                         enum ErrorHandlingMode mode"],[37656,2,""],[37656,0,"const bool can_set_arrow ="],[37683,1,""],[37725,0,";\n"],[37728,2,""],[37729,9,""],[37729,0,"// "],[37733,2,""],[37733,0,"f "],[37736,0,"lloca"],[37743,3,""],[37743,0,"ng a"],[37750,0,"w_st"],[37755,3,""],[37756,2,""],[37756,0,"failed,"],[37764,0,"print"],[37770,0,"it"],[37773,0,"out."],[37778,0,"Th"],[37782,2,""],[37782,0,"e's n"],[37788,6,""],[37789,6,""],[37789,0," much els"],[37799,2,""],[37800,0,"to"],[37803,0,"do.\n"],[37809,0,"//"],[37812,0,"If"],[37815,1,""],[37815,0,"it's"],[37820,1,""],[37821,4,""],[37822,0,"t a"],[37826,1,""],[37826,0," "],[37828,4,""],[37828,0,"rror"],[37833,1,""],[37834,0,"but"],[37838,0,"something"],[37848,0,"needs"],[37854,0,"to"],[37857,0,"be"],[37860,0,"printed"],[37868,0,"out"],[37872,0,"b"],[37874,4,""],[37874,0,"c"],[37876,6,""],[37876,0,"us"],[37879,0,"\n  // it'"],[37889,1,""],[37889,0," a fat"],[37896,1,""],[37896,0,"l "],[37899,1,""],[37899,0,"xce"],[37903,1,""],[37903,0,"t"],[37905,1,""],[37905,0,"on, "],[37910,3,""],[37910,0,"l"],[37912,3,""],[37913,5,""],[37914,0,"print"],[37920,0,"it"],[37923,0,"out"],[37927,0,"from"],[37932,0,"here.\n"],[37940,0,"//"],[37943,1,""],[37943,0,"Othe"],[37948,2,""],[37949,1,""],[37949,0,"i"],[37951,5,""],[37951,0,"e,"],[37954,1,""],[37954,0,"the"],[37958,0,"arrow"],[37964,0,"p"],[37966,0,"op"],[37969,2,""],[37970,3,""],[37970,0,"ty"],[37973,0,"will"],[37978,3,""],[37978,0,"be"],[37981,0,"attached"],[37990,2,""],[37990,0,"to"],[37993,3,""],[37993,0,"the "],[37998,0,"bje"],[38002,1,""],[38003,2,""],[38003,0," a"],[38006,0,"d"],[38008,1,""],[38008,0,"h"],[38010,1,""],[38010,0,"nd"],[38015,1,""],[38015,0,"\n  //"],[38021,3,""],[38021,0,"by "],[38025,0,"he"],[38028,1,""],[38028,0,"calle"],[38034,0,".\n  "],[38039,0,"f (!ca"],[38046,0,"_se"],[38050,0,"_arrow"],[38057,2,""],[38057,0,"||"],[38060,0,"(m"],[38063,1,""],[38063,0,"de == FATAL_ERROR && !err_obj->IsNa"],[38099,1,""],[38099,0,"iveError())) {"],[38116,0,"  "],[38148,0,"  "],[38160,0,"  "],[38192,0,"\n  "],[38220,0,"  "],[38255,0,"    return;\n  "],[38272,0,"  CHECK(err_obj->SetPrivate("],[38301,0,"            env->context(),\n            env->arrow_message_private_symbol(),\n            arrow_str).FromMaybe(false));\n}\n\n\n"],[38645,0,", FATAL_ERROR"]],"_dtSpan":[555205,555884]},{"parents":[543],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[1215,0,"\n#include <string>\n"],[3086,0,"lse\nstatic const bool use_inspector = false;\n#e"],[3222,0,"std::str"],[3232,0,"g debug_hos"],[3244,0,";"],[3246,0," // NOLINT(runtime/string)\nstatic int "],[3310,0,"std::string inspector_host;  // NOLINT(runtime/string)\nstatic "],[5015,3,""],[5016,16,""],[5078,0,"#if HAVE_INSPECTOR\n"],[5155,4,""],[5181,0,"  }\n"],[5351,19,""],[5496,27,""],[96040,0,"// XXX(bnoordhuis) Misnomer, configures "],[96085,0,"and listen address.\n    port "],[96771,1,""],[96772,0,"="],[96789,1,""],[96789,0,"retur"],[96795,0," "],[96797,0,"rue;\n  }\n\n "],[96809,3,""],[96809,0,"std::s"],[96816,1,""],[96816,0,"r"],[96819,0,"g* cons"],[96828,0,"the_host "],[96839,1,""],[96839,0,"use_inspec"],[96851,0,"r ? &"],[96857,1,""],[96857,0,"ns"],[96860,0,"ect"],[96865,0,"_hos"],[96870,3,""],[96871,0,":"],[96873,0,"&debug_host;\n"],[96889,1,""],[96889,0,"nt*"],[96893,1,""],[96893,0,"const the_"],[96907,0," = use"],[96916,0,"spec"],[96921,0,"or"],[96924,1,""],[96924,0,"?"],[96926,8,""],[96926,0,"&ins"],[96931,0,"ect"],[96936,1,""],[96937,2,""],[96937,0,"por"],[96942,1,""],[96942,0,":"],[96944,6,""],[96944,0,"&debug_port;\n\n"],[96959,2,""],[96960,0,"//"],[96963,0,"FIXME(bnoordhuis)"],[96981,0,"Move"],[96986,0,"IPv6"],[96991,0,"address"],[96999,1,""],[97000,0,"a"],[97002,0,"s"],[97005,0,"g logic "],[97014,2,""],[97014,0,"o lib/net.j"],[97026,0,".\n  // I"],[97035,1,""],[97035,0," se"],[97039,1,""],[97039,0,"ms "],[97043,4,""],[97044,0,"asona"],[97050,0,"le to s"],[97058,2,""],[97059,0,"p"],[97064,2,""],[97064,0,"[addres"],[97072,0,"]:port nota"],[97084,0,"ion\n"],[97089,2,""],[97090,0,"// "],[97096,0,"net.Serve"],[97106,0,"#listen() "],[97118,1,""],[97118,0,"d n"],[97122,0,"t.Socket#connect().\n"],[97143,4,""],[97144,0,"const size_"],[97156,0," p"],[97159,0,"rt_len ="],[97168,7,""],[97168,0,"strle"],[97174,1,""],[97174,0,"(port"],[97184,0,"if"],[97187,0,"(port[0] =="],[97199,0,"'['"],[97203,0,"&&"],[97206,1,""],[97206,0,"po"],[97209,2,""],[97210,3,""],[97210,0,"["],[97212,4,""],[97212,0,"ort_len"],[97220,0,"-"],[97222,0,"1]"],[97225,0,"=="],[97228,0,"']')"],[97233,0,"{\n   "],[97239,0,"th"],[97242,1,""],[97242,0,"_host->ass"],[97253,0,"gn(por"],[97260,1,""],[97260,0," + "],[97264,0,", port_len - "],[97285,0,"return true;\n  "],[97302,1,""],[97302,0,"\n  const char* const colon = strrchr(port, ':');\n  "],[97356,9,""],[97356,0,"(colon == nullptr) {\n    // "],[97385,4,""],[97385,0,"ither a port number or a host name.  Assume that"],[97438,0,"// "],[97444,2,""],[97444,0,"it'"],[97448,0," not all d"],[97459,1,""],[97459,0,"cimal digits, "],[97474,0,"t's a host "],[97486,0,"ame.\n    for ("],[97501,1,""],[97501,0,"iz"],[97504,1,""],[97504,0,"_"],[97506,0," n = 0; p"],[97517,0,"t[n] != '\\0'; n += 1"],[97548,2,""],[97548,0,"f ("],[97552,3,""],[97554,1,""],[97554,0,"t[n] < '0' || "],[97572,0,"[n] >"],[97578,0,"'9') {\n        *the_host "],[97609,2,""],[97609,0,";\n        retur"],[97625,0," "],[97627,0,"rue"],[97636,0,"  }\n    }\n  "],[97657,2,""],[97657,0,"    co"],[97664,1,""],[97664,0,"st bool sk"],[97675,2,""],[97675,0,"p"],[97677,0,"="],[97679,0,"(colon"],[97686,0,"> port && port[0]"],[97704,0,"== '['"],[97711,0,"&&"],[97714,1,""],[97714,0,"colon[-1] == ']');\n    th"],[97740,2,""],[97740,0,"_host->assi"],[97752,1,""],[97752,0,"n("],[97759,1,""],[97759,0,"+"],[97761,0,"ski"],[97765,0,", col"],[97771,0,"n - skip);\n  }\n\n  cha"],[97793,0,"* endp"],[97800,1,""],[97800,0,"r;\n  errno = 0;\n  const char* const d"],[97838,0,"gits = colon != nullptr ? colo"],[97869,0," + 1 : por"],[97882,1,""],[97882,0,"  const long result = strtol(dig"],[97915,1,""],[97915,0,"ts, &endptr, 10);  //"],[97937,5,""],[97937,0,"NOL"],[97942,4,""],[97943,2,""],[97943,0,"(runtime/int)"],[97959,0,"if (errno"],[97969,0,"!="],[97972,3,""],[97972,0,"0 || *"],[97981,0,"ptr != '\\0' || result < 1024 || result > 65535) {\n    fpr"],[98039,0,"nt"],[98042,0,"(stderr, \"Debug port must be in range 1024 to 65535.\\n\");\n    PrintHelp();\n    exit(12);"],[98138,0,"*the_po"],[98146,0,"t = static_cast<int>(result);\n\n  r"],[108284,3,""],[108285,16,""],[108406,7,""],[108524,0,"\n       "],[108568,0,"host, debug_"],[108674,5,""],[108675,0,"s:%"],[108690,0,"\n             "],[108711,0,"host.c_str(), debug_"],[108779,19,""],[108784,7,""],[108891,18,""],[108930,7,""]],"_dtSpan":[555884,557665]},{"parents":[544],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[5017,1,""],[5017,0,"bo"],[5020,2,""],[5020,0,"l"],[5101,0,"r"],[5103,0,"tur"],[5107,0," en"],[5164,0,"lse\n    return true;\n#e"],[108341,0,"debugger_running = "],[108413,29,""],[127465,0," {"],[127512,0,"      if (use_inspector && !debugger_running) {\n        exit(12);\n      }\n    }\n"]],"_dtSpan":[557665,557831]},{"parents":[545],"numChildren":1,"agent":50,"time":"1970-01-01T00:00:00Z","patches":[[71506,18,""],[71569,8,""],[71570,6,""],[71571,7,""],[71573,11,""],[71575,1,""],[71576,2,""],[71577,9,""],[71681,24,""],[71682,2,""],[71683,1,""],[71723,1,""],[71724,2,""],[71724,0,";"],[71726,2,""],[71726,0,"#endif\n\n"],[71739,1,""],[71739,0,"proc"],[71744,1,""],[71744,0,"ss."],[71748,3,""],[71749,0,"v"],[71751,4,""],[71751,0,"n"],[71753,4,""],[71753,0,"v"],[71755,6,""],[71756,5,""],[71757,1,""],[71758,7,""],[71760,0," no"],[71764,6,""],[71764,0,"-configu"],[71773,0,"abl"],[71777,3,""],[71778,0,"proper"],[71785,1,""],[71785,0,"i"],[71787,0,"s,"],[71790,3,""],[71791,1,""],[71791,0,"o"],[71793,1,""],[71793,0,"a"],[71795,0,"w"],[71797,3,""],[71797,0,"ys"],[71800,1,""],[71802,1,""],[71805,4,""],[71805,0,"r"],[71807,3,""],[71807,0,"turn"],[71812,1,""],[71813,0,"rue"],[71817,0,"l"],[71819,7,""],[71819,0,"ke"],[71824,2,""],[71825,3,""],[71826,3,""],[71826,0,"t"],[71828,0,"39"],[71831,3,""],[71831,0,"d"],[71833,18,""],[71835,7,""],[71836,2,""],[71836,0,"e"],[71838,4,""],[71838,0,"o"],[71840,25,""],[71841,2,""],[71841,0,"r"],[71843,1,""],[71844,3,""],[71846,31,""],[71846,0,"."],[71876,0,"t"],[71878,1,""],[71878,0,"ue"]],"_dtSpan":[557831,558166]},{"parents":[546],"numChildren":1,"agent":62,"time":"1970-01-01T00:00:00Z","patches":[[2582,18,""]],"_dtSpan":[558166,558184]},{"parents":[547],"numChildren":1,"agent":2,"time":"1970-01-01T00:00:00Z","patches":[[63027,0,"nt exit_code = 0;\n  i"],[63285,1,""],[63285,0,"_code = "],[63294,1,""],[63303,0,"if (exit_code == 0) {\n    "],[63367,0,"  "],[63437,0,"  "],[63477,0,"  "],[63550,0,"  "],[63580,0,"  "],[63644,0,"  "],[63685,0,"  "],[63746,0,"  "],[63791,0,"  "],[63797,1,""],[63797,0,"_code = "],[63806,1,""],[63810,0,"  "],[63817,0,"  "],[63823,0,"exit_code == 0 && "],[63880,0,"  "],[63924,0,"  "],[63930,0,"_code = 1;\n    }\n  }\n\n  if "],[63958,1,""],[63958,0,"exit_code) {\n#if HAVE_INSPECTOR\n    if (use_inspector) {\n      env->inspector_agent()->FatalException(error, message);\n    }\n#endif\n    exit(exit_code"]],"_dtSpan":[558184,558473]},{"parents":[548],"numChildren":1,"agent":90,"time":"1970-01-01T00:00:00Z","patches":[[5366,1,""],[5366,0,"bo"],[5369,2,""],[5369,0,"l"],[5495,0,"  return false;  // make compiler happy\n  "]],"_dtSpan":[558473,558521]},{"parents":[549],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[93256,28,""],[93257,5,""],[93258,12,""],[94031,0,"// The bootstrap_node.js file returns a function 'f'\n  "],[94275,0,"bootstrap_"],[94311,0,"\n "],[94314,0,"// "],[94336,1,""],[94337,4,""],[94452,1,""],[94452,0,"boot"],[94457,0,"t"],[94459,2,""],[94459,0,"ap_"],[94469,1,""],[94501,5,""],[94507,0,"like "]],"_dtSpan":[558521,558663]},{"parents":[550],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[3215,0,"*"],[3233,7,""],[3233,0,"cove"],[3238,3,""],[3239,1,""],[3239,0,"ty[leak"],[3247,1,""],[3247,0,"d_"],[3251,0,"o"],[3253,2,""],[3253,0,"a"],[3255,1,""],[3255,0,"e]"],[3306,0,"*"],[3328,7,""],[3328,0,"cove"],[3333,2,""],[3333,0,"i"],[3335,2,""],[3335,0,"y[l"],[3339,1,""],[3339,0,"aked_"],[3346,0,"o"],[3348,2,""],[3348,0,"a"],[3350,1,""],[3350,0,"e]"],[96987,0,"*"],[97406,0,"*"],[97415,3,""],[97415,0," = new "],[97423,0,"td::"],[97428,0,"tr"],[97431,1,""],[97432,0,"g"],[97783,0,"new std::string("],[97803,0,")"],[97932,0,"*"],[97941,3,""],[97941,0," = new "],[97949,0,"td::"],[97954,0,"tr"],[97957,0,"n"],[97959,1,""],[108702,0,"const char* host = "],[108726,0,"_host ? debu"],[108739,0,"_host->c_str() : \"127.0.0.1\";\n    debugg"],[108829,6,""],[108951,14,""],[108952,6,""],[108954,5,""],[108956,3,""],[74625,0,"FIXED_ONE_BYTE_STRING("],[74652,0,"isolate(), \""],[74669,8,""],[74669,0,"\""],[74680,1,""],[74692,0,"FIXED_ONE_BYTE_STRING("],[74719,3,""],[74719,0,"i"],[74721,0,"ola"],[74725,4,""],[74725,0,"e"],[74730,0,"\"uv\"), "],[74804,0,"FIXED_ONE_BYTE_STRING("],[74832,4,""],[74832,0,"so"],[74835,3,""],[74835,0,"a"],[74837,4,""],[74837,0,"e"],[74842,0,"\"ipv6\"), "],[75028,0,"FIXED_ONE_BYTE_STRING("],[75055,0,"isolate(), \""],[75073,6,""],[75074,2,""],[75074,0,"\""],[75272,0,"FIXED_ONE_BYTE_STRING("],[75299,0,"isola"],[75305,0,"e(), \"t"],[75319,8,""],[75319,0,"\""],[75499,0,"FIXED_ONE_BYTE_STRING("],[75526,0,"isola"],[75532,0,"e(), \"t"],[75545,8,""],[75545,0,"\""],[75831,0,"FIXED_ONE_BYTE_STRING("],[75858,0,"isolate(), \""],[75878,8,""],[75878,0,"\""],[75905,0,"FIXED_ONE_BYTE_STRING("],[75932,0,"isola"],[75938,0,"e(), \"t"],[75946,2,""],[75947,6,""],[75947,0,"\""],[79658,1,""],[79658,0,"title_string = FIXED_ONE_BYTE_STRING(env->isol"],[79705,2,""],[79705,0,"te(), \"titl"],[79717,0,"\");\n"],[79722,1,""],[79723,0,"CHECK("],[79766,3,""],[79795,9,""],[79807,2,""],[79809,4,""],[79838,3,""],[79858,5,""],[79887,2,""],[79907,6,""],[79936,1,""],[79955,15,""],[85278,0,"FIXED_ONE_BYTE_STRING("],[85305,5,""],[85305,0,"i"],[85307,0,"ola"],[85311,0,"e(), \"a"],[85319,2,""],[85320,1,""],[85320,0,"v\""],[85569,0,"FIXED_ONE_BYTE_STRING("],[85596,0,"isolate(), \""],[85612,2,""],[85612,0,"A"],[85616,8,""],[85616,0,"\""],[85619,0,"\n              "],[86425,0,"\n"],[86428,0,"auto need_i"],[86440,0,"mediate_c"],[86450,1,""],[86450,0,"ll"],[86453,0,"ack_string =\n      FIXED_ONE_BYTE_STRING(env->isolate(), \"_needImmediat"],[86525,0,"Callback\");\n"],[86538,1,""],[86539,0,"CHECK("],[86581,29,""],[86582,7,""],[86590,0,"ediate"],[86598,0,"all"],[86602,0,"ack"],[86612,2,""],[86614,1,""],[86643,1,""],[86672,1,""],[86701,1,""],[86730,1,""],[86759,1,""],[86778,15,""],[89853,0,"FIXED_ONE_BYTE_STRING("],[89880,0,"isolat"],[89887,0,"(), \"e"],[89896,2,""],[89896,0,"P"],[89900,8,""],[89900,0,"\""],[89903,0,"\n              "],[89962,1,""],[89963,1,""],[89963,0,"uto de"],[89970,0,"ug_port_string = FIXED_ONE_BYTE_STRING(env->isolat"],[90021,0,"(),"],[90025,1,""],[90025,0,"\"debugPort\");\n"],[90040,0," CHECK("],[90113,7,""],[90130,2,""],[90132,1,""],[90161,1,""],[90178,1,""],[90207,1,""],[90224,1,""],[90253,1,""],[90272,15,""],[90285,1,""],[92450,8,""],[92450,0,"CHECK("],[92496,0,"\n                                "],[92551,15,""]],"_dtSpan":[558663,559883]},{"parents":[551],"numChildren":1,"agent":111,"time":"1970-01-01T00:00:00Z","patches":[[6451,0,"\n  // Don't include"],[6471,0,"the null"],[6480,0,"character in the output\n  CHECK_GT(n, 0);\n  "],[6567,0," - 1"]],"_dtSpan":[559883,559958]},{"parents":[552],"numChildren":1,"agent":4,"time":"1970-01-01T00:00:00Z","patches":[[92735,0,"Process"],[93812,0,"Process"]],"_dtSpan":[559958,559972]},{"parents":[553],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[5043,0,"const char* script_path,\n                      "],[5184,0,"scri"],[5189,0,"t_path, p"],[5470,0,"const char* script_path,\n                      "],[109104,0,"const char* path, "],[109241,0,"path, "],[109262,0,"\n                                                 "],[111163,0,"nullptr, "],[128425,0,"const char* path = instance_data->argc() > 1\n                         ? instance_data->argv()[1]\n                         : nullptr;\n      "],[128581,0,"path, "]],"_dtSpan":[559972,560307]},{"parents":[554],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[94837,411,""],[95703,0,"// Now we call 'f' with the 'process' variable that we've built up with\n  // all our bindings. Inside bootstrap_node.js we'll take care of\n  // assigning things to their places.\n\n  // We start the process this way in order to be more modular. Developers\n  // who do not like how bootstrap_node.js setups the module system but do\n  // like Node's I/O bindings may want to replace 'f' with their own function.\n  "]],"_dtSpan":[560307,561128]},{"parents":[555],"numChildren":1,"agent":102,"time":"1970-01-01T00:00:00Z","patches":[[19523,1,""],[19523,0,"node::C"],[19564,1,""],[19564,0,"node::M"]],"_dtSpan":[561128,561144]},{"parents":[556],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[95835,0,"and internal/process "],[95861,0,"\n  //"],[95879,5,""],[96036,0,"s "],[96040,1,""]],"_dtSpan":[561144,561178]},{"parents":[557],"numChildren":1,"agent":186,"time":"1970-01-01T00:00:00Z","patches":[[3295,18,""],[3296,32,""],[3297,14,""],[3298,4,""],[3299,3,""],[3300,7,""],[3301,21,""],[97564,152,""],[97843,3,""],[97843,0,"d"],[97845,0,"bug"],[98209,3,""],[98209,0,"d"],[98211,0,"bug"],[98371,3,""],[98371,0,"d"],[98373,0,"bug"],[98784,3,""],[98784,0,"d"],[98786,0,"bug"],[109033,4,""],[109033,0,"d"],[109035,4,""],[109035,0,"bug"],[109044,50,""]],"_dtSpan":[561178,561519]},{"parents":[558],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[3265,0,"const "],[3277,0,"fault_de"],[3288,0,"ger"],[3322,0,"default_inspector_port = 9229;\nstatic int debug_port = -1;\nstatic const int "],[76404,0,"t port = debug_port;\n  i"],[76429,0," (p"],[76433,0,"rt < 0)\n    port = use_inspector ? default_inspector_port : default_debugger_port;\n  info"],[76544,6,""],[109235,0,"\n       "],[109254,0," >= 0 ? debug_port : default_inspector_port"],[109488,0,"int port = debug_port >= 0 ? debug_port : default_debugger_port;\n    "],[109619,6,""],[109736,6,""]],"_dtSpan":[561519,561866]},{"parents":[559],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[19534,3,""],[19523,0,"Unchecked"],[19570,0,"Unchecked"],[4389,0,"bool v8_initialized = false;\n\n"],[130909,0,"  v8_initialized = true;\n"],[131414,0,"v8_initialized = false;\n  "]],"_dtSpan":[561866,561968]},{"parents":[560],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[61358,1,""],[61358,0,"The m"],[61369,0,"'%s'\"\n             \"\\nwas compiled against a different Node.js "],[61440,1,""],[61440,0,"us"],[61443,7,""],[61443,0,"ng\"\n            "],[61460,0,"\"\\nNODE_MODULE_V"],[61477,7,""],[61477,0,"RSION"],[61485,1,""],[61485,0,". This"],[61492,1,""],[61492,0,"versi"],[61498,1,""],[61498,0,"n"],[61500,1,""],[61500,0,"of No"],[61506,0,"e"],[61508,0,"js requires"],[61520,1,""],[61534,0,"\"\\n"],[61556,0," %d. Please try re-compiling or \"\n             \"re-installing\\nthe module (for instance, using `npm rebuild` or\"\n             \"`npm install`).\",\n             *filename"],[61739,0,", NODE_MODULE_VERSION"]],"_dtSpan":[561968,562316]},{"parents":[561],"numChildren":1,"agent":105,"time":"1970-01-01T00:00:00Z","patches":[[71389,1,""],[71392,0,"ue"]],"_dtSpan":[562316,562319]},{"parents":[562],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[3948,0,"\n#"],[3951,2,""],[3951,0,"if"],[4060,0," endif  // NODE_FIPS_MODE\nconst char* openssl_config = nullptr;\n#"],[4130,0,"  // HAVE_OPENSSL"],[101563,0,"         \"  --openssl-config=path load OpenSSL configuration file from the\\n\"\n         \"                        specified path\\n\"\n"],[107981,0,"    } else if (strncmp(arg, \"--openssl-config=\", 17) == 0) {\n      openssl_config = arg + 17;\n"]],"_dtSpan":[562319,562631]},{"parents":[563],"numChildren":1,"agent":95,"time":"1970-01-01T00:00:00Z","patches":[[122480,0,"Allow for environment set preserving symlinks.\n  if (auto preserve_symlinks = secure_getenv(\"NODE_PRESERVE_SYMLINKS\")) {\n    config_preserve_symlinks = (*preserve_symlinks == '1');\n  }\n\n  // "]],"_dtSpan":[562631,562822]},{"parents":[564],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[127778,11,""],[127780,6,""],[127780,0,"li"],[127784,1,""],[127785,5,""],[127787,1,""],[127788,6,""],[127789,0,"St"],[127792,0,"rt(uv_"],[127799,1,""],[127800,0,"op_t*"],[127806,4,""],[127807,5,""],[127807,0,"v"],[127809,1,""],[127809,0,"n"],[127811,0,"_"],[127813,3,""],[127814,1,""],[127814,0,"op,\n             "],[127832,3,""],[127833,7,""],[127834,4,""],[127837,1,""],[127838,0," "],[127840,1,""],[127840,0,"rgc, "],[127846,3,""],[127846,0,"on"],[127849,2,""],[127850,7,""],[127851,2,""],[127851,0,"ch"],[127855,2,""],[127855,0,"* c"],[127859,3,""],[127862,9,""],[127867,3,""],[127867,0,"v,"],[127872,17,""],[127873,0,"              "],[127889,1,""],[127890,2,""],[127890,0," exe"],[127895,1,""],[127896,3,""],[127897,0,"rgc,"],[127902,9,""],[127903,5,""],[127904,3,""],[127907,2,""],[127907,0," "],[127909,2,""],[127909,0,"h"],[127911,0,"r* cons"],[127919,1,""],[127920,2,""],[127920,0," exec_"],[127929,0,"v"],[127931,1,""],[127931,0," {"],[128281,36,""],[128282,2,""],[128319,2,""],[128349,2,""],[128351,4,""],[128451,0,"int exit_code;\n  "],[128618,15,""],[128628,2,""],[128856,4,""],[128857,11,""],[128860,2,""],[128861,5,""],[128862,13,""],[128863,11,""],[128866,2,""],[128867,7,""],[128868,14,""],[128869,8,""],[128877,2,""],[128878,9,""],[128879,20,""],[128888,2,""],[128889,12,""],[128890,2,""],[129056,15,""],[129071,2,""],[129100,10,""],[129101,5,""],[129104,2,""],[129108,14,""],[129109,11,""],[129111,10,""],[129112,5,""],[129115,2,""],[129118,21,""],[129119,4,""],[129437,15,""],[129452,1,""],[129453,1,""],[130114,4,""],[130146,81,""],[130470,0,"\n  return exit_code;\n"],[131337,1,""],[131339,0,"const "],[131360,3,""],[131363,2,""],[131367,7,""],[131367,0,"S"],[131370,19,""],[131370,0,"r"],[131372,1,""],[131373,59,""],[131391,6,""],[131392,29,""],[131397,4,""],[131398,38,""],[131399,12,""],[131400,6,""],[131402,1,""],[131403,10,""],[131404,25,""],[131414,8,""],[131415,27,""],[131424,134,""],[131426,4,""],[93380,57,""],[94285,99,""],[94286,2,""],[94287,1,""],[94288,9,""],[94289,25,""],[127602,3,""],[127602,0,"Iso"],[127606,4,""],[127606,0,"a"],[127608,0,"e"],[127611,0,"isolat"],[127618,1,""],[127618,0,", Isolat"],[127627,1,""],[127627,0,"Da"],[127630,3,""],[127630,0,"a* is"],[127636,1,""],[127636,0,"late_data"],[127759,446,""],[127760,90,""],[127762,71,""],[127765,2,""],[127800,2,""],[127802,122,""],[127850,2,""],[127891,2,""],[127909,1,""],[127933,2,""],[127998,2,""],[128000,92,""],[128045,2,""],[128068,1,""],[128072,1,""],[128121,1,""],[128125,1,""],[128169,1,""],[128173,1,""],[128212,2,""],[128213,2,""],[128219,0,"r"],[128221,2,""],[128222,1,""],[128222,0,"urn "],[128228,1,""],[128229,1,""],[128231,0,"//"],[128234,1,""],[128234,0,"Signal"],[128241,0,"internal"],[128250,1,""],[128250,0,"error."],[128257,2,""],[128264,2,""],[128266,1,""],[128270,1,""],[128324,1,""],[128328,1,""],[128351,2,""],[128356,2,""],[128399,2,""],[128418,1,""],[128420,1,""],[128441,1,""],[128445,1,""],[128465,1,""],[128467,1,""],[128469,1,""],[128473,1,""],[128504,2,""],[128519,2,""],[128534,2,""],[128572,1,""],[128578,1,""],[128625,1,""],[128631,1,""],[128652,2,""],[128698,2,""],[128737,2,""],[128805,2,""],[128864,2,""],[128904,1,""],[128912,1,""],[128962,1,""],[128972,1,""],[128985,2,""],[128993,2,""],[129023,2,""],[129026,1,""],[129028,1,""],[129061,0,"const"],[129067,0,"int"],[129099,1,""],[129101,1,""],[129119,1,""],[129121,1,""],[129185,0,"__lsan_do_leak_check();\n#endif\n\n  return exit_code;\n}\n\ninline"],[129247,0,"int"],[129251,0,"Start(uv"],[129260,0,"loop"],[129265,0,"t* event_"],[129275,0,"oop,\n                 int argc, con"],[129311,0,"t ch"],[129316,0,"r* co"],[129322,0,"st* argv,\n                 int exec_argc, const char* const* exec_argv) {\n  Isolate::CreateParams params;\n  ArrayBufferAllocator allocator;\n  params.array"],[129477,0,"buffer_allocator = &allocator;\n#if"],[129512,0,"ef NODE_ENABLE_VTUNE_PROFILING\n  params.c"],[129554,0,"de"],[129557,0,"event_handler = vTune::GetVtuneCodeEventHand"],[129603,0,"r();\n#endif\n\n  Isol"],[129623,0,"te* const isolate = Isolate::New(params);\n  if (isolate == nullptr)\n    return 12;  // Signal internal error.\n\n  isolate->AddMessageListener(OnMessage);\n  isolate->SetAbortOnUncaughtExceptionCallbac"],[129822,1,""],[129822,0,"(ShouldAbortOnUn"],[129839,0,"aug"],[129843,0,"tException);\n  isolate->S"],[129869,0,"tAutorunMi"],[129880,0,"rotas"],[129886,0,"s"],[129888,0,"false"],[129896,1,""],[129896,0,"  isolate->S"],[129909,0,"tFatalErrorHa"],[129924,0,"ler(OnFatalError);\n\n  "],[129948,0," (track_heap_objects) {"],[129974,0,"  isolate->GetHeapProfiler()->StartTrackingHeapObjects(true);\n  "],[130104,0,"CHECK_EQ(node_"],[130119,1,""],[130119,0,"solate,"],[130127,1,""],[130128,0,"ullptr);\n    n"],[130154,1,""],[130163,1,""],[130163,0,";\n  }\n\n  int exit_code;"],[130189,0,"{\n"],[130195,1,""],[130195,0,"L"],[130197,1,""],[130197,0,"ck"],[130200,0,"r locker(isolate);\n    Isolate::Scope isolate"],[130246,0,"scope("],[130259,0,");\n  "],[130265,1,""],[130266,0,"Ha"],[130269,1,""],[130269,0,"d"],[130271,0,"eScope hand"],[130283,0,"e_sco"],[130289,0,"e(isola"],[130297,1,""],[130297,0,"e)"],[130303,3,""],[130305,5,""],[130305,0,"IsolateData isolate"],[130325,2,""],[130325,0,"data"],[130339,0,"eve"],[130343,1,""],[130343,0,"t_loop, a"],[130354,1,""],[130354,0,"oca"],[130358,0,"o"],[130360,0,".zero_fill_field()"],[130383,0,"  ex"],[130388,0,"t_code = Start(i"],[130410,3,""],[130410,0,", &"],[130415,0,"olate_data, argc, argv, exec_argc, exec_argv);\n  }\n\n  {\n    Mutex::Sco"],[130486,0,"edL"],[130490,0,"ck "],[130494,0,"cop"],[130498,0,"d_lock"],[130505,0,"node_isolate_mutex);\n    CHECK_EQ(node_isolate, isolate"],[130565,0,"  node_"],[130591,0,"  }\n"],[130598,0,"isolate->Dispose();\n\n  "],[130679,0,"atexit([] () { uv_tty_reset_mode(); });\n  "],[29768,1,""],[29788,1,""],[29860,1,""],[29870,1,""],[29973,12,""],[29973,0,"S"],[29975,6,""],[29976,10,""],[29977,4,""],[29978,9,""],[29978,0,"g>"],[29981,7,""],[29983,1,""],[29984,3,""],[29984,0,"hod_stri"],[29993,1,""],[29993,0,"g"],[29997,6,""],[29997,0,"O"],[29999,1,""],[30000,1,""],[30000,0,"By"],[30003,3,""],[30004,0,"S"],[30006,2,""],[30007,2,""],[30007,0,"i"],[30009,1,""],[30009,0,"g"],[30011,1,""],[30011,0,"is"],[30014,1,""],[30014,0,"la"],[30018,6,""],[30018,0,","],[30020,4,""],[30020,0,"m"],[30022,1,""],[30023,23,""],[30023,0,"h"],[30025,5,""],[30025,0,"d"],[30065,27,""],[30078,0,"isolat"],[30085,2,""],[30099,0,"_string"],[30120,1,""],[30170,1,""],[30216,1,""],[30290,1,""],[30300,1,""],[30403,4,""],[30403,0,"Valu"],[30408,2,""],[30411,6,""],[30411,0,"allback_v"],[30429,12,""],[30429,0,"G"],[30431,1,""],[30433,0,"symbol"],[30444,3,""],[30445,3,""],[30445,0,"f (callback_v.IsE"],[30463,2,""],[30463,0,"p"],[30465,1,""],[30465,0,"y())"],[30470,0,"r"],[30472,0,"tur"],[30476,1,""],[30477,1,""],[30477,0,"Local<Value>();\n "],[30495,1,""],[30495,0,"if (!callback_v->IsFu"],[30517,1,""],[30517,0,"ct"],[30520,1,""],[30522,7,""],[30522,0,"()) r"],[30529,1,""],[30530,1,""],[30531,1,""],[30532,2,""],[30532,0," Lo"],[30536,3,""],[30536,0,"al<Valu"],[30544,2,""],[30544,0,">("],[30551,1,""],[30551,0,"L"],[30553,0,"cal<Fu"],[30560,3,""],[30560,0,"c"],[30562,4,""],[30562,0,"i"],[30564,2,""],[30564,0,"n>"],[30568,6,""],[30568,0,"allback = callback"],[30587,0,"v.A"],[30591,5,""],[30591,0,"<Fun"],[30596,0,"ti"],[30600,4,""],[30600,0,">("],[30634,34,""],[30647,0,"isolat"],[30654,2,""],[30662,5,""],[30662,0,"cal"],[30666,0,"back"],[30684,1,""],[30734,1,""],[30806,1,""],[30832,1,""],[30868,1,""],[30919,1,""],[30919,0,"// Ob"],[30925,4,""],[30925,0,"erve the following two su"],[30951,0,"t"],[30954,2,""],[30954,0,"ties:\n  //\n  // 1. The e"],[30979,0,"vironment is retrieve"],[31001,0," from the ca"],[31014,2,""],[31014,0,"lback function's "],[31033,1,""],[31033,0,"nt"],[31036,0,"xt.\n  // 2."],[31048,0,"T"],[31050,4,""],[31051,2,""],[31051,0," "],[31054,1,""],[31054,0,"nt"],[31057,1,""],[31057,0,"xt to enter "],[31071,0," retrieved fr"],[31085,2,""],[31085,0,"m "],[31088,0,"he "],[31092,2,""],[31092,0,"nvironment.\n  //"],[31111,2,""],[31111,0,"// Be"],[31118,2,""],[31118,0,"use of the AssignTo"],[31144,1,""],[31144,0,"()"],[31148,0,"all in src/n"],[31161,0,"de_co"],[31171,0,"ify.cc,\n"],[31180,1,""],[31181,1,""],[31181,0,"// th"],[31187,0," two "],[31193,5,""],[31193,0,"ont"],[31197,1,""],[31197,0,"x"],[31199,2,""],[31199,0,"s "],[31202,2,""],[31202,0,"eed "],[31207,0,"o"],[31209,0," b"],[31212,1,""],[31212,0," "],[31214,0,"he same.\n  EscapableHandleScope handle_scope"],[31259,0,"isolate"],[31315,0,"allback->CreationC"],[31339,0,"()"],[31375,0,"env->"],[31387,0,"()"],[31419,12,""],[31420,6,""],[31428,19,""],[31484,1,""],[87151,0,"FIXED_ONE_BYTE_STRING("],[87178,4,""],[87178,0,"i"],[87180,0,"ola"],[87184,4,""],[87184,0,"e"],[87189,0,"\"env\"), "]],"_dtSpan":[562822,567273]},{"parents":[565],"numChildren":1,"agent":153,"time":"1970-01-01T00:00:00Z","patches":[[82523,18,""],[82523,0,"// ICU-related "],[82546,2,""],[82547,13,""],[82547,0,"are"],[82551,0,"now"],[82555,0,"handled"],[82563,0,"on"],[82566,0,"the"],[82570,0,"js"],[82573,1,""],[82573,0,"s"],[82575,3,""],[82575,0,"de"],[82578,18,""],[82579,1,""],[82579,0,"see"],[82583,5,""],[82583,0,"boo"],[82587,2,""],[82587,0,"s"],[82590,5,""],[82590,0,"ap_"],[82594,5,""],[82595,3,""],[82595,0,"d"],[82597,20,""],[82597,0,".js"]],"_dtSpan":[567273,567421]},{"parents":[566],"numChildren":1,"agent":12,"time":"1970-01-01T00:00:00Z","patches":[[2327,0,"amedPropertyHandlerConfig"],[2353,0,"ration;\nusing v8::Nu"],[2532,0,"PropertyHandlerFlags;\nusing v8::"],[69985,6,""],[69985,0,"Name"],[71100,6,""],[71100,0,"Name"],[71783,6,""],[71783,0,"Name"],[72587,6,""],[72587,0,"Name"],[86716,0,"Handler("],[86744,2,""],[86744,0,"Co"],[86747,3,""],[86747,0,"figura"],[86754,4,""],[86754,0,"ion("],[86769,27,""],[86769,0,"EnvGetter,\n"],[86790,1,""],[86801,11,""],[86811,27,""],[86821,22,""],[86831,16,""],[86843,33,""],[86853,5,""],[86868,20,""],[86878,0,"env->as_external(),\n"],[86908,8,""],[86908,0,"Prop"],[86913,0,"rtyHa"],[86919,3,""],[86919,0,"dlerFl"],[86926,0,"g"],[86928,3,""],[86928,0,"::kOnlyIn"],[86940,0,"ceptStri"],[86949,3,""],[86949,0,"gs"],[86955,0,"\n"]],"_dtSpan":[567421,567813]},{"parents":[567],"numChildren":1,"agent":153,"time":"1970-01-01T00:00:00Z","patches":[[122136,0,"HAVE_I18N_SUPPORT)\n  // Set the ICU casing flag early\n  // so the user can disable a flag --foo at run-time by passing\n  // --no_foo from the command line.\n  const char icu_case_mapping[] = \"--icu_case_mapping\";\n  V8::SetFlagsFromString(icu_case_mapping, sizeof(icu_case_mapping) - 1);\n#endif\n\n#if defined(NODE_"]],"_dtSpan":[567813,568124]},{"parents":[568],"numChildren":1,"agent":186,"time":"1970-01-01T00:00:00Z","patches":[[2532,32,""],[70276,4,""],[70277,1,""],[70277,0,"ode"],[70282,0,"TwoByte"],[70299,0,"isolate, "],[71367,4,""],[71368,1,""],[71368,0,"ode"],[71373,0,"TwoByte"],[71390,0,"info.GetIsolate(), "],[71422,4,""],[71423,1,""],[71423,0,"ode"],[71428,0,"TwoByte"],[71445,0,"info.GetIsolate(), "],[72073,4,""],[72074,1,""],[72074,0,"ode"],[72079,0,"TwoByte"],[72096,0,"info.GetIsolate(), "],[72820,4,""],[72821,1,""],[72821,0,"ode"],[72826,0,"TwoByte"],[72843,0,"info.GetIsolate(), "],[86974,55,""]],"_dtSpan":[568124,568371]},{"parents":[569],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[55942,0,"  Local<Number> external_mem ="],[55975,0,"    Number::New(env->isolate(),\n                  env->isolate()->AdjustAmountOfExternalAllocatedMemory(0));\n\n  "],[56303,0,"  info->Set(env->external_string(), external_mem);\n"]],"_dtSpan":[568371,568564]},{"parents":[570],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[70267,0,"  if (property->IsSymbol()) {\n    return info.GetReturnValue().SetUndefined();\n  }\n"]],"_dtSpan":[568564,568647]},{"parents":[571],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[66227,0,"// Call process.emitWarning(str), fmt is a snprintf() format string\nvoid ProcessEmitWarning(Environment* env, const char* fmt, ...) {\n  char warning[1024];\n  va_list ap;\n\n  va_start(ap, fmt);\n  vsnprintf(warning, sizeof(warning), fmt, ap);\n  va_end(ap);\n\n  HandleScope handle_scope(env->isolate());\n  Context::Scope context_scope(env->context());\n\n  Local<Object> process = env->process_object();\n  MaybeLocal<Value> emit_warning = process->Get(env->context(),\n      FIXED_ONE_BYTE_STRING(env->isolate(), \"emitWarning\"));\n  Local<Value> arg = node::OneByteString(env->isolate(), warning);\n\n  Local<Value> f;\n\n  if (!emit_warning.ToLocal(&f)) return;\n  if (!f->IsFunction()) return;\n\n  // MakeCallback() unneeded, because emitWarning is internal code, it calls\n  // process.emit('warning', ..), but does so on the nextTick.\n  f.As<v8::Function>()->Call(process, 1, &arg);\n}\n\n"],[132714,0,"  if (const char* extra = secure_getenv(\"NODE_EXTRA_CA_CERTS\"))\n    crypto::UseExtraCaCerts(extra);\n"]],"_dtSpan":[568647,569621]},{"parents":[572],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[232,0,"#include \"node_debug_options.h\"\n"],[3088,19,""],[3096,14,""],[3097,1,""],[3098,26,""],[3102,9,""],[3104,4,""],[3105,30,""],[3106,103,""],[3107,163,""],[4454,0,"node::DebugOptions debug_options;\n\nstatic "],[4861,0,"#if"],[4865,0,"HAVE_INSPECTOR\n "],[4967,1,""],[4967,0,"co"],[4970,0,"s"],[4973,0,"node::DebugO"],[4986,2,""],[4987,1,""],[4987,0,"ions&"],[4993,1,""],[4994,5,""],[4994,0,"pt"],[4997,1,""],[4997,0,"ons"],[5004,3,""],[5005,16,""],[5069,0,"o"],[5071,2,""],[5072,4,""],[5073,1,""],[5073,0,"ons"],[5078,6,""],[5081,14,""],[5081,0,"}"],[5108,4,""],[64763,2,""],[64763,0,"d"],[64765,0,"bug"],[64769,0,"options."],[64786,0,"_enabled()"],[78013,24,""],[78014,3,""],[78015,89,""],[78037,0,"debug_o"],[78045,0,"ti"],[78048,0,"ns.po"],[78055,0,"()"],[78240,0,"o"],[78242,0,"ti"],[78245,0,"ns.set_po"],[78256,3,""],[78256,0,"("],[78276,0,")"],[90431,0,"options."],[90444,0,"for_"],[90455,0,"()"],[97504,1,""],[97524,333,""],[97525,54,""],[97526,14,""],[97528,42,""],[97530,6,""],[97532,1,""],[97534,181,""],[97537,1,""],[97539,768,""],[97540,659,""],[97541,20,""],[97542,335,""],[97543,19,""],[97544,48,""],[97545,225,""],[102558,0,"debug_options."],[102576,2,""],[102577,3,""],[102580,0,"ion"],[102619,5,""],[102627,0,"ions::ParseOption"],[107819,0,"\n                     "],[107842,0," De"],[107846,1,""],[107846,0,"ugOpti"],[107853,1,""],[107853,0,"ns"],[107856,3,""],[107856,0,"debug_op"],[107865,0,"ions"],[107901,0,"#if HAVE_INSPECTOR\n"],[107926,2,""],[107926,0,"d"],[107928,0,"bug"],[107932,0,"options."],[107949,0,"_enabled()"],[107960,2,""],[108021,6,""],[108022,2,""],[108028,1,""],[108029,1,""],[108029,0,"p"],[108031,0,"ions);\n#endif  //"],[108049,2,""],[108049,0,"HAVE_INSPECTOR\n"],[108065,1,""],[108066,1,""],[108066,0,"if"],[108069,0,"("],[108076,0,"o"],[108078,12,""],[108079,1,""],[108080,0,"o"],[108083,1,""],[108083,0,".d"],[108086,3,""],[108086,0,"bugge"],[108093,17,""],[108094,0,"nab"],[108098,1,""],[108099,0,"d())"],[108202,9,""],[108203,5,""],[108204,4,""],[108205,1,""],[108211,12,""],[108212,109,""],[108224,8,""],[108254,1,""],[108254,0,"debug_"],[108261,4,""],[108262,2,""],[108263,4,""],[108264,1,""],[108264,0,"ons"],[108367,0,"\n   "],[108372,0,"          debug_options."],[108400,0,"_name().c_str()"],[108417,0,"debug_options."],[108435,0,"()"],[108462,4,""],[108464,8,""],[108466,2,""],[108586,2,""],[108586,0,"!d"],[108589,0,"bug"],[108593,0,"opt"],[108597,0,"o"],[108600,1,""],[108600,0,".d"],[108603,3,""],[108603,0,"bugge"],[108609,0,"_enabled()"],[109886,0,"      debug_options.EnableDebugAgent(DebugAgentType::kDebugger);"],[109982,3,""],[109982,0,"debug_option"],[109995,1,""],[117495,0,"deb"],[117499,2,""],[117499,0,"g"],[117501,0,"opt"],[117505,0,"o"],[117508,0,".ins"],[117518,0,"_enabled()"],[123352,0,"deb"],[123356,0,"g_option"],[123365,0,".d"],[123368,0,"bugger"],[123375,0,"enabled() && !"],[123395,2,""],[123395,0,"options.inspector_"],[123415,1,""],[123415,0,"abled()"],[126694,0,"bool debug_enabled =\n      debug_options.debugger_enabled() || debug_options.inspector_enabled();\n\n  "],[126844,4,""],[126850,2,""],[126852,1,""],[126852,0,"abled"],[126947,2,""],[126947,0,"opt"],[126951,3,""],[126952,1,""],[126953,3,""],[126953,0,"s"],[126965,2,""],[126965,0,"d"],[126967,0,"bug"],[126971,0,"opt"],[126975,0,"o"],[126978,1,""],[126978,0,".d"],[126981,3,""],[126981,0,"bugge"],[126987,0,"_enabled()"],[127231,4,""],[127237,0,"en"],[127240,1,""],[127240,0,"bl"],[127243,2,""],[127243,0,"d"]],"_dtSpan":[569621,573916]},{"parents":[573],"numChildren":1,"agent":194,"time":"1970-01-01T00:00:00Z","patches":[[791,0,"tracing/agent.h\"\n#incl"],[814,0,"de \"u"],[3480,0,"static bool trace_enabled = false;\nstatic const char* trace_enabled_categories = nullptr;\n"],[4563,0,"static tracing::Agent* tracing_agent;\n"],[4839,0,"  tracing::TraceEventHelper::SetCurrentPlatform(platform_);\n  "],[94574,0,"  if (trace_enabled) {\n    tracing_agent->Stop();\n  }\n"],[98095,0,"   "],[98157,0,"   "],[98213,0,"   "],[98286,0,"   "],[98364,0,"   "],[98440,0,"   "],[98513,0,"   "],[98549,0,"\"\n         \""],[98608,0,"   "],[98677,0,"   "],[98751,0,"   "],[98860,0,"   "],[98929,0,"   "],[99007,0,"   "],[99084,0,"   "],[99141,0,"e-events-enabled   track trace events\\n\"\n         \"  --trace-event-categories comma separated list of trace event\\n\"\n         \"                           categories to record\\n\"\n         \"  --trac"],[99353,0,"   "],[99454,0,"   "],[99531,0,"   "],[99584,0,"   "],[99621,0,"\"\n         \""],[99680,0,"   "],[99752,0,"   "],[99822,0,"   "],[99905,0,"   "],[99946,0,"\"\n         \""],[100019,0,"   "],[100089,0,"   "],[100197,0,"   "],[100278,0,"   "],[100395,0,"   "],[100465,0,"   "],[100565,0,"   "],[100633,0,"   "],[100689,0,"   "],[100768,0,"   "],[100901,0,"  "],[100981,0,"  "],[101062,0,"  "],[101138,0,"  "],[101253,0,"  "],[101364,0,"  "],[101447,0,"  "],[105528,0,"e-events-enabled\") == 0) {\n      trace_enabled = true;\n    } else if (strcmp(arg, \"--trace-event-categories\") == 0) {\n      const char* categories = argv[index + 1];\n      if (categories == nullptr) {\n        fprintf(stderr, \"%s: %s requires an argument\\n\", argv[0], arg);\n        exit(9);\n      }\n      args_consumed += 1;\n      trace_enabled_categories = categories;\n    } else if (strcmp(arg, \"--trac"],[131405,0,"// Enable tracing when argv has --trace-events-enabled.\n  if (trace_enabled) {\n    fprintf(stderr, \"Warning: Trace event is an experimental feature \"\n            \"and could change at any time.\\n\");\n    tracing_agent = new tracing::Agent();\n    tracing_agent->Start(v8_platform.platform_, trace_enabled_categories);\n  }\n  "],[131861,0,"if (trace_enabled) {\n    tracing_agent->Stop();\n  }\n  "]],"_dtSpan":[573916,575307]},{"parents":[574],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[28772,0,"  return ret;\n  "]],"_dtSpan":[575307,575323]},{"parents":[575],"numChildren":1,"agent":132,"time":"1970-01-01T00:00:00Z","patches":[[98789,1,""],[98789,0,"o"],[98791,7,""],[98799,20,""],[98803,2,""],[98804,5,""],[100577,36,""],[100578,4,""],[100585,1,""],[100731,1,""],[100791,14,""],[100807,5,""],[100807,0,"DEBUG"],[100830,1,""],[100830,0,","],[100851,4,""],[100852,1,""],[100854,1,""],[100855,7,""],[100855,0," modu"],[100861,1,""],[100862,42,""],[100863,8,""],[100864,3,""],[100865,9,""],[100865,0,"ha"],[100868,5,""],[100871,7,""],[100909,0,"should "],[100918,2,""],[100919,7,""],[100919,0,"n"],[100921,2,""],[100922,2,""],[100923,0,"eb"],[100926,2,""],[100926,0,"g"],[100928,3,""],[100928,0,"info"],[100933,4,""],[100933,0,"m"],[100936,2,""],[100936,0,"ion"],[101022,0,"         \"NODE_EXTRA_CA_CERTS        path to additional CA certificates file\\n\"\n"],[101332,0,"#ifdef _WIN32\n         \"NODE_PATH                  ';'-separated list of directories\\n\"\n#else\n         \"NODE_PATH                  ':'-separated list of directories\\n\"\n#endif\n         \"                           prefixed to the module search path\\n\"\n"]],"_dtSpan":[575323,575895]},{"parents":[576],"numChildren":1,"agent":82,"time":"1970-01-01T00:00:00Z","patches":[[98590,0,"#if HAVE_INSPECTOR\n         \"  --inspect[=host:port] activate inspector on host:port\\n\"\n         \"                        (default: 127.0.0.1:9229)\\n\"\n         \"  --inspect-brk[=host:port]  activate inspector on host:port\\n\"\n         \"                             and break at start of user script\\n\"\n#endif\n"]],"_dtSpan":[575895,576203]},{"parents":[577],"numChildren":1,"agent":179,"time":"1970-01-01T00:00:00Z","patches":[[62078,0," "]],"_dtSpan":[576203,576204]},{"parents":[578],"numChildren":1,"agent":154,"time":"1970-01-01T00:00:00Z","patches":[[54474,0," "],[54478,1,""],[54478,0,"ined("],[54492,0,") && !defined(NODE_SHARED_MODE)"],[119894,0,"#ifndef NODE_SHARED_MODE\n"],[120492,0,"#endif  // !NODE_SHARED_MODE\n"]],"_dtSpan":[576204,576296]},{"parents":[579],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[128550,36,""]],"_dtSpan":[576296,576332]},{"parents":[580],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[56906,6,""],[56906,0,"fill"],[56912,0,"in "],[56918,0,"Uint32"],[56935,1,""],[56935,0,"3"],[56944,21,""],[56944,0,","],[56948,17,""],[56995,2,""],[56995,0,"The fir"],[57003,0,"t two entrie"],[57017,0,"conta"],[57025,1,""],[57025,0,"the seco"],[57034,0,"d"],[57036,2,""],[57036,0,"pa"],[57039,2,""],[57039,0,"t"],[57041,0,"o"],[57043,0," the value\n// b"],[57060,1,""],[57060,0,"ken"],[57064,1,""],[57064,0,"into"],[57069,0,"the up"],[57076,0,"e"],[57078,0,"/low"],[57083,1,""],[57083,0,"r 32 b"],[57090,0,"ts t"],[57095,2,""],[57096,1,""],[57096,0,"be conve"],[57106,2,""],[57107,2,""],[57107,0,"d"],[57109,0,"ba"],[57112,0,"k in JS,\n// bec"],[57128,2,""],[57128,0,"use"],[57133,0,"here is n"],[57144,0,"U"],[57147,1,""],[57148,1,""],[57148,0,"64Arr"],[57154,0,"y in JS.\n// The thir"],[57176,1,""],[57177,0,"n"],[57179,0,"ry"],[57182,0,"cont"],[57187,0,"ins"],[57192,2,""],[57192,0,"h"],[57195,0,"remaining nanosecon"],[57215,1,""],[57215,0," part o"],[57223,1,""],[57223,0," the value"],[57452,1,""],[57453,197,""]],"_dtSpan":[576332,576807]},{"parents":[581],"numChildren":1,"agent":186,"time":"1970-01-01T00:00:00Z","patches":[[101614,0,"         \"NODE_NO_WARNINGS           set to 1 to silence process warnings\\n\"\n"]],"_dtSpan":[576807,576884]},{"parents":[582],"numChildren":1,"agent":1,"time":"1970-01-01T00:00:00Z","patches":[[3774,0,"// use OpenSSL's cert store instead of bundled certs\nbool ssl_openssl_cert_store =\n#if defined(NODE_OPENSSL_CERT_STORE)\n        true;\n#else\n        false;\n#endif\n\n"],[100393,0,"         \"  --use-bundled-ca         use bundled CA store\"\n"],[100456,0,"!defined("],[100470,0,"OPENSSL_CERT_STORE)\n         \" (default)\"\n#endif\n         \"\\n\"\n         \"  --use-openssl-ca         use OpenSSL's default CA store\"\n#if defined(NODE_OPENSSL_CERT_STORE)\n         \" (default)\"\n#endif\n         \"\\n\"\n#if NODE_"],[107812,0,"    } else if (strncmp(arg, \"--use-openssl-ca\", 16) == 0) {\n      ssl_openssl_cert_store = true;\n    } else if (strncmp(arg, \"--use-bundled-ca\", 16) == 0) {\n      ssl_openssl_cert_store = false;\n"]],"_dtSpan":[576884,577531]},{"parents":[583],"numChildren":1,"agent":78,"time":"1970-01-01T00:00:00Z","patches":[[108624,0,"if (strcmp(arg, \"--\") == 0) {\n      index += 1;\n      break;\n    } else "]],"_dtSpan":[577531,577603]},{"parents":[584],"numChildren":1,"agent":0,"time":"1970-01-01T00:00:00Z","patches":[[98119,1,""],[98172,1,""],[98249,0,"  "],[98313,0,"  "],[98371,0,"  "],[98446,0,"  "],[98526,0,"  "],[98604,0,"  "],[98679,0,"  "],[98792,0,"     "],[98866,0,"     "],[99094,0,"  "],[99165,0,"  "],[99241,0,"  "],[99318,0,"  "],[99389,0,"  "],[99469,0,"  "],[99548,0,"  "],[99623,0,"  "],[99684,0,"  "],[99762,0,"  "],[99825,0,"  "],[99928,0,"  "],[100007,0,"  "],[100062,0,"  "],[100160,0,"  "],[100234,0,"  "],[100306,0,"  "],[100391,0,"  "],[100488,0,"  "],[100630,0,"  "],[100800,0,"  "],[100872,0,"  "],[100982,0,"  "],[101020,4,""],[101061,0,"  the "],[101184,0,"  "],[101256,0,"  "],[101358,0,"  "],[101443,0,"  "],[101524,0,"  "],[101643,0,"  "],[101679,5,""],[101720,0,"  that "],[101798,0,"  "],[101879,0,"  "],[101915,0,"\\n\"\n         \"                            "],[102039,0,"  "],[102152,0,"  "],[102237,0,"  "],[102330,0,"  "],[102412,0,"  "],[102495,0,"  "],[102572,0,"  "],[102609,5,""],[102623,0,"                             file"]],"_dtSpan":[577603,577807]},{"parents":[585],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[4461,0,"// Set in node.cc by ParseArgs when --redirect-warnings= is used.\nconst char* config_warning_file;\n\n"],[99546,0,"redirect-warnings=path\\n\"\n         \"                             write warnings to path instead of\\n\"\n         \"                             stderr\\n\"\n         \"  --"],[102935,0,"NODE_REDIRECT_WARNINGS       write warnings to path instead of\\n\"\n         \"                             stderr\\n\"\n         \""],[106883,0,"ncmp(arg, \"--redirect-warnings=\", 20) == 0) {\n      config_warning_file = arg + 20;\n    } else if (str"],[124096,0,"if (auto redirect_warnings = secure_getenv(\"NODE_REDIRECT_WARNINGS\")) {\n    config_warning_file = redirect_warnings;\n  }\n\n  "]],"_dtSpan":[577807,578423]},{"parents":[586],"numChildren":1,"agent":108,"time":"1970-01-01T00:00:00Z","patches":[[4826,38,""],[5555,0,"oid StartTracingAgent() {\n    CHECK(tracing_agent_ == nullptr);\n    tracing_agent_ = new tracing::Agent();\n    tracing_agent_->Start(platform_, trace_enabled_categories);\n  }\n\n  void StopTracingAgent() {\n    tracing_agent_->Stop();\n  }\n\n  v"],[5819,0,"  tracing::Agent* tracing_agent_;\n"],[6079,1,""],[6079,0,"co"],[6082,0,"s"],[6085,0,"node::DebugO"],[6098,2,""],[6099,1,""],[6099,0,"ions&"],[6105,1,""],[6106,0,"pti"],[6110,6,""],[6110,0,"ns"],[6228,0,"\n  void StartTracingAgent() {\n    fprintf(stderr, \"Node compiled with NODE_USE_V8_PLATFORM=0, \"\n                    \"so event tracing is not available.\\n\");\n  }\n  void StopTracingAgent() {}\n"],[95294,0,"v8_pla"],[95301,0,"fo"],[95304,0,"m.StopTr"],[95317,2,""],[95317,0,"A"],[95321,4,""],[95322,2,""],[134106,1,""],[134108,14,""],[134109,1,""],[134110,47,""],[134122,3,""],[134122,0,"S"],[134124,2,""],[134124,0,"a"],[134126,4,""],[134127,0,"T"],[134131,3,""],[134131,0,"i"],[134133,10,""],[134134,3,""],[134134,0,"Ag"],[134137,1,""],[134137,0,"nt("],[134309,0,"v8_pla"],[134316,0,"fo"],[134319,0,"m.StopTr"],[134332,2,""],[134332,0,"A"],[134336,4,""],[134337,2,""]],"_dtSpan":[578423,579109]},{"parents":[587],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[3652,3,""],[3654,4,""],[3654,0,"d::st"],[3660,1,""],[3660,0,"ing"],[3676,0,";"],[3678,1,""],[3679,1,""],[3679,0,"// NOLINT(r"],[3691,3,""],[3691,0,"n"],[3693,0,"ime/st"],[3700,1,""],[3700,0,"ing)"],[4544,3,""],[4546,4,""],[4546,0,"d::st"],[4552,1,""],[4552,0,"ing"],[4576,0,"  // NOLINT(runtime/string)"],[18052,1,""],[18052,0,"bo"],[18055,3,""],[18055,0,"l"],[18057,2,""],[18057,0,"S"],[18059,8,""],[18059,0,"f"],[18061,2,""],[18061,0,"G"],[18083,0,", std::string* text"],[18123,0,"// TODO(bnoordhu"],[18140,0,"s) Should perhaps also check whether getauxval(AT_SECURE)\n  // is non-zero on Linux.\n  i"],[18278,0," {\n    text->clear();"],[18311,3,""],[18311,0,"fa"],[18314,3,""],[18314,0,"se"],[18318,0,"  }\n"],[18331,0,"if (const cha"],[18345,2,""],[18345,0,"* val"],[18351,2,""],[18351,0,"e ="],[18366,0,") {\n    *text = value;\n    return true;\n  }\n  text->clear()"],[18427,0,"  return false;\n"],[84711,0,"!"],[84724,8,""],[84724,0,".em"],[84729,1,""],[84729,0,"y()"],[84944,0,".c_str()"],[109846,3,""],[109846,0,"."],[109848,0,"ssign(a"],[109857,2,""],[109857,0,","],[109861,0,")"],[124689,0,"{\n    std::str"],[124704,1,""],[124704,0,"ng"],[124707,3,""],[124708,1,""],[124708,0,"ext;\n"],[124714,0,"   config_"],[124743,0,"\n       "],[124752,5,""],[124752,0,"Saf"],[124756,2,""],[124756,0,"G"],[124787,2,""],[124787,0,","],[124789,15,""],[124789,0,"&t"],[124792,14,""],[124792,0,"xt)"],[124796,1,""],[124796,0,"&&"],[124799,9,""],[124799,0,"t"],[124801,9,""],[124801,0,"xt[0]"],[124813,1,""],[124826,3,""],[124826,0,"c"],[124828,4,""],[124828,0,"nf"],[124831,4,""],[124831,0,"g"],[124840,1,""],[124840,0,"_file.empty())\n"],[124856,1,""],[124857,5,""],[124857,0,"  Saf"],[124863,2,""],[124863,0,"G"],[124894,2,""],[124894,0,","],[124896,6,""],[124896,0,"&"],[124916,20,""],[124916,0,")"],[124919,4,""],[125904,31,""],[125905,2,""],[125906,2,""],[125911,1,""],[125911,0,"I"],[125965,1,""],[125965,0,"if"],[125968,0,"("],[125981,0,".empty())\n"],[125992,1,""],[125993,5,""],[125993,0,"  Saf"],[125999,2,""],[125999,0,"G"],[126021,0,", &icu_data_dir"],[126041,4,""],[126084,4,""],[126084,0,"em"],[126088,1,""],[126088,0,"y"],[133679,2,""],[133679,0,"{\n   "],[133685,4,""],[133687,4,""],[133687,0,"d::st"],[133693,1,""],[133693,0,"ing"],[133702,5,""],[133702,0,"_ca_"],[133707,1,""],[133707,0,"e"],[133709,0,"ts;\n    if (Saf"],[133725,2,""],[133725,0,"G"],[133753,0,", &extra_ca_certs"],[133777,0,"  "],[133808,0,"_ca_certs"],[133820,0,"  }\n"],[134141,0,"  // HAVE_OPENSSL"]],"_dtSpan":[579109,579910]},{"parents":[588],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[18045,7,""],[4091,3,""],[4093,4,""],[4093,0,"d::st"],[4099,1,""],[4099,0,"ing"],[4117,0,";"],[4119,1,""],[4120,1,""],[4120,0,"// NOLINT(r"],[4132,3,""],[4132,0,"ntime/s"],[4141,1,""],[4141,0,"ing)"],[101976,4,""],[101976,0,"file"],[102012,5,""],[102017,0," the"],[102064,4,""],[102074,4,""],[102074,0,"file (overrides"],[102093,0,"         \"                             OPENSSL_CONF)\\n\"\n"],[103859,0,"OPENSSL_CONF                 load OpenSSL configuration from file\\n\"\n         \"\\n\"\n         \""],[109859,3,""],[109859,0,".assign("],[109875,0,")"],[125093,0,"if (openssl_config.empty())\n    SafeGetenv(\"OPENSSL_CONF\", &openssl_config);\n\n  "]],"_dtSpan":[579910,580243]},{"parents":[589],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[3647,7,""],[84563,406,""],[109615,1,""],[109616,0,"+ "],[60990,60,""]],"_dtSpan":[580243,580719]},{"parents":[590],"numChildren":1,"agent":27,"time":"1970-01-01T00:00:00Z","patches":[[56585,0,"Isolate* isolate = env->isolate();\n  "],[56675,5,""],[56682,2,""],[56722,1,""],[56722,0,"// Get the d"],[56735,5,""],[56736,1,""],[56737,0,"l"],[56739,0," ar"],[56743,4,""],[56744,0,"y "],[56747,2,""],[56748,0,"in"],[56751,2,""],[56751,0,"er"],[56754,2,""],[56754,0,"from"],[56759,0,"the"],[56763,0,"Float64Array"],[56776,4,""],[56776,0,"arg"],[56781,9,""],[56783,8,""],[56784,4,""],[56784,0,".\n "],[56788,5,""],[56788,0,"CHECK("],[56795,2,""],[56795,0,"rg"],[56798,3,""],[56798,0,"[0]->I"],[56805,2,""],[56805,0,"Fl"],[56808,1,""],[56809,4,""],[56809,0,"t64Arr"],[56816,6,""],[56816,0,"y"],[56830,5,""],[56830,0,"Float64Ar"],[56840,0,"ay"],[56844,2,""],[56845,6,""],[56845,0,"rray"],[56851,5,""],[56852,6,""],[56852,0,"a"],[56854,12,""],[56854,0,"gs[0].A"],[56862,0,"<Fl"],[56866,1,""],[56868,1,""],[56868,0,"64Array>"],[56878,1,""],[56878,0,";\n "],[56882,2,""],[56882,0,"CHECK"],[56888,2,""],[56888,0,"EQ("],[56892,4,""],[56892,0,"rr"],[56895,5,""],[56895,0,"y->L"],[56900,2,""],[56900,0,"ngt"],[56904,8,""],[56906,0,", 4"],[56920,1,""],[56920,0,"ArrayB"],[56927,2,""],[56927,0,"ff"],[56933,6,""],[56934,5,""],[56934,0,"b"],[56937,3,""],[56938,8,""],[56938,0,"a"],[56940,9,""],[56940,0,"ray"],[56945,6,""],[56945,0,"Buff"],[56950,0,"r"],[56953,1,""],[56953,0,";"],[56957,3,""],[56957,0,"double*"],[56965,0,"fields"],[56972,0,"="],[56974,16,""],[56975,2,""],[56975,0,"t"],[56978,9,""],[56978,0,"ic_ca"],[56985,2,""],[56985,0,"<d"],[56989,14,""],[56989,0,"b"],[56991,4,""],[56992,7,""],[56992,0,"*>"],[56995,11,""],[56996,3,""],[56997,1,""],[56997,0,"->G"],[57001,1,""],[57002,5,""],[57002,0,"C"],[57004,8,""],[57004,0,"n"],[57006,6,""],[57008,4,""],[57008,0,"t"],[57010,2,""],[57010,0,"().D"],[57016,1,""],[57016,0,"a"],[57022,0,"\n"],[57025,0,"f"],[57027,9,""],[57028,6,""],[57028,0,"ld"],[57031,10,""],[57031,0,"[0]"],[57035,27,""],[57035,0,"="],[57040,2,""],[57044,2,""],[57045,7,""],[57045,0,"i"],[57047,1,""],[57047,0,"lds[1] = "],[57057,2,""],[57057,0,"8_"],[57064,0,"stats."],[57076,10,""],[57081,5,""],[57081,0,"size("],[57091,2,""],[57092,4,""],[57092,0,"i"],[57094,4,""],[57094,0,"lds[2] = "],[57104,2,""],[57104,0,"8_"],[57111,0,"stats."],[57122,10,""],[57127,1,""],[57128,0,"iz"],[57131,1,""],[57131,0,"("],[57137,2,""],[57138,4,""],[57138,0,"i"],[57140,0,"lds[3] = isola"],[57155,1,""],[57156,2,""],[57158,9,""],[57158,0,"Adju"],[57164,2,""],[57164,0,"Amou"],[57169,6,""],[57169,0,"tOfE"],[57180,10,""],[57180,0,"Alloc"],[57186,6,""],[57187,1,""],[57188,2,""],[57188,0,"dMemo"],[57194,12,""],[57194,0,"y"],[57196,4,""],[57196,0,"0"]],"_dtSpan":[580719,581469]},{"parents":[591],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[124489,0,"#if HAVE_OPENSSL\n"],[124585,0,"#endif\n"]],"_dtSpan":[581469,581493]},{"parents":[592],"numChildren":1,"agent":149,"time":"1970-01-01T00:00:00Z","patches":[[77670,0,"n"],[77684,2,""],[77684,0,"O"],[77688,1,""],[77688,0,"XTPR"],[77694,3,""],[77694,0,"ON"],[77697,1,""],[77697,0,"G"]],"_dtSpan":[581493,581509]},{"parents":[593],"numChildren":1,"agent":20,"time":"1970-01-01T00:00:00Z","patches":[[97290,1,""]],"_dtSpan":[581509,581510]},{"parents":[594],"numChildren":1,"agent":162,"time":"1970-01-01T00:00:00Z","patches":[[73811,0,"  if (property->IsString()) {\n"],[73860,0,"  "],[73914,0,"  "],[73938,0,"  "],[73967,0,"  "],[74024,0,"  "],[74077,0,"  "],[74141,0,"  "],[74182,0,"  "],[74196,0,"  "],[74230,0,"  "],[74309,0,"  "],[74364,0,"  "],[74416,0,"  "],[74458,0,"  "],[74464,0,"  "],[74477,0,"}\n  "],[74647,0,"  if (property->IsString()) {\n"],[74696,0,"  "],[74750,0,"  "],[74776,0,"  "],[74833,0,"  "],[74886,0,"  "],[74938,0,"  }\n"]],"_dtSpan":[581510,581618]},{"parents":[595],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[0,0,"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"]],"_dtSpan":[581618,582752]},{"parents":[596],"numChildren":1,"agent":15,"time":"1970-01-01T00:00:00Z","patches":[[124207,0,"#ifdef _WIN32\n  for (int fd = 0; fd <= 2; ++fd) {\n    auto handle = reinterpret_cast<HANDLE>(_get_osfhandle(fd));\n    if (handle == INVALID_HANDLE_VALUE ||\n        GetFileType(handle) == FILE_TYPE_UNKNOWN) {\n      // Ignore _close result. If it fails or not depends on used Windows\n      // version. We will just check _open result.\n      _close(fd);\n      if (fd != _open(\"nul\", _O_RDWR))\n        ABORT();\n    }\n  }\n#endif  // _WIN32\n"]],"_dtSpan":[582752,583187]},{"parents":[597],"numChildren":1,"agent":142,"time":"1970-01-01T00:00:00Z","patches":[[70248,0,"CHECK(exports->SetPrototype(env->context(),\n                                Null(env->isolate())).FromJust());\n    "]],"_dtSpan":[583187,583302]},{"parents":[598],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[105742,0,"  bool use_bundled_ca = false;"],[105775,0,"bool use_openssl_ca = false;\n\n  "],[110286,0,"  use_openssl_ca = true;\n    "],[110377,0,"use_bundled_ca = true;\n      "],[111431,0,"#if HAVE_OPENSSL\n  if (use_openssl_ca && use_bundled_ca) {\n    fprintf(stderr,\n            \"%s: either --use-openssl-ca or --use-bundled-ca can be used, \"\n            \"not both\\n\",\n            argv[0]);\n    exit(9);\n  }\n#endif\n\n"]],"_dtSpan":[583302,583650]},{"parents":[599],"numChildren":1,"agent":72,"time":"1970-01-01T00:00:00Z","patches":[[4843,0,"N-API is in experimental state, disabled by defa"],[4892,0,"lt.\nbool load_napi_module"],[4918,0," = false;\n\n// us"],[63693,0,"if (mp->nm_version == -1) {\n      snprintf(errmsg,\n               sizeof(errmsg),\n               \"The module '%s'\"\n               \"\\nwas compiled against the ABI-stable Node.js API (N-API).\"\n               \"\\nThis feature is experimental and must be enabled on the \"\n               \"\\ncommand-line by adding --napi-modules.\",\n               *filename);\n    } else {\n      "],[64095,0,"  "],[64126,0,"  "],[64159,0,"  "],[64233,0,"  "],[64309,0,"  "],[64380,0,"  "],[64443,3,""],[64459,0,"  "],[64462,0,"or "],[64496,0,"  "],[64547,0,"    }\n"],[101441,0,"napi-modules             load N-API modules\\n\"\n         \"  --"],[108979,0,"api-modules\") == 0) {\n      l"],[109009,0,"ad_napi_modules = true;\n    } else if (strcmp(arg, \"--no"],[133471,0,"if (load_napi_modules) {\n    ProcessEmitWarning(&env, \"N-API is an experimental feature \"\n        \"and could change at any time.\");\n  }\n\n  "]],"_dtSpan":[583650,584424]},{"parents":[600],"numChildren":1,"agent":157,"time":"1970-01-01T00:00:00Z","patches":[[112290,0,"if (eval_string != nullptr && syntax_check_only) {\n    fprintf(stderr,\n            \"%s: either --check or --eval can be used, not both\\n\", argv[0]);\n    exit(9);\n  }\n\n  "]],"_dtSpan":[584424,584593]},{"parents":[601],"numChildren":1,"agent":57,"time":"1970-01-01T00:00:00Z","patches":[[100856,0,"["],[100862,0,"]"],[100868,1,""],[100872,1,""],[101002,0,"["],[101008,0,"]"],[101014,0,"\\n\"\n         \"                           "]],"_dtSpan":[584593,584640]},{"parents":[602],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[7470,4,""],[7470,0,"tru"],[7475,24,""],[7733,12,""],[7734,3,""],[7735,18,""],[67308,45,""],[67309,1,""],[67313,1,""],[67369,6,""],[113565,163,""],[113970,0,"#if HAVE_INSPECTOR\n  } else {\n    debugger_running = v8_platform.StartInspector(env, path, debug_options);\n#endif  // HAVE_INSPECTOR\n"],[114213,1,""],[114214,42,""],[114215,1,""],[114217,16,""],[114794,3,""],[114795,10,""],[114797,1,""],[114798,37,""],[114799,44,""],[114800,13,""],[114801,4,""],[114802,9,""],[114803,15,""],[114804,30,""],[114805,30,""],[114806,43,""],[114807,5,""],[114808,2,""],[114809,8,""],[115464,7,""],[115469,80,""],[116413,168,""],[116414,24,""],[116415,4,""],[116416,1118,""],[116417,45,""],[116420,30,""],[116421,2,""],[116422,108,""],[116423,156,""],[116424,108,""],[116463,86,""],[116629,40,""],[116630,449,""],[116631,640,""],[119751,0,"!"],[119766,4,""],[119766,0,"debugg"],[119773,3,""],[126272,1,""],[126273,2,""],[126274,117,""],[129501,0,"const char* path = argc > 1 ? argv[1] : nullptr;\n  StartDe"],[129560,0,"ug(&env, path, debug_"],[129582,0,"pti"],[129586,0,"ns);\n\n  boo"],[129604,0,"ger"],[129694,1,""],[129697,45,""],[129706,0,"ger"],[129717,33,""],[129718,38,""],[129719,33,""],[129719,0,"&"],[129721,1,""],[129740,1,""],[129744,1,""],[129781,4,""],[129951,0,"options.debugger_"],[129975,0,"()"]],"_dtSpan":[584640,588842]},{"parents":[603],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[4656,3,""],[4658,4,""],[4658,0,"d::st"],[4664,1,""],[4664,0,"ing"],[4692,0,";"],[4694,1,""],[4695,1,""],[4695,0,"// NOLINT(r"],[4707,3,""],[4707,0,"ntime/s"],[4716,1,""],[4716,0,"ing)"]],"_dtSpan":[588842,588887]},{"parents":[604],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[120016,0,"#if HAVE_INSPECTOR\n"],[120179,0,"#endif  // HAVE_INSPECTOR\n"],[120660,0,"#if HAVE_INSPECTOR\n"],[120699,0,"#endif  // HAVE_INSPECTOR\n"],[2445,0,"#include <list>\n"],[126665,25,""],[126717,0,"std::list<"],[126741,1,""],[126741,0,">"],[126760,1,""],[126850,0,"for ("],[126869,1,""],[126870,4,""],[126876,6,""],[126877,7,""],[126878,0,":"],[126897,24,""],[126905,1,""],[126905,0,"a"],[126907,1,""],[126907,0,"_e"],[126912,4,""],[126912,0,".c"],[126915,0,"_("],[126918,12,""],[126918,0,"t_"],[126922,0,"i"],[126924,17,""],[126924,0,"."],[126934,0,"}\n"],[126938,3,""],[126938,0,"at_"],[126942,0,"xi"],[126945,0,"_functions.cl"],[126959,13,""],[126959,0,"ar()"],[126964,4,""],[127019,1,""],[127019,0,"a"],[127021,1,""],[127021,0,"_e"],[127026,4,""],[127026,0,"_functions.push_"],[127046,10,""],[127046,0,"("],[127061,7,""],[127061,0,"{"],[127064,1,""],[127064,0,","],[127066,18,""],[127069,59,""],[127069,0,"})"]],"_dtSpan":[588887,589294]},{"parents":[605],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[4180,2,""],[4181,8,""],[4182,7,""],[4183,6,""],[4183,0,"::v"],[4187,1,""],[4188,0,"t"],[4190,2,""],[4190,0,"r<s"],[4194,6,""],[4194,0,"d::"],[4199,2,""],[4199,0,"r"],[4201,4,""],[4202,9,""],[4202,0,"g>"],[4220,10,""],[91288,0,"!"],[91303,5,""],[91303,0,"s.emp"],[91309,0,"y()"],[91315,28,""],[91416,6,""],[91416,0,"s.size()"],[91565,0,".c_str()"],[91715,1,""],[91718,8,""],[91734,18,""],[91734,0,".c"],[91738,22,""],[91739,18,""],[91739,0,"r()"],[106041,28,""],[106042,35,""],[106265,1,""],[106267,39,""],[108343,6,""],[108358,1,""],[108358,0,"."],[108360,10,""],[108361,2,""],[108361,0,"sh"],[108364,0,"ba"],[108367,10,""],[108367,0,"k("],[108375,0,")"],[112623,371,""]],"_dtSpan":[589294,590011]},{"parents":[606],"numChildren":1,"agent":165,"time":"1970-01-01T00:00:00Z","patches":[[35890,0,"CHECK(!encoding_v.IsEmpty());\n\n  "]],"_dtSpan":[590011,590044]},{"parents":[607],"numChildren":1,"agent":4,"time":"1970-01-01T00:00:00Z","patches":[[100055,1,""],[100055,0,"insp"],[100060,3,""],[100060,0,"ct"]],"_dtSpan":[590044,590054]},{"parents":[608],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[106103,0,"#if HAVE_OPENSSL\n"],[106182,0,"#endif  // HAVE_INSPECTOR\n"],[2445,16,""],[126089,3,""],[126089,0,"void R"],[126096,3,""],[126096,0,"n"],[126103,13,""],[126103,0,"(En"],[126107,1,""],[126108,10,""],[126108,0,"r"],[126110,2,""],[126110,0,"nment"],[126117,3,""],[126117,0,"env"],[126121,1,""],[126121,0," {"],[126126,0,"en"],[126129,32,""],[126129,0,"->Run"],[126148,18,""],[126149,0,"()"],[126153,0,"}\n"],[126157,16,""],[126157,0,"stat"],[126162,2,""],[126162,0,"c"],[126164,1,""],[126165,9,""],[126165,0,"v_k"],[126169,8,""],[126169,0,"y_"],[126173,0,"thr"],[126177,1,""],[126177,0,"ad_local_"],[126188,2,""],[126188,0,"v;\n\n"],[126198,3,""],[126205,2,""],[126206,0,"oid (*cb)(vo"],[126219,0,"d* a"],[126224,0,"g), v"],[126230,5,""],[126230,0,"id"],[126234,3,""],[126234,0,"arg"],[126241,1,""],[126242,3,""],[126243,8,""],[126244,6,""],[126244,0,"uto"],[126248,3,""],[126249,3,""],[126249,0,"nv"],[126252,1,""],[126252,0,"="],[126254,0,"st"],[126258,3,""],[126259,1,""],[126259,0,"c"],[126261,3,""],[126262,0,"as"],[126265,0,"<Env"],[126270,0,"r"],[126273,10,""],[126273,0,"men"],[126277,0,"*>(uv"],[126283,0,"k"],[126285,2,""],[126285,0,"y_ge"],[126290,4,""],[126291,0,"&thre"],[126297,1,""],[126297,0,"d"],[126299,5,""],[126299,0,"loc"],[126303,2,""],[126303,0,"l"],[126305,0,"env)"],[126314,5,""],[126314,0,"A"],[126316,2,""],[126316,0,"E"],[126320,3,""],[126320,0,"(e"],[126323,7,""],[126323,0,"v, "],[126327,2,""],[126327,0,"b, "],[126332,1,""],[126332,0,"g"],[126352,0,"Environment* env, "],[126408,2,""],[126408,0,"CHECK"],[126414,0,"NE("],[126418,6,""],[126419,4,""],[126419,0,"v, "],[126423,3,""],[126424,8,""],[126424,0,"llptr);\n  env->"],[126445,6,""],[126445,0,"("],[126447,3,""],[126453,1,""],[128793,0,"CHECK_EQ(0, uv_key_create(&thread_local_env));\n  uv_key_set(&thread_local_env, &env);\n  "],[130240,0,"  uv_key_delete(&thread_local_env);\n"]],"_dtSpan":[590054,590667]},{"parents":[609],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[91301,0,"// -r, --require\n  "],[91909,0,"// --no-warnings\n  "],[92037,0,"// --trace-warnings\n  "],[5811,0,"// Set in node.cc "],[5830,0,"y ParseArgs when --exp"],[5853,0,"se-internals "],[5867,0,"r --expose_interna"],[5886,0,"s is\n// used.\n// Used"],[5908,0,"in node_config.cc to set a constant on process.binding('config')\n// that is used by lib/internal/bootstrap_node.js\nbool config_expose_internals = false;\n\nbool "],[111761,3,""],[111764,0,"fig_expo"],[111773,2,""],[111774,2,""],[111774,0,"_"],[111777,2,""],[111777,0,"ternal"],[111784,0," = true;"]],"_dtSpan":[590667,591010]},{"parents":[610],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[1220,53,""],[21979,0,"name"],[21984,1,""],[21984,0,"p"],[21986,2,""],[21987,0,"e"],[21989,0,"{\n\n"],[22070,7,""],[22660,7,""],[23315,7,""],[27570,0,"}  // anonymous namespace\n\n"],[57260,0,"static "],[57719,0,"static "],[58599,0,"static "],[59485,0,"static "],[60254,0,"static "],[62615,0,"static "],[67970,0,"static "],[81470,0,"namespace {\n"],[81882,7,""],[84156,0,"}  // anonymous namespace\n"]],"_dtSpan":[591010,591217]},{"parents":[611],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[5638,0,"by ParseArgs when --pending-deprecation or NODE_PENDING_DEPRECATION\n// is used.\nbool config_pending_deprecation = false;\n\n// Set "],[110768,0,"pending-deprecation\") == 0) {\n      config_pending_deprecation = true;\n    } else if (strcmp(arg, \"--"],[123832,0,"{\n    std::string text;\n    config_pending_deprecation =\n        SafeGetenv(\"NODE_PENDING_DEPRECATION\", &text) && text[0] == '1';\n  }\n\n  "]],"_dtSpan":[591217,591584]},{"parents":[612],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[1798,0,"http_parser.h\"\n#include \""]],"_dtSpan":[591584,591609]},{"parents":[613],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[93169,1,""],[93169,0,"insp"],[93174,3,""],[93174,0,"ct"]],"_dtSpan":[591609,591619]},{"parents":[614],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[19058,128,""]],"_dtSpan":[591619,591747]},{"parents":[615],"numChildren":1,"agent":15,"time":"1970-01-01T00:00:00Z","patches":[[2235,0,"fcntl.h>. // _O_RDWR\n#include <"]],"_dtSpan":[591747,591778]},{"parents":[616],"numChildren":1,"agent":109,"time":"1970-01-01T00:00:00Z","patches":[[2243,1,""],[2244,0," "]],"_dtSpan":[591778,591780]},{"parents":[617],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[104918,0," !"],[104923,0,"ined(NODE_WITHOUT_NODE_OPTIONS)\n     "],[104961,0,"   \"NODE"],[104970,0,"OPTIONS                 set CLI options in the environment\\n\"\n#endif\n#ifdef _"],[105707,0,"static void CheckIfAllowedInEnv(const char* exe, bool is_env,\n                                const char* arg) {\n  if (!is_env)\n    return;\n\n  // Find the arg prefix when its --some_arg=val\n  const char* eq = strchr(arg, '=');\n  size_t arglen = eq ? eq - arg : strlen(arg);\n\n  static const char* whitelist[] = {\n    // Node options\n    \"-r\", \"--require\",\n    \"--no-deprecation\",\n    \"--no-warnings\",\n    \"--trace-warnings\",\n    \"--redirect-warnings\",\n    \"--trace-deprecation\",\n    \"--trace-sync-io\",\n    \"--trace-events-enabled\",\n    \"--track-heap-objects\",\n    \"--throw-deprecation\",\n    \"--zero-fill-buffers\",\n    \"--v8-pool-size\",\n    \"--use-openssl-ca\",\n    \"--use-bundled-ca\",\n    \"--enable-fips\",\n    \"--force-fips\",\n    \"--openssl-config\",\n    \"--icu-data-dir\",\n\n    // V8 options\n    \"--max_old_space_size\",\n  };\n\n  for (unsigned i = 0; i < arraysize(whitelist); i++) {\n    const char* allowed = whitelist[i];\n    if (strlen(allowed) == arglen && strncmp(allowed, arg, arglen) == 0)\n      return;\n  }\n\n  fprintf(stderr, \"%s: %s is not allowed in NODE_OPTIONS\\n\", exe, arg);\n  exit(9);\n}\n\n\n"],[107493,0,",\n                      bool is_env"],[108433,0,"CheckIfAllowedInEnv(argv[0], "],[108463,0,"s_env, arg);\n\n    i"],[114148,0,"\n  if (is_env && args_left) {\n    fprintf(stderr, \"%s: %s is not supported in NODE_OPTIONS\\n\",\n            argv[0], argv[index]);\n    exit(9);\n"],[114293,0,"}\n\n  "],[123982,0,"ProcessArgv(int* argc,\n                 const char** argv,\n                 int* exec_argc,\n                 const char*** exec_argv,\n                 bool is_env = false) {\n  // Parse a few arguments which are specific to Node.\n  int v8_argc;\n  const char** v8_argv;\n  ParseArgs(argc, argv, exec_argc, exec_argv, &v8_argc, &v8_argv, is_env);\n\n  // TODO(bnoordhuis) Intercept --prof arguments and start the CPU profiler\n  // manually?  That would give us a little more control over its runtime\n  // behavior but it could also interfere with the user's intentions in ways\n  // we fail to anticipate.  Dillema.\n  for (int i = 1; i < v8_argc; ++i) {\n    if (strncmp(v8_argv[i], \"--prof\", sizeof(\"--prof\") - 1) == 0) {\n      v8_is_profiling = true;\n      break;\n    }\n  }\n\n#ifdef __POSIX__\n  // Block SIGPROF signals when sleeping in epoll_wait/kevent/etc.  Avoids the\n  // performance penalty of frequent EINTR wakeups when the profiler is running.\n  // Only do this for v8.log profiling, as it breaks v8::CpuProfiler users.\n  if (v8_is_profiling) {\n    uv_loop_configure(uv_default_loop(), UV_LOOP_BLOCK_SIGNAL, SIGPROF);\n  }\n#endif\n\n  // The const_cast doesn't violate conceptual const-ness.  V8 doesn't modify\n  // the argv array or the elements it points to.\n  if (v8_argc > 1)\n    V8::SetFlagsFromCommandLine(&v8_argc, const_cast<char**>(v8_argv), true);\n\n  // Anything that's still in v8_argv is not a V8 or a node option.\n  for (int i = 1; i < v8_argc; i++) {\n    fprintf(stderr, \"%s: bad option: %s\\n\", argv[0], v8_argv[i]);\n  }\n  delete[] v8_argv;\n  v8_argv = nullptr;\n\n  if (v8_argc > 1) {\n    exit(9);\n  }\n}\n\n\nvoid "],[127362,4,""],[127362,0,"#if"],[127366,4,""],[127366,0,"!d"],[127369,3,""],[127370,0,"in"],[127373,1,""],[127373,0,"d(NODE_WITHOUT_NODE_OPTIONS)\n"],[127403,1,""],[127403,0," std::st"],[127412,0,"in"],[127415,2,""],[127415,0," nod"],[127420,1,""],[127420,0,"_op"],[127424,0,"ion"],[127428,0,";\n "],[127432,2,""],[127433,2,""],[127433,0,"f"],[127435,0,"(S"],[127438,1,""],[127438,0,"f"],[127440,3,""],[127440,0,"G"],[127442,6,""],[127443,2,""],[127443,0,"env(\""],[127449,0,"ODE_OPTIONS\", &n"],[127468,1,""],[127468,0,"_options)) {"],[127483,3,""],[127484,3,""],[127484,0," // Sm"],[127491,6,""],[127491,0,"llest"],[127497,1,""],[127497,0,"t"],[127499,0,"ke"],[127503,1,""],[127504,0,"are 2-"],[127514,2,""],[127514,0,"s"],[127516,3,""],[127516,0,"("],[127518,5,""],[127519,0,"not"],[127523,1,""],[127523,0,"sp"],[127526,2,""],[127526,0,"c"],[127528,5,""],[127528,0," "],[127530,4,""],[127530,0,"nd"],[127534,4,""],[127535,5,""],[127535,0,"sp"],[127538,2,""],[127539,0,"e)"],[127543,0,"plus 2 "],[127552,4,""],[127552,0,"t"],[127554,3,""],[127554,0,"a\n"],[127557,9,""],[127558,12,""],[127563,6,""],[127563,0,"poi"],[127567,1,""],[127567,0,"ters, f"],[127576,6,""],[127577,2,""],[127578,0,"h"],[127580,0," p"],[127583,1,""],[127585,0,"ended execu"],[127597,0,"able"],[127602,7,""],[127602,0,"n"],[127604,3,""],[127606,3,""],[127606,0,","],[127612,2,""],[127613,5,""],[127613,0,"pp"],[127616,0,"nded"],[127621,2,""],[127621,0,"N"],[127623,0,"LL"],[127627,1,""],[127628,1,""],[127629,1,""],[127629,0,"nt"],[127633,0,"."],[127637,2,""],[127638,0," size_t "],[127648,0,"x_le"],[127653,6,""],[127654,0,"="],[127656,4,""],[127656,0,"2 +"],[127660,1,""],[127660,0,"(n"],[127663,2,""],[127664,2,""],[127664,0,"e_opt"],[127670,1,""],[127670,0,"ons.l"],[127676,0,"ngth() + 1)"],[127688,1,""],[127688,0,"/ 2;\n    con"],[127701,0,"t"],[127703,0,"ch"],[127706,0,"r**"],[127710,5,""],[127710,0,"argv_from_"],[127721,0,"nv ="],[127726,3,""],[127726,0,"n"],[127728,0,"w"],[127733,0,"s"],[127735,0," cha"],[127740,1,""],[127740,0,"*[max_"],[127747,0,"en];\n  "],[127755,4,""],[127757,0,"n"],[127759,1,""],[127760,0,"argc_f"],[127767,4,""],[127767,0,"o"],[127769,0,"_"],[127771,0,"nv = 0;"],[127781,0,"  "],[127786,5,""],[127786,0,"[0] "],[127791,2,""],[127791,0,"s"],[127793,2,""],[127793,0,"expec"],[127799,0,"ed"],[127802,1,""],[127803,2,""],[127804,3,""],[127805,4,""],[127805,0,"be"],[127808,2,""],[127809,0,"h"],[127811,0," p"],[127814,2,""],[127814,0,"og"],[127817,0,"am nam"],[127824,0,", fill"],[127831,1,""],[127833,1,""],[127834,0,"in from "],[127846,2,""],[127846,0,"r"],[127848,0,"al a"],[127853,2,""],[127853,0,"gv.\n   "],[127861,3,""],[127861,0,"argv_from_"],[127873,2,""],[127873,0,"v[argc_fr"],[127883,0,"m_e"],[127887,1,""],[127887,0,"v++]"],[127892,2,""],[127892,0,"="],[127894,1,""],[127895,2,""],[127895,0,"rgv[0];\n"],[127906,2,""],[127907,2,""],[127908,1,""],[127908,0,"ch"],[127911,2,""],[127911,0,"r*"],[127914,0,"cs"],[127917,1,""],[127917,0,"r ="],[127921,1,""],[127921,0,"strdup("],[127929,0,"ode_op"],[127937,0,"ons."],[127942,3,""],[127942,0,"_s"],[127945,2,""],[127945,0,"r());\n"],[127953,9,""],[127955,2,""],[127955,0,"cha"],[127959,0,"*"],[127961,1,""],[127963,0,"i"],[127965,2,""],[127965,0,"ptr"],[127971,1,""],[127971,0,"cstr"],[127976,0,"\n "],[127979,1,""],[127980,1,""],[127981,3,""],[127981,0,"ch"],[127985,2,""],[127985,0,"* token"],[127993,7,""],[127998,0,"wh"],[128001,1,""],[128001,0,"le"],[128005,0,"(token = "],[128017,0,"tok(i"],[128023,2,""],[128023,0,"it"],[128026,5,""],[128026,0,"t"],[128028,5,""],[128031,8,""],[128032,7,""],[128033,7,""],[128034,0,"))"],[128037,1,""],[128037,0,"{"],[128039,2,""],[128040,2,""],[128040,0,"//"],[128043,1,""],[128043,0,"NOLINT(runtime/threadsafe_fn"],[128072,2,""],[128079,3,""],[128080,2,""],[128080,0,"nit"],[128084,0,"t"],[128086,7,""],[128089,0,"nullp"],[128096,2,""],[128104,1,""],[128104,0,"argv_f"],[128111,0,"om_"],[128115,0,"nv["],[128119,0,"rgc_from_env++] = to"],[128140,0,"en"],[128152,9,""],[128153,0," argv"],[128159,0,"from"],[128164,5,""],[128164,0,"env[argc"],[128173,0,"from"],[128178,0,"env] = nullptr;"],[128196,2,""],[128197,5,""],[128198,9,""],[128199,1,""],[128200,8,""],[128200,0,"t"],[128202,2,""],[128203,0,"x"],[128205,3,""],[128205,0,"c_ar"],[128210,0,"c_;\n "],[128216,2,""],[128217,2,""],[128217,0," c"],[128220,12,""],[128221,3,""],[128221,0,"s"],[128223,2,""],[128224,0,"char**"],[128231,1,""],[128231,0,"exec_arg"],[128240,4,""],[128240,0,"_ ="],[128244,0,"nullp"],[128250,2,""],[128250,0,"r;"],[128255,2,""],[128256,1,""],[128256,0," Proc"],[128262,0,"ssArgv(&a"],[128272,0,"gc_"],[128276,0,"r"],[128278,1,""],[128279,3,""],[128279,0,"_"],[128281,0,"nv,"],[128285,3,""],[128286,7,""],[128286,0,"rgv_"],[128292,3,""],[128292,0,"om_"],[128297,1,""],[128297,0,"v,"],[128300,9,""],[128300,0,"&"],[128302,6,""],[128302,0,"x"],[128304,1,""],[128304,0,"c_argc_,"],[128313,2,""],[128313,0,"&"],[128315,7,""],[128315,0,"x"],[128317,0,"c_a"],[128321,3,""],[128321,0,"gv_,"],[128326,0,"t"],[128329,6,""],[128329,0,"e);"],[128335,2,""],[128336,4,""],[128338,2,""],[128338,0,"ele"],[128342,3,""],[128342,0,"e[]"],[128346,2,""],[128346,0,"exec_a"],[128353,6,""],[128354,0,"v_;\n"],[128359,10,""],[128360,2,""],[128361,2,""],[128362,2,""],[128362,0,"d"],[128364,16,""],[128366,1,""],[128366,0,"te[]"],[128371,3,""],[128371,0,"a"],[128373,9,""],[128373,0,"g"],[128375,1,""],[128376,4,""],[128376,0,"f"],[128379,4,""],[128379,0,"m_e"],[128383,4,""],[128383,0,"v;"],[128390,11,""],[128391,3,""],[128393,5,""],[128394,10,""],[128395,32,""],[128395,0,"cstr"],[128414,0,"  ProcessArgv(argc, argv, exec_argc, exec_argv);\n\n"],[128909,40,""],[128910,3,""],[128911,24,""],[128912,10,""],[128914,405,""]],"_dtSpan":[591780,596674]},{"parents":[618],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[27655,0,"void AddPromiseHook(v8::Isolate* isolate, promise_hook_func fn, void* arg) {\n  Environment* env = Environment::GetCurrent(isolate);\n  env->AddPromiseHook(fn, arg);\n}\n\n\n"],[3671,0,"HookType;\nusing v8::Promise"],[23908,0,"DomainPromiseHook(PromiseHookType type,\n                       Local<Promise> promise,\n                       Local<Value> parent,\n                       void* arg) {\n  Environment* env = static_cast<Environment*>(arg);\n  Local<Context> context = env->context();\n\n  if (type == PromiseHookType::kResolve) return;\n  if (type == PromiseHookType::kInit && env->in_domain()) {\n    promise->Set(context,\n                 env->domain_string(),\n                 env->domain_array()->Get(context,\n                                          0).ToLocalChecked()).FromJust();\n    return;\n  }\n\n  // Loosely based on node::MakeCallback().\n  Local<Value> domain_v =\n      promise->Get(context, env->domain_string()).ToLocalChecked();\n  if (!domain_v->IsObject())\n    return;\n\n  Local<Object> domain = domain_v.As<Object>();\n  if (domain->Get(context, env->disposed_string())\n          .ToLocalChecked()->IsTrue()) {\n    return;\n  }\n\n  if (type == PromiseHookType::kBefore) {\n    Local<Value> enter_v =\n        domain->Get(context, env->enter_string()).ToLocalChecked();\n    if (enter_v->IsFunction()) {\n      if (enter_v.As<Function>()->Call(context, domain, 0, nullptr).IsEmpty()) {\n        FatalError(\"node::PromiseHook\",\n                   \"domain enter callback threw, please report this \"\n                   \"as a bug in Node.js\");\n      }\n    }\n  } else {\n    Local<Value> exit_v =\n        domain->Get(context, env->exit_string()).ToLocalChecked();\n    if (exit_v->IsFunction()) {\n      if (exit_v.As<Function>()->Call(context, domain, 0, nullptr).IsEmpty()) {\n        FatalError(\"node::MakeCallback\",\n                   \"domain exit callback threw, please report this \"\n                   \"as a bug in Node.js\");\n      }\n    }\n  }\n}\n\n\nvoid "],[26957,0,"env->AddPromiseHook(DomainPromiseHook, static_cast<void*>(env));\n\n  "],[27104,0,"\n"]],"_dtSpan":[596674,598670]},{"parents":[619],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[109844,1,""],[109844,0,"OPE"],[109849,6,""],[109849,0,"SL"]],"_dtSpan":[598670,598682]},{"parents":[620],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[6369,49,""],[116613,42,""],[116619,5,""],[116620,37,""],[116621,2,""],[116622,24,""],[116623,1,""],[116624,6,""],[116625,98,""],[116734,92,""],[116735,13,""],[116736,31,""],[116739,1,""],[116741,24,""],[116748,22,""],[116749,15,""],[116750,8,""],[116753,198,""],[116772,1,""],[116773,1,""],[116774,11,""],[116872,1340,""],[121100,0,"#if HAVE_INSPECTOR\n"],[121173,66,""],[121209,82,""],[125761,331,""],[131959,26,""],[131959,0,"if"],[131962,33,""],[131963,5,""],[131996,6,""],[131997,18,""],[132190,39,""],[132191,3,""],[132193,43,""]],"_dtSpan":[598682,601376]},{"parents":[621],"numChildren":1,"agent":135,"time":"1970-01-01T00:00:00Z","patches":[[103590,0,"pending-deprecation      emit pending deprecation warnings\\n\"\n         \"  --"]],"_dtSpan":[601376,601452]},{"parents":[622],"numChildren":1,"agent":102,"time":"1970-01-01T00:00:00Z","patches":[[108500,0,"    \"--napi-modules\",\n"]],"_dtSpan":[601452,601474]},{"parents":[623],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[38469,0,"Local<Value> e"],[38484,0,"ror;\n  r"],[38545,0,", &error)\n      .ToLocalChecked("],[38658,0,"Local<Value> e"],[38673,0,"ror;\n  r"],[38724,0,", &error)\n      .ToLocalChecked("]],"_dtSpan":[601474,601582]},{"parents":[624],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[136359,0,"\n#if !HAVE_INSPECTOR\nstatic void InitEmptyBindings() {}\n\nNODE_MODULE_CONTEXT_AWARE_BUILTIN(inspector, InitEmptyBindings);\n#endif  // !HAVE_INSPECTOR\n"]],"_dtSpan":[601582,601731]},{"parents":[625],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[3889,0,"using AsyncHooks = node::Environment::AsyncHooks;\n\n"],[4758,0,"static bool abort_on_uncaught_exception = false;\n"],[30070,1,""],[30071,60,""],[30074,61,""],[30114,34,""],[30189,80,""],[30190,76,""],[30241,22,""],[30242,39,""],[30243,8,""],[30244,31,""],[30245,8,""],[30247,32,""],[30904,2,""],[30904,0,"//"],[30907,0,"TODO"],[30912,7,""],[30913,15,""],[30915,2,""],[30915,0,"v"],[30917,2,""],[30917,0,"orri"],[30922,6,""],[30923,1,""],[30923,0,":"],[30925,7,""],[30925,0,"Cor"],[30929,3,""],[30929,0,"ec"],[30932,2,""],[30933,6,""],[30934,1,""],[30935,6,""],[30937,13,""],[30938,6,""],[30939,0,"n"],[30941,7,""],[30942,1,""],[30943,0,"node::M"],[30951,6,""],[30951,0,"k"],[30953,5,""],[30957,6,""],[30957,0,"ba"],[30960,6,""],[30960,0,"k"],[30963,1,""],[30964,0,"supp"],[30969,4,""],[30969,0,"r"],[30971,1,""],[30972,2,""],[30972,0,"id"],[30975,0,"a"],[30977,8,""],[30977,0,"d"],[30981,0,"//"],[30984,1,""],[30984,0,"tr"],[30987,4,""],[30987,0,"gge"],[30991,0,"Id"],[30994,16,""],[30995,2,""],[30996,16,""],[30998,3,""],[30998,0,"si"],[31001,1,""],[31003,10,""],[31004,10,""],[31005,0,"ompl"],[31010,1,""],[31011,4,""],[31012,7,""],[31013,9,""],[31014,11,""],[31015,3,""],[31017,35,""],[31017,0,"m"],[31019,35,""],[31020,18,""],[31021,5,""],[31022,1,""],[31022,0,"g "],[31025,2,""],[31026,9,""],[31027,10,""],[31027,0,"u"],[31029,6,""],[31030,19,""],[31030,0,"i"],[31032,3,""],[31033,4,""],[31035,10,""],[31036,1,""],[31037,12,""],[31037,0," "],[31040,2,""],[31040,0," "],[31042,0,"h"],[31044,3,""],[31045,5,""],[31045,0,"a"],[31047,4,""],[31048,5,""],[31048,0,"nc"],[31051,0,"id"],[31054,0,"can\n"],[31063,3,""],[31063,0,"p"],[31065,2,""],[31065,0,"opaga"],[31071,2,""],[31071,0,"e"],[31075,1,""],[31076,5,""],[31077,4,""],[31077,0,"ugh"],[31084,2,""],[31085,4,""],[31085,0,"h"],[31087,3,""],[31088,4,""],[31089,11,""],[31090,3,""],[31090,0,"t"],[31092,1,""],[31093,2,""],[31093,0,"Ex"],[31096,19,""],[31097,3,""],[31097,0,"p"],[31099,0,"i"],[31101,3,""],[31101,0,"n"],[31103,0,"a"],[31105,2,""],[31105,0,"t"],[31107,3,""],[31107,0,"r"],[31109,1,""],[31109,0,"hook"],[31114,3,""],[31117,3,""],[31118,7,""],[31119,4,""],[31119,0,"."],[31121,1,""],[31123,23,""],[31123,0,"A"],[31125,0,"yncH"],[31130,9,""],[31130,0,"ok"],[31133,5,""],[31133,0,"::Ex"],[31138,12,""],[31138,0,"cSc"],[31142,1,""],[31142,0,"pe"],[31145,13,""],[31145,0,"exe"],[31149,5,""],[31150,3,""],[31150,0,"s"],[31152,1,""],[31152,0,"ope"],[31159,10,""],[31159,0,", 0, 0"],[31166,1,""],[31168,0,"\n"],[31171,7,""],[31184,1,""],[31185,0,"et"],[31189,3,""],[31190,15,""],[31190,0,"c"],[31194,18,""],[31195,6,""],[31196,10,""],[31196,0,"ck->C"],[31203,6,""],[31204,11,""],[31205,1,""],[31206,22,""],[31207,9,""],[31208,17,""],[31209,3,""],[31209,0,","],[31211,8,""],[31212,3,""],[31212,0,"rg"],[31215,21,""],[31217,5,""],[31218,12,""],[31219,19,""],[31219,0,"gv"],[31224,10,""],[31469,0,"exec_scope.D"],[31482,0,"spose();\n\n  i"],[32001,0,"// Make sure the stack unwound properly. If there are nested MakeCallback's\n  // then it should return early and not reach this code.\n  CHECK_EQ(env->current_async_id(), 0);\n  CHECK_EQ(env->trigger_id(), 0);\n\n  "],[32525,1,""],[32597,1,""],[32619,1,""],[32681,1,""],[32901,1,""],[32973,1,""],[32993,1,""],[33055,1,""],[114746,0,"if (strcmp(arg, \"--abort-on-uncaught-exception\") ||\n               strcmp(arg, \"--abort_on_uncaught_exception\")) "],[114867,0,"abort_on_uncaught_exception = true;\n      "],[114912,0,"Also a "],[115018,0," else {\n      // V8 option.  Pass through as-is."],[115067,0,"      new_v8_argv[new_v8_argc] = arg;"],[115109,0,"  new_v8_argc += 1;\n    }\n\n    "],[131763,0,"env.set_abort_on_uncaught_exception(abort_on_uncaught_exception);\n\n  "],[131896,0,"Environment::AsyncHooks::ExecScope exec_scope(&env, 1, 0);\n    "]],"_dtSpan":[601731,603874]},{"parents":[626],"numChildren":1,"agent":54,"time":"1970-01-01T00:00:00Z","patches":[[136104,1,""]],"_dtSpan":[603874,603875]},{"parents":[627],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[69089,39,""],[69090,4,""],[69092,26,""],[69093,37,""],[69093,0,"!"],[69104,1,""],[69104,0,"I"],[69106,2,""],[69106,0,"V"],[69113,1,""],[69113,0,"()"],[69116,0," {"],[69121,0,"  "],[69192,0,"  }\n"]],"_dtSpan":[603875,603998]},{"parents":[628],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[114698,0,"== 0 "],[114765,0," == 0"],[107294,0,"-requi"],[107301,0,"e"],[107306,1,""],[107308,0,"\",\n    \"--insp"],[107323,2,""],[107323,0,"ct\",\n    \"--"],[107336,0,"nspect-b"],[107345,0,"k\",\n    \"--insp"],[107361,0,"ct-port"],[107402,2,""],[107402,0,"trace"],[107408,1,""],[107408,0,"deprec"],[107415,2,""],[107415,0,"t"],[107417,0,"o"],[107419,2,""],[107430,0,"hrow-dep"],[107439,0,"ec"],[107442,2,""],[107442,0,"tion\",\n    \"--no"],[107477,3,""],[107477,0,"nap"],[107481,1,""],[107481,0,"-modul"],[107488,0,"s\",\n    \"--tra"],[107503,1,""],[107503,0,"e"],[107523,1,""],[107524,2,""],[107525,1,""],[107526,2,""],[107526,0,"i"],[107530,0,"t-w"],[107534,1,""],[107534,0,"rn"],[107537,1,""],[107538,0,"gs"],[107607,1,""],[107607,0,"e"],[107609,1,""],[107610,2,""],[107610,0,"vents"],[107616,4,""],[107617,0,"a"],[107619,0,"egorie"],[107637,1,""],[107638,2,""],[107638,0,"ack"],[107642,1,""],[107642,0,"h"],[107644,0,"a"],[107646,1,""],[107646,0,"-obj"],[107652,1,""],[107653,3,""],[107653,0,"s"],[107717,3,""],[107717,0,"bu"],[107720,2,""],[107720,0,"d"],[107722,0,"ed"],[107741,2,""],[107741,0,"ope"],[107745,1,""],[107745,0,"ss"],[107748,2,""],[107838,22,""]],"_dtSpan":[603998,604249]},{"parents":[629],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[127998,2,""],[127998,0,"fprin"],[128004,7,""],[128004,0,"f"],[128006,5,""],[128006,0,"s"],[128008,0,"der"],[128013,0,"\n           "],[128027,1,""],[128027,0,"%s: c"],[128058,1,""],[128070,8,""],[128122,0,",\n            argv[0]);\n    exit(9"]],"_dtSpan":[604249,604334]},{"parents":[630],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[6439,30,""],[7206,0,"\n  bool InspectorStarted(Environment *env) {\n    return env->inspector_agent()->IsStarted();\n  }\n"],[8171,0,"  bool InspectorStarted(Environment *env) {\n    return false;\n  }\n"],[116562,28,""],[116584,1,""],[116584,0,"CHECK(!"],[116592,4,""],[116592,0,"nv->insp"],[116601,0,"cto"],[116606,0,"agent()->IsSta"],[116621,6,""],[116621,0,"ted());\n"],[116630,1,""],[120908,26,""],[120933,2,""],[120985,1,""],[120985,0,"if"],[120988,0,"("],[121013,0,"Is"],[121017,2,""],[121017,0,"arted"],[121024,8,""],[121024,0,") {"],[121032,1,""],[121033,4,""],[121033,0,"nv->insp"],[121042,0,"cto"],[121047,6,""],[121047,0,"a"],[121049,7,""],[121050,0,"nt()->Stop()"],[121068,0,"#endif\n"],[131863,1,""],[131863,0,"v8_platform.Insp"],[131880,5,""],[131880,0,"cto"],[131884,1,""],[131884,0,"Sta"],[131888,4,""],[131888,0,"ted(&e"],[131895,1,""],[131895,0,"v)"]],"_dtSpan":[604334,604750]},{"parents":[631],"numChildren":1,"agent":41,"time":"1970-01-01T00:00:00Z","patches":[[101715,0,"| - "],[102354,0,"         \"  -                          script read from stdin (default; \"\n         \"interactive mode if a tty)\"\n"],[114937,0,"\") == 0) {\n      break;\n    } else if (strcmp(arg, \"-"]],"_dtSpan":[604750,604919]},{"parents":[632],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[103371,4,""],[103371,0,"file"],[103436,4,""],[103436,0,"file"],[102820,0,"         \"  --inspect-port=[host:]port\\n\"\n         \"                             set host:port for inspector\\n\"\n"],[110237,0,"v[0], arg"],[107648,0,", sorted in `node --help` order for ease of comparison."],[108129,0,"tls-cipher-list\",\n    \"--"]],"_dtSpan":[604919,605136]},{"parents":[633],"numChildren":1,"agent":98,"time":"1970-01-01T00:00:00Z","patches":[[24388,49,""],[24600,198,""],[24601,40,""],[24602,6,""],[24603,1,""],[24606,92,""],[24670,32,""],[24670,0,"D"],[24676,8,""],[24676,0,"E"],[24680,4,""],[24680,0,"r("],[24685,10,""],[24685,0,", p"],[24689,8,""],[24690,10,""],[24690,0,"mis"],[24694,2,""],[24699,1,""],[24699,0,"}"],[24701,4,""],[24702,9,""],[24702,0,"l"],[24704,15,""],[24704,0,"e"],[24706,4,""],[24710,2,""],[24711,0,"yp"],[24714,33,""],[24715,33,""],[24715,0,"=="],[24718,25,""],[24729,30,""],[24729,0,"Typ"],[24733,12,""],[24733,0,"::"],[24736,1,""],[24736,0,"Af"],[24739,11,""],[24740,1,""],[24741,53,""],[24742,13,""],[24743,11,""],[24749,31,""],[24749,0,"D"],[24755,11,""],[24755,0,"E"],[24757,10,""],[24758,3,""],[24759,22,""],[24760,11,""],[24761,16,""],[24762,21,""],[24763,37,""],[24765,16,""],[24766,22,""],[24767,47,""],[24769,41,""],[24770,25,""],[24771,13,""],[24772,4,""],[24774,14,""]],"_dtSpan":[605136,606224]},{"parents":[634],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[6351,0,"bool linux_at_secure = false;\n\n"],[19761,16,""],[19762,88,""],[19869,0,"linux_at_secure) {\n    text->clear();\n    return false;\n  }\n  if ("],[8202,0,"#endif "],[8210,0,"// !NODE_USE_V8_PLATFORM\n\n#if"],[8240,0,"!NODE_USE_V8_PLATFORM || !HAVE_INSPECTOR\n  "],[8358,0," "],[8380,0," || !HAVE_INSPECTOR"]],"_dtSpan":[606224,606524]},{"parents":[635],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[9667,0,"->isolate()"],[9679,0,"\n              "],[9717,0,"\n              "],[9765,0,",\n               0,\n               nullptr,\n               0, 0).ToLocalChecked("],[29012,0,"Maybe"],[29087,0,"     "],[29137,0,"     "],[29200,0,"     "],[29241,0,"     "],[29265,0,",\n                               double async_id,\n                               double trigger_id"],[29530,35,""],[29588,0,"  bool disposed_domain = false;\n"],[29743,1,""],[29746,12,""],[29748,3,""],[29749,6,""],[29749,0,"sp"],[29752,11,""],[29752,0,"s"],[29754,4,""],[29755,5,""],[29756,19,""],[29765,1,""],[29765,0,"D"],[29771,11,""],[29771,0,"En"],[29774,0,"er"],[29777,20,""],[29777,0,"e"],[29779,18,""],[29779,0,"v,"],[29782,1,""],[29783,11,""],[29788,2,""],[29791,1,""],[29795,1,""],[29800,3,""],[29801,14,""],[29808,3,""],[29808,0,"doma"],[29814,13,""],[29815,9,""],[29852,6,""],[29856,3,""],[29857,8,""],[29857,0,"M"],[29859,10,""],[29859,0,"ybe"],[29875,4,""],[29876,17,""],[29877,11,""],[29878,7,""],[29880,3,""],[29880,0,"\n"],[29882,26,""],[29885,1,""],[29889,13,""],[29891,3,""],[29891,0,"y"],[29894,2,""],[29894,0,"H"],[29896,12,""],[29897,19,""],[29897,0,"k"],[29899,35,""],[29901,3,""],[29901,0,"Ex"],[29904,6,""],[29905,25,""],[29905,0,"Sc"],[29908,4,""],[29908,0,"pe"],[29912,2,""],[29912,0,"x"],[29914,2,""],[29915,5,""],[29915,0,"_s"],[29918,9,""],[29918,0,"o"],[29920,1,""],[29921,47,""],[29922,2,""],[29923,1,""],[29924,15,""],[29924,0,"v,"],[29927,3,""],[29927,0,"a"],[29929,2,""],[29929,0,"y"],[29932,31,""],[29932,0,"_"],[29935,9,""],[29935,0,","],[29944,8,""],[29944,0,"_"],[29947,2,""],[29947,0,");\n\n"],[29952,10,""],[29953,8,""],[29954,2,""],[29955,3,""],[29956,9,""],[29956,0,"f"],[29958,4,""],[29958,0,"("],[29964,1,""],[29964,0,"_"],[29968,4,""],[29968,0,"!="],[29971,0,"0)"],[29974,2,""],[29974,0,"{\n"],[29977,9,""],[29978,7,""],[29979,2,""],[29980,3,""],[29981,14,""],[29982,1,""],[29982,0,"i"],[29984,3,""],[29985,14,""],[29985,0,"(!"],[29992,5,""],[29992,0,"Wrap"],[29999,11,""],[29999,0,"mitB"],[30004,4,""],[30004,0,"f"],[30006,1,""],[30006,0,"r"],[30014,4,""],[30014,0,"async_id)"],[30024,3,""],[30025,0,"return"],[30044,0,"();\n    }\n\n   "],[30080,0,"env->context(), "],[30118,0,"  "],[30145,0,"  "],[30226,0,"  "],[30264,0,"  "],[30316,0,"  "],[30349,12,""],[30353,0,"  "],[30360,23,""],[30366,1,""],[30368,0,"ync"],[30372,0,"i"],[30374,5,""],[30374,0," != 0"],[30387,12,""],[30388,2,""],[30388,0," "],[30390,3,""],[30390,0,"f"],[30392,5,""],[30392,0,"(!AsyncWr"],[30402,0,"p::Em"],[30408,4,""],[30408,0,"tAft"],[30413,1,""],[30413,0,"r"],[30418,7,""],[30418,0,", a"],[30422,3,""],[30422,0,"y"],[30424,2,""],[30424,0,"c_id"],[30430,4,""],[30431,5,""],[30431,0,"r"],[30433,2,""],[30434,7,""],[30435,0,"r"],[30437,0," Lo"],[30441,4,""],[30441,0,"al<Value>"],[30452,1,""],[30452,0,";\n "],[30456,2,""],[30458,0,"}\n"],[30462,0,"}\n\n"],[30472,4,""],[30472,0,"n"],[30474,5,""],[30474,0,"->"],[30477,3,""],[30477,0,"s"],[30479,1,""],[30480,10,""],[30480,0,"g_"],[30488,15,""],[30489,5,""],[30499,2,""],[30499,0,"disposed_domain"],[30515,0,"="],[30517,3,""],[30517,0,"Dom"],[30521,1,""],[30521,0,"in"],[30524,4,""],[30524,0,"xit"],[30528,1,""],[30528,0,"e"],[30530,0,"v, "],[30534,12,""],[30535,1,""],[30535,0,"je"],[30538,3,""],[30538,0,"t);"],[30542,2,""],[30546,0,"if"],[30549,13,""],[30549,0,"("],[30551,0,"isp"],[30555,0,"sed_do"],[30565,0,")"],[30567,0,"r"],[30569,2,""],[30570,12,""],[30570,0,"u"],[30572,3,""],[30572,0,"n"],[30574,2,""],[30574,0,"Und"],[30578,2,""],[30578,0,"fin"],[30582,2,""],[30582,0,"d("],[30585,7,""],[30585,0,"nv->"],[30591,1,""],[30591,0,"olate()"],[30600,14,""],[30973,1,""],[30973,0,"async_id"],[31014,1,""],[31014,0,"trigger_id"],[31299,0,"// Public MakeCallback()s\n\n\nMaybe"],[31358,5,""],[31358,0,"Is"],[31361,2,""],[31361,0,"lat"],[31365,2,""],[31367,0,"isolat"],[31374,2,""],[31402,0,"     "],[31453,1,""],[31453,0,"     c"],[31460,0,"nst "],[31465,0,"h"],[31467,4,""],[31468,4,""],[31468,0,"*"],[31470,2,""],[31471,1,""],[31471,0,"eth"],[31475,1,""],[31475,0,"d"],[31504,0,"     "],[31545,12,""],[31546,7,""],[31547,2,""],[31549,0," "],[31563,65,""],[31564,16,""],[31565,2,""],[31565,0,"g"],[31567,12,""],[31567,0,"[]"],[31570,0,"\n"],[31572,20,""],[31573,5,""],[31574,23,""],[31575,25,""],[31576,5,""],[31602,3,""],[31603,6,""],[31603,0,"syn"],[31607,2,""],[31607,0,"_uid"],[31612,34,""],[31612,0,"asy"],[31616,3,""],[31617,10,""],[31617,0,"_i"],[31622,3,""],[31640,15,""],[31653,16,""],[31654,5,""],[31654,0,"sync_"],[31660,2,""],[31660,0,"id"],[31663,1,""],[31663,0,"t"],[31665,0,"i"],[31667,3,""],[31667,0,"ger_id"],[31708,0,"\n     "],[31715,7,""],[31721,1,""],[31721,0,"::N"],[31725,4,""],[31725,0,"wFromUtf8("],[31742,2,""],[31750,0,", v8::NewStringType::kNormal)\n          .ToLocalChecked("],[31831,0,"isolat"],[31838,2,""],[31871,0,",\n                      async_id, trigger_id"],[31922,0,"Maybe"],[31997,0,"     "],[32048,5,""],[32049,0,"    Lo"],[32056,1,""],[32057,0,"l<St"],[32062,1,""],[32062,0,"ing>"],[32067,0,"sy"],[32070,3,""],[32070,0,"b"],[32072,1,""],[32072,0,"l"],[32101,0,"     "],[32142,0,"     "],[32166,103,""],[32167,9,""],[32170,6,""],[32171,21,""],[32177,109,""],[32199,3,""],[32200,12,""],[32200,0,"syn"],[32204,24,""],[32204,0,"_uid"],[32209,7,""],[32210,10,""],[32212,33,""],[32213,5,""],[32214,0,"_id"],[32245,12,""],[32246,7,""],[32247,2,""],[32249,20,""],[32250,1,""],[32251,0,"sy"],[32254,0,"c_ui"],[32259,1,""],[32259,0," trigg"],[32266,0,"r"],[32268,6,""],[32269,6,""],[32269,0,"d"],[32271,1,""],[32271,0," {"],[32493,20,""],[32541,1,""],[32541,0,",\n                      async_id, trigger_id"],[32592,0,"Maybe"],[32667,0,"     "],[32718,0,"     "],[32775,0,"     "],[32816,0,"     "],[32840,0,",\n                               async_uid async_id,\n                               async_uid trigger_id"],[33253,46,""],[33386,0,"MakeCallback(env, recv.As<Value>(), callback, argc, argv,\n                      async_id, trigger_id);\n}\n\n\n// Legacy MakeCallback()s\n\nLocal<Value> MakeCallback(Isolate* isolate,\n                          Local<Object> recv,\n                          const c"],[33645,0,"r* method,\n                          i"],[33684,0,"t argc,\n                          Local<Value>* argv) {\n  EscapableHandleScope han"],[33775,0,"(isolate);\n  return handle_scope"],[33835,0,"isolate, recv, method, argc, argv, 0, 0)\n          .FromMaybe(Local<Value>()));\n}\n\n\nLocal<Value> MakeCallback(Isolate* isolate,\n    Local<Object> r"],[33983,0,"cv,\n    Local<Stri"],[34002,0,"g> symbol,\n    int argc,\n    Local<Value>* arg"],[34049,0,") {\n  EscapableHandleScope handle_scope(isolate);\n  return handle_scope.Escape(\n      MakeCallback(isolate"],[34161,0,", symbol, argc, argv, 0, 0)\n          "],[34200,1,""],[34200,0,"FromMaybe(Local<Value>()));\n}\n\n\nLocal<Value> MakeCallback(I"],[34260,0,"olate* isolate,\n    Local<Object> recv,\n    Local"],[34310,0,"Function> callback,\n    int argc,\n    Local<"],[34360,0,"* argv) {\n  EscapableHandleScope handle_scope"],[34406,0,"isolate"],[34414,0,";\n  return handle_scope.Escape(\n      MakeCallback(isolate"],[34474,0,"recv, "],[34500,0,", 0, 0)\n          .FromMaybe(Local<Value>()"],[129457,0,"->isolate()"],[129469,0,"\n              "],[129530,0,",\n               0, 0"],[129552,0,".ToLocalChecked()"],[130075,0,"->isolate()"],[130087,0,"\n              "],[130148,0,",\n               0, 0).ToLocalChecked("]],"_dtSpan":[606524,610478]},{"parents":[636],"numChildren":1,"agent":126,"time":"1970-01-01T00:00:00Z","patches":[[93786,0,"TODO(refack): move the following 4 to `node_config`\n  // --inspect\n  if (debug_options.inspector_enabled()) {\n    READONLY_DONT_ENUM_PROPERTY(process,\n                                \"_inspectorEnbale\", True(env->isolate()));\n  }\n\n  // "],[94091,0,"DONT_ENUM_"],[94118,0,"\n                               "],[94153,0,"breakFirstLine\", True(env->isolate()));\n  }\n\n  // --inspect --"],[94220,1,""],[94220,0,"-brk\n  if (debug_options.deprec"],[94252,0,"ted_"],[94257,0,"nvoca"],[94263,1,""],[94263,0,"i"],[94266,0,"()) {\n    READONLY_DONT_ENUM_PROPERTY(process,\n                                \"_deprecatedDebugBrk\", True(e"],[94375,0,"v->isolat"],[94385,0,"()));\n  }\n\n  // --debug or, --debug-brk without --inspect\n  if (debug_options.invalid_invo"],[94476,0,"a"],[94478,0,"ion()) {\n    READONLY_DONT_ENUM_PROPERTY(process,\n                                \"_invalidDebug"]],"_dtSpan":[610478,611165]},{"parents":[637],"numChildren":1,"agent":186,"time":"1970-01-01T00:00:00Z","patches":[[19985,0,"linux_at_secure || "],[20051,2,""],[20056,0,"go"],[20059,24,""],[20059,0,"o"],[20063,0,"i"],[20065,2,""],[20066,4,""],[20074,24,""],[20075,1,""],[20077,40,""],[20156,0,"\nfail:\n"]],"_dtSpan":[611165,611292]},{"parents":[638],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[1527,0,"HAVE_INSPECTOR\n#include \"inspector_io.h\"\n#endif\n\n#if "],[81763,0,"t port = debug_options.port();\n#if HAVE_INSPECTOR\n  i"],[81817,0," (port == 0) {\n    Environment* env = Envir"],[81861,2,""],[81861,0,"nm"],[81864,0,"n"],[81866,1,""],[81866,0,"::G"],[81871,0,"C"],[81874,0,"rent(info);\n    if (e"],[81896,1,""],[81896,0,"v->inspector_"],[81910,2,""],[81910,0,"g"],[81912,0,"nt"],[81916,1,""],[81916,0,"->Is"],[81921,0,"tart"],[81926,0,"d())\n      por"],[81941,2,""],[81941,0," = env->insp"],[81954,2,""],[81954,0,"ctor_a"],[81961,1,""],[81961,0,"ent()->i"],[81970,0,"()->"],[81975,0,"or"],[81978,0,"();\n  }\n#endif  // HAVE_INSPECTOR\n  "],[82015,0,"nf"],[82018,0,".GetRetur"],[82028,1,""],[82028,0,"Value()"],[82036,0,"Set("],[82044,2,""]],"_dtSpan":[611292,611612]},{"parents":[639],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[117154,1,""],[117154,0,"Insp"],[117159,3,""],[117159,0,"ctor"],[117223,0,"    "],[132606,1,""],[132606,0,"Insp"],[132611,3,""],[132611,0,"ctor"]],"_dtSpan":[611612,611640]},{"parents":[640],"numChildren":1,"agent":81,"time":"1970-01-01T00:00:00Z","patches":[[102780,0,"\\n"]],"_dtSpan":[611640,611642]},{"parents":[641],"numChildren":1,"agent":186,"time":"1970-01-01T00:00:00Z","patches":[[94042,1,""],[94042,0,"3"],[94060,179,""]],"_dtSpan":[611642,611823]},{"parents":[642],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[7215,0,"// Inspector agent can't fail to start, but if it was configured to listen\n    // right away on the websocket port and fails to bind/etc, this will return\n    // false.\n    "],[82067,0,"auto io = "],[82101,9,""],[82101,0,"io"],[82120,5,""],[82121,6,""],[82122,15,""]],"_dtSpan":[611823,612043]},{"parents":[643],"numChildren":1,"agent":187,"time":"1970-01-01T00:00:00Z","patches":[[6592,7,""]],"_dtSpan":[612043,612050]},{"parents":[644],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[126263,311,""]],"_dtSpan":[612050,612361]},{"parents":[645],"numChildren":1,"agent":162,"time":"1970-01-01T00:00:00Z","patches":[[128590,0,"\\n"]],"_dtSpan":[612361,612363]},{"parents":[646],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[6762,0,"\n        "],[6787,0,",\n        v8::platform::IdleTaskSupport::kDisabled,\n        v8::platform::InProcessStackDumping::kDisabled"]],"_dtSpan":[612363,612478]},{"parents":[647],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[108705,0,"abort-on-uncaught-exception\",\n    \"--"]],"_dtSpan":[612478,612515]},{"parents":[648],"numChildren":1,"agent":9,"time":"1970-01-01T00:00:00Z","patches":[[10158,0,"{"],[10163,0,"}"],[29536,1,""],[29566,6,""],[29573,36,""],[29573,0,"c"],[29575,3,""],[29575,0,"nt"],[29578,0,"xt"],[29581,0,"asyncCon"],[29590,4,""],[29591,4,""],[29591,0,"xt"],[30162,0,"Context.async"],[30179,0,"\n                                    "],[30217,0,"asyncCon"],[30226,0,"ext.t"],[30238,0,"async_"],[30263,0,"Context.async"],[30331,0,"Context.async"],[30349,0,"\n       "],[30704,0,"Context.async"],[30771,0,"Context.async"],[30789,0,"\n       "],[31345,0,"Context.async"],[31394,0,"asyncCon"],[31403,0,"ext.t"],[31415,0,"async_"],[32007,8,""],[32008,30,""],[32008,0,"ontext"],[32015,5,""],[32020,5,""],[32020,0,"Con"],[32024,4,""],[32025,4,""],[32025,0,"xt"],[32226,3,""],[32227,19,""],[32232,5,""],[32232,0,"Con"],[32236,4,""],[32237,4,""],[32237,0,"xt"],[32529,3,""],[32529,0,"context"],[32542,39,""],[32542,0,"Co"],[32545,6,""],[32546,4,""],[32547,4,""],[32547,0,"xt"],[32821,16,""],[32822,6,""],[32827,5,""],[32827,0,"Con"],[32831,4,""],[32832,4,""],[32832,0,"xt"],[33128,8,""],[33129,30,""],[33129,0,"ontext"],[33136,5,""],[33141,5,""],[33141,0,"Con"],[33145,4,""],[33146,4,""],[33146,0,"xt"],[33675,5,""],[33675,0,"Con"],[33679,4,""],[33680,4,""],[33680,0,"xt"],[34066,0,"{"],[34071,0,"}"],[34381,0,"{"],[34386,0,"}"],[34702,0,"{"],[34707,0,"}"],[130205,0,"{"],[130210,0,"}"],[130825,0,"{"],[130830,0,"}"]],"_dtSpan":[612515,613064]},{"parents":[649],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[103717,0,"abort-on-uncaught-exception\\n\"\n         \"                             aborting instead of exiting causes a\\n\"\n         \"                             core file to be generated for analysis\\n\"\n         \"  --"],[107861,1,""],[107861,0,"bo"],[107864,2,""],[107864,0,"l"],[107866,5,""],[107866,0,"Arg"],[107870,1,""],[107870,0,"s"],[107878,1,""],[107878,0,"(co"],[107882,4,""],[107882,0,"st "],[107886,0,"har* arg, c"],[107908,0,"allow"],[107914,1,""],[107914,0,"d) {\n  for (; *arg && *allow"],[107943,0,"d; arg++"],[107953,1,""],[107953,0,"all"],[107957,2,""],[107957,0,"wed++) {\n    //"],[107973,0,"L"],[107975,2,""],[107975,0,"k"],[107977,0," "],[107979,1,""],[107979,0,"ormal strcmp()"],[107994,1,""],[107995,0,"except"],[108002,0,"that"],[108007,0,"a"],[108009,0,"'_'"],[108013,0,"in"],[108016,0,"`allowed`"],[108026,0,"matches"],[108034,0,"either"],[108041,0,"a"],[108043,0,"'-'\n"],[108051,0,"//"],[108054,0,"or"],[108057,0,"'_'"],[108061,0,"in"],[108064,0,"`arg`.\n"],[108075,0,"if"],[108078,0,"(*allowed"],[108088,0,"=="],[108091,0,"'_')"],[108096,0,"{\n"],[108104,5,""],[108104,0,"if"],[108107,2,""],[108107,0,"(!(*"],[108113,1,""],[108113,0,"g =="],[108118,0,"'_' || *"],[108129,0," == '-')"],[108138,0,"\n        return false;\n "],[108163,0,"  } else "],[108176,0,"    "],[108184,0,"*arg "],[108190,3,""],[108190,0,"= *allow"],[108199,2,""],[108199,0,"d"],[108206,0,"    "],[108216,0," false"],[108224,0,"    }\n  }\n"],[108240,1,""],[108240,0,"\"--some-arg=val\" "],[108258,0,"s allowed for \"--some-arg\"\n  if (*arg == '=')\n    retur"],[108314,1,""],[108316,0,"rue;\n\n  // Bot"],[108331,0," must be null, or on"],[108353,1,""],[108353,0,"st"],[108356,0,"in"],[108360,0,"is just a "],[108377,1,""],[108377,0,"of t"],[108383,1,""],[108384,1,""],[108384,0,"o"],[108386,1,""],[108386,0,"her,"],[108391,3,""],[108391,0,"n"],[108393,0,"t a\n  // "],[108403,0,"atch.\n  r"],[108413,1,""],[108413,0,"turn !*"],[108423,2,""],[108423,0," && !*"],[108431,0,"lowed;\n}\n"],[108441,0,"\nstatic"],[108449,0,"void"],[108454,0,"Che"],[108458,0,"kIfAll"],[108465,0,"wedInE"],[108472,0,"v(con"],[108487,1,""],[108487,0,"xe, bool is_env,\n                              "],[108535,1,""],[108536,0,"con"],[108541,1,""],[108541,0," "],[108544,0,"a"],[108546,1,""],[108546,0,"* "],[108551,5,""],[108552,1,""],[108552,0," {"],[108557,1,""],[108558,2,""],[108558,0,"f (!is"],[108565,6,""],[108567,0,"v)\n"],[108571,1,""],[108572,2,""],[108573,1,""],[108574,0,"r"],[108576,11,""],[108577,0,"u"],[108579,2,""],[108580,5,""],[109291,0," (define with '_', which allows '-' or '_')"],[109347,1,""],[109347,0,"_"],[109350,1,""],[109350,0,"_"],[109359,1,""],[109359,0,"_"],[109510,2,""],[109510,0,"A"],[109512,5,""],[109512,0,"gIsA"],[109522,5,""],[109522,0,"("],[109526,6,""],[109526,0,","],[109528,8,""],[109535,13,""],[109536,5,""]],"_dtSpan":[613064,614001]},{"parents":[650],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[1876,0,"nghttp2/nghttp2ver.h\"\n#include \""],[6406,0,"// Set in node.cc by ParseArgs when --expose-http2 is used.\nbool config_expose_http2 = false;\n\n"],[87918,0,"READONLY_PROPERTY(versions,\n                    \"nghttp2\",\n                    FIXED_ONE_BYTE_STRING(env->isolate(), NGHTTP2_VERSION));\n\n  "],[104188,0,"expose-http2             enable experimental HTTP2 support\\n\"\n         \"  --"],[109248,0,"expose-ht"],[109258,0,"p2\",\n    \"--t"],[116536,0,"-expose-http2\") == 0 ||\n               strcmp(arg, \"--expose_http2\") == 0) {\n      config_expose_http2 = true;\n    } else if (strcmp(arg, \"-"]],"_dtSpan":[614001,614505]},{"parents":[651],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[29159,9,""],[29159,0,"i"],[29166,2,""]],"_dtSpan":[614505,614517]},{"parents":[652],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[89659,0,"\n                   "],[89710,6,""],[89710,0,"NODE_RELEASE"]],"_dtSpan":[614517,614555]},{"parents":[653],"numChildren":1,"agent":54,"time":"1970-01-01T00:00:00Z","patches":[[107537,0,"         \"                             via a space-separated list\\n\"\n"]],"_dtSpan":[614555,614624]},{"parents":[654],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[30411,0,"// No need to check a return value because the application will exit "],[30482,0,"\n      // an exception occurs.\n     "],[30519,2,""],[30568,31,""],[30924,5,""],[30971,31,""]],"_dtSpan":[614624,614798]},{"parents":[655],"numChildren":1,"agent":98,"time":"1970-01-01T00:00:00Z","patches":[[6841,0,"tracing_agent_ =\n      trace_enabled ? new tracing::Agent() : nullptr;\n    "],[6971,2,""],[6988,8,""],[7037,2,""],[7083,0,",\n      trace_enabled ? tracing_agent_->GetTracingController() : nullptr"],[7231,0,"Tracing"],[7239,1,""],[7239,0,"ontrolle"],[7248,0,"(\n      trace_enabled ? t"],[7274,0,"acing_ag"],[7285,2,""],[7285,0,"_->GetTr"],[7294,0,"cingCon"],[7302,1,""],[7302,0,"r"],[7304,0,"lle"],[7308,1,""],[7309,1,""],[7309,0,") : nul"],[7317,1,""],[7317,0,"p"],[7319,2,""],[7320,2,""],[8049,81,""],[8076,11,""],[1249,0,"platform.h\"\n#include \"node_"],[6860,0,", uv_loop_t* loop"],[6908,0,"  "],[6974,16,""],[6974,0,"n"],[6976,4,""],[6976,0,"w Nod"],[6982,5,""],[6991,7,""],[7009,5,""],[7010,3,""],[7011,16,""],[7012,13,""],[7012,0,"p"],[7021,52,""],[7188,0,"  "],[7269,7,""],[7269,0,"Di"],[7272,6,""],[7273,3,""],[7274,7,""],[7275,4,""],[7276,0,"("],[7285,4,""],[7293,3,""],[7293,0,"_->Sh"],[7299,10,""],[7299,0,"td"],[7302,2,""],[7302,0,"wn"],[7305,0,");\n    delete "],[7328,1,""],[7328,0,";\n   "],[7334,2,""],[7334,0,"platf"],[7340,0,"rm_ = nul"],[7350,0,"ptr;\n    delete tracing_"],[7375,0,"gent_;\n    "],[7387,0,"racing_ag"],[7397,1,""],[7397,0,"nt_ = nullptr"],[7425,0,"ra"],[7428,0,"nVMTa"],[7434,2,""],[7434,0,"k"],[7436,1,""],[7441,1,""],[7444,6,""],[7454,8,""],[7454,0,"->Dr"],[7459,3,""],[7459,0,"inBackg"],[7467,5,""],[7467,0,"ou"],[7470,6,""],[7470,0,"dTasks()"],[8154,7,""],[8155,2,""],[8156,5,""],[8157,13,""],[8186,0,"  NodePlatform* platform_;\n"],[8283,0,", uv_loop_t* loop"],[8312,6,""],[8312,0,"Di"],[8315,7,""],[8316,3,""],[8317,7,""],[8318,4,""],[8319,0,"("],[8333,0,"ra"],[8336,0,"nVMTa"],[8342,2,""],[8342,0,"k"],[8344,1,""],[134369,13,""],[134370,38,""],[134401,3,""],[134401,0,"D"],[134403,0,"FAULT"],[134418,0,"Em"],[134421,0,"tBe"],[134425,3,""],[134428,8,""],[134428,0,"Exit(&"],[134435,0,"nv"],[134438,2,""],[134438,0,";\n"],[134447,2,""],[134459,4,""],[134459,0,"DrainV"],[134466,3,""],[134466,0,"T"],[134468,8,""],[134469,30,""],[134469,0,"ks"],[134472,4,""],[134475,2,""],[134481,1,""],[134549,1,""],[134555,1,""],[134598,1,""],[134604,1,""],[134622,8,""],[134624,30,""],[134641,15,""],[134642,28,""],[134643,8,""],[134808,0,"v8_platform.DrainVMTasks();\n  "],[137360,0,", uv_default_loop()"],[137867,0,"// uv_run cannot be called from the time before the beforeExit callback\n  // runs until the program exits unless the event loop has any referenced\n  // handles after beforeExit terminates. This prevents unrefed timers\n  // that happen to terminate during shutdown from being run unsafely.\n  // Since uv_run cannot be called, uv_async handles held by the platform\n  // will never be fully cleaned up.\n  "]],"_dtSpan":[614798,616331]},{"parents":[656],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[4920,0,"// Bit flag used to track security reverts (see node_revert.h)\nunsigned int reverted = 0;\n\n"],[95547,0,"SECU"],[95552,0,"ITY_R"],[95575,4,""],[95606,5,""],[95785,0,"SECURITY_"],[1372,0,"#include \"node_perf.h\"\n"],[134481,0,"PERFORMANCE_MARK(&env, LOOP_START);\n    "],[134837,0,"  PERFORMANCE_MARK(&env, LOOP_EXIT);\n  "],[136656,0,"  node::performance::performance_node_start = PERFORMANCE_NOW();\n"],[137912,0,"node::performance::performance_v8_start = PERFORMANCE_NOW();\n  "]],"_dtSpan":[616331,616679]},{"parents":[657],"numChildren":1,"agent":24,"time":"1970-01-01T00:00:00Z","patches":[[6047,0,"in node.cc "],[6078,0,"ex"],[6082,0,"rime"],[6087,0,"tal-modules is use"],[6106,0,".\n// Used "],[6118,0," node_confi"],[6130,0,".cc to set a constant on process.binding('config')\n// that is used by lib/module.js\nbool config_experimental_modules = false;\n\n// Set by ParseArgs when -"],[6284,0,"pending-"],[107104,0,"--experimental-modules     experimental ES Module support\\n\"\n         \"  "],[115633,0,"experimental-modules\") == 0) {\n      config_experimental_modules = true;\n    } else if (strcmp(arg, \"--"]],"_dtSpan":[616679,617072]},{"parents":[658],"numChildren":1,"agent":45,"time":"1970-01-01T00:00:00Z","patches":[[3113,0," "],[3117,0,"ined(__POSIX__)\n#include"],[3142,0,"<dlfcn.h>\n#endif\n\n#ifdef "],[63970,0,"struct DLib {\n  std::string filename_;\n  std::string errmsg_;\n  void* handle_;\n  int flags_;\n\n#ifdef __POSIX__\n  static const int kDefaultFlags = RTLD_LAZY;\n\n  bool Open() {\n    handle_ = dlopen(filename_.c_str(), flags_);\n    if (handle_ != nullptr)\n      return true;\n    errmsg_ = dlerror();\n    return false;\n  }\n\n  void Close() {\n    if (handle_ != nullptr)\n      dlclose(handle_);\n  }\n#else  "],[64371,0,"!__POSIX__\n  static const int k"],[64403,0,"efaultFlags = 0;\n  uv_lib_t lib_;\n\n  bool Open() {\n    int ret = uv_dlopen(filename_.c_str(), &lib_);\n    if (ret == 0) {\n      handle_ = static_cast<void*>(lib_.handle);\n      return true;\n    }\n    errmsg_ = uv_dlerror(&lib_);\n    uv_dlclose(&lib_);\n    return false;\n  }\n\n  void Close() {\n    uv_dlclose(&lib_);\n  }\n#endif  // !__POSIX__\n};\n\n// D"],[64792,0,", flags"],[65208,15,""],[65209,1,""],[65263,2,""],[65263,0,"<"],[65306,3,""],[65306,0,"ne"],[65309,0,"d"],[65312,0,"at l"],[65317,1,""],[65318,1,""],[65318,0,"s"],[65320,2,""],[65356,0,"int32_t flags = DLib::kDefaultFlags;\n  if (args."],[65405,0,"ength() > 2 && !args[2]->Int32Value(env->context()).To(&flags)) {\n    return env->ThrowTypeError(\"flag argument must be an integer.\");\n  }\n\n  L"],[65678,2,""],[65678,0,"DLib dlib;\n  dlib.filename_ = *file"],[65714,0,"ame;\n  dlib.flag"],[65731,1,""],[65731,0,"_ = flags;\n "],[65752,2,""],[65756,1,""],[65757,4,""],[65757,0,"d"],[65761,3,""],[65763,1,""],[65763,0,"ib.O"],[65771,15,""],[66033,0,"!"],[66037,2,""],[66041,1,""],[66042,4,""],[66042,0,"d"],[66104,3,""],[66106,0,"ib."],[66112,1,""],[66112,0,"msg_.c_st"],[66123,4,""],[66131,3,""],[66133,1,""],[66133,0,"ib.C"],[66142,4,""],[66419,3,""],[66421,1,""],[66421,0,"ib.C"],[66430,4,""],[67524,3,""],[67556,3,""],[67558,1,""],[67558,0,"ib.C"],[67567,4,""],[67656,3,""],[67658,1,""],[67658,0,"ib.C"],[67667,4,""],[67766,0,"d"],[67777,0,"_"],[68220,3,""],[68222,1,""],[68222,0,"ib.C"],[68231,4,""]],"_dtSpan":[617072,618323]},{"parents":[659],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[134716,0,"Local<Context> NewContext(Isolate* isolate,\n                          Local<ObjectTemplate> object_template) {\n  auto context = Context::New("],[134858,0,"solate, "],[134867,0,"ullptr, object_temp"],[134887,0,"ate);\n  "],[134896,0,"f (context.IsEmpty()) return context;\n  HandleScope ha"],[134951,0,"dle_scope(isolat"],[134968,0,");\n  auto"],[134981,0,"l_key"],[134987,0,"= FIXED_ONE_BYTE_"],[135005,0,"TRING(isolate, \"In"],[135024,0,"l\");\n  "],[135032,0,"uto b"],[135038,0,"eak_i"],[135044,0,"er_key = FIXED_ONE_BYTE_STRING"],[135075,0,"isolate, \"v8Break"],[135093,0,"terator\");\n  Local<Value> intl_v;\n  Local<Object> intl;\n  if (context->Global()->Get(context, intl_key).ToLocal(&intl_v) &&\n      intl_v->ToObject(context).ToLocal(&intl)) {\n    intl->Delete(context, break_iter_key).FromJu"],[135316,0,"t();\n  }\n  return c"],[135336,0,"ntext;\n}\n\n\nin"],[135350,0,"ine int St"],[135361,0,"r"],[135363,0,"(Isolat"],[135589,0,"New"],[135599,5,""]],"_dtSpan":[618323,618962]},{"parents":[660],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[1148,18,""],[4034,0,"Undefined;\nusing v8::"],[29869,2,""],[29869,0,"cl"],[29872,2,""],[29872,0,"ss Int"],[29879,3,""],[29879,0,"rn"],[29883,2,""],[29883,0,"C"],[29886,0,"lbackScope {\n p"],[29902,0,"blic:\n  Int"],[29914,3,""],[29914,0,"rn"],[29917,2,""],[29917,0,"l"],[29926,0,"Scope"],[29950,5,""],[29974,2,""],[29980,4,""],[29980,0,"Obj"],[29984,0,"ct"],[29988,1,""],[29988,0,"obj"],[29993,1,""],[29993,0,"t"],[30020,0,"const"],[30026,0,"async_context&"],[30041,0,"asyncContext);\n"],[30058,0,"~InternalCallbackScope();\n "],[30086,0,"void Close();\n\n"],[30103,0,"inline bool Failed() "],[30130,1,""],[30130,0,"{ return failed_; }\n  inline v"],[30161,1,""],[30161,0,"id MarkAsFailed() { f"],[30183,0,"i"],[30185,2,""],[30185,0,"ed_ = tr"],[30194,0,"e; }\n  i"],[30203,2,""],[30203,0,"l"],[30205,0,"ne bo"],[30211,0,"l IsIn"],[30218,1,""],[30218,0,"erMakeCallback()"],[30236,0,"onst {\n    return callback_scope_.in_makec"],[30285,1,""],[30285,0,"();"],[30291,0,"}\n\n"],[30295,1,""],[30295,0,"private:\n"],[30306,0,"Environment*"],[30319,0,"env_;\n"],[30327,0,"async_context"],[30341,0,"async_context_;\n"],[30359,0,"v8::Local<v8::Object>"],[30381,0,"object_;\n"],[30392,0,"Environment::AsyncCallbackScope"],[30424,0,"callback_scope_;\n"],[30443,0,"bool"],[30448,0,"failed_"],[30456,0,"="],[30458,0,"false;\n"],[30467,0,"bool"],[30472,0,"pushed_ids_"],[30484,0,"="],[30486,0,"false;\n"],[30495,0,"bool"],[30500,0,"closed_"],[30508,0,"="],[30510,2,""],[30510,0,"false;\n};\n\nCallbackScope::CallbackScope(Isola"],[30556,0,"e*"],[30559,0,"isol"],[30564,3,""],[30564,0,"te"],[30568,2,""],[30603,4,""],[30603,0,"Obj"],[30607,0,"ct"],[30611,6,""],[30611,0,"object"],[30648,2,""],[30675,2,""],[30677,3,""],[30678,2,""],[30678,0,":"],[30680,5,""],[30680,0,"pr"],[30683,0,"va"],[30686,0,"e_(new"],[30693,0,"In"],[30696,7,""],[30698,3,""],[30699,7,""],[30699,0,"alCallbackSc"],[30712,0,"pe(Envi"],[30720,1,""],[30721,5,""],[30721,0,"nm"],[30726,9,""],[30728,3,""],[30728,0,"Ge"],[30731,0,"Curr"],[30736,1,""],[30736,0,"n"],[30738,2,""],[30738,0,"("],[30740,1,""],[30741,0,"ola"],[30745,1,""],[30745,0,"e),"],[30751,9,""],[30751,0,"                                     obj"],[30792,0,"ct,\n                                       asy"],[30839,3,""],[30840,0,"C"],[30847,1,""],[30848,0,")"],[30850,0,"\n"],[30852,5,""],[30852,0,"   try_catch_("],[30873,1,""],[30874,4,""],[30874,0," {\n  "],[30880,2,""],[30881,1,""],[30881,0,"y_catch_.S"],[30892,1,""],[30893,1,""],[30893,0,"Verb"],[30898,1,""],[30898,0,"se("],[30902,0,"ru"],[30905,4,""],[30908,0,"}\n"],[30911,4,""],[30911,0,"CallbackS"],[30921,0,"ope::~C"],[30930,2,""],[30930,0,"l"],[30932,2,""],[30932,0,"ackS"],[30937,3,""],[30938,2,""],[30938,0,"p"],[30940,0,"() {\n  if (try_cat"],[30959,0,"h_.HasCaugh"],[30971,2,""],[30971,0,"())"],[30977,2,""],[30977,0,"  pri"],[30983,0,"ate_->MarkAsFa"],[30998,0,"led();\n  delete p"],[31016,3,""],[31016,0,"ivat"],[31021,0,"_;\n}\n\nI"],[31030,5,""],[31030,0,"er"],[31033,1,""],[31033,0,"al"],[31048,2,""],[31048,0,"::InternalC"],[31066,2,""],[31066,0,"S"],[31072,0,"Environm"],[31082,0,"t* en"],[31088,2,""],[31088,0,","],[31092,0,"                                           Local<O"],[31143,0,"ject> "],[31150,0,"bject,\n                                             c"],[31204,1,""],[31204,0,"nst"],[31208,5,""],[31208,0,"a"],[31210,2,""],[31210,0,"ync"],[31214,1,""],[31214,0,"c"],[31216,3,""],[31217,2,""],[31217,0,"text&"],[31223,1,""],[31224,1,""],[31225,0,"yncCont"],[31233,2,""],[31233,0,"xt)"],[31239,2,""],[31239,0,":"],[31241,0,"env_"],[31246,1,""],[31247,1,""],[31247,0,"n"],[31249,3,""],[31249,0,"),\n    a"],[31258,3,""],[31258,0,"ync_cont"],[31267,0,"xt_(asyn"],[31276,0,"Con"],[31280,2,""],[31280,0,"ext"],[31284,2,""],[31284,0,","],[31296,12,""],[31296,0,"_(o"],[31304,2,""],[31305,1,""],[31305,0,","],[31309,3,""],[31311,3,""],[31311,0,"callback_scope_"],[31330,16,""],[31331,1,""],[31334,1,""],[31336,1,""],[31342,1,""],[31342,0,"!obj"],[31348,3,""],[31348,0,"t."],[31352,5,""],[31352,0,"Emp"],[31356,0,"y"],[31362,0,"\n  //"],[31368,0,"If"],[31371,0,"you"],[31375,0,"hit"],[31379,1,""],[31379,0,"th"],[31383,2,""],[31383,0," as"],[31388,3,""],[31388,0,"rti"],[31392,3,""],[31393,0,","],[31395,1,""],[31395,0,"you"],[31399,1,""],[31399,0,"forgot t"],[31408,5,""],[31408,0," e"],[31414,1,""],[31414,0," th"],[31418,1,""],[31418,0," "],[31420,2,""],[31420,0,"8::C"],[31425,2,""],[31425,0,"nt"],[31428,1,""],[31428,0,"x"],[31430,4,""],[31431,3,""],[31432,15,""],[31433,3,""],[31434,1,""],[31434,0,"s"],[31436,3,""],[31436,0,".\n"],[31439,3,""],[31439,0," CHECK_EQ("],[31450,2,""],[31451,0,"v->cont"],[31459,1,""],[31459,0,"xt"],[31462,0,"), "],[31479,0,"->GetCurrentContext()"],[31503,3,""],[31504,1,""],[31506,4,""],[31506,0,"if ("],[31511,1,""],[31511,0,"nv->using_d"],[31523,1,""],[31523,0,"m"],[31525,8,""],[31525,0,"ins())"],[31532,4,""],[31532,0,"{"],[31534,1,""],[31536,2,""],[31538,0,"failed_"],[31546,0,"="],[31548,6,""],[31548,0,"D"],[31550,5,""],[31550,0,"main"],[31555,7,""],[31555,0,"nt"],[31558,11,""],[31558,0,"r"],[31565,6,""],[31566,2,""],[31566,0,"bj"],[31569,7,""],[31570,0,"t"],[31572,3,""],[31572,0,");"],[31575,9,""],[31579,4,""],[31579,0,"if"],[31582,13,""],[31582,0,"(failed_)\n"],[31598,14,""],[31599,3,""],[31600,0,"tu"],[31603,4,""],[31604,5,""],[31605,1,""],[31608,0,"}\n\n"],[31651,2,""],[31723,1,""],[31727,1,""],[31751,1,""],[31755,1,""],[31806,1,""],[31808,1,""],[31811,2,""],[31813,1,""],[31814,5,""],[31814,0,"nv->"],[31819,4,""],[31819,0,"syn"],[31823,0,"_hoo"],[31828,0,"s()"],[31833,4,""],[31833,0,"push_ids"],[31842,1,""],[31842,0,"asy"],[31846,3,""],[31847,0,"_c"],[31855,10,""],[31855,0,"_."],[31858,2,""],[31858,0,"syn"],[31862,0,"_id"],[31866,8,""],[31871,2,""],[31872,15,""],[31873,2,""],[31879,2,""],[31880,5,""],[31881,3,""],[31882,9,""],[31883,13,""],[31884,4,""],[31885,6,""],[31886,3,""],[31887,2,""],[31888,6,""],[31889,12,""],[31895,2,""],[31896,2,""],[31897,3,""],[31898,1,""],[31898,0,"async_c"],[31906,3,""],[31906,0,"nt"],[31909,9,""],[31909,0,"x"],[31911,1,""],[31911,0,"_.t"],[31915,0,"igg"],[31919,2,""],[31919,0,"r_async_id);"],[31934,2,""],[31934,0,"pushed_ids_"],[31946,0,"="],[31948,0,"t"],[31950,0,"u"],[31952,0,";\n}\n\nIn"],[31960,1,""],[31960,0,"e"],[31963,2,""],[31965,0,"Cal"],[31973,2,""],[31973,0,"S"],[31978,2,""],[31978,0,"::~Inter"],[31987,2,""],[31988,3,""],[31988,0,"lC"],[31997,0,"Scope"],[32005,1,""],[32005,0,"{"],[32009,0,"Close();\n}\n\nvoid"],[32026,0,"InternalCallbackScope::Close()"],[32057,0,"{\n"],[32061,0,"if"],[32064,2,""],[32064,0,"(closed_)"],[32077,0,"urn;\n"],[32083,1,""],[32084,2,""],[32084,0,"close"],[32090,0,"_ = tru"],[32098,0,";\n\n  i"],[32105,2,""],[32105,0," (push"],[32113,1,""],[32113,0,"_ids_)\n    "],[32127,0,"_"],[32130,0,"async_hooks()->pop_"],[32150,0,"d"],[32152,2,""],[32152,0,"("],[32154,0,"sync_con"],[32164,2,""],[32164,0,"xt_.async_id"],[32179,0,"\n"],[32182,0,"if"],[32185,0,"(failed_)"],[32195,1,""],[32195,0,"return;"],[32204,1,""],[32206,1,""],[32215,1,""],[32215,0,"_c"],[32223,0,"_"],[32242,1,""],[32246,1,""],[32270,0,"_"],[32278,1,""],[32278,0,"_c"],[32286,0,"_"],[32299,1,""],[32301,5,""],[32313,0,"_"],[32339,1,""],[32339,0,"fa"],[32342,4,""],[32342,0,"l"],[32346,6,""],[32363,0,"_"],[32372,0,"_"],[32384,1,""],[32384,0,"fa"],[32387,4,""],[32387,0,"l"],[32391,6,""],[32398,3,""],[32399,23,""],[32412,9,""],[32412,0,"I"],[32414,6,""],[32414,0,"In"],[32417,2,""],[32417,0,"erM"],[32423,1,""],[32423,0,"C"],[32447,4,""],[32494,0,"_"],[32552,0,"_"],[32738,0,"_"],[32761,21,""],[32761,0,"0"],[32779,0,"_"],[32796,29,""],[32796,0,"0"],[32830,0,"_"],[32925,0,";\n  }\n\n"],[32933,0," CHECK_EQ(env_->cur"],[32954,0,"n"],[32956,0,"_async_id(), 0)"],[32975,1,""],[32975,0,"CHECK_EQ(env_->trigger_id(), 0);"],[33018,0,"_"],[33090,0,"failed_ = true;\n  }\n}\n\nMaybeLocal<Value> InternalMakeCallback(Environment* env,\n                                       Local<Object> recv,\n                                       const Local<Function> callback,\n                                       int argc,\n                                       Local<Value> argv[],\n                                       async_context asyncContext) {\n  InternalCallbackScope scope(env, recv, asyncContext);\n  if (scope.Failed()) {\n    return Undefined(env->isolate());\n  }\n\n  MaybeLocal<Value> ret;\n\n  {\n    ret = callback->Call(env->context(), recv, argc, argv);\n\n    if (ret.IsEmpty()) {\n      // NOTE: Fo"],[33735,0," backwards compatibility with public API w"],[33778,0," re"],[33796,0,")\n      // if the top level call thr"],[33833,0,"w.\n      scope.MarkAsFailed();\n      return scope.IsInnerMakeCallback() ? ret : Undefined(env->isolate());\n    }\n  }\n\n  scope.Close();\n  if (scope.Failed()) {\n    return U"],[34005,0,"defined(en"],[35945,0,"Internal"],[35975,12,""],[35986,0,"\n      "],[35994,5,""],[35995,6,""],[36018,0,"rgc, argv, a"],[137938,8,""],[137940,4,""],[137940,0,"v.a"],[137947,1,""],[137947,0,"_h"],[137953,9,""],[137953,0,"()->"],[137958,6,""],[137958,0,"ush"],[137962,0,"id"],[137965,4,""],[137966,6,""],[138002,0,"  env.async_hooks()->pop_ids(1);\n  "],[25168,0,"bool DomainEnter(Environment* env, Local<Object> object) {\n  Local<Value> domain_v = object->Get(env->domain_string());\n  if (domain_v->IsObject()) {\n    Local<Object> domain = domain_v.As<Object>();\n    if (domain->Get(env->disposed_string())->IsTrue())\n      return true;\n    Local<Value> enter_v = domain->Get(env->enter_string());\n    if (enter_v->IsFunction()) {\n      if (enter_v.As<Function>()->Call(domain, 0, nullptr).IsEmpty()) {\n        FatalError(\"node::AsyncWrap::MakeCallback\",\n                   \"domain enter callback threw, please report this\");\n      }\n    }\n  }\n  return false;\n}\n\n\nbool DomainExit(Environment* env, v8::Local<v8::Object> object) {\n  Local<Value> domain_v = object->Get(env->domain_string());\n  if (domain_v->IsObject()) {\n    Local<Object> domain = domain_v.As<Object>();\n    if (domain->Get(env->disposed_string())->IsTrue())\n      return true;\n    Local<Value> exit_v = domain->Get(env->exit_string());\n    if (exit_v->IsFunction()) {\n      if (exit_v.As<Function>()->Call(domain, 0, nullptr).IsEmpty()) {\n        FatalError(\"node::AsyncWrap::MakeCallback\",\n                  \"domain exit callback threw, please report this\");\n      }\n    }\n  }\n  return false;\n}\n\n\n"]],"_dtSpan":[618962,623575]},{"parents":[661],"numChildren":1,"agent":54,"time":"1970-01-01T00:00:00Z","patches":[[5225,48,""],[5226,25,""],[5227,16,""],[69375,1,""],[69376,0,"="],[69378,19,""],[69378,0,"-1"],[69383,23,""],[69392,2,""],[69392,0,"env"],[69397,1,""],[69397,0,"E"],[69399,5,""],[69400,20,""],[69400,0,"tNa"],[69404,0,"iWa"],[69408,0,"n"],[69411,8,""],[69412,23,""],[69413,6,""],[69414,7,""],[69414,0,")"],[69416,0,"{\n"],[69424,9,""],[69424,0,"Pr"],[69427,3,""],[69427,0,"c"],[69429,3,""],[69430,23,""],[69431,3,""],[69431,0,"E"],[69433,1,""],[69434,4,""],[69434,0,"tW"],[69437,2,""],[69437,0,"rn"],[69441,16,""],[69441,0,"g("],[69444,0,"nv,"],[69448,13,""],[69448,0,"\""],[69454,14,""],[69455,9,""],[69458,2,""],[69459,7,""],[69459,0,"n"],[69474,0,"fe"],[69477,4,""],[69477,0,"t"],[69479,4,""],[69479,0,"r"],[69482,1,""],[69482,0,"a"],[69484,4,""],[69486,0,"c"],[69488,1,""],[69488,0,"uld"],[69492,4,""],[69509,0,"          "],[69520,2,""],[69521,3,""],[69521,0,"h"],[69523,5,""],[69524,0,"g"],[69527,2,""],[69527,0,"at"],[69531,3,""],[69532,1,""],[69532,0,"y"],[69534,5,""],[69534,0,"t"],[69536,1,""],[69537,4,""],[69538,1,""],[69540,1,""],[69540,0,");"],[69547,0,"}\n"],[69551,1,""],[69551,0,"}"],[69553,10,""],[69553,0,"e"],[69555,0,"s"],[69557,0," if (mp->"],[69567,1,""],[69568,0,"_v"],[69571,0,"rsion != NODE_MODULE_VERSION"],[69600,1,""],[69600,0," {"],[69607,1,""],[69607,0,"char"],[69613,1,""],[69613,0,"rrm"],[69617,3,""],[69617,0,"g[1024];"],[69626,1,""],[69630,1,""],[69647,2,""],[69689,2,""],[69707,1,""],[69720,1,""],[69779,2,""],[69866,2,""],[69922,1,""],[69935,1,""],[69999,2,""],[70047,2,""],[70095,6,""],[108131,0," (no-op - option"],[108163,0,"                           kept for compatibility)\\n\"\n         \"  "],[118104,1,""],[118104,0,"// no-"],[118111,5,""],[118112,17,""],[139061,22,""],[139062,58,""],[139063,31,""],[139064,24,""],[139066,4,""]],"_dtSpan":[623575,624346]},{"parents":[662],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[25079,2,""],[25079,0,"v"],[25081,1,""],[25081,0,"id"],[25277,74,""],[25585,16,""],[25590,1,""],[25590,0,"v"],[25592,2,""],[25592,0,"id"],[25791,41,""],[25792,8,""],[25793,6,""],[25794,1,""],[25795,18,""],[26098,16,""],[32468,1,""],[32470,8,""],[32471,1,""],[32495,18,""],[32497,13,""],[33232,10,""],[33257,25,""],[30803,541,""],[30812,15,""],[30816,96,""],[31517,0,",\n                                             ResourceExpectation expect"],[31691,0,"if (expect == kRequireResource) {\n    "],[31755,0,"  }\n\n  HandleScope handle_scope(env->isolate());"],[31971,0," && !object_.IsEmpty()"],[32522,0,"  HandleScope handle_scope(env_->isolate());\n"],[32798,0," && !object_.IsEmpty()"],[33934,0,"CHECK(!recv."],[33947,0,"sEmpty());\n  I"],[138592,3,""],[138592,0,"v8_pla"],[138599,2,""],[138602,3,""],[138602,0,"m.Dra"],[138608,1,""],[138608,0,"nVMTasks"],[138617,4,""],[138627,0,"more = u"],[138636,1,""],[138637,1,""],[138638,0,"oop_"],[138643,0,"live(env.even"],[138657,0,"_loop());\n      i"],[138675,0," (m"],[138680,0,"e)\n        continue;\n\n      E"],[138710,2,""],[138710,0,"itBefo"],[138717,1,""],[138717,0,"eEx"],[138721,0,"t(&e"],[138726,8,""],[138726,0,"v"],[138730,0,"\n"]],"_dtSpan":[624346,625674]},{"parents":[663],"numChildren":1,"agent":158,"time":"1970-01-01T00:00:00Z","patches":[[112961,0,"pending-deprecation\",\n    \"--"]],"_dtSpan":[625674,625703]},{"parents":[664],"numChildren":1,"agent":9,"time":"1970-01-01T00:00:00Z","patches":[[32260,0,"async_"],[32622,0,"async_"],[32630,1,""],[33206,0,"exe"],[33211,3,""],[33211,0,"tio"],[33215,1,""],[33257,0,"async_"],[33422,0,"exe"],[33427,4,""],[33428,0,"ion"],[33473,0,"async_"],[138371,0,"async_"],[138442,0,"async_"],[138450,1,""]],"_dtSpan":[625703,625761]},{"parents":[665],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[105651,0,"auto ret = "],[105670,0,"env->context(), "],[105718,0,"  // If there was an error during bootstrap then it was either handled by the\n  // FatalException handler or it's unrecoverable (e.g. max call stack\n  // exceeded). Either way, clear the stack so that the AsyncCallbackScope\n  // destructor doesn't fail on the id check.\n  // There are only two ways to have a stack size > 1: 1) the user manually\n  // called MakeCallback or 2) user awaited during bootstrap, which triggered\n  // _tickCallback().\n  if (ret.IsEmpty())\n    env->async_hooks()->clear_async_id_stack();\n"]],"_dtSpan":[625761,626303]},{"parents":[666],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[6728,18,""],[6729,22,""],[6730,20,""],[6733,35,""],[108274,1,""],[108275,6,""],[108276,2,""],[108277,67,""],[113445,0,"   // keep as a non-op through v9.x"],[120923,1,""],[120923,0,"// Keep as a n"],[120939,7,""],[120939,0,"-"],[120941,6,""],[120942,3,""],[120944,0,"h"],[120946,0,"o"],[120948,2,""],[120948,0,"gh v9.x"]],"_dtSpan":[626303,626552]},{"parents":[667],"numChildren":1,"agent":158,"time":"1970-01-01T00:00:00Z","patches":[[111953,0,"PENDING_DEPRECATION     set to 1 to emit pending deprecation\\n\"\n         \"                             warnings\\n\"\n         \"NODE_"]],"_dtSpan":[626552,626682]},{"parents":[668],"numChildren":1,"agent":162,"time":"1970-01-01T00:00:00Z","patches":[[24984,1,""],[24984,0,"L"],[24986,2,""],[24986,0,"cal<Value>"],[24997,0,"Get"],[25006,3,""],[25006,0,"Prop"],[25012,0,"ty"],[25082,0,"\n     "],[25100,0,"Private"],[25113,0,"context(), env->domain_private_symbol())\n          .ToLocalChecked();\n  if ("],[25196,0,"v->I"],[25201,0,"Object()) {\n    re"],[25220,0,"u"],[25222,0,"n doma"],[25230,0,"_v;\n  }\n  return object->Get(env->context(), env->domain_strin"],[25296,0,".ToLocalChecked()"],[25315,0,"}\n\n\nvoid"],[25324,0,"DomainEnter(Environment* env, Local<Object> object) {\n"],[25379,0," Local<Value> domain_v = GetDomainProperty(env, object);\n  "],[25919,3,""],[25919,0,"G"],[25921,1,""],[25922,3,""],[25922,0,"DomainProp"],[25933,0,"r"],[25935,0,"y"],[25940,3,""],[25940,0,", "],[25943,6,""],[25943,0,"bjec"],[25948,6,""],[26669,2,""],[26669,0,"Local<Value> d"],[26685,0,"a"],[26687,1,""],[26687,0,"n_obj =\n        "],[26704,0,"nv"],[26708,1,""],[26708,0,"domain_array()->G"],[26736,0," 0).ToLocalChecked();"],[26762,0,"if"],[26765,0,"(promise->CreationContext()"],[26793,0,"=="],[26796,0,"context)"],[26805,0,"{\n"],[26813,2,""],[26813,0,"promise->Set(context,"],[26856,1,""],[26857,0,"domain_obj).FromJust();\n"],[26885,0,"}"],[26887,0,"else"],[26892,0,"{\n"],[26900,0,"//"],[26903,0,"Do"],[26906,0,"not"],[26910,0,"expose"],[26917,0,"obj"],[26921,5,""],[26921,0,"ct fr"],[26928,0," "],[26930,1,""],[26931,2,""],[26931,0,"othe"],[26936,11,""],[26936,0," "],[26944,2,""],[26945,11,""],[26945,0,"publicly"],[26954,0,"in"],[26957,0,"promises"],[26966,0,"created\n"],[26980,0,"//"],[26983,0,"in"],[26986,0,"non-main"],[26995,0,"contexts.\n"],[27011,0,"promise->SetPrivate(context,"],[27040,0,"env->domain_private_symbol(),"],[27070,0,"domain_obj)\n"],[27092,2,""],[27093,18,""],[27109,0,"}\n    "],[42763,0,"ScriptOrigin origin = message->GetScriptOrigi"],[42809,0,"();\n  n"],[44103,0,"cript_start =\n      (linenum - origin.ResourceLineOffset()->Value()) == 1 ?\n          origin.ResourceColumnOffset()->Value() : 0;\n  int s"],[44365,0,"  if (start >= script_start) {\n    CHECK_GE(end, start);\n    start -= script_start;\n    end -= script_start;\n  }\n"]],"_dtSpan":[626682,627742]},{"parents":[669],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[32379,1,""],[32379,0,"E"],[32382,3,""],[32382,0,"ir"],[32386,0,"ment::Ge"],[32395,0,"Curr"],[32400,1,""],[32400,0,"n"],[32403,3,""],[32417,9,""],[32417,0,"), "],[32422,10,""],[32422,0,"v"]],"_dtSpan":[627742,627789]},{"parents":[670],"numChildren":1,"agent":189,"time":"1970-01-01T00:00:00Z","patches":[[6228,0,"in node.cc by ParseArgs when --loader is used.\n// Used in node_config.cc to set a constant on process.binding('config')\n// that is used by lib/internal/bootstrap_node.js\nstd::string config_userland_loader;  // NOLINT(runtime/string)\n\n// Set "],[104343,1,""],[105274,0,"\n"],[106674,0,"\n"],[114739,0,"experimen"],[114749,0,"al-modules\",\n    \"--loade"],[114775,0,"\",\n    \"--tr"],[120588,0," else if (strcmp(arg, \"--loader\") == 0) {\n      const char* module = argv[index + 1];\n      if (!config_experimental_modules) {\n        fprintf(stderr, \"%s: %s requires --experimental-modules be enabled\\n\",\n            argv[0], arg);\n        exit(9);\n      }\n      if (module == nullptr) {\n        fprintf(stderr, \"%s: %s requires an argument\\n\", argv[0], arg);\n        exit(9);\n      }\n      args_consumed += 1;\n      config_userland_loader = module;\n    } "]],"_dtSpan":[627789,628537]},{"parents":[671],"numChildren":1,"agent":24,"time":"1970-01-01T00:00:00Z","patches":[[4796,0,"internal;\nstatic node_module* modlist_"],[66413,0,"mp->nm_flags & NM_F_INTERNAL) {\n    mp->nm_link = modlist_internal;\n    modlist_internal = mp;\n  } else if ("],[66808,0,"inline "],[66835,1,""],[66835,0,"FindModul"],[66845,0,"(s"],[66848,2,""],[66848,0,"r"],[66850,2,""],[66850,0,"c"],[66852,1,""],[66852,0," "],[66854,0,"ode"],[66864,1,""],[66864,0,"* list,\n                                      "],[66926,0,",\n                                      int flag"],[67017,3,""],[67020,6,""],[67021,2,""],[67160,12,""],[67160,0,"flag"],[67182,1,""],[67184,1,""],[67189,7,""],[67206,0,"bui"],[67210,0,"t"],[67213,3,""],[67243,1,""],[67243,0,"re"],[67246,1,""],[67247,2,""],[67247,0,"rn"],[67250,0,"Fi"],[67253,1,""],[67254,3,""],[67254,0,"M"],[67260,13,""],[67262,5,""],[67269,0,"bui"],[67273,0,"t"],[67276,4,""],[67276,0,","],[67278,0,"na"],[67281,1,""],[67281,0,"e,"],[67284,3,""],[67284,0,"NM_F_BUILTIN);\n}\n"],[67302,0,"ode_mod"],[67311,2,""],[67311,0,"e* get_in"],[67321,0,"e"],[67323,2,""],[67323,0,"nal_"],[67328,1,""],[67328,0,"odule(const"],[67340,1,""],[67340,0,"char*"],[67346,4,""],[67347,0,"a"],[67349,5,""],[67349,0,"e"],[67356,1,""],[67356,0,"return"],[67363,0,"F"],[67365,2,""],[67365,0,"ndModule"],[67374,0,"modli"],[67381,0,"_inte"],[67387,1,""],[67387,0,"nal, na"],[67395,2,""],[67395,0,"e, NM_F_INTERNAL);\n}\nnode_"],[67422,3,""],[67422,0,"odule* get_li"],[67436,1,""],[67436,0,"ked"],[67443,0,"ule(co"],[67450,0,"st ch"],[67456,3,""],[67456,0,"r*"],[67465,5,""],[67465,0,"{"],[67467,3,""],[67469,2,""],[67471,19,""],[67471,0,"turn"],[67476,3,""],[67476,0,"Fi"],[67479,0,"dMod"],[67485,0,"e(mod"],[67491,1,""],[67491,0,"is"],[67494,4,""],[67494,0,"_linked,"],[67503,5,""],[67504,0,"a"],[67506,8,""],[67506,0,"e,"],[67521,19,""],[75516,1,""],[75525,1,""],[75525,0,"bo"],[75528,2,""],[75528,0,"l"],[75530,2,""],[75530,0,"PullFromCache(E"],[75546,1,""],[75546,0,"v"],[75548,0,"ronment* e"],[75559,2,""],[75559,0,"v,\n                          "],[75627,1,""],[75627,0,",\n                  "],[75648,2,""],[75650,12,""],[75651,3,""],[75652,1,""],[75653,32,""],[75675,0,",\n                      "],[75700,1,""],[75701,10,""],[75701,0,"  L"],[75705,1,""],[75705,0,"cal<Objec"],[75715,9,""],[75716,4,""],[75716,0," c"],[75719,1,""],[75719,0,"ch"],[75722,1,""],[75723,2,""],[75723,0," {"],[75728,1,""],[75728,0,"L"],[75730,9,""],[75730,0,"c"],[75733,1,""],[75733,0,"<Cont"],[75739,0,"xt>"],[75743,1,""],[75743,0,"c"],[75745,3,""],[75745,0,"nt"],[75748,3,""],[75748,0,"xt = "],[75758,2,""],[75758,0,"c"],[75760,2,""],[75760,0,"n"],[75763,0,"xt"],[75766,9,""],[75768,1,""],[75777,3,""],[75777,0,"Valu"],[75782,2,""],[75783,8,""],[75785,18,""],[75785,0,"xp"],[75788,4,""],[75788,0,"r"],[75790,2,""],[75790,0,"s_v"],[75820,1,""],[75833,3,""],[75833,0,"Get"],[75837,5,""],[75844,2,""],[75854,2,""],[75854,0,"ToLocal(&exp"],[75867,3,""],[75867,0,"rt"],[75870,3,""],[75870,0,"_v"],[75874,1,""],[75874,0,"&&"],[75881,0,"  "],[75890,8,""],[75890,0,"_v"],[75894,1,""],[75894,0,"IsObj"],[75900,0,"c"],[75903,1,""],[75903,0,") &&\n      exp"],[75918,5,""],[75918,0,"rts_v"],[75934,0,"cont"],[75939,6,""],[75939,0,"xt).ToL"],[75947,0,"ca"],[75950,1,""],[75950,0,"(&expor"],[75958,2,""],[75958,0,"s"],[75961,1,""],[75961,0," {"],[76014,0," true"],[76024,1,""],[76027,6,""],[76027,0,"r"],[76029,0,"tur"],[76033,1,""],[76034,0,"f"],[76036,1,""],[76036,0,"lse;\n}\n\n"],[76046,1,""],[76046,0,"at"],[76049,2,""],[76049,0,"c"],[76051,1,""],[76051,0,"L"],[76053,4,""],[76054,0,"al<Obj"],[76061,4,""],[76061,0,"ct> InitM"],[76075,1,""],[76075,0,"(Envir"],[76082,5,""],[76082,0,"nmen"],[76087,0,"* env,"],[76096,4,""],[76097,11,""],[76099,13,""],[76100,12,""],[76101,8,""],[76102,4,""],[76103,13,""],[76105,12,""],[76106,7,""],[76107,1,""],[76108,31,""],[76110,8,""],[76111,1,""],[76112,1,""],[76113,19,""],[76115,15,""],[76116,29,""],[76117,8,""],[76119,0,"        "],[76143,0,",\n                               "],[76177,1,""],[76178,7,""],[76178,0,"Loca"],[76183,0,"<S"],[76186,0,"r"],[76189,9,""],[76189,0,"g> "],[76198,2,""],[76199,1,""],[76199,0," {"],[76204,5,""],[76204,0,"L"],[76206,7,""],[76206,0,"ca"],[76209,2,""],[76209,0,"<Objec"],[76216,8,""],[76216,0,">"],[76259,2,""],[76324,2,""],[76370,2,""],[76420,1,""],[76422,1,""],[76471,1,""],[76473,1,""],[76511,0,"\n                               "],[76558,0,"                          "],[76599,0,"\n                               "],[76649,0,"return exports;\n}\n\nstatic void ThrowIfNoSuchModule(Environment* env,"],[76718,0,"const"],[76725,0,"h"],[76727,0,"r* module_v) {\n  "],[76746,0,"ar errmsg[1024];\n  snprintf(errmsg,\n           sizeof(errmsg),\n           \"No such module: %s\",\n           module_v);\n  env->ThrowError(errmsg);\n}\n\nstatic void Binding(const FunctionCallbackInfo<Value>& args) {\n  Environment* env = Environment::GetCurr"],[76999,0,"nt(args);\n\n  Local<String> module;\n  if (!args[0]"],[77050,0,"To"],[77053,0,"tring(env->context()).ToLocal(&module)) return;\n\n  Local<Object> cache = env->binding_cache_object();\n\n  if (PullFromCache(env, args, module, cache))\n    return;\n\n  // Append a string to process.moduleLoadList\n  char buf[1024];\n  node::Utf8Value module_v(env->isolate(), module);\n  snprintf(buf, sizeof(buf), \"Binding %s\", *module_v);\n\n  Local<Array> modules = env->modul"],[77425,0,"_load_lis"],[77435,0,"_array"],[77442,0,");\n  uint32_t l = "],[77466,0,"s->Length();\n  modules->Set(l"],[77497,0,"OneByteString(env->isolate(), buf));\n\n  node_module* mod = get_builtin_module(*module_v);\n  Local<Object> exports;\n  if (mod != nullptr) {\n    "],[77647,0," = InitModule(env, mod, module"],[77932,1,""],[77933,20,""],[77934,12,""],[78059,0,"} else {\n   "],[78072,0,"return"],[78079,0,"ThrowIfNoSu"],[78091,0,"hModule(env, *module_v);\n  }\n  c"],[78151,0,"\n"],[78154,0,"args.GetReturnValue().Set(exports);\n"],[78191,0,"\n\nstatic void"],[78205,0,"Int"],[78209,0,"rna"],[78213,0,"Binding(con"],[78225,0,"t FunctionCallbackInfo<Valu"],[78253,0,">& args)"],[78266,0,"Environment* env"],[78283,0,"="],[78285,0,"Environment::GetCurrent(args);\n\n  Lo"],[78322,1,""],[78323,0,"l<St"],[78328,0,"ing>"],[78333,0,"modul"],[78339,0,";\n  if (!a"],[78350,2,""],[78350,0,"g"],[78352,1,""],[78353,1,""],[78354,2,""],[78355,0,"->ToString(env->context()).ToLocal(&module)) return"],[78408,0,"\n"],[78411,0,"Local<Object>"],[78425,0,"cache"],[78431,1,""],[78431,0,"= env->i"],[78440,1,""],[78440,0,"te"],[78443,0,"nal_bind"],[78453,0,"g_cache_objec"],[78467,0,"();\n\n  i"],[78476,0," (PullFromCache"],[78493,0,"nv, a"],[78499,2,""],[78499,0,"g"],[78501,1,""],[78502,1,""],[78503,0,"module,"],[78511,0,"cache))\n"],[78523,0,"return;\n\n"],[78534,0,"//"],[78537,0,"Append"],[78544,0,"a"],[78546,0,"string"],[78553,0,"to"],[78556,4,""],[78556,0,"pr"],[78559,2,""],[78559,0,"c"],[78561,2,""],[78561,0,"ss."],[78565,0,"oduleLoadLi"],[78577,3,""],[78577,0,"t"],[78581,0,"char"],[78586,0,"buf[1024];\n"],[78599,0,"node::Utf8Value"],[78615,0,"module_v(env->isolate(),"],[78640,0,"module);\n"],[78651,0,"snprintf(buf,"],[78665,0,"sizeof(buf),"],[78678,0,"\"Internal"],[78688,0,"Binding"],[78696,0,"%s"],[78699,1,""],[78699,0,", *m"],[78704,0,"dule_v);\n\n"],[78715,2,""],[78715,0," Lo"],[78719,1,""],[78719,0,"al<Array>"],[78735,1,""],[78735,0,"s"],[78737,1,""],[78737,0,"= env->module_load_li"],[78759,2,""],[78759,0,"t_array();"],[78772,0,"uint32_t"],[78781,0,"l"],[78783,0,"="],[78785,0,"modules->Length();\n"],[78806,0,"modules->Set(l,"],[78822,0,"OneByteString(env->isolate(),"],[78852,0,"buf));\n\n"],[78862,0,"node_module* mod"],[78879,0,"="],[78881,0,"get_internal_module("],[78915,0,"if (mod"],[78923,0,"=="],[78926,0,"nullpt"],[78933,0,") r"],[78942,0,"ThrowIfNoSuchModul"],[78961,0,"(e"],[78965,1,""],[78965,0,", *module_v);\n  Local<Object"],[78994,3,""],[78994,0," exp"],[78999,2,""],[79000,1,""],[79000,0,"ts = InitM"],[79011,1,""],[79011,0,"dule"],[79017,2,""],[79017,0,"nv, mod, "],[79027,2,""],[79027,0,"odule"],[79037,1,""],[79037,0,"cache->Set(module, exports);"],[79270,0,";\n"],[79273,1,""],[79274,0,"if (!"],[79302,2,""],[79302,0,"context()).ToLocal(&m"],[79324,0,"du"],[79327,0,"e_n"],[79331,1,""],[79331,0,"m"],[79333,1,""],[79335,0," return"],[104929,0,"  env->SetMethod(process, \"_internalBinding\", InternalBinding);\n"]],"_dtSpan":[628537,632105]},{"parents":[672],"numChildren":1,"agent":9,"time":"1970-01-01T00:00:00Z","patches":[[4356,0,"force_async_hooks_checks = false;\nstatic bool "],[33998,0,"if (env_->async_hooks()->fields()[AsyncHooks::kTotals]) {\n    "],[34103,0,"  "],[34144,0,"  }\n"],[34282,0,"if (env_->async_hooks()->fields()[AsyncHooks::kTotals]) {\n    "],[34387,0,"  "],[34428,0,"  }\n"],[112076,0,"force-async-hooks-checks\\n\"\n         \"                             enables checks for async_hooks\\n\"\n         \"  --"],[117254,0,"force-async-hooks-checks\",\n    \"--"],[122141,0,"force-async-hooks-checks\") == 0) {\n      force_async_hooks_checks = true;\n    } else if (strcmp(arg, \"--"],[142982,0,"if (force_async_hooks_checks) {\n    env.async_hooks()->force_checks();\n  }\n\n  "]],"_dtSpan":[632105,632618]},{"parents":[673],"numChildren":1,"agent":162,"time":"1970-01-01T00:00:00Z","patches":[[141974,22,""],[142054,2,""],[142054,0,"Is"],[142063,7,""],[142064,3,""],[142064,0,") {\n    "],[142077,2,""],[142077,0,"<Object> intl = "],[142097,1,""],[142097,0,"_v.As<Object>("],[142112,2,""],[142112,0,";"]],"_dtSpan":[632618,632698]},{"parents":[674],"numChildren":1,"agent":9,"time":"1970-01-01T00:00:00Z","patches":[[4356,0,"no_"],[112079,0,"no-"],[112149,2,""],[112149,0,"dis"],[112156,1,""],[117260,0,"no-"],[122150,0,"no-"],[122194,0,"no_"],[143003,0,"no_"],[143057,0,"no_"]],"_dtSpan":[632698,632725]},{"parents":[675],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[1778,24,""],[1799,17,""],[1885,22,""]],"_dtSpan":[632725,632788]},{"parents":[676],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[32108,0,"AsyncWrap* async_wrap)\n    : InternalCallbackScope(async_wrap->env(),\n                            async_wrap->object(),\n                            { async_wrap->get_async_id(),\n                              async_wrap->get_trigger_async_id() }) {}\n\nInternalCallbackScope::InternalCallbackScope("]],"_dtSpan":[632788,633083]},{"parents":[677],"numChildren":1,"agent":42,"time":"1970-01-01T00:00:00Z","patches":[[2956,0," && !defined(__CloudABI__)"],[21009,0," !defi"],[21016,0,"ed(__Clou"],[21026,0,"ABI__) && !d"],[21040,1,""],[21040,0,"ined("],[21051,0,")"],[54826,0," && !defined(__CloudABI__)"],[62099,0," && !defined(__CloudABI__)"],[104327,0," && !defined(__CloudABI__)"],[104924,0," && !defined(__CloudABI__)"]],"_dtSpan":[633083,633247]},{"parents":[678],"numChildren":1,"agent":130,"time":"1970-01-01T00:00:00Z","patches":[[96847,0,"#if NODE_VERSION_IS_LTS\n  READONLY_PROPERTY(release, \"lts\",\n                    OneByteString(env->isolate(), NODE_VERSION_LTS_CODENAME));\n#endif\n\n"]],"_dtSpan":[633247,633394]},{"parents":[679],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[11069,3900,""]],"_dtSpan":[633394,637294]},{"parents":[680],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[114360,0,"  \"--stack_trace_limit\",\n  "]],"_dtSpan":[637294,637321]},{"parents":[681],"numChildren":1,"agent":186,"time":"1970-01-01T00:00:00Z","patches":[[83407,0,"void GetParentProcessId("],[83437,0,"Name> property,\n                               const PropertyCallbackInfo<Value>& info) {\n  info.GetReturnValue().Set(Integer::New(info.GetIsolate(), uv_os_getppid()));\n}\n\n\nstatic Local<"],[95743,0,"process->SetAccessor(FIXED_ONE_BYTE_STRING(env->isolate(), \"ppid\"),\n                       GetParentProcessId);\n\n  "]],"_dtSpan":[637321,637646]},{"parents":[682],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[7351,17,""],[7481,6,""],[7905,0,"Isolate* isolate"],[7961,0,"isolate"],[8645,0,"NodePlatform* Platform() {\n    return platform_;\n  }\n\n  "],[8830,17,""],[8875,0,"Isolate* isolate"],[9297,0,"\n  NodePlatform* Platform() {\n    return nullptr;\n  }\n"],[137958,0,", nullptr"],[137973,0,"IsolateData* CreateIsolateData("],[138005,0,"    Isolate* isolate,\n    u"],[138033,0,"_loop_t* loop,\n    MultiIsolatePlatf"],[138070,0,"rm* platform) {\n  return new IsolateData("],[138112,0,"solate, loop, platform);\n}\n\n\nvoi"],[140762,0,"isolate"],[141280,0,"isolate"],[142501,0,"\n        "],[142518,0,"\n       "],[142538,0,"\n  "],[142542,0,"     v8_platform.Platform(),\n        "],[143935,7,""],[143936,12,""],[7976,0,"  void CancelVMTasks(Isolate* isolate) {\n    platform_->CancelPendingDelayedTasks(isolate);\n  }\n\n"],[8995,0,"void CancelVMTasks(Isolate* isolate) {}\n  "],[141431,0,"v8_platform.CancelVMTasks(isolate);\n  "]],"_dtSpan":[637646,638278]},{"parents":[683],"numChildren":1,"agent":181,"time":"1970-01-01T00:00:00Z","patches":[[3238,0,"// This is used to load built-in modules. Instead of using\n// __attribute__((constructor)), we call the _register_<modname>\n// function for each built-in modules explicitly in\n// node::RegisterBuiltinModules(). This is only forward declaration.\n// The definitions are in each module's implementation when calling\n// the NODE_BUILTIN_MODULE_CONTEXT_AWARE.\n#define V(modname) void _register_##mod"],[3636,0,"();\n  NODE_BUILTIN_MODULES(V)\n#undef V\n\nname"],[133719,0,"Register built-in modules\n  node::RegisterBuiltin"],[133769,0,"odules();\n\n  // M"],[145663,0,"// Call built-in modules' _register_<module name> function to\n// do module registration explicitly.\nvoid RegisterBuiltinModules() {\n#define V(modname) _register_##modname();\n  NODE_BUILTIN_MODULES(V)\n#undef V\n}\n"],[145917,7,""],[145951,0,"BUILTIN_"],[145979,8,""]],"_dtSpan":[638278,639016]},{"parents":[684],"numChildren":1,"agent":186,"time":"1970-01-01T00:00:00Z","patches":[[96429,0,"CHECK("],[96456,0,"env->context(),\n                             "],[96571,0,"      "],[96596,0,".FromJust())"]],"_dtSpan":[639016,639085]},{"parents":[685],"numChildren":1,"agent":50,"time":"1970-01-01T00:00:00Z","patches":[[7811,2,""],[7811,0,".reset("],[7873,0,")"],[8270,7,""],[8285,7,""],[8285,0,"."],[8287,8,""],[8288,1,""],[8288,0,"se"],[8291,4,""],[8291,0,"("],[8299,0,")"],[9220,0,"std::unique_p"],[9235,0,"<tr"],[9250,1,""],[9250,0,">"]],"_dtSpan":[639085,639145]},{"parents":[686],"numChildren":1,"agent":9,"time":"1970-01-01T00:00:00Z","patches":[[7797,0,"if ("],[7805,3,""],[7805,0,"e"],[7807,2,""],[7809,6,""],[7809,0,"abl"],[7813,3,""],[7813,0,"d)"],[7816,1,""],[7816,0,"{\n"],[7828,1,""],[7828,0,"ing"],[7832,0,"ag"],[7836,3,""],[7836,0,"t_.res"],[7843,4,""],[7843,0,"t("],[7865,10,""],[7872,0,"  "],[7933,16,""],[7967,10,""],[7974,0,"  "],[8015,0,"  "],[8078,0,"ing_ag"],[8085,0,"nt"],[8088,0,"->G"],[8092,1,""],[8092,0,"tTr"],[8096,1,""],[8096,0,"cingControl"],[8109,1,""],[8109,0,"r());\n  "],[8118,1,""],[8119,0,"} else {\n      "],[8148,3,""],[8148,0,".res"],[8154,0,"(nullptr);\n      platform_ = new NodePlatform(thread_pool_size, nullptr);\n      V8::InitializePlatform(platform_);\n      tracing::"],[8288,0,"eEventHelper::SetTrac"],[8323,1,""],[8323,0,"\n   "],[8328,0,"    new v8"],[8339,1,""],[8339,0,":Traci"],[8346,1,""],[8346,0,"gContro"],[8355,2,""],[8355,0,"e"],[8357,0,"()"],[8364,0,"  }\n  "]],"_dtSpan":[639145,639486]},{"parents":[687],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[1773,1,""],[1773,0,"_"],[1902,1,""],[1902,0,"_"]],"_dtSpan":[639486,639490]},{"parents":[688],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[11368,553,""],[11369,33,""],[86518,1,""],[86518,0,"bo"],[86521,2,""],[86521,0,"l"],[86523,1,""],[86523,0,"Mayb"],[86528,2,""],[86528,0,"Stop"],[86538,8,""],[86539,4,""],[86540,1,""],[86541,1,""],[86542,100,""],[86558,0,") {\n"],[86563,1,""],[86564,1,""],[86564,0,"if (e"],[86571,0,"->scheduled_"],[86584,3,""],[86585,0,"m"],[86587,1,""],[86587,0,"dia"],[86591,3,""],[86592,2,""],[86592,0,"_co"],[86596,3,""],[86599,4,""],[86600,1,""],[86600,0,"[0] == 0) {"],[86614,5,""],[86615,0," "],[86625,10,""],[86625,0,"s"],[86627,17,""],[86627,0,"op("],[86659,0,")"],[86664,11,""],[86665,1,""],[86670,25,""],[86670,0,"dl"],[86673,1,""],[86674,2,""],[86676,2,""],[86677,0,"p(e"],[86681,4,""],[86682,10,""],[86682,0,"-"],[86684,1,""],[86694,2,""],[86694,0,"idl"],[86698,2,""],[86705,0,"("],[86712,9,""],[86712,0,"  r"],[86720,3,""],[86720,0," tr"],[86725,4,""],[86725,0,";\n  }\n  r"],[86736,1,""],[86736,0,"urn f"],[86742,4,""],[86742,0,"ls"],[86745,1,""],[86750,1,""],[86755,2,""],[86755,0,"Ch"],[86758,1,""],[86758,0,"ck"],[86766,4,""],[86767,9,""],[86769,1,""],[86770,40,""],[86771,3,""],[86772,3,""],[86772,0,"_ch"],[86776,6,""],[86777,3,""],[86777,0,"k_"],[86780,0,"*"],[86782,13,""],[86782,0,"h"],[86784,3,""],[86785,6,""],[86786,7,""],[86786,0,"le"],[86826,6,""],[86826,0,"f"],[86828,7,""],[86829,8,""],[86829,0,"m"],[86831,9,""],[86853,24,""],[86853,0,"("],[86860,1,""],[86863,1,""],[86864,4,""],[86865,0,"H"],[86867,0,"ndleS"],[86873,3,""],[86873,0,"op"],[86877,3,""],[86877,0,"scope(en"],[86886,1,""],[86886,0,"->"],[86890,1,""],[86890,0,"ol"],[86893,1,""],[86894,2,""],[86896,0,"));"],[86902,7,""],[86902,0,"Co"],[86907,4,""],[86907,0,"x"],[86909,6,""],[86909,0,"::S"],[86914,3,""],[86914,0,"pe"],[86917,5,""],[86917,0,"co"],[86920,4,""],[86921,6,""],[86922,3,""],[86922,0,"x"],[86924,1,""],[86925,0,"s"],[86927,1,""],[86927,0,"ope("],[86932,0,"nv->"],[86937,4,""],[86937,0,"o"],[86939,2,""],[86939,0,"t"],[86941,0,"xt("],[86955,0,"M"],[86957,4,""],[86957,0,"yb"],[86960,13,""],[86960,0,"St"],[86963,1,""],[86963,0,"pImm"],[86968,0,"di"],[86971,5,""],[86971,0,"t"],[86974,0,"env"],[86995,6,""],[86995,0,"Mak"],[86999,7,""],[86999,0,"Callback("],[87009,1,""],[87009,0,"nv->"],[87014,0,"sol"],[87020,4,""],[87020,0,"(),\n               "],[87040,3,""],[87041,2,""],[87041,0,"v->proc"],[87049,0,"ss_object(),\n             "],[87076,1,""],[87092,2,""],[87092,0,"cal"],[87096,1,""],[87096,0,"back"],[87101,2,""],[87101,0,"stri"],[87106,3,""],[87106,0,"g"],[87109,1,""],[87109,0,","],[87111,0,"               0,"],[87131,2,""],[87132,3,""],[87132,0,"            nullp"],[87150,4,""],[87150,0,"r,\n    "],[87158,2,""],[87162,3,""],[87162,0,"      {0, 0}).ToLo"],[87181,0,"alC"],[87188,2,""],[87188,0,"ed();\n\n  MaybeS"],[87206,2,""],[87206,0,"I"],[87215,3,""],[87215,0,"("],[87217,5,""],[87218,3,""],[87218,0,"v"],[87222,5,""],[87222,0,"}\n\n\n"],[87227,1,""],[87227,0,"o"],[87230,4,""],[87230,0," Ac"],[87234,3,""],[87235,0,"vateI"],[87248,1,""],[87248,0,"Check(const Funct"],[87266,1,""],[87266,0,"onCal"],[87272,3,""],[87272,0,"b"],[87274,0,"ckI"],[87278,1,""],[87278,0,"fo<Va"],[87284,0,"u"],[87286,0,">& args"],[87294,1,""],[87294,0," {"],[87299,1,""],[87299,0,"Environment*"],[87313,3,""],[87313,0,"nv"],[87316,2,""],[87316,0,"="],[87318,1,""],[87318,0,"Environment::GetCurrent(args);\n"],[87366,0,"env->"],[87393,0,"()"],[87414,2,""],[87494,2,""],[87508,0,"env->"],[87534,0,"()"],[87537,0,"\n     "],[87544,1,""],[87544,0,"          [](uv_i"],[87564,4,""],[87564,0,"_t*){ /* "],[87574,0,"o noth"],[87581,1,""],[87581,0,"ng, jus"],[87589,0," k"],[87592,1,""],[87592,0,"ep the loop r"],[87606,6,""],[87606,0,"nning"],[87612,0,"*/"],[87616,0,");"],[96143,1,""],[96143,0,"sch"],[96147,0,"dul"],[96164,9,""],[96164,0,"oun"],[96168,4,""],[96217,1,""],[96217,0,"sch"],[96221,0,"dul"],[96236,7,""],[96236,0,"ount"],[96264,8,""],[96280,32,""],[96302,9,""],[96302,0,"sch"],[96306,0,"dul"],[96311,1,""],[96311,0,"_i"],[96321,6,""],[96321,0,"_"],[96323,3,""],[96323,0,"oun"],[96327,3,""],[96350,9,""],[96351,0,"nv->schedul"],[96364,1,""],[96364,0,"_i"],[96374,6,""],[96374,0,"_"],[96376,2,""],[96376,0,"ount().G"],[96386,2,""],[96386,0,"JSA"],[96390,43,""],[96391,1,""],[96392,1,""],[96392,0,"y"],[100500,0,"activateImmediateCheck\",\n                 ActivateImmediateCheck);\n  env->SetMethod(process,\n                 \"_"]],"_dtSpan":[639490,641510]},{"parents":[689],"numChildren":1,"agent":201,"time":"1970-01-01T00:00:00Z","patches":[[4239,27,""],[21676,1,""],[23005,756,""],[23006,35,""],[23008,1,""],[23010,3,""],[23014,10,""],[23015,1,""],[23017,9,""],[23018,2,""],[23019,25,""],[23020,35,""],[23021,74,""],[23029,1,""],[23314,274,""],[23315,195,""],[23358,16,""],[23359,60,""],[23377,1,""],[23377,0,"0"],[23559,1,""],[23560,389,""],[27535,0,"asyncContext.async_id == 0 && "],[27588,0,"\n     "],[28408,0,"async_cont"],[28419,0,"xt_.asy"],[28427,0,"c_id == 0 && en"],[28464,0,"\n     "]],"_dtSpan":[641510,643501]},{"parents":[690],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[2716,11,""],[2717,24,""],[46996,14,""],[46997,1,""],[46998,7,""],[46999,16,""],[47006,5,""],[47007,22,""],[47008,2,""],[47009,6,""],[47010,20,""],[47017,0,"["],[47019,1,""],[47019,0,"u]"],[47080,2,""],[47080,0,"GetProcessI"],[47092,0,"()"],[93893,0,"\n                   "],[93943,1,""],[93943,0,"G"],[93946,2,""],[93946,0,"ProcessI"],[46850,0,"nam"],[46854,6,""],[46855,0,"10"],[46858,2,""],[46858,0,"4"],[46864,3,""],[46864,0,"G"],[46866,1,""],[46867,5,""],[46867,0,"Hum"],[46871,19,""],[46871,0,"nR"],[46874,20,""],[46875,7,""],[46875,0,"d"],[46877,5,""],[46877,0,"bl"],[46880,1,""],[46880,0,"Proc"],[46885,5,""],[46886,10,""],[46887,12,""],[46887,0,"N"],[46889,7,""],[46889,0,"m"],[46891,2,""],[46892,4,""],[46892,0,"&n"],[46895,9,""],[46895,0,"m"],[46897,1,""],[46922,4,""],[46972,4,""],[46972,0,"n"],[46974,11,""],[46974,0,"m"],[46976,6,""],[46996,10,""],[2109,22,""],[84222,18,""],[84223,7,""],[84224,10,""],[84225,10,""],[84226,19,""],[84227,1,""],[99809,13,""],[99813,41,""],[126353,114,""]],"_dtSpan":[643501,644115]},{"parents":[691],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[134204,0,"uv_loop_t* GetCurrentEventLoop(v8::Isolate* isolate) {\n  HandleScope handle_scope(isolate);\n  auto context = isolate->GetCurrentContext();\n  if (context.IsEmpty())\n    return nullptr;\n  return Environment::GetCurrent(context)->event_loop();\n}\n\n\n"]],"_dtSpan":[644115,644360]},{"parents":[692],"numChildren":1,"agent":186,"time":"1970-01-01T00:00:00Z","patches":[[23198,56,""]],"_dtSpan":[644360,644416]},{"parents":[693],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[84291,291,""],[84292,8,""],[84293,17,""],[84294,13,""],[84295,25,""],[84296,354,""],[84416,5,""],[84417,10,""],[84421,5,""],[84421,0,"Act"],[84425,0,"v"],[84428,20,""],[84429,2,""],[84437,12,""],[84438,32,""],[84438,0,"C"],[84441,20,""],[84443,77,""],[84444,59,""]],"_dtSpan":[644416,645371]},{"parents":[694],"numChildren":1,"agent":29,"time":"1970-01-01T00:00:00Z","patches":[[136042,0,"MultiIsolatePlatform* CreatePlatform(\n    int thread_pool_size,\n    v8::TracingController* tracing_controller) {\n  return new NodePlatform(thread_pool_size, tracing_controller);\n}\n\n\nvoid FreePlatform(MultiIsolatePlatform* platform) {\n  delete platform;\n}\n\n\n"]],"_dtSpan":[645371,645628]},{"parents":[695],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[132893,0,"Needed for access to V8 intrinsics.  Disabled again during bootstrapping,\n  // see lib/internal/bootstrap_node.js.\n  const char allow_natives_syntax[] = \"--allow_natives_syntax\";\n  V8::SetFlagsFromString(allow_natives_syntax,\n                         sizeof(allow_natives_syntax) - 1);\n\n  // "]],"_dtSpan":[645628,645920]},{"parents":[696],"numChildren":1,"agent":61,"time":"1970-01-01T00:00:00Z","patches":[[139892,97,""],[140291,0,"if (track_heap_objects) {\n      isolate->GetHeapProfiler()->StartTrackingHeapObjects(true);\n    }\n    "]],"_dtSpan":[645920,646119]},{"parents":[697],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[41502,0,"CHECK(!er.IsEmpty());\n  CHECK(!message.IsEmpty());\n  "],[43840,0,"\n#if HAVE_INSPECTOR\n  env->inspector_agent()->FatalException(er, message);\n#endif\n"],[67085,0,"FatalTryCatch::~FatalTryCatch() {\n  if (HasCaught()) {\n    HandleScope scope(en"],[67165,0,"_->is"],[67171,0,"late());\n    ReportException(env_, *this);\n    exit(7);\n  }\n}\n\n\nvo"],[68631,86,""],[69075,72,""],[69076,13,""],[69077,5,""],[69078,14,""],[69079,19,""],[69080,27,""],[69081,25,""],[69083,221,""],[69084,19,""],[69087,43,""],[69088,8,""],[69089,13,""],[69090,32,""],[19800,112,""],[19801,503,""],[19802,47,""],[19803,107,""],[19804,29,""],[19805,20,""],[19806,51,""],[19807,274,""],[19808,34,""],[19809,114,""],[19810,1,""],[19811,31,""],[19880,1,""],[19938,9,""],[19938,0,"r"],[19940,1,""],[19941,3,""],[19941,0,"u"],[19943,14,""],[19943,0,"n"],[19950,5,""],[19951,2,""],[19951,0,"h"],[19953,42,""],[19953,0,"u"],[19955,1,""],[19956,45,""],[19957,3,""],[19958,21,""],[19960,28,""],[19961,36,""],[19962,3,""],[19963,1,""],[19964,13,""],[19966,18,""],[19966,0,"u"],[19968,1,""],[19968,0,"c"],[19970,1,""],[19971,24,""],[19972,32,""],[19972,0,"ht_"],[19976,9,""],[19977,5,""],[19977,0,"gg"],[19981,1,""],[19982,3,""],[19983,0,"[0]"],[19991,0,"\n"],[21563,44,""],[21564,39,""],[91243,0,"auto should_abort_on_uncaught_toggle =\n      FIXED_ONE_BYTE_STRING(env->isolate(), \"_shouldAbortOnUncaughtToggle\");\n  CHECK(process->Set(env->context(),\n                     should_abort_on_uncaught_toggle,\n                     env->should_abort_on_uncaught_toggle().GetJSArray())\n                         .FromJust());\n\n  "]],"_dtSpan":[646119,649068]},{"parents":[698],"numChildren":1,"agent":44,"time":"1970-01-01T00:00:00Z","patches":[[109703,1,""]],"_dtSpan":[649068,649069]},{"parents":[699],"numChildren":1,"agent":91,"time":"1970-01-01T00:00:00Z","patches":[[14373,4,""],[14373,0,".As<"],[14383,5,""],[14384,7,""],[14385,1,""],[19212,4,""],[19212,0,".As<"],[19222,5,""],[19223,7,""],[19224,1,""],[40160,2,""],[40160,0,"c"],[40162,2,""],[40162,0,"n"],[40165,0,"xt"],[40170,0,".ToLocalChecked()"],[62303,0,"\n     "],[62333,2,""],[62333,0,"c"],[62335,2,""],[62335,0,"n"],[62338,0,"xt"],[62343,0,".ToLocalChecked()"],[63015,0,"\n                           "],[63067,2,""],[63067,0,"c"],[63069,2,""],[63069,0,"n"],[63072,0,"xt"],[63077,0,".ToLocalChecked()"],[64502,0,"Maybe"],[64513,3,""],[64513,0,"Valu"],[64518,2,""],[64520,0,"maybe_"],[64535,0,"\n     "],[64555,0,"nv->conte"],[64565,0,"t(), ex"],[64585,0,";\n\n  if (maybe_exports.IsEmpty() ||\n      maybe_exports.ToLocalChecked()"],[64673,0,"context()).IsEmpty()) {\n    dl"],[64704,0,"b.Clo"],[64710,0,"e();\n    return;\n  }\n\n  L"],[64736,0,"ca"],[64739,0,"<Object> exports =\n      m"],[64766,0,"ybe_exports.ToLocalChecked()->ToObjec"],[64804,0,"(env->context())\n          .FromMaybe(Local<Obj"],[64852,0,"ct>"],[133080,2,""],[133080,0,"c"],[133082,2,""],[133082,0,"n"],[133085,0,"xt"],[133090,0,".ToLocalChecked()"]],"_dtSpan":[649069,649534]},{"parents":[700],"numChildren":1,"agent":186,"time":"1970-01-01T00:00:00Z","patches":[[91041,1,""],[91041,0,"uv_os_g"],[91050,8,""],[91050,0,"pi"]],"_dtSpan":[649534,649552]},{"parents":[701],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[35826,336,""],[19960,0," &&\n         !env->inside_should_not_abort_on_uncaught_scope()"],[36307,0,"  if (strstr(sourceline_string, \"node-do-not-add-exception-line\") != nullptr)\n    return;\n"]],"_dtSpan":[649552,650040]},{"parents":[702],"numChildren":1,"agent":119,"time":"1970-01-01T00:00:00Z","patches":[[131012,333,""]],"_dtSpan":[650040,650373]},{"parents":[703],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[54703,6,""],[54703,0,"del"],[54707,1,""],[54707,0,"ga"],[54711,1,""],[54713,0," != nullptr"]],"_dtSpan":[650373,650397]},{"parents":[704],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[3941,0,"Just;\nusing v8::"],[3997,0,";\nusing v8::Maybe"],[4112,0,"othing;\n"],[4121,0,"sing v8::Nu"],[63251,0,"if ("],[63350,0,"         "],[63381,0,".IsNothing()) {\n        dlib.Close()"],[63423,0,"    return;\n      }\n    "],[67671,13,""],[67672,5,""],[67673,1,""],[67674,7,""],[67675,8,""],[67676,1,""],[67676,0,"c"],[67678,0,"M"],[67680,13,""],[67680,0,"ybe<b"],[67686,13,""],[67687,2,""],[67687,0,"l>"],[67708,0,"Generic"],[67733,0,"\n                                            "],[67790,10,""],[67791,9,""],[67798,7,""],[67798,0,","],[67802,7,""],[67803,5,""],[67805,3,""],[67805,0,"                                        con"],[67850,0," ch"],[67855,5,""],[67855,0,"*"],[67857,2,""],[67858,3,""],[67858,0,"ype"],[67862,0,"="],[67864,2,""],[67865,0,"ull"],[67869,3,""],[67870,4,""],[67871,4,""],[67872,0,"\n                                            "],[67918,4,""],[67918,0,"c"],[67920,5,""],[67921,8,""],[67921,0,"s"],[67923,1,""],[67924,0,"ch"],[67927,4,""],[67927,0,"r* code"],[67935,0,"="],[67937,4,""],[67938,3,""],[67938,0,"ull"],[67942,0,"tr"],[67945,2,""],[67945,0," {"],[68092,5,""],[68117,0,";\n "],[68121,1,""],[68121,0,"if"],[68124,0,"(!"],[68161,22,""],[68161,0,"              "],[68180,0,"emit_warn"],[68190,0,"ng_"],[68194,0,"tring()).ToL"],[68207,1,""],[68207,0,"c"],[68209,0,"l(&emi"],[68216,0,"_warning)) {\n    r"],[68235,0,"turn Nothing<bool>"],[68255,1,""],[68255,0,";\n"],[68258,1,""],[68258,0," }\n\n  if (!"],[68273,1,""],[68273,0,"_w"],[68281,1,""],[68281,0,"->IsFunction("],[68296,0," return Just(false)"],[68317,0,"\n"],[68320,0,"int argc = 0;\n  "],[68352,0,"s[3];"],[68358,1,""],[68359,0,"// war"],[68366,0,"ing, type, c"],[68381,3,""],[68381,0,"\n\n  // The caller has to be able to ha"],[68420,0,"dl"],[68423,1,""],[68423,0," a failure an"],[68437,0,"way, so we migh"],[68453,0," as well\n  // do proper "],[68478,0,"rror checking for string creation.\n  if (!"],[68526,0,"::NewFromUtf8"],[68555,0,"\n                          "],[68590,2,""],[68590,0,","],[68592,1,""],[68594,0,"                         v8::NewStringType::kNormal).To"],[68654,0,"(&args[argc++])) {\n    return Nothing"],[68692,2,""],[68692,0,"boo"],[68696,2,""],[68697,2,""],[68697,0,"()"],[68701,0,"  }"],[68711,0,"type != nullptr) {\n    if ("],[68739,0,"String::N"],[68749,0,"wFro"],[68754,0,"OneByte(env->"],[68768,0,"sola"],[68773,0,"e(),\n                                reinterpret"],[68822,1,""],[68822,0,"c"],[68824,1,""],[68824,0,"st<co"],[68830,0,"st u"],[68836,0,"t8_t*>(type),\n                                v8::NewStrin"],[68895,0,"Type::kNormal)\n                                    "],[68956,1,""],[68956,0,"args[argc++]"],[68971,0,"{\n      "],[68985,0," Nothing<bool>()"],[69005,0,"  }\n    "],[69017,0,"code "],[69023,1,""],[69023,0,"= nullptr &&\n        !String::NewFromOneByte(env"],[69073,1,""],[69073,0,"i"],[69075,2,""],[69075,0,"olate(),\n                                rei"],[69120,0,"terpret_"],[69129,0,"as"],[69132,0,"<const u"],[69141,0,"nt8_t*>(c"],[69151,0,"de),\n                                v8::NewStri"],[69200,0,"gType::kNormal)\n                                    .ToLocal"],[69261,0,"&args[argc++]"],[69277,0,"{\n      "],[69291,0," Nothing<bool>()"],[69309,0,"    }"],[69317,0,"}\n\n  "],[69348,1,""],[69427,0,"."],[69462,0,"i"],[69464,0," (emit_warning"],[69482,4,""],[69500,0,"env->context(),\n                                        "],[69564,0,"\n                                        argc,\n            "],[69624,0,"                           args).IsEmpty()) {\n    return Nothing<bool>();\n  }\n  return Just(true);\n}\n\n\n// Call process.emitWarning(str), fmt is a snprintf() format string\nMaybe<bool> ProcessEmitWarning(Environment* env, const char* fmt, ...) {\n  char warning["],[69884,0,"024];\n  va_list ap;\n\n  va_start(ap"],[69920,1,""],[69920,0,"fmt);\n  vsnprintf(warning, sizeof(w"],[69957,0,"nin"],[69962,0,", fmt, ap)"],[69974,0,"  va_end(ap);\n\n  return ProcessEmitWarningGeneric(env, warning);\n"],[70042,0,"\nMaybe<bool> ProcessEmitDeprecationWarning(Environment* env,\n                                          const char* warning,\n                                          const char* deprecation_code) {\n  return ProcessEmitWarningGeneric(env,\n                                   warning,\n                                   \"DeprecationWarning\",\n                                   deprecation_code);\n}\n\n\n"]],"_dtSpan":[650397,652852]},{"parents":[705],"numChildren":1,"agent":6,"time":"1970-01-01T00:00:00Z","patches":[[99977,277,""],[4404,0,"int8Array;\nusing v8::U"],[22458,29,""],[22459,1,""],[22514,1,""],[22515,72,""],[22519,7,""],[22520,1,""],[22521,5,""],[22522,18,""],[22602,6,""],[22603,2,""],[22603,0,"nv->i"],[22715,2,""],[22715,0,"8"],[22769,2,""],[22769,0,"8"],[22948,0,"v8::Loc"],[22956,0,"l<v8::Function> run_mic"],[22980,1,""],[22980,0,"otask"],[22986,2,""],[22986,0,"_fn =\n      env->N"],[23005,0,"wFunc"],[23011,0,"ionTemplate("],[23024,0,"unMicrotasks)->G"],[23042,0,"F"],[23044,0,"nction(env->context())\n          .ToLocalChecked();\n  "],[23099,0,"un_microtasks_f"],[23115,1,""],[23115,0,"->SetN"],[23122,0,"me(\n      FIXED_ONE_BYTE_STRING(env->iso"],[23163,0,"ate(), \"r"],[23173,0,"nMicrotasks\"));\n\n  Local<Array> r"],[23207,0,"t = Array::New(env->isolate"],[23236,1,""],[23236,0,", 2);\n  ret->"],[23253,0,"env->context(), 0,\n           "],[23287,2,""],[23287,0,"8"],[23330,0,".FromJust();\n  ret->Set(env->context(), 1, run_microtasks_fn).FromJust();\n\n  args.GetReturnValue().Set(ret)"],[27212,0,"schedu"],[27220,4,""],[27220,0,"d"],[27566,51,""],[27581,0,"schedu"],[27589,4,""],[27589,0,"d"],[27605,29,""],[27773,0,"Local<Object> process = env_->process_object();\n\n  "]],"_dtSpan":[652852,653886]},{"parents":[706],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[84728,160,""],[93270,1,""],[93271,18,""],[93273,57,""],[93274,6,""],[93275,80,""],[93276,6,""],[93277,107,""],[97622,15,""],[97624,3,""],[97627,7,""],[97628,87,""]],"_dtSpan":[653886,654433]},{"parents":[707],"numChildren":1,"agent":6,"time":"1970-01-01T00:00:00Z","patches":[[4404,1,""],[4405,21,""],[22627,59,""],[22628,23,""],[22629,1,""],[22630,2,""],[22631,31,""],[22632,112,""],[22634,68,""],[22965,2,""],[22965,0,"e"],[22967,0,"v->"],[22971,17,""],[22971,0,"ick"],[22975,3,""],[22975,0,"in"],[22978,7,""],[22978,0,"o()->"],[22989,5,""],[22989,0,"().Ge"],[22995,0,"JSArray("],[26876,0,"!"],[26888,0,"has_"],[26903,5,""],[27245,0,"!"],[27257,0,"has_"],[27272,5,""]],"_dtSpan":[654433,654832]},{"parents":[708],"numChildren":1,"agent":9,"time":"1970-01-01T00:00:00Z","patches":[[55388,0,"if (trace_enabled) {\n    v8_platform.StopTracingAgent();\n  }\n  "]],"_dtSpan":[654832,654895]},{"parents":[709],"numChildren":1,"agent":102,"time":"1970-01-01T00:00:00Z","patches":[[88526,0,"const char node_napi_version[] = NODE_STRINGIFY(NAPI_VERSION);\n  READONLY_PROPERTY(\n      versions,\n      \"napi\",\n      FIXED_ONE_BYTE_STRING(env->isolate(), node_napi_version));\n\n  "]],"_dtSpan":[654895,655077]},{"parents":[710],"numChildren":1,"agent":6,"time":"1970-01-01T00:00:00Z","patches":[[23271,13,""],[23272,7,""],[23272,0,"8::Pro"],[23279,0,"is"],[23282,4,""],[23282,0,"R"],[23284,2,""],[23284,0,"j"],[23286,0,"c"],[23288,4,""],[23288,0,"Ev"],[23291,13,""],[23293,5,""],[23302,22,""],[23320,1,""],[23404,0,";\n"],[23407,0," Local<Value> value;\n\n  if (event ="],[23444,0,"v8::kPromiseRej"],[23460,0,"ctWithNoHandler) {\n    callback = e"],[23514,0,"unhandled_"],[23536,0,"    value = message.GetValue();\n"],[23571,0,"  "],[23598,0,"  "],[23628,0,"  } else if (event == v8::kPromiseHandlerAddedAfterReject) {\n    callback = env->promise_reject_handled_function();\n    value = Undefined(isolate);\n  } else {\n    UNREACHABLE();\n  }\n"],[23836,7,""],[23857,0,"Maybe"],[23868,3,""],[23868,0,"Valu"],[23873,2,""],[23874,10,""],[23875,6,""],[23876,9,""],[23877,1,""],[23878,5,""],[23879,0,"="],[23896,3,""],[23896,0,"env->"],[23902,0,"ont"],[23906,1,""],[23906,0,"xt(),\n                                         Undefined(i"],[23965,0,"olate)"],[23972,0,"\n                                        "],[24030,0,"\n                                        "],[24079,0,"\n  if (!ret.IsEmpty() && ret.ToLocalChecked()->IsTrue())\n    env->tick_info()->promise_rejections_toggle_on();\n"],[24377,0,"  CHECK(args[1]->IsFunction());\n"],[24496,0,"unhandled_"],[24540,0,"  env->set_promise_reject_handled_function(args[1].As<Function>());\n"],[27867,0," && !tick_info->has_promise_rejections()"],[89323,5,""],[89324,77,""],[89325,25,""],[89326,37,""],[89327,44,""],[89328,77,""],[89329,23,""],[89330,33,""],[89331,142,""],[89332,3,""],[89333,83,""],[89334,1,""],[89335,55,""],[89336,20,""],[133575,0,"RunBeforeExit(Environment* env) {\n  env->RunBeforeExitCallbacks();\n\n  if (!uv_loop_alive(env->event_loop()))\n    "],[133703,0,"env);\n}\n\n\nvoid "],[133719,0,"mitBeforeExit(E"],[138284,4,""],[138284,0,"Run"],[28773,8,""],[28774,6,""],[28827,1,""],[28829,1,""],[28850,1,""],[28854,1,""],[28929,1,""],[28933,1,""],[28965,1,""],[28969,1,""],[28991,1,""],[28995,1,""],[29064,6,""],[27930,153,""],[20080,335,""],[20084,117,""],[20085,1295,""],[24605,98,""],[24606,10,""],[24607,3,""],[24609,9,""],[24611,4,""],[25368,72,""],[25370,55,""],[26601,0,"Local<Function> domain_cb = env->domain_callback();\n  "],[26676,0,";\n"],[26679,0," if (asyncContext.async_id !"],[26709,0,"0 || domain_"],[26722,0,"b.IsEmpty() || recv.IsEmpty()) {\n    ret = c"],[26815,0,"  } else {\n    std::vector<Local<Value>> args(1 + argc);\n    args[0] = callback;\n    std::copy(&argv[0], &argv[argc], &args[1]);\n    ret = domain_cb->Call(env->context(), recv, args.size(), &args[0]);\n  }\n"],[97734,62,""],[69258,130,""],[69264,48,""],[69272,177,""],[69273,118,""],[69274,34,""],[69275,13,""],[69276,6,""],[70218,14,""],[70219,13,""],[70219,0,"CHECK"],[70225,1,""],[70234,2,""],[70234,0,"Is"],[70242,13,""],[70243,18,""],[70245,7,""],[70256,5,""],[70256,0,"S"],[70258,19,""],[70258,0,"r"],[70262,42,""],[70262,0,">"],[70264,6,""],[70270,1,""],[70271,1,""],[70271,0,"= "],[70274,10,""],[70275,13,""],[70275,0,"gs[0]."],[70282,8,""],[70283,0,"<S"],[70290,43,""],[70290,0,">()"],[70337,80,""],[70344,120,""],[70345,1,""],[70933,30,""],[70934,1,""],[71101,27,""],[71101,0,"CHECK"],[71107,1,""],[71116,2,""],[71116,0,"Is"],[71124,24,""],[71125,7,""],[71127,7,""],[71138,23,""],[71138,0,"S"],[71140,1,""],[71141,5,""],[71143,3,""],[71144,48,""],[71144,0,">"],[71152,1,""],[71153,21,""],[71153,0,"="],[71155,11,""],[71156,3,""],[71157,2,""],[71158,9,""],[71159,1,""],[71159,0,"[0]"],[71163,12,""],[71163,0,"A"],[71165,0,"<S"],[71168,6,""],[71169,10,""],[71169,0,"ing>()"],[71229,63,""],[71230,15,""],[71231,7,""],[71232,3,""],[71233,4,""],[71235,2,""],[71236,28,""],[71237,27,""],[71241,34,""],[71242,20,""],[71243,7,""],[71405,30,""],[71406,1,""],[71582,1,""],[71583,13,""],[71584,18,""],[71584,0,"CHECK"],[71590,1,""],[71599,2,""],[71599,0,"Is"],[71607,13,""],[71610,30,""],[71621,5,""],[71621,0,"S"],[71623,16,""],[71623,0,"r"],[71626,3,""],[71627,30,""],[71628,12,""],[71629,11,""],[71640,4,""],[71641,38,""],[71641,0,"="],[71646,29,""],[71647,2,""],[71647,0,"[0]"],[71654,5,""],[71654,0,"S"],[71656,0,"ring"],[71663,1,""],[72711,46,""],[83889,148,""]],"_dtSpan":[655077,661241]},{"parents":[711],"numChildren":1,"agent":60,"time":"1970-01-01T00:00:00Z","patches":[[6715,0,"experimenta"],[6727,0,"-vm-modules is used.\n// Used in n"],[6761,0,"de_config.cc to set a const"],[6789,0,"nt on process.bin"],[6807,0,"ing('config')\n// that is us"],[6835,0,"d by lib/vm.js\nbool config_experimental_vm_modules = false;\n\n// Set in node.cc by Pa"],[6920,0,"seArgs"],[6927,0,"when --loader "],[104725,0,"         \"  --experimental-vm-modules  experimental ES Module support\\n\"\n         \"                             in vm module\\n\"\n"],[107742,0,"experimental-vm-modules\",\n    \"--"],[113767,0,"else if (strcmp(arg, \"--experimental-vm-modules\") == 0) {\n      config_experimental_vm_modules = true;\n    } "]],"_dtSpan":[661241,661730]},{"parents":[712],"numChildren":1,"agent":6,"time":"1970-01-01T00:00:00Z","patches":[[27152,1,""],[27156,1,""],[27156,0,".begin() + "],[27168,1,""]],"_dtSpan":[661730,661744]},{"parents":[713],"numChildren":1,"agent":109,"time":"1970-01-01T00:00:00Z","patches":[[113773,0,"  new_v8_argv[new_v8_argc] = \"--harmony-dynamic-import\";\n      new_v8_argc += 1;\n    "]],"_dtSpan":[661744,661829]},{"parents":[714],"numChildren":1,"agent":91,"time":"1970-01-01T00:00:00Z","patches":[[108271,0,"perf_prof\",\n    \"--perf_basic_prof\",\n    \"--"]],"_dtSpan":[661829,661873]},{"parents":[715],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[113902,0,"  new_v8_argv[new_v8_argc] = \"--harmony-import-meta\";\n      new_v8_argc += 1;\n    "]],"_dtSpan":[661873,661955]},{"parents":[716],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[74133,0,"SetLastError(ERROR_SUCCESS);\n  "],[75985,0,"SetLastError(ERROR_SUCCESS);\n    "]],"_dtSpan":[661955,662019]},{"parents":[717],"numChildren":1,"agent":6,"time":"1970-01-01T00:00:00Z","patches":[[25034,0,"if (!IsInnerMakeCallback()) {\n    "],[25073,0,"tick_info()->set_has_thrown(f"],[25103,0,"l"],[25105,0,"e);\n  }\n\n  env->as"],[26363,0,"env_->tick_info()->set_has_thrown(true);\n    "]],"_dtSpan":[662019,662146]},{"parents":[718],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[136699,7,""],[136709,0,"Policy"],[136716,1,""],[136716,0,"v8::Microt"],[136727,0,"sksPolicy::kExp"],[136743,2,""],[136743,0,"icit"]],"_dtSpan":[662146,662191]},{"parents":[719],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[130464,31,""],[130465,5,""],[130525,12,""],[130536,11,""],[130536,0,"::G"],[130541,3,""],[130541,0,"T"],[130547,2,""],[130547,0,"L"],[130552,2,""],[130552,0,"E"],[130555,1,""],[130555,0,"("],[134390,29,""],[134391,20,""],[134396,8,""],[134397,17,""],[134399,14,""],[135682,36,""],[4465,6,""],[7856,6,""],[8981,6,""],[9934,6,""],[19924,6,""],[19965,6,""],[127068,6,""],[137429,6,""],[138658,6,""]],"_dtSpan":[662191,662443]},{"parents":[720],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[59724,0,"#ifdef __POSIX__\n"],[59745,0,"atic const int kDefaultFlags = RTLD_LAZY;\n#else\n  static const int kDefaultFlags = 0;\n#en"],[59835,0,"if\n\n  inline DLib(const char* filename, int flags)\n      "],[59893,0," filename_(filename), flags_(flags), handle_(nullptr) {}\n\n  inline bool Open();\n  inline void Close();\n\n  const std:"],[60030,0,"const int flags_;\n  "],[60088,15,""],[60091,0,"n"],[60108,4,""],[60108,0,"uv_l"],[60113,6,""],[60113,0,"b_"],[60117,0,"l"],[60119,5,""],[60119,0,"b_;\n#"],[60125,0,"ndi"],[60129,9,""],[60129,0,"\n\n"],[60132,1,""],[60133,2,""],[60133,0,"DISAL"],[60139,0,"OW_COPY_AN"],[60151,1,""],[60152,2,""],[60152,0,"SSIGN(DLib);\n}"],[60169,0,"\n#ifdef"],[60177,1,""],[60177,0,"__POSIX__\n"],[60192,0,"DLib::"],[60207,2,""],[60254,2,""],[60284,2,""],[60297,1,""],[60299,1,""],[60320,1,""],[60322,1,""],[60336,2,""],[60339,2,""],[60344,0,"DLib::"],[60362,2,""],[60374,1,""],[60375,0,"="],[60385,0," return;"],[60394,4,""],[60416,0,"handle_ = nullptr;\n"],[60458,10,""],[60458,0,"bo"],[60461,7,""],[60461,0,"l"],[60463,1,""],[60464,29,""],[60464,0,"L"],[60467,11,""],[60467,0,"::"],[60478,2,""],[60529,2,""],[60545,1,""],[60549,1,""],[60592,1,""],[60596,1,""],[60609,2,""],[60613,2,""],[60646,2,""],[60665,1,""],[60667,1,""],[60681,2,""],[60684,2,""],[60689,0,"DLib::"],[60707,0,"if (handle_ == nullptr) return;\n"],[60762,0,"handle_ = nullptr;\n"],[60804,3,""],[61266,0,"  auto context = env->context();\n"],[61532,5,""],[61539,2,""],[61651,0,";\n  Local<Object>"],[61669,1,""],[61669,0,"exports;"],[61680,0,"Local<Value>"],[61693,0,"exports_v;\n"],[61706,0,"if"],[61709,0,"(!"],[61729,1,""],[61729,0,"co"],[61732,1,""],[61732,0,"text).ToLocal(&module) ||\n      !module"],[61773,0,"Get("],[61784,0,", env->exports_string"],[61816,2,""],[61816,0,"(&"],[61819,0,"xports_v) ||\n      !exports_v->ToObje"],[61857,1,""],[61857,0,"t(cont"],[61864,1,""],[61864,0,"xt).ToLocal"],[61876,0,"&exports)"],[61886,0," {\n    return"],[61905,3,""],[61905,0,"Excep"],[61911,0,"ion pending."],[61926,0,"}\n\n  "],[61995,5,""],[61997,3,""],[62002,13,""],[62002,0,"("],[62012,17,""],[62012,0,","],[62019,0,")"],[62585,5,""],[62592,2,""],[64035,47,""],[64036,370,""],[64132,5,""],[64139,2,""],[59996,0,"  inline void* GetSymbolAddress(const char* name);\n"],[60488,0,"\nvoid* DLib::GetSymbolAddress(const char* name) {\n  return dlsym(handle_, name);\n}\n"],[60917,0,"\nvoid* DLib::GetSymbolAddress(const char* name) {\n  void* address;\n  if (0 == uv_dlsym(&lib_, name, &address)) return address;\n  return nullptr;\n}\n"],[61087,0,"using InitializerCallback = void (*)(Local<Object> exports,\n                                     Local<Value> module,\n                                     Local<Context> context);\n\ninline InitializerCallback GetInitializerCallback(DLib* dlib) {\n  const char* name = \"node_register_module_v\" STRINGIFY(NODE_MODULE_VERSION);\n  return reinterpret_cast<InitializerCallback>(dlib->GetSymbolAddress(name));\n}\n\n"],[63422,0,"if (auto callback = GetInitializerCallback(&dlib)) {\n      callback(exports, module, context);\n    } else {\n      "],[63554,0,"  "],[63610,0,"}\n    "],[63628,0,"\n"]],"_dtSpan":[662443,664605]},{"parents":[721],"numChildren":1,"agent":59,"time":"1970-01-01T00:00:00Z","patches":[[1687,55,""],[99208,29,""],[99209,28,""]],"_dtSpan":[664605,664717]},{"parents":[722],"numChildren":1,"agent":9,"time":"1970-01-01T00:00:00Z","patches":[[5348,0,"std::string trace_file_pattern =  // NOLINT(runtime/string)\n  \"node_trace.${rotation}.log\";\nstatic "],[8083,0,"trace_file_pattern"],[103909,0,"e-event-file-pattern Template string specifying the\\n\"\n         \"                             filepath for the trace-events data, it\\n\"\n         \"                             supports ${rotation} and ${pid}\\n\"\n         \"                             log-rotation id. %%2$u is the pid.\\n\"\n         \"  --trac"],[109335,0,"e-event-file-pattern\",\n    \"--trac"],[114743,0,"e-event-file-pattern\") == 0) {\n      const char* file_pattern = argv[index + 1];\n      if (file_pattern == nullptr) {\n        fprintf(stderr, \"%s: %s requires an argument\\n\", argv[0], arg);\n        exit(9);\n      }\n      args_consumed += 1;\n      trace_file_pattern = file_pattern;\n    } else if (strcmp(arg, \"--trac"]],"_dtSpan":[664717,665489]},{"parents":[723],"numChildren":1,"agent":145,"time":"1970-01-01T00:00:00Z","patches":[[44835,3,""],[44841,0,", nullptr, *path, nullptr"]],"_dtSpan":[665489,665517]},{"parents":[724],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[71409,0,"Get"],[72286,0,"Get"],[72761,0,"Get"],[96932,137,""],[96933,11,""],[96934,7,""],[96935,6,""],[96936,11,""],[98050,2,""],[98050,0,"\nstat"],[98056,1,""],[98056,0,"c"],[98060,0,"c"],[98062,2,""],[98062,0,"l<Fu"],[98067,1,""],[98067,0,"ct"],[98070,1,""],[98072,1,""],[98072,0,"> G"],[98076,1,""],[98077,0,"Bootstrapper"],[98106,0,", Local<String> source,\n                                  Local<String> script_name"],[98195,0,"Escapable"],[98216,7,""],[98498,6,""],[98498,0,"fac"],[98502,1,""],[98502,0,"o"],[98504,1,""],[98504,0,"y jav"],[98510,6,""],[98511,1,""],[98511,0,"c"],[98513,1,""],[98513,0,"i"],[98515,8,""],[98515,0,"t"],[98521,0,"\n"],[98523,3,""],[98523,0," Lo"],[98527,1,""],[98527,0,"al<Value>"],[98537,1,""],[98537,0,"f"],[98539,1,""],[98539,0,"ctory_v"],[98547,0,"= ExecuteStr"],[98561,0,"g(env, sour"],[98573,3,""],[98574,1,""],[98574,0,","],[98576,1,""],[98577,1,""],[98577,0,"cript_n"],[98585,0,"me);"],[98592,2,""],[98592,0,"if"],[98595,1,""],[98595,0,"("],[98597,0,"ry_c"],[98603,1,""],[98604,1,""],[98604,0,"h.Has"],[98610,2,""],[98610,0,"augh"],[98615,0,"())  {\n    Repo"],[98631,0,"tExcept"],[98639,0,"o"],[98641,3,""],[98641,0,"(e"],[98644,0,"v,"],[98647,4,""],[98647,0,"try"],[98651,1,""],[98651,0,"c"],[98654,0,"ch);\n    ex"],[98666,5,""],[98666,0,"t(10);\n  }\n\n"],[98679,2,""],[98680,1,""],[98680,0,"CHECK(fact"],[98691,2,""],[98691,0,"ry"],[98694,1,""],[98694,0,"v->I"],[98699,1,""],[98699,0,"Fun"],[98703,1,""],[98703,0,"tion());"],[98714,4,""],[98714,0,"Local<Funct"],[98726,0,"o"],[98728,0,"> fac"],[98734,1,""],[98734,0,"o"],[98736,1,""],[98736,0,"y = Loc"],[98745,3,""],[98745,0,"<Functi"],[98753,0,"n>::Cas"],[98761,1,""],[98761,0,"(fac"],[98766,0,"o"],[98768,2,""],[98768,0,"y"],[98770,0,"v);\n\n  retur"],[98783,0," sc"],[98787,1,""],[98787,0,"pe.Escap"],[98796,2,""],[98796,0,"(factory);\n}\n\nst"],[98815,3,""],[98815,0,"c"],[98817,2,""],[98817,0,"bool"],[98822,0,"Execu"],[98828,1,""],[98829,1,""],[98829,0,"Boot"],[98836,0,"apper(Env"],[98846,0,"ro"],[98849,1,""],[98849,0,"ment*"],[98855,1,""],[98855,0,"env, L"],[98862,0,"cal<Fu"],[98869,0,"c"],[98871,1,""],[98872,0,"o"],[98874,0,"> factory,\n                                "],[98919,1,""],[98919,0,"t"],[98921,2,""],[98922,1,""],[98922,0,"rgc,"],[98927,1,""],[98927,0,"L"],[98929,0,"cal<Val"],[98937,2,""],[98938,0,">"],[98940,5,""],[98940,0,"argv[],"],[98950,0,"                              "],[98986,1,""],[98986,0,"Value>* out) {\n  bool ret = fac"],[99018,0,"o"],[99020,1,""],[99020,0,"y->Call(\n      e"],[99037,1,""],[99037,0,"v-"],[99040,2,""],[99041,3,""],[99041,0,"on"],[99044,4,""],[99045,2,""],[99045,0,"xt(),"],[99051,7,""],[99052,13,""],[99052,0,"ull"],[99070,0,")"],[99072,0," argc, argv).ToLocal(out);\n"],[99102,0,"//"],[99105,0,"If"],[99108,0,"there"],[99114,0,"was"],[99118,0,"an"],[99121,0,"error"],[99127,0,"during"],[99134,0,"bootstrap"],[99144,0,"then"],[99149,0,"it"],[99152,0,"was"],[99156,0,"either"],[99163,0,"handled"],[99171,0,"by"],[99174,0,"the\n"],[99180,0,"//"],[99183,0,"FatalException"],[99198,0,"handler"],[99206,0,"or"],[99209,0,"it's"],[99214,0,"unrecoverable"],[99228,0,"(e.g."],[99234,0,"max"],[99238,0,"call"],[99243,0,"stack\n"],[99251,0,"//"],[99254,0,"exceeded). Either way,"],[99277,0,"clear"],[99283,0,"the"],[99287,0,"stack"],[99293,0,"so"],[99296,0,"that"],[99301,0,"the"],[99305,0,"AsyncCallbackScope\n"],[99326,0,"//"],[99329,0,"destructor"],[99340,0,"doesn't"],[99348,0,"fail"],[99353,0,"on"],[99356,0,"the"],[99360,0,"id"],[99363,0,"check.\n"],[99372,0,"//"],[99375,0,"There"],[99381,0,"are"],[99385,0,"only"],[99390,2,""],[99390,0,"tw"],[99393,0," ways t"],[99401,0," have a s"],[99411,0,"ack "],[99416,0,"ize > 1: 1) "],[99429,0,"he use"],[99436,0," m"],[99439,2,""],[99440,9,""],[99440,0,"ually"],[99448,2,""],[99448,0,"// "],[99454,2,""],[99454,0,"led MakeC"],[99465,0,"lback or 2) "],[99478,0,"s"],[99480,1,""],[99480,0,"r awaited during"],[99497,1,""],[99497,0,"bootstrap, which triggered\n  // "],[99530,1,""],[99530,0,"tickC"],[99537,1,""],[99537,0,"lback().\n  if (!r"],[99555,0,"t) {\n  "],[99563,1,""],[99564,2,""],[99565,0,"nv->async_hooks()->"],[99585,2,""],[99585,0,"l"],[99587,2,""],[99587,0,"a"],[99589,1,""],[99589,0,"_asy"],[99594,1,""],[99594,0,"c_id_stack"],[99605,0,");\n  }\n\n  r"],[99617,0,"tur"],[99621,0," ret;\n}\n\n\n"],[99632,1,""],[99632,0,"oid"],[99636,1,""],[99636,0,"Lo"],[99639,1,""],[99639,0,"dE"],[99642,3,""],[99642,0,"vi"],[99645,1,""],[99645,0,"onm"],[99649,0,"nt"],[99652,0,"Environm"],[99662,0,"t* en"],[99669,1,""],[99670,0,"{\n  HandleScope handle_"],[99695,2,""],[99695,0,"o"],[99697,2,""],[99697,0,"e(e"],[99701,0,"v->isol"],[99709,1,""],[99709,0,"t"],[99711,0,"()"],[99716,0,"\n"],[99719,2,""],[99719,0,"TryCatch"],[99728,1,""],[99737,3,""],[99737,0,"(env->i"],[99745,1,""],[99745,0,"ol"],[99748,3,""],[99749,0,"e"],[99753,3,""],[99753,0,";"],[99757,0,"//"],[99760,0,"Disable"],[99768,1,""],[99768,0,"v"],[99770,2,""],[99771,0,"bose mode to s"],[99786,0,"op Fatal"],[99804,1,""],[99804,0,") ha"],[99809,2,""],[99809,0,"dler from"],[99822,2,""],[99822,0,"ing\n  // to h"],[99836,0,"ndle "],[99842,0,"he ex"],[99848,0,"eption. Errors t"],[99865,2,""],[99865,0,"is early in the start-up phase"],[99898,0,"//"],[99901,0,"are"],[99905,0,"not saf"],[99913,1,""],[99913,0," to "],[99918,0,"gnore.\n  "],[99928,0,"ry_catch.SetVerbose"],[99948,2,""],[99948,0,"false"],[99956,3,""],[99966,0,"factory scripts are li"],[99989,0,"/internal/b"],[100009,1,""],[100009,0,"l"],[100011,0,"a"],[100014,0,"rs"],[100020,1,""],[100020,0,"and\n  // lib/"],[100034,1,""],[100034,0,"nt"],[100037,1,""],[100038,1,""],[100038,0,"nal/boots"],[100048,1,""],[100049,0,"ap_"],[100053,0,"ode.j"],[100059,0,","],[100061,0,"e"],[100063,0,"ch"],[100066,2,""],[100066,0,"i"],[100069,0,"luded as a sta"],[100085,1,""],[100085,0,"c C stri"],[100094,0,"g\n"],[100097,4,""],[100098,0,"//"],[100101,6,""],[100101,0,"de"],[100104,0,"ined in node"],[100117,0,"ja"],[100121,6,""],[100122,2,""],[100122,0,"cript.h, ge"],[100134,1,""],[100134,0,"era"],[100138,0,"ed "],[100142,0,"n n"],[100146,5,""],[100146,0,"de_javascript.cc by"],[100166,0,"  // node_js2c."],[100200,1,""],[100200,0,"loaders_bootstrapper"],[100222,0,"\n      GetBootstrapper(env, LoadersBootstrapperSource(env),\n                 FIXED_ONE_BYTE_STRING(env->isolate(), \"bootstrap_loaders.js\"));\n "],[100380,3,""],[100380,0," node_bootstr"],[100394,0,"pper =\n      GetBoot"],[100416,0,"rapper"],[100423,1,""],[100423,0,"env, NodeBootstrapperSource(env),\n                 FIXED_ONE"],[100484,0,"BYTE_STRING(en"],[100499,1,""],[100499,0,"->iso"],[100505,1,""],[100505,0,"at"],[100508,0,"("],[100510,0,", \"bootstrap_node.js\"))"],[101352,5,""],[101352,0,"Cr"],[101355,2,""],[101356,9,""],[101357,4,""],[101359,3,""],[101359,0,"binding l"],[101369,1,""],[101369,0,"ad"],[101372,1,""],[101372,0,"r"],[101374,1,""],[101374,0,"\n "],[101378,3,""],[101378,0,"8::Loc"],[101385,1,""],[101386,10,""],[101386,0,"<"],[101388,3,""],[101388,0,"8::F"],[101393,2,""],[101393,0,"nc"],[101396,5,""],[101397,12,""],[101398,2,""],[101398,0,"n>"],[101401,0,"get_"],[101412,2,""],[101412,0,"_fn =\n    "],[101423,1,""],[101423,0," e"],[101426,1,""],[101426,0,"v->NewFunct"],[101438,5,""],[101439,7,""],[101440,2,""],[101440,0,"T"],[101442,4,""],[101442,0,"mpl"],[101446,0,"te(GetBi"],[101456,1,""],[101458,0,"g)->Ge"],[101465,2,""],[101465,0,"Fu"],[101468,5,""],[101468,0,"cti"],[101472,0,"n(env->"],[101480,0,"ont"],[101484,2,""],[101484,0,"xt())\n      "],[101497,6,""],[101499,2,""],[101500,1,""],[101500,0,".ToLoc"],[101507,1,""],[101507,0,"lCh"],[101511,1,""],[101512,2,""],[101512,0,"k"],[101514,0,"d();\n\n"],[101521,2,""],[101522,0,"v8::Loc"],[101530,4,""],[101530,0,"l<v8::Fu"],[101539,0,"ct"],[101542,0,"o"],[101544,1,""],[101544,0,">"],[101546,0,"ge"],[101549,1,""],[101549,0,"_l"],[101553,0,"ked_bindin"],[101564,1,""],[101564,0,"_fn =\n"],[101571,2,""],[101572,5,""],[101573,9,""],[101575,2,""],[101576,1,""],[101577,2,""],[101577,0,"nv->NewFunc"],[101589,0,"ionTempl"],[101598,1,""],[101599,3,""],[101600,5,""],[101600,0,"(G"],[101603,3,""],[101604,1,""],[101604,0,"L"],[101606,6,""],[101606,0,"nkedB"],[101613,3,""],[101614,0,"ing)->G"],[101622,2,""],[101623,11,""],[101623,0,"Functi"],[101630,8,""],[101630,0,"n("],[101633,0,"n"],[101635,2,""],[101635,0,"->c"],[101639,1,""],[101639,0,"nt"],[101642,2,""],[101642,0,"xt())"],[101650,2,""],[101651,3,""],[101652,2,""],[101653,3,""],[101654,4,""],[101655,3,""],[101656,1,""],[101656,0,"  .T"],[101661,0,"L"],[101663,4,""],[101663,0,"c"],[101665,5,""],[101665,0,"lCh"],[101669,5,""],[101669,0,"ck"],[101672,2,""],[101672,0,"d();\n\n"],[101679,2,""],[101680,5,""],[101680,0,"v8::L"],[101686,2,""],[101686,0,"ca"],[101689,10,""],[101689,0,"<v8::F"],[101696,0,"nc"],[101699,2,""],[101699,0,"i"],[101701,5,""],[101701,0,"n>"],[101704,3,""],[101704,0,"g"],[101706,4,""],[101706,0,"t_int"],[101712,7,""],[101712,0,"rnal_"],[101724,1,""],[101724,0,"_fn =\n"],[101731,3,""],[101732,0,"    env->Ne"],[101744,1,""],[101744,0,"Fu"],[101747,0,"c"],[101749,2,""],[101749,0,"i"],[101751,2,""],[101751,0,"nT"],[101754,0,"m"],[101758,1,""],[101758,0,"t"],[101760,7,""],[101760,0,"(Ge"],[101764,2,""],[101764,0,"In"],[101767,1,""],[101768,1,""],[101769,3,""],[101770,2,""],[101770,0,"alBinding)->GetF"],[101793,0,"(env->context())\n          "],[101821,0,"ToLocalChecked();\n"],[101855,0,"loaders_bootstr"],[101871,0,"ppe"],[101875,0,"_ar"],[101879,0,"s[]"],[101885,0,"{\n    "],[101912,1,""],[101912,0,","],[101914,1,""],[101916,4,""],[101917,1,""],[101917,0," g"],[101921,0,"_binding_fn,\n  "],[101937,1,""],[101938,6,""],[101938,0,"get_"],[101943,1,""],[101943,0,"ink"],[101947,0,"d_bi"],[101952,5,""],[101952,0,"di"],[101955,6,""],[101955,0,"g_fn"],[101960,0,"\n "],[101963,5,""],[101963,0,"  g"],[101967,4,""],[101967,0,"t_"],[101970,4,""],[101970,0,"n"],[101973,4,""],[101973,0,"rnal_binding_fn\n"],[101990,2,""],[101991,5,""],[101991,0,"}"],[101994,0,"\n"],[102000,2,""],[102000,0,"Bootstrap"],[102010,0,"in"],[102013,1,""],[102015,1,""],[102015,0,"nal"],[102019,1,""],[102019,0,"lo"],[102022,0,"der"],[102026,0,"\n"],[102028,2,""],[102029,3,""],[102029,0,"L"],[102031,3,""],[102031,0,"cal<Val"],[102039,4,""],[102039,0,"e>"],[102051,3,""],[102051,0,"p"],[102053,1,""],[102053,0,"d_loaders;\n "],[102067,1,""],[102067,0,"f"],[102069,4,""],[102069,0,"(!Ex"],[102074,1,""],[102074,0,"cu"],[102077,1,""],[102078,0,"Bootst"],[102085,2,""],[102086,0,"pper(e"],[102093,1,""],[102093,0,"v, "],[102097,0,"oad"],[102101,2,""],[102101,0,"rs_"],[102105,2,""],[102105,0,"oots"],[102110,1,""],[102110,0,"rapp"],[102115,0,"r,"],[102120,2,""],[102121,1,""],[102121,0,"                        "],[102146,1,""],[102146,0,"rr"],[102149,0,"ysize("],[102156,7,""],[102157,3,""],[102158,1,""],[102159,1,""],[102161,1,""],[102161,0,"s_bo"],[102166,3,""],[102167,1,""],[102168,3,""],[102168,0,"t"],[102170,4,""],[102170,0,"app"],[102175,0,"_"],[102177,7,""],[102177,0,"r"],[102179,1,""],[102179,0,"s),\n         "],[102193,3,""],[102194,4,""],[102195,6,""],[102197,2,""],[102198,10,""],[102199,6,""],[102200,4,""],[102201,5,""],[102202,3,""],[102203,5,""],[102204,2,""],[102205,4,""],[102206,3,""],[102207,19,""],[102209,2,""],[102210,0,"loa"],[102215,0,"r"],[102217,0,"_boo"],[102222,3,""],[102222,0,"s"],[102224,1,""],[102225,3,""],[102225,0,"app"],[102229,0,"r_arg"],[102235,3,""],[102235,0,",\n           "],[102249,4,""],[102250,2,""],[102251,3,""],[102252,2,""],[102253,7,""],[102255,2,""],[102256,5,""],[102257,3,""],[102258,4,""],[102259,3,""],[102260,4,""],[102261,2,""],[102262,4,""],[102263,1,""],[102264,0,"&boot"],[102271,0,"r"],[102273,3,""],[102273,0,"pped_loader"],[102285,3,""],[102285,0,"))"],[102288,1,""],[102288,0,"{\n"],[102291,2,""],[102292,2,""],[102293,2,""],[102293,0," r"],[102296,1,""],[102296,0,"t"],[102298,2,""],[102299,3,""],[102300,5,""],[102300,0,";\n  }\n"],[102312,0,"Bootstrap Node.js\n  Lo"],[102337,0,"<Va"],[102341,0,"u"],[102343,1,""],[102343,0,">"],[102345,1,""],[102345,0,"bootstr"],[102353,1,""],[102353,0,"pp"],[102356,9,""],[102356,0,"d_n"],[102360,1,""],[102360,0,"de;\n"],[102365,2,""],[102366,5,""],[102366,0,"Loc"],[102370,1,""],[102370,0,"l<V"],[102374,2,""],[102374,0,"lu"],[102377,1,""],[102377,0,">"],[102379,4,""],[102380,2,""],[102380,0,"ode_"],[102393,9,""],[102393,0,"pe"],[102396,2,""],[102396,0,"_ar"],[102400,0,"s[] = {\n    "],[102413,0,"nv->p"],[102419,0,"ocess_obj"],[102429,1,""],[102429,0,"ct(),"],[102437,2,""],[102438,1,""],[102438,0," boots"],[102445,4,""],[102445,0,"r"],[102447,0,"pped_"],[102453,2,""],[102453,0,"o"],[102455,5,""],[102455,0,"ders"],[102462,0,"};\n  "],[102471,0,"!ExecuteBootstrappe"],[102491,0,"("],[102493,0,"nv, node_boo"],[102506,2,""],[102507,3,""],[102508,4,""],[102508,0,"rapper,"],[102520,5,""],[102520,0,"                       "],[102544,1,""],[102544,0,"rra"],[102548,0,"size("],[102554,1,""],[102554,0,"ode"],[102558,1,""],[102558,0,"b"],[102561,1,""],[102561,0,"t"],[102563,6,""],[102563,0,"trapp"],[102569,1,""],[102572,0,"rg"],[102575,1,""],[102575,0,"),\n                           "],[102606,3,""],[102606,0,"o"],[102608,0,"e"],[102610,0,"bootstrapper_args,\n                           &boot"],[102663,0,"r"],[102665,3,""],[102665,0,"pped_node)"],[102676,0," {\n    return"],[102691,0,"  }\n"]],"_dtSpan":[665517,669322]},{"parents":[725],"numChildren":1,"agent":162,"time":"1970-01-01T00:00:00Z","patches":[[76047,0,"  Environment* env = Environment::GetCurrent(info);\n  if (config_pending_deprecation && env->EmitProcessEnvWarning() &&\n      !value->IsString() && !value->IsNumber() && !value->IsBoolean()) {\n    if (ProcessEmitDeprecationWarning(\n          env,\n          \"Assigning any value other than a string, number, or boolean to a \"\n          \"process.env property is deprecated. Please make sure to convert the \"\n          \"value to a string before setting process.env with it.\",\n          \"DEP00XX\").IsNothing())\n      return;\n  }\n"]],"_dtSpan":[669322,669847]},{"parents":[726],"numChildren":1,"agent":142,"time":"1970-01-01T00:00:00Z","patches":[[76535,0,"1"],[76537,2,""],[76537,0,"4"]],"_dtSpan":[669847,669851]},{"parents":[727],"numChildren":1,"agent":60,"time":"1970-01-01T00:00:00Z","patches":[[1377,0,"#include \"node_context_data.h\"\n"],[137520,0,"context->SetEmbedderData(\n      ContextEmbedderIndex::kAllowWasmCodeGeneration, True(isolate));\n  "],[139698,0,"bool AllowWasmCodeGenerationCallback(\n    Local<Context> context, Local<String>) {\n  Local<Value> wasm_code_gen =\n    context->GetEmbedderData(ContextEmbedderIndex::kAllowWasmCodeGeneration);\n  return wasm_code_gen->IsUndefined() || wasm_code_gen->IsTrue();\n}\n\n"],[140687,0,"  isolate->SetAllowWasmCodeGenerationCallback(AllowWasmCodeGenerationCallback);\n"]],"_dtSpan":[669851,670321]},{"parents":[728],"numChildren":1,"agent":102,"time":"1970-01-01T00:00:00Z","patches":[[63746,18,""],[63746,0,"//"],[63749,3,""],[63751,1,""],[63752,6,""],[63753,1,""],[63753,0,"s"],[63755,1,""],[63755,0,"us"],[63758,22,""],[63758,0,"d"],[63760,9,""],[63761,4,""],[63762,10,""],[63763,9,""],[63764,1,""],[63769,3,""],[63770,9,""],[63771,16,""],[63771,0,"o"],[63773,3,""],[63775,3,""],[63775,0,"es"],[63778,7,""],[63780,35,""],[63780,0,"if"],[63783,1,""],[63783,0,"((mp->"],[63790,4,""],[63791,0,"_v"],[63794,5,""],[63794,0,"r"],[63796,1,""],[63796,0,"i"],[63798,3,""],[63799,4,""],[63800,9,""],[63800,0,"!="],[63803,11,""],[63803,0,"-1"],[63806,4,""],[63807,35,""],[63807,0,"&&"],[63810,3,""],[63849,0,")"]],"_dtSpan":[670321,670590]},{"parents":[729],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[7133,1,""],[7133,0,"/"],[7665,1,""],[7665,0,"/"],[98841,3,""],[98841,0,"boo"],[98845,1,""],[98845,0,"st"],[98848,1,""],[98848,0,"apper"],[98885,4,""],[98885,0,"bo"],[98888,0,"tstrappe"],[98897,1,""],[99039,1,""],[99039,0,"bootstr"],[99047,3,""],[99047,0,"ppe"],[99051,1,""],[99088,4,""],[99088,0,"bo"],[99091,0,"tst"],[99095,1,""],[99095,0,"apper"],[99125,3,""],[99125,0,"boots"],[99131,1,""],[99132,1,""],[99132,0,"apper"],[99165,1,""],[99165,0,"bootstr"],[99173,3,""],[99173,0,"ppe"],[99177,1,""],[99249,4,""],[99249,0,"bo"],[99252,0,"tst"],[99256,1,""],[99256,0,"apper"],[99392,3,""],[99392,0,"boots"],[99398,1,""],[99399,1,""],[99399,0,"apper"],[100349,1,""],[100349,0,"bootstr"],[100357,3,""],[100357,0,"ppe"],[100361,1,""],[100396,1,""],[100396,0,"/"],[100439,1,""],[100439,0,"/"],[100578,0,"String> loaders_name =\n      "],[100608,0,"IXED_ONE_BYTE_STRING(env->isolate(), \"internal/bootstrap/loaders.js\");\n  Local<F"],[100778,0," loaders_name);"],[100796,0,"Local<String>"],[100810,0,"node_name"],[100820,1,""],[100820,0,"=\n"],[100828,6,""],[100867,0,"internal/"],[100885,2,""],[100885,0,"/n"],[100888,1,""],[100890,2,""],[100895,1,""],[100990,2,""],[100991,38,""],[100992,5,""],[100993,3,""],[100993,0,"d"],[100995,14,""],[100997,2,""],[100997,0,"am"],[101000,4,""],[101001,1,""],[133349,1,""],[133349,0,"/"],[136769,0,"env->CleanupHandles();\n  "]],"_dtSpan":[670590,671004]},{"parents":[730],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[138860,0,"env.performance_state()->Mark(\n        node::performance::NODE_"],[138936,10,""],[138936,0,"ILESTONE_"],[139368,0,"env.performance_state()->Mark(\n        node::performance::NODE_"],[139444,10,""],[139444,0,"ILESTONE_"]],"_dtSpan":[671004,671168]},{"parents":[731],"numChildren":1,"agent":60,"time":"1970-01-01T00:00:00Z","patches":[[88470,0,"  READONLY_PROPERTY(release, \"majorVersion\",\n      Integer::New(env->isolate(), NODE_MAJOR_VERSION));\n  READONLY_PROPERTY(release, \"minorVersion\",\n      Integer::New(env->isolate(), NODE_MINOR_VERSION));\n  READONLY_PROPERTY(release, \"patchVersion\",\n      Integer::New(env->isolate(), NODE_PATCH_VERSION));\n\n  READONLY_PROPERTY(release, \"prereleaseTag\",\n      OneByteString(env->isolate(), NODE_TAG));\n\n  READONLY_PROPERTY(release,\n                    \"computedVersion\",\n                    Integer::New(env->isolate(),\n                        (NODE_MAJOR_VERSION << 16) +\n                        (NODE_MINOR_VERSION << 8) +\n                        NODE_PATCH_VERSION));\n\n"]],"_dtSpan":[671168,671839]},{"parents":[732],"numChildren":1,"agent":145,"time":"1970-01-01T00:00:00Z","patches":[[35365,0,"env->context()"],[35380,0,".FromJust()"],[35427,0,"MaybeLocal<String> source_line_maybe = message->GetSourceLine(env->context());\n  "],[35550,0,"\n                            "],[35580,3,""],[35581,9,""],[35586,1,""],[35586,0,"_l"],[35591,0,"_maybe.ToLocalChecked"],[40616,0,"nv->isolate(), e"],[42196,0,"Maybe"],[42252,0,"env->context()"],[42378,0,".ToLocalChecked()"]],"_dtSpan":[671839,672062]},{"parents":[733],"numChildren":1,"agent":165,"time":"1970-01-01T00:00:00Z","patches":[[88667,671,""]],"_dtSpan":[672062,672733]},{"parents":[734],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[144149,6,""],[144150,2,""],[144150,0,"al"],[144153,3,""],[144153,0,"ze"],[144211,6,""],[144212,2,""],[144212,0,"al"],[144215,3,""],[144215,0,"ze"]],"_dtSpan":[672733,672763]},{"parents":[735],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[81545,216,""]],"_dtSpan":[672763,672979]},{"parents":[736],"numChildren":1,"agent":202,"time":"1970-01-01T00:00:00Z","patches":[[103448,2,""],[103449,9,""],[103463,1,""],[103463,0,"           sc"],[103478,1,""],[103478,0,"p"],[103481,3,""],[103481,0,"r"],[103483,3,""],[103483,0,"ad"],[103486,2,""],[103486,0,"f"],[103488,0,"om "],[103492,0,"td"],[103495,1,""],[103496,0," (default; "],[103523,3,""],[103524,6,""],[103525,6,""],[103535,0,"               int"],[103554,1,""],[103554,0,"r"],[103556,3,""],[103556,0,"c"],[103558,0,"ive mod"],[103567,3,""],[103568,1,""],[103568,0,"f a t"],[103574,0,"y)"],[103593,2,""],[103593,0,"-        "],[103603,7,""],[103619,5,""],[103619,0,"indic"],[103628,5,""],[103629,0,"he"],[103632,1,""],[103632,0,"e"],[103636,0,"of node o"],[103646,1,""],[103646,0,"t"],[103648,0,"o"],[103650,4,""],[103651,3,""],[103668,3,""],[103669,0,"abort"],[103675,0,"on-un"],[103681,0,"aug"],[103685,0,"t-"],[103688,0,"x"],[103690,1,""],[103690,0,"eption\\n\"\n  "],[103709,0,"\""],[103719,6,""],[103720,5,""],[103721,2,""],[103721,0,"                  abo"],[103743,0,"t"],[103745,2,""],[103745,0,"ng"],[103748,1,""],[103749,0,"ns"],[103752,1,""],[103752,0,"ead "],[103757,2,""],[103757,0,"f"],[103761,3,""],[103761,0,"i"],[103766,0," causes a"],[103791,3,""],[103792,13,""],[103802,6,""],[103803,4,""],[103803,0,"               co"],[103821,0,"e"],[103823,2,""],[103823,0,"fil"],[103828,4,""],[103828,0,"to"],[103831,0,"b"],[103833,1,""],[103833,0," g"],[103837,0,"erated"],[103844,1,""],[103845,0,"or"],[103848,0,"analy"],[103854,2,""],[103855,1,""],[103855,0,"s"],[103860,0,"#if"],[103864,0,"HAVE_OPENSSL"],[103877,0,"&&"],[103880,0,"NODE_FIPS_MODE\n"],[103901,1,""],[103904,0,"\""],[103907,0,"--enable-fips"],[103934,0,"enable"],[103941,0,"FIPS"],[103946,0,"crypto"],[103953,0,"at"],[103956,0,"startup\\n\"\n#endif"],[103975,0,"//"],[103978,0,"NODE_FIPS_MODE"],[103993,0,"&&"],[103996,0,"NODE_FIPS_MODE\n#if"],[104016,1,""],[104017,1,""],[104017,0,"fined(NODE_HAVE_I18N_SUPPORT)\n         \""],[104058,3,""],[104059,1,""],[104059,0,"--ex"],[104064,1,""],[104065,1,""],[104066,1,""],[104066,0,"imen"],[104071,0,"al-m"],[104076,2,""],[104076,0,"dul"],[104080,0,"s   "],[104085,1,""],[104086,1,""],[104087,0,"xpe"],[104091,0,"i"],[104093,1,""],[104093,0,"e"],[104095,0,"t"],[104098,0," ES Module support"],[104132,3,""],[104133,9,""],[104147,6,""],[104148,2,""],[104149,7,""],[104150,6,""],[104150,0,"         a"],[104161,0,"d"],[104165,0,"chi"],[104169,0,"g"],[104171,1,""],[104171,0,"modul"],[104177,1,""],[104177,0,"s\\n"],[104192,1,""],[104192,0,"  --"],[104197,0,"x"],[104200,0,"riment"],[104207,0,"l-vm-modules  experimen"],[104231,0,"al ES Modul"],[104243,2,""],[104243,0," support"],[104267,1,""],[104293,3,""],[104293,0," "],[104295,2,""],[104295,0,"n"],[104297,1,""],[104297,0,"vm modul"],[104306,1,""],[104306,0,"\\n\"\n#en"],[104314,1,""],[104314,0,"i"],[104316,3,""],[104317,2,""],[104317,0," // "],[104322,0,"ef"],[104326,1,""],[104326,0,"ed"],[104329,2,""],[104329,0,"NODE_HAVE_I18N_SUPPORT)\n#i"],[104356,5,""],[104357,1,""],[104357,0,"HAVE_OPENSSL && NODE_FIPS_MODE"],[104398,0,"  --force-f"],[104410,2,""],[104410,0,"ps               forc"],[104432,0," FIPS c"],[104440,0,"ypto (c"],[104448,1,""],[104448,0,"nno"],[104452,3,""],[104453,3,""],[104453,0,"b"],[104456,0,"d"],[104458,2,""],[104458,0,"s"],[104460,4,""],[104460,0,"bled"],[104470,0,"end"],[104476,0," // "],[104485,1,""],[104485,0,"OPE"],[104490,0,"SL && NODE_FI"],[104504,0,"S_MOD"],[104510,2,""],[104510,0,"\n#if defined(N"],[104525,0,"DE_HAVE_I18N_SUPPO"],[104544,0,"T)"],[104562,4,""],[104563,0,"u-da"],[104568,1,""],[104568,0,"a-dir"],[104574,9,""],[104574,0,"di"],[104577,2,""],[104581,8,""],[104582,2,""],[104582,0,"    "],[104587,1,""],[104588,1,""],[104589,2,""],[104590,0,"ICU data l"],[104601,1,""],[104601,0,"ad"],[104604,0,"pat"],[104608,2,""],[104608,0," "],[104610,2,""],[104611,0," di"],[104615,1,""],[104659,0,"overri"],[104667,0,"s NODE_ICU_DATA)\\n\"\n#if !de"],[104695,0,"ined(NODE_HAVE_SMALL_ICU)\n         \"                             note: linked-in ICU d"],[104782,2,""],[104783,1,""],[104783,0,"a"],[104785,15,""],[104785,0,"is present"],[104799,0,"#endif\n#endif"],[104814,0,"//"],[104817,0,"defined(NODE_HAVE_I18N_SUPPORT)\n#if"],[104853,0,"HAVE_INSPECTOR\n    "],[105173,7,""],[105187,0,"i"],[105189,0,"spect[=[h"],[105199,3,""],[105199,0,"st:]"],[105204,0,"o"],[105206,1,""],[105206,0,"t]    a"],[105214,0,"tiv"],[105219,0,"e "],[105222,0,"nspector on host:p"],[105241,0,"rt\\"],[105245,0,"\"\n         \"                 "],[105285,7,""],[105286,0,"("],[105289,4,""],[105289,0,"f"],[105291,0,"ul"],[105294,3,""],[105294,0,":"],[105296,8,""],[105296,0,"127.0.0.1:9229)"],[105315,0,"#endif  // HAVE_INSPECTOR\n"],[105355,2,""],[105355,0,"n"],[105357,1,""],[105357,0,"pi-modul"],[105366,0,"s             load N"],[105387,0,"API mo"],[105394,0,"ul"],[105397,0,"s (no-op - o"],[105410,4,""],[105414,0,"\\n\"\n         \"             "],[105449,4,""],[105450,5,""],[105451,6,""],[105452,2,""],[105453,1,""],[105453,0,"    k"],[105460,0,"t fo"],[105465,1,""],[105465,0," "],[105467,0,"omp"],[105473,3,""],[105473,0,"bility)"],[105498,3,""],[105498,0,"n"],[105500,1,""],[105520,5,""],[105521,2,""],[105522,0," sil"],[105527,1,""],[105527,0,"n"],[105530,5,""],[105531,3,""],[105542,0," warning"],[105569,2,""],[105570,4,""],[105570,0,"o"],[105572,3,""],[105572,0,"fo"],[105575,0,"c"],[105577,0,"-asyn"],[105583,3,""],[105583,0,"-ho"],[105587,0,"ks-checks\\"],[105598,0,"\"\n         \"                      "],[105638,4,""],[105639,3,""],[105641,2,""],[105641,0,"sable"],[105647,4,""],[105647,0,"ch"],[105651,3,""],[105651,0,"ks f"],[105656,1,""],[105656,0,"r"],[105658,1,""],[105659,1,""],[105659,0,"sy"],[105662,3,""],[105662,0,"c_hook"],[105744,0,"#if HAVE_OPENSSL\n"],[105775,0,"ope"],[105779,3,""],[105779,0,"ssl"],[105783,1,""],[105783,0,"c"],[105785,2,""],[105785,0,"nfig=fi"],[105794,8,""],[105805,11,""],[105805,0,"Op"],[105808,3,""],[105809,4,""],[105809,0,"SSL"],[105813,2,""],[105813,0,"c"],[105815,1,""],[105815,0,"nfigura"],[105826,0," from the"],[105878,2,""],[105878,0,"s"],[105880,6,""],[105880,0,"e"],[105882,5,""],[105883,1,""],[105883,0,"fied f"],[105891,0,"e (overr"],[105900,3,""],[105900,0,"des"],[105919,33,""],[105928,1,""],[105946,0,"OPENSSL_CONF)\\n\"\n#endif"],[105971,0,"//"],[105974,0,"HAVE_OPENSSL\n"],[105995,5,""],[105995,0," \"  --pend"],[106008,1,""],[106008,0,"-deprecat"],[106018,0,"o"],[106020,5,""],[106021,2,""],[106022,0,"    "],[106027,1,""],[106027,0,"m"],[106030,0," pend"],[106039,0,"depre"],[106046,4,""],[106046,0,"tion"],[106051,0,"w"],[106053,0,"rnings"],[106063,0,"#if defined(NODE_HAVE_I18N_SUPPORT)\n"],[106111,0,"--preserve-symlinks"],[106138,0,"preserve"],[106147,0,"symbolic"],[106156,0,"links"],[106162,0,"when"],[106167,0,"resolving\\n\"\n#endif\n     "],[106196,0,"\"  --prof-process  "],[106226,2,""],[106226,0,"p"],[106228,0,"oc"],[106231,0,"ss v8"],[106237,0,"pro"],[106244,0,"r"],[106246,0,"outpu"],[106252,1,""],[106253,3,""],[106262,13,""],[106278,16,""],[106289,4,""],[106290,5,""],[106291,6,""],[106292,2,""],[106293,7,""],[106294,4,""],[106294,0,"           us"],[106310,1,""],[106310,0," --prof"],[106501,0,"h"],[106503,3,""],[106503,0,"ow"],[106506,3,""],[106506,0,"depre"],[106512,1,""],[106512,0,"at"],[106516,4,""],[106516,0,"n"],[106525,1,""],[106525,0,"t"],[106527,0,"r"],[106531,2,""],[106532,2,""],[106532,0,"n"],[106534,3,""],[106534,0,"ex"],[106538,0,"ption"],[106544,3,""],[106544,0,"o"],[106547,2,""],[106547,0,"depr"],[106552,1,""],[106552,0,"cati"],[106557,2,""],[106557,0,"n"],[106559,1,""],[106559,0,"\\"],[106561,1,""],[106561,0,"\"\n#if"],[106567,1,""],[106567,0,"HAVE_"],[106573,3,""],[106573,0,"PENSSL"],[106592,0,"--tls-cipher-list=val"],[106619,22,""],[106619,0,"u"],[106621,7,""],[106622,1,""],[106624,1,""],[106624,0,"n al"],[106631,1,""],[106631,0,"na"],[106634,1,""],[106634,0,"iv"],[106638,0,"de"],[106641,3,""],[106641,0,"aul"],[106646,2,""],[106646,0,"TLS "],[106651,3,""],[106651,0,"ipher "],[106669,23,""],[106669,0,"li"],[106672,7,""],[106672,0,"t"],[106677,39,""],[106677,0,"#en"],[106682,5,""],[106682,0,"f"],[106684,6,""],[106685,3,""],[106685,0,"//"],[106688,5,""],[106688,0,"HAVE"],[106693,8,""],[106693,0,"OPENSSL"],[106721,0,"d"],[106723,1,""],[106723,0,"pr"],[106726,1,""],[106726,0,"ca"],[106729,3,""],[106729,0,"io"],[106732,5,""],[106737,0,"   show s"],[106747,1,""],[106756,0,"s on"],[106761,0,"d"],[106763,1,""],[106763,0,"pr"],[106766,0,"catio"],[106772,1,""],[107241,3,""],[107242,2,""],[107243,3,""],[107244,1,""],[107244,0,"ven"],[107249,2,""],[107249,0,"-enabled"],[107268,10,""],[107269,1,""],[107269,0,"r"],[107271,3,""],[107272,6,""],[107272,0,"e"],[107274,5,""],[107275,16,""],[107275,0,"ve"],[107278,5,""],[107298,6,""],[107298,0,"t"],[107300,1,""],[107300,0,"a"],[107303,0,"-"],[107305,2,""],[107305,0,"ync-io"],[107323,6,""],[107324,6,""],[107324,0,"h"],[107326,5,""],[107326,0,"w"],[107328,2,""],[107328,0,"s"],[107330,3,""],[107330,0,"ack"],[107334,4,""],[107334,0,"t"],[107337,1,""],[107337,0,"ce wh"],[107343,2,""],[107344,35,""],[107345,5,""],[107347,3,""],[107347,0,"e"],[107349,4,""],[107351,7,""],[107352,26,""],[107353,20,""],[107354,15,""],[107355,21,""],[107356,4,""],[107356,0," IO"],[107402,6,""],[107402,0,"is"],[107405,2,""],[107406,0,"etected"],[107414,7,""],[107414,0,"a"],[107416,0,"t"],[107420,0,"the f"],[107426,1,""],[107426,0,"r"],[107429,2,""],[107429,0," ti"],[107433,2,""],[107433,0,"k"],[107452,5,""],[107453,0,"race-warn"],[107463,1,""],[107464,0,"g"],[107477,0,"show"],[107482,0,"stack"],[107488,6,""],[107489,4,""],[107489,0,"ra"],[107492,0,"es "],[107496,3,""],[107497,1,""],[107498,3,""],[107498,0,"proc"],[107503,0,"ss"],[107506,3,""],[107506,0,"warn"],[107511,1,""],[107512,0,"g"],[107532,7,""],[107532,0,"track"],[107538,27,""],[107539,1,""],[107541,2,""],[107542,1,""],[107542,0,"-"],[107544,5,""],[107544,0,"bj"],[107547,21,""],[107547,0,"cts"],[107555,5,""],[107557,2,""],[107558,3,""],[107558,0,"ra"],[107561,2,""],[107561,0,"k "],[107565,8,""],[107566,3,""],[107566,0,"p"],[107568,5,""],[107568,0,"obj"],[107572,3,""],[107572,0,"ct"],[107577,4,""],[107577,0,"loc"],[107583,2,""],[107583,0,"ons"],[107587,2,""],[107588,8,""],[107588,0,"or"],[107591,3,""],[107593,1,""],[107593,0,"ap"],[107608,2,""],[107609,0,"napsho"],[107616,0,"s"],[107621,0,"#if"],[107625,0,"HAVE_OPENSSL\n "],[107917,0,"#endif  // HAVE_OPENSSL\n"],[107954,19,""],[107969,6,""],[107969,0,"v8"],[107972,1,""],[107972,0,"opt"],[107976,1,""],[107976,0,"on"],[107993,1,""],[107993,0," pri"],[107998,0,"t v8 comm"],[108008,1,""],[108008,0,"nd "],[108012,0,"in"],[108016,8,""],[108016,0,"o"],[108019,0,"i"],[108021,4,""],[108021,0,"n"],[108023,6,""],[108041,1,""],[108041,0,"v8-p"],[108046,3,""],[108046,0,"ol"],[108049,3,""],[108050,4,""],[108050,0,"ize=num"],[108066,0,"set"],[108070,0,"v8's"],[108075,2,""],[108075,0,"th"],[108078,1,""],[108079,5,""],[108079,0,"ad"],[108082,3,""],[108083,1,""],[108084,6,""],[108085,4,""],[108085,0,"l"],[108087,1,""],[108087,0,"s"],[108089,4,""],[108089,0,"z"],[108091,2,""],[108095,6,""],[108097,2,""],[108098,14,""],[108099,6,""],[108104,1,""],[108109,2,""],[108109,0,"z"],[108111,3,""],[108111,0,"ro-fil"],[108119,3,""],[108119,0,"bu"],[108122,3,""],[108123,2,""],[108124,0,"rs  "],[108134,1,""],[108134,0,"aut"],[108138,0,"m"],[108140,1,""],[108140,0,"tically"],[108148,2,""],[108148,0,"z"],[108150,6,""],[108150,0,"r"],[108152,1,""],[108152,0,"-"],[108155,3,""],[108155,0,"ll "],[108159,3,""],[108159,0,"ll "],[108163,0,"ewly \"\n "],[108172,2,""],[108172,0,"       \"all"],[108184,2,""],[108184,0,"ca"],[108187,1,""],[108188,0,"d"],[108232,5,""],[108232,0,"Buf"],[108236,1,""],[108237,0,"r an"],[108243,2,""],[108243,0,"S"],[108245,3,""],[108246,1,""],[108246,0,"wBuff"],[108253,1,""],[108253,0," "],[108255,1,""],[108255,0,"nstanc"],[108279,0,"-c,"],[108283,10,""],[108283,0,"--check"],[108306,14,""],[108306,0,"sy"],[108309,3,""],[108309,0,"tax ch"],[108316,7,""],[108316,0,"ck"],[108319,12,""],[108319,0,"script"],[108326,4,""],[108326,0,"w"],[108328,1,""],[108328,0,"thout"],[108334,1,""],[108335,1,""],[108335,0,"xecut"],[108342,26,""],[108342,0,"g\\n\""],[108360,0,"e, "],[108364,3,""],[108365,3,""],[108365,0,"ev"],[108368,3,""],[108368,0,"l sc"],[108373,2,""],[108374,1,""],[108374,0,"pt"],[108385,3,""],[108386,7,""],[108386,0,"ev"],[108389,1,""],[108390,5,""],[108390,0,"u"],[108393,1,""],[108393,0,"e"],[108395,5,""],[108395,0,"sc"],[108398,0,"ipt"],[108417,0,"-h,"],[108421,0,"--help"],[108444,0,"print"],[108450,0,"node"],[108455,0,"command line options\\n\"\n"],[108486,3,""],[108486,0,"  \"  -i, --int"],[108502,1,""],[108502,0,"act"],[108506,1,""],[108506,0,"v"],[108508,0,"          alway"],[108525,3,""],[108525,0,"enter the R"],[108537,11,""],[108537,0,"PL eve"],[108544,3,""],[108544,0," "],[108548,1,""],[108548,0,"st"],[108551,2,""],[108553,23,""],[108553,0,"\\n\""],[108596,1,""],[108596,0,"d"],[108598,1,""],[108599,1,""],[108599,0,"s"],[108601,8,""],[108602,4,""],[108602,0,"ot"],[108605,1,""],[108606,1,""],[108606,0,"ppe"],[108610,0,"r"],[108612,2,""],[108612,0,"to"],[108615,2,""],[108615,0,"b"],[108617,1,""],[108617,0," a t"],[108622,0,"rmi"],[108626,1,""],[108626,0,"al"],[108632,7,""],[108645,0,"p, -"],[108652,11,""],[108654,9,""],[108654,0,"t"],[108656,8,""],[108657,8,""],[108658,5,""],[108659,4,""],[108660,13,""],[108669,1,""],[108671,2,""],[108672,2,""],[108672,0,"valuat"],[108679,0," sc"],[108684,3,""],[108684,0,"p"],[108686,0," "],[108688,4,""],[108688,0,"n"],[108690,8,""],[108691,2,""],[108692,1,""],[108694,2,""],[108696,5,""],[108697,5,""],[108697,0,"r"],[108699,1,""],[108701,4,""],[108701,0,"l"],[108719,0,"-r,"],[108723,0,"--require"],[108746,24,""],[108752,6,""],[108753,9,""],[108753,0,"to"],[108756,4,""],[108757,1,""],[108758,2,""],[108759,3,""],[108760,5,""],[108761,0,"a"],[108763,5,""],[108764,2,""],[108764,0,"(o"],[108767,2,""],[108767,0,"t"],[108769,2,""],[108769,0,"o"],[108771,3,""],[108772,2,""],[108772,0,"can"],[108776,5,""],[108776,0,"b"],[108779,9,""],[108791,0,"repeated)\\n\"\n"],[108813,0,"\""],[108816,0,"-v,"],[108820,0,"--version"],[108843,3,""],[108843,0,"pr"],[108847,0,"t"],[108849,4,""],[108849,0,"N"],[108852,2,""],[108853,0,".js version"],[108868,6,""],[109512,0,"  // defined(NODE_HAVE_I18N_SUPPORT)"],[109820,0,"  // !defined(NODE_WITHOUT_NODE_OPTIONS)"],[110247,0,"#if"],[110251,0,"defined(NODE_HAVE_I18N_SUPPORT)\n "],[110298,0,"P"],[110301,1,""],[110301,0,"SERVE_SYM"],[110311,2,""],[110312,0,"NK"],[110315,4,""],[110322,7,""],[110322,0,"se"],[110325,1,""],[110329,0,"1 "],[110332,2,""],[110332,0,"o"],[110335,1,""],[110336,2,""],[110336,0,"e"],[110338,1,""],[110339,2,""],[110339,0,"rve"],[110343,4,""],[110343,0,"symbolic"],[110352,1,""],[110352,0,"l"],[110354,0,"nk"],[110357,4,""],[110400,1,""],[110400,0,"when resolv"],[110412,0,"ng and caching modu"],[110433,0,"s"],[110438,0,"#endif\n"],[110580,0,"NODE_REPL_HISTORY            path to the persistent REPL history\\n\"\n         \"                             file\\n\"\n         \""],[111705,1,""],[111706,4,""],[111706,0,"nabl"],[111711,4,""],[111712,1,""],[111712,0,"fips"],[111726,0,"exper"],[111732,0,"me"],[111735,2,""],[111735,0,"tal-modul"],[111745,2,""],[111745,0,"s"],[111756,3,""],[111756,0,"ex"],[111760,1,""],[111760,0,"rimen"],[111766,0,"al"],[111769,3,""],[111769,0,"vm-modules"],[111789,2,""],[111789,0,"expo"],[111794,0,"e-htt"],[111800,0,"2\",   // ke"],[111812,2,""],[111812,0,"p as a non"],[111823,0,"o"],[111825,0," thr"],[111830,4,""],[111830,0,"ugh v9.x"],[111846,1,""],[111846,0,"f"],[111848,4,""],[111849,1,""],[111850,2,""],[111850,0,"e-f"],[111854,2,""],[111854,0,"ps"],[111866,3,""],[111866,0,"i"],[111868,1,""],[111868,0,"u"],[111871,5,""],[111873,0,"a-d"],[111877,2,""],[111877,0,"r"],[111888,8,""],[111888,0,"ins"],[111892,1,""],[111894,1,""],[111895,3,""],[111905,0,"ins"],[111910,2,""],[111910,0,"ct-brk\",\n    \"--"],[111928,4,""],[111928,0,"s"],[111930,1,""],[111932,1,""],[111933,1,""],[111933,0,"-p"],[111936,1,""],[111936,0,"rt"],[111948,1,""],[111948,0,"l"],[111950,2,""],[111951,0,"de"],[111954,5,""],[111986,0,"no-d"],[111991,1,""],[111992,2,""],[111992,0,"r"],[111994,2,""],[111994,0,"ca"],[111997,3,""],[111997,0,"ion"],[112002,0,"\n"],[112006,2,""],[112007,2,""],[112007,0,"\"--no-forc"],[112018,2,""],[112018,0,"-"],[112021,3,""],[112021,0,"y"],[112023,2,""],[112023,0,"c"],[112025,0,"h"],[112027,5,""],[112028,2,""],[112028,0,"ks-c"],[112033,5,""],[112033,0,"ecks\","],[112047,4,""],[112047,0,"no-wa"],[112053,0,"n"],[112055,2,""],[112056,10,""],[112056,0,"g"],[112068,2,""],[112068,0,"o"],[112071,4,""],[112072,2,""],[112072,0,"ss"],[112076,4,""],[112076,0,"c"],[112078,5,""],[112078,0,"nfig"],[112092,3,""],[112092,0,"pen"],[112096,0,"ing-d"],[112102,0,"p"],[112104,0,"ecation"],[112121,1,""],[112122,2,""],[112123,0,"direct"],[112150,1,""],[112150,0,"qu"],[112155,11,""],[112166,0,"hrow-dep"],[112175,2,""],[112176,4,""],[112177,1,""],[112177,0,"at"],[112181,0,"n"],[112190,1,""],[112191,2,""],[112192,16,""],[112192,0,"tl"],[112197,0,"ip"],[112201,2,""],[112201,0,"r-li"],[112206,0,"t"],[112223,0,"d"],[112225,1,""],[112225,0,"pr"],[112228,1,""],[112228,0,"ca"],[112231,3,""],[112231,0,"io"],[112234,5,""],[112314,3,""],[112315,2,""],[112316,3,""],[112317,1,""],[112317,0,"ven"],[112322,0,"-enabled"],[112340,2,""],[112340,0,"t"],[112342,6,""],[112342,0,"ace"],[112346,6,""],[112347,0,"ync-io"],[112363,7,""],[112363,0,"trace"],[112369,1,""],[112369,0,"warn"],[112374,2,""],[112374,0,"ngs"],[112388,2,""],[112388,0,"rack"],[112393,3,""],[112395,1,""],[112395,0,"ap"],[112398,2,""],[112398,0,"object"],[112405,1,""],[112463,4,""],[112463,0,"v8-poo"],[112470,1,""],[112471,1,""],[112471,0,"s"],[112473,2,""],[112473,0,"ze"],[112485,4,""],[112485,0,"z"],[112487,0,"ro"],[112492,10,""],[112492,0,"ll"],[112495,3,""],[112495,0,"buff"],[112500,2,""],[112500,0,"r"],[112502,8,""],[112510,1,""],[112511,11,""],[112584,25,""],[112585,19,""],[112649,0,"perf_basic_prof\",\n    \"--perf_prof\",\n    \"--"]],"_dtSpan":[672979,677943]},{"parents":[737],"numChildren":1,"agent":60,"time":"1970-01-01T00:00:00Z","patches":[[88451,0,"  READONLY_PROPERTY(release, \"majorVersion\",\n      Integer::New(env->isolate(), NODE_MAJOR_VERSION));\n  READONLY_PROPERTY(release, \"minorVersion\",\n      Integer::New(env->isolate(), NODE_MINOR_VERSION));\n  READONLY_PROPERTY(release, \"patchVersion\",\n      Integer::New(env->isolate(), NODE_PATCH_VERSION));\n  std::string node_tag(NODE_TAG);\n  READONLY_PROPERTY(release, \"prereleaseTag\",\n      OneByteString(env->isolate(), node_tag.size() > 0 ?\n          node_tag.substr(1).c_str() : \"\"));\n\n"]],"_dtSpan":[677943,678433]},{"parents":[738],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[5272,24,""],[5273,6,""],[5274,5,""],[8003,24,""],[8004,1,""],[8008,1,""],[8012,1,""],[8074,1,""],[8078,1,""],[8174,1,""],[8178,1,""],[8213,1,""],[8217,1,""],[8291,197,""],[8292,15,""],[8293,35,""],[8315,2,""],[8319,4,""],[9203,2,""],[9203,0,"En"],[9206,2,""],[9206,0,"ble"],[9305,0,"tracing::Agent* GetTracingAgent() const {\n    return tracing_agent_.get();\n  }\n\n  "],[9935,0,"if (!trace_enabled_categories.empty()) {\n      "],[10064,0,"  "],[10109,0,"  }\n  "],[10149,0,"tracing::Agent* GetTracingAgent() const { return nullptr; }\n\n  "],[54694,23,""],[54695,1,""],[54697,1,""],[54728,4,""],[97880,25,""],[97911,4,""],[117605,0,"if ("],[117622,0,"_categories.empty())\n      "],[117650,1,""],[117653,1,""],[117653,0,"ace_"],[117658,0,"nabled_categories = \"v8,node,node.async_hooks\""],[137836,0,",\n                             v8_platform.GetTracingAgent()"],[139397,0,", v8_platform.GetTracingAgent()"],[143992,87,""],[143993,2,""],[143994,23,""],[143995,25,""],[143996,5,""],[143997,1,""],[143999,1,""],[144031,4,""],[144226,25,""],[144257,4,""]],"_dtSpan":[678433,679372]},{"parents":[739],"numChildren":1,"agent":162,"time":"1970-01-01T00:00:00Z","patches":[[6968,0,"experimenta"],[6980,0,"-repl-await is used.\n// Used in node_config.cc to set a c"],[7038,0,"nst"],[7042,0,"nt on process.bin"],[7060,0,"ing('config')\n// that is us"],[7088,0,"d by lib/"],[7098,0,"epl.js.\nbool"],[7111,0,"conf"],[7116,0,"g_experimental_repl_await = false;\n\n// Set in node.cc by ParseArgs when --loader i"],[104716,0,"#endif  // defined(NODE_HAVE_I18N_SUPPORT)\n         \"  --experimental-repl-await  experimental await keyword support\\n\"\n         \"                             in REPL\\n\"\n#if defined(NODE_HAVE_I18N_SUPPORT)\n"],[112509,0,"repl-await\",\n    \"--experimental-"],[119576,0,"else if (strcmp(arg, \"--experimental-repl-await\") == 0) {\n      config_experimental_repl_await = true;\n    } "]],"_dtSpan":[679372,679942]},{"parents":[740],"numChildren":1,"agent":130,"time":"1970-01-01T00:00:00Z","patches":[[88524,490,""]],"_dtSpan":[679942,680432]},{"parents":[741],"numChildren":1,"agent":54,"time":"1970-01-01T00:00:00Z","patches":[[64127,0,"// Even if the module did self-register, it may have done so with the wrong\n    // version. We must only give up after having checked to see if it has an\n    // appropriate initializer callback.\n    if (auto callback = GetInitializerCallback(&dlib)) {\n      callback(exports, module, context);\n      return;\n    }\n    "]],"_dtSpan":[680432,680750]},{"parents":[742],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[2419,0,"#include <time.h>  // tzset(), _tzset()\n"],[3741,0,"Date;\nusing v8::"],[77177,0,"  if (key.length() == 2 && key[0] == 'T' && key[1] == 'Z') {\n    tzset();\n    Date::DateTimeConfigurationChangeNotification(info.GetIsolate());\n  }\n"],[77664,0,"  if (key.length() == 2 && key[0] == L'T' && key[1] == L'Z') {\n    _tzset();\n    Date::DateTimeConfigurationChangeNotification(info.GetIsolate());\n  }\n"]],"_dtSpan":[680750,681105]},{"parents":[743],"numChildren":1,"agent":54,"time":"1970-01-01T00:00:00Z","patches":[[61932,0,"inline napi_addon_register_func GetNapiInitializerCallback(DLib* dlib) {\n  const char* name =\n      STRINGIFY(NAPI_MODULE_INITIALIZER_BASE) STRINGIFY(NAPI_MODULE_VERSION);\n  return\n      reinterpret_cast<napi_addon_register_func>(dlib->GetSymbolAddress(name));\n}\n\n"],[64233,0,"if (auto napi_callback = GetNapiInitializerCallback(&dlib)) {\n      napi_module_register_by_symbol(exports, module, context, napi_callback);\n    } else "]],"_dtSpan":[681105,681521]},{"parents":[744],"numChildren":1,"agent":133,"time":"1970-01-01T00:00:00Z","patches":[[2419,40,""],[3701,16,""],[77532,45,""],[77533,7,""],[77534,22,""],[77537,74,""],[77867,19,""],[77868,132,""]],"_dtSpan":[681521,681876]},{"parents":[745],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[4362,0,";\nusing v8::Uint32"],[44944,1,""],[44945,2,""],[44946,0,"CHECK_EQ"],[44968,3,""],[44968,0,","],[44971,0,");\n"],[44975,2,""],[44976,1,""],[44976,0,"CHECK("],[45002,50,""],[45003,5,""],[45904,52,""],[45921,3,""],[45921,0,"CHECK_EQ"],[45943,2,""],[45943,0,","],[45946,0,");\n"],[45950,0," CHECK(args[0]->IsUndefined() "],[45995,0,"i"],[45997,0,"t32());\n\n  if (args[0]->IsUn"],[46091,35,""],[46092,105,""],[46117,4,""],[46118,37,""],[46127,2,""],[46127,0,".As<"],[46137,5,""],[46137,0,">"],[46140,59,""],[46142,44,""],[46142,0,"V"],[46145,134,""],[46146,3,""],[46147,18,""],[46148,22,""],[46150,10,""],[46155,4,""],[46156,52,""],[48985,2,""],[48985,0,"CHECK_EQ(args.Length(),"],[49009,0,"1);\n  CHECK"],[49021,1,""],[49041,2,""],[49041,0,"||"],[49044,1,""],[49064,81,""],[49065,4,""],[49154,1,""],[49154,0,"// T"],[49159,0,"lls JS "],[49167,3,""],[49167,0,"o"],[49169,6,""],[49169,0,"t"],[49174,0," "],[49176,3,""],[49176,0,"RR_INVALID_CREDENTIAL\n    a"],[49204,2,""],[49204,0,"g"],[49206,0,".GetR"],[49213,5,""],[49213,0,"u"],[49215,1,""],[49215,0,"nVal"],[49220,7,""],[49221,6,""],[49221,0,"().S"],[49226,3,""],[49227,1,""],[49227,0,"(1"],[49235,2,""],[49236,0,"else"],[49260,1,""],[49263,6,""],[49310,0," else {"],[49318,0,"    args.GetReturnValue().Set(0);\n  }\n"],[49478,2,""],[49478,0,"CHECK_EQ(args.Length(), 1);\n "],[49508,0,"CHECK"],[49514,1,""],[49534,2,""],[49534,0,"||"],[49537,1,""],[49555,1,""],[49556,79,""],[49558,4,""],[49647,1,""],[49647,0,"// T"],[49652,0,"lls JS "],[49660,3,""],[49660,0,"o"],[49662,6,""],[49662,0,"t"],[49667,0," ERR_INVALID_CR"],[49683,3,""],[49683,0,"DENTIAL\n    a"],[49697,2,""],[49697,0,"g"],[49699,0,".G"],[49703,0,"R"],[49705,5,""],[49705,0,"tu"],[49708,1,""],[49708,0,"nVal"],[49713,7,""],[49714,6,""],[49714,0,"().S"],[49719,3,""],[49720,1,""],[49720,0,"(1"],[49728,2,""],[49729,0,"else"],[49754,1,""],[49757,6,""],[49805,0," else {\n    args.GetReturnValue().Set(0);\n  }"],[49972,2,""],[49972,0,"CHECK_EQ(args.Length(), 1);\n "],[50002,0,"CHECK"],[50008,1,""],[50028,2,""],[50028,0,"||"],[50031,1,""],[50051,81,""],[50052,4,""],[50141,1,""],[50141,0,"// T"],[50146,0,"lls JS "],[50154,3,""],[50154,0,"o"],[50156,6,""],[50156,0,"t"],[50161,0," "],[50163,3,""],[50163,0,"RR_INVALID_CREDENTIAL\n    a"],[50191,2,""],[50191,0,"g"],[50193,0,".G"],[50197,0,"Ret"],[50201,3,""],[50201,0,"rnVal"],[50207,1,""],[50208,7,""],[50208,0,"().S"],[50213,4,""],[50214,7,""],[50214,0,"(1"],[50222,2,""],[50223,0,"else"],[50247,1,""],[50250,6,""],[50297,0," else {\n    args.GetReturnValue().Set(0);\n  }"],[50465,2,""],[50465,0,"CHECK_EQ(args.Length(), 1);\n "],[50495,0,"CHECK"],[50501,1,""],[50521,2,""],[50521,0,"||"],[50524,1,""],[50544,80,""],[50545,4,""],[50634,1,""],[50634,0,"// T"],[50639,0,"lls JS "],[50647,3,""],[50647,0,"o"],[50649,6,""],[50649,0,"t"],[50654,0," ERR_INVALID_CR"],[50670,3,""],[50670,0,"DENTIAL\n    a"],[50684,2,""],[50684,0,"g"],[50686,0,".G"],[50690,0,"R"],[50692,4,""],[50692,0,"t"],[50694,2,""],[50695,9,""],[50696,3,""],[50696,0,"Value().S"],[50706,3,""],[50707,1,""],[50707,0,"(1"],[50715,2,""],[50716,0,"else"],[50741,1,""],[50744,6,""],[50792,0," else {\n    args.GetReturnValue().Set(0);\n  }"],[51834,1,""],[51835,2,""],[51836,0,"CHECK_EQ"],[51845,1,""],[51848,7,""],[51849,5,""],[51849,0,".Length"],[51858,0,", 1"],[51862,2,""],[51862,0,";"],[51866,23,""],[51866,0,"CH"],[51869,4,""],[51869,0,"CK"],[51872,1,""],[51875,10,""],[51876,9,""],[51876,0,"[0]->IsA"],[51888,1,""],[51888,0,"()"],[51893,3,""],[51894,1,""],[52185,1,""],[52185,0,"// T"],[52190,0,"lls JS "],[52198,3,""],[52198,0,"o"],[52200,6,""],[52200,0,"t"],[52205,0," ERR_INVALID_CR"],[52221,3,""],[52221,0,"DENTIAL\n      a"],[52237,2,""],[52238,2,""],[52238,0,"s.GetRet"],[52247,2,""],[52247,0,"r"],[52249,0,"V"],[52251,1,""],[52251,0,"lue().S"],[52259,1,""],[52259,0,"t(static_cast<ui"],[52276,1,""],[52277,0,"32_t>(i + 1));\n     "],[52298,2,""],[52298,0,"ret"],[52302,0,"r"],[52304,3,""],[52474,0,"\n  args.GetReturnValue().Set(0);\n"],[52632,2,""],[52632,0,"CHECK_EQ(args.Length(), 2);\n "],[52662,0,"CHECK"],[52668,1,""],[52688,2,""],[52688,0,"||"],[52691,1,""],[52710,76,""],[52712,5,""],[52715,3,""],[52715,0,"CHECK"],[52721,1,""],[52741,2,""],[52741,0,"||"],[52744,1,""],[52762,1,""],[52763,75,""],[52765,4,""],[53055,1,""],[53055,0,"// T"],[53060,0,"lls JS "],[53068,3,""],[53068,0,"o"],[53070,6,""],[53070,0,"t"],[53075,0," "],[53077,1,""],[53077,0,"RR_INVALID_CREDENTIAL\n    "],[53104,1,""],[53104,0,"etu"],[53108,3,""],[53109,3,""],[53109,0," a"],[53112,3,""],[53112,0,"g"],[53114,3,""],[53114,0,".GetR"],[53120,4,""],[53121,3,""],[53122,0,"r"],[53124,2,""],[53124,0,"Value("],[53131,0,".Set(1)"],[53279,1,""],[53279,0,"// T"],[53284,0,"lls JS "],[53292,3,""],[53292,0,"o"],[53294,6,""],[53294,0,"t"],[53299,0," ERR_INVALID_CR"],[53315,0,"DENTIAL\n    "],[53328,0,"etu"],[53332,5,""],[53333,3,""],[53333,0," a"],[53336,3,""],[53336,0,"g"],[53338,1,""],[53338,0,".G"],[53341,1,""],[53342,0,"Retu"],[53347,0,"nV"],[53350,4,""],[53350,0,"l"],[53352,4,""],[53352,0,"e().Se"],[53359,7,""],[53359,0,"(2"],[53526,0,"\n  args.GetReturnValue().Set(0);\n"]],"_dtSpan":[681876,684474]},{"parents":[746],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[53744,5,""],[53744,0,"H"],[53746,0,"sConnec"],[53755,0,"dSessions"],[53766,11,""]],"_dtSpan":[684474,684507]},{"parents":[747],"numChildren":1,"agent":133,"time":"1970-01-01T00:00:00Z","patches":[[66702,21,""],[66755,1,""],[66755,0,"F"],[66939,8,""],[66939,0,"("],[66941,0,")"],[66947,6,""],[66948,1,""],[66949,7,""],[66949,0,"ls"],[66953,6,""],[67112,1,""],[67112,0,"T"],[67320,1,""],[67320,0,"T"],[67427,8,""],[67427,0,"("],[67429,0,")"],[67437,4,""],[67438,13,""],[67439,11,""],[67443,2,""],[67443,0,"if"],[67446,0,"("],[67455,8,""],[67455,0,"IsF"],[67460,1,""],[67460,0,"s"],[67522,8,""],[67522,0,"("],[67524,0,")"],[67532,45,""]],"_dtSpan":[684507,684677]},{"parents":[748],"numChildren":1,"agent":5,"time":"1970-01-01T00:00:00Z","patches":[[138277,0,"GetMainThreadMultiIsolatePlatform() {\n  return v8_platform.Platform();\n}\n\n\nMultiIsolatePlatform* "]],"_dtSpan":[684677,684774]},{"parents":[749],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[4492,0,"Mutex process_mutex;\nstatic Mutex environ_mutex;\n\nstatic "],[17970,0,"{\n    Mutex::ScopedLock lock(env"],[18003,0,"ron_mutex);\n    i"],[18062,0,"  "],[18083,0,"  "],[18100,0,"  }\n  "],[38764,0,"Mutex::ScopedLock lock(process_mutex);\n    "],[74928,1,""],[74929,2,""],[74930,12,""],[74931,30,""],[75196,0,"  Mutex::ScopedLock lock(environ_mutex);\n"],[76924,0,"\n  Mutex::ScopedLock lock(environ_mutex);\n"],[77658,0,"Mutex::ScopedLock lock(env"],[77685,0,"ro"],[77688,0,"_mu"],[77692,0,"ex);\n  int"],[78626,0,"Mutex::ScopedLock lock(environ_mutex);\n  "],[79440,0,"  Mutex::ScopedLock lock(environ_mutex);\n"],[83169,0,"Mutex::ScopedLock lock(process_mutex);\n  "],[83647,0,"Mutex::ScopedLock lock(process_mutex);\n  "],[9571,0,"if (tracing_agent_)\n      "],[23721,0,"void AddEnvironmentCleanupHook(v8::Isolate* isolate,\n                               void (*fun)(void* arg),\n                               void* arg) {\n  Environment* env = Environment::Get"],[23911,0,"urrent(isol"],[23923,0,"te);\n  env->AddC"],[23940,0,"eanupHook(fun, arg);\n}\n\n\nvoid RemoveEnvironmentC"],[23989,0,"eanupHook(v8::Isolate* isolate,\n                                  void (*fun)(void* arg),\n                                  void* arg) {\n  Environment* env = Environment::GetCurrent(isolate);\n  env->RemoveCleanupHook(fun, arg);\n}\n\n\nCall"],[139147,0,"Run"],[139157,7,""],[142040,0,"\n  env.RunCleanup();\n"],[142043,0,"WaitForInspectorDisconnect(&env);\n\n  "],[142190,36,""],[25475,0,"if (!env->can_call_into_js()) {\n    failed_ = true;\n    return;\n  }\n\n  "],[26665,0,"env_->can_call_in"],[26683,0,"o_js()) return;\n  if (!t"],[27219,0,"!env_->can_call_into_js()) return;\n\n  if ("],[142238,0,"set_can_call_into_js(false);\n  env."]],"_dtSpan":[684774,686085]},{"parents":[750],"numChildren":1,"agent":37,"time":"1970-01-01T00:00:00Z","patches":[[6607,0,"preserve-symlinks-main is used.\n// Used in node_config.cc to set a constant on process.binding('config')\n// that is used by lib/module.js\nbool config_pres"],[6762,0,"rve_symlinks_main = false;\n\n// Set in node.cc by ParseArgs when --e"],[107842,0,"         \"  --preserve-symlinks-main   preserve symbolic links when resolving\\n\"\n         \"                             the main module\\n\"\n"],[110669,1,""],[120281,0,"pres"],[120286,0,"rve-symlinks-main\") == 0) {\n      config_preserve_symlinks_main = true;\n    } else if (strcmp(arg, \"--e"],[134377,0,"{\n    std::string text;\n    config_preserve_symlinks_main =\n        SafeGetenv(\"NODE_PRESERVE_SYMLINKS_MAIN\", &text) && text[0] == '1';\n  }\n\n  "]],"_dtSpan":[686085,686696]},{"parents":[751],"numChildren":1,"agent":190,"time":"1970-01-01T00:00:00Z","patches":[[138859,0,"ArrayBufferAllocator* CreateArrayBufferAllocator() {\n  return new ArrayBufferAllocator();\n}\n\n\nvoid FreeArrayBufferAllocator(ArrayBufferAllocator* allocator) {\n  delete allocator;\n}\n\n\n"],[139163,0,"\n"],[139332,0,"IsolateData* CreateIsolateData(\n    Isolate* isolate,\n    u"],[139392,0,"_loop_t* lo"],[139404,0,"p,\n    Mult"],[139416,0,"IsolatePlatform* platform,\n    ArrayBufferAllocator* allocator) {\n  return new IsolateData(isolate, loop, platform, allocator->zero_fill_fiel"],[139558,0,"());\n}\n\n\nvoid"],[143756,2,""],[143756,0,"Iso"],[143760,10,""],[143761,1,""],[143762,10,""],[143762,0,"e"],[143765,0,"N"],[143767,7,""],[143767,0,"wIs"],[143771,22,""],[143771,0,"la"],[143774,2,""],[143774,0,"e(A"],[143778,13,""],[143779,9,""],[143780,28,""],[143780,0,"yBuff"],[143786,3,""],[143787,5,""],[143787,0,"All"],[143791,4,""],[143792,1,""],[143793,0,"to"],[143798,1,""],[143798,0,"all"],[143802,8,""],[143803,1,""],[143804,0,"to"],[143807,2,""],[143845,34,""],[143877,1,""],[144007,6,""],[144075,4,""],[144076,7,""],[144077,1,""],[144077,0,"u"],[144079,8,""],[144080,5,""],[144080,0,"pt"],[144083,1,""],[144083,0,";"],[144403,0,"return isolate;\n}\n\ninline int Start(uv_loop_t* event_loop,\n                 int argc, const char* const* argv,\n                 int exec_argc, const char* const* exec_argv) "],[144580,0,"std::unique_ptr<ArrayBufferAllocator,"],[144618,0,"decltype(&FreeArrayBufferAllocator)>\n"],[144656,0,"     allocator(CreateArrayBufferAllocator(), &FreeArrayBufferAllocator);\n  Isolate* const isolate = NewIsolate(allocator.get());\n  if (isolate == nullptr)\n    return 12;  // Signal internal error.\n\n  {\n    "],[145118,0,"std::unique_ptr<IsolateData, decltype(&Free"],[145172,0,")>"],[145197,0,"CreateIsolateData(\n            "],[145245,0,"    "],[145269,0,"    "],[145305,0,"    "],[145319,1,""],[145319,0,"g"],[145321,0,"t()),\n        &F"],[145338,0,"eeIs"],[145343,4,""],[145344,3,""],[145344,0,"at"],[145347,3,""],[145347,0,"Data"],[145352,1,""],[145471,0,"\n       "],[145495,1,""],[145507,0,".get()"]],"_dtSpan":[686696,687938]},{"parents":[752],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[40141,1,""],[40142,3,""],[40142,0,"andleScope scope"],[40159,1,""],[40159,0,"env->isolate());\n\n  if ("],[40201,1,""],[40204,1,""],[40204,0,"  mess"],[40211,3,""],[40211,0,"g"],[40213,1,""],[40213,0," = Ex"],[40219,0,"epti"],[40224,1,""],[40224,0,"n::CreateM"],[40235,1,""],[40236,3,""],[40236,0,"sag"],[40255,0,", er"]],"_dtSpan":[687938,688027]},{"parents":[753],"numChildren":1,"agent":4,"time":"1970-01-01T00:00:00Z","patches":[[141947,0,"TRACE_EVENT_METADATA1(\"__metadata\", \"thread_name\", \"name\",\n                        \"JavaScriptMainThread\");\n\n  "]],"_dtSpan":[688027,688138]},{"parents":[754],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[136377,292,""]],"_dtSpan":[688138,688430]},{"parents":[755],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[4440,15,""],[4441,13,""],[4442,17,""],[24383,225,""],[24384,109,""],[24385,6,""],[24386,24,""],[24387,9,""],[24388,10,""],[24389,72,""],[24390,33,""],[24392,2696,""],[57492,0,"clas"],[57497,5,""],[57505,0," public:\n"],[57971,0," private:"],[13931,3979,""],[14337,517,""],[14338,1,""],[14340,15,""],[14341,58,""],[14342,200,""],[14343,166,""],[14344,285,""],[14345,49,""],[14346,1,""],[14347,64,""],[14348,270,""],[14349,2,""],[14350,65,""],[14351,10,""],[14353,33,""],[14354,1,""],[14355,4,""],[14356,5,""],[14357,9,""],[14358,14,""],[14359,23,""],[14360,58,""],[14361,54,""],[14362,1,""],[14363,10,""],[14364,19,""],[14365,20,""],[14367,14,""],[14368,8,""],[14369,6,""],[14372,7,""]],"_dtSpan":[688430,697654]},{"parents":[756],"numChildren":1,"agent":4,"time":"1970-01-01T00:00:00Z","patches":[[8551,2,""],[8552,0,"u"],[8554,1,""],[8555,3,""],[8556,7,""],[8556,0,"c"],[8558,11,""],[8558,0,"n"],[8560,1,""],[8561,6,""],[8563,4,""],[8563,0,"l"],[8565,8,""],[8565,0,"r"],[8567,0,"="],[8601,1,""],[8602,21,""],[8603,2,""],[8604,6,""],[8605,1,""],[8606,9,""],[8661,0,"controller);"],[8674,4,""],[8678,0,"S"],[8680,0,"artT"],[8690,2,""],[8690,0,"A"],[8695,0,"();\n    platform"],[8712,3,""],[8712,0," = new Nod"],[8723,0,"Pla"],[8727,1,""],[8727,0,"fo"],[8730,0,"m(thre"],[8737,1,""],[8737,0,"d_pool_s"],[8746,3,""],[8746,0,"ze, c"],[8760,0,");\n    V8::InitializePlatform"],[8790,0,"platform_"],[8800,1,""],[137500,93,""]],"_dtSpan":[697654,697957]},{"parents":[757],"numChildren":1,"agent":165,"time":"1970-01-01T00:00:00Z","patches":[[67725,4,""]],"_dtSpan":[697957,697961]},{"parents":[758],"numChildren":1,"agent":195,"time":"1970-01-01T00:00:00Z","patches":[[98893,0,"                     generate V8 profiler output\\n\"\n         \"  -"],[98962,0,"f-pro"],[98992,1,""],[98992,0,"V"]],"_dtSpan":[697961,698033]},{"parents":[759],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[104579,57,""],[113729,145,""]],"_dtSpan":[698033,698235]},{"parents":[760],"numChildren":1,"agent":165,"time":"1970-01-01T00:00:00Z","patches":[[54102,2,""],[54102,0,"NULL"],[54117,9,""],[62976,2,""],[62976,0,"NULL"],[63002,9,""],[63014,1,""],[63014,0,"OT_NULL"],[63051,9,""],[127811,1,""],[127811,0,"OT_NULL"],[127822,9,""],[135477,2,""],[135477,0,"NULL"],[135494,9,""]],"_dtSpan":[698235,698314]},{"parents":[761],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[101830,0,"EBUG_NATIVE            ','-separated list of C++ core debug\\n\"\n         \"                             categories that should print debug\\n\"\n         \"                             output\\n\"\n         \"NODE_D"]],"_dtSpan":[698314,698519]},{"parents":[762],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[2791,0,"termios.h>  // tcgetattr, tcsetattr\n#include <"],[4543,0,"// Safe to call more than once and from signal handlers.\ninline void PlatformExit();\n\n"],[30692,3,""],[30692,0,"Pla"],[30696,3,""],[30696,0,"fo"],[30699,3,""],[30699,0,"mExi"],[30704,5,""],[89998,4,""],[89998,0,"Pla"],[90002,2,""],[90002,0,"fo"],[90005,3,""],[90005,0,"mExi"],[90010,5,""],[120274,0,"#"],[120276,0,"fdef __POSIX__\nstatic struct {\n  i"],[120311,0,"t flags;\n  boo"],[120326,0," "],[120328,0,"satty;\n  struct stat stat;\n  struct termios termios;\n} stdio[1 + STDERR_FILENO];\n\n\ninline int GetFileDescriptorFlags(int fd) {\n  int flags;\n\n  do {\n    flags = fcntl(fd, F_GETFL);\n  } while (flags == -1 && errno == EINTR);\n\n  retur"],[120560,0," flags;\n}\n#"],[120572,0,"ndif"],[120577,0," // __POSIX__\n\n\ninline "],[120916,2,""],[120916,0,"au"],[120919,22,""],[120919,0,"o&"],[120922,2,""],[120922,0,"s"],[120924,14,""],[120924,0,":"],[120926,1,""],[120926,0,"st"],[120929,5,""],[120929,0,"io"],[120939,0,"con"],[120944,3,""],[120944,0," in"],[120949,0,"fd = &"],[120956,3,""],[120957,0,"- std"],[120963,2,""],[120964,3,""],[120985,7,""],[120985,0,"s.stat"],[121249,0,"  if (fstat(fd, &s.stat) != 0)\n      ABORT();\n  "],[121996,0,"// "],[122001,0,"cord the state of the stdio file descriptors so we can restore it\n  // on exit.  Needs to happen before installin"],[122115,0," s"],[122118,0,"gnal handlers becau"],[122138,0,"e\n  // "],[122146,0,"h"],[122148,0,"y make use of that information.\n  fo"],[122185,0," (auto& s : stdio) {\n    const int fd = &s - stdio;\n    int err;\n\n    s.flags = GetFileDescriptorFlags(fd);\n    CHECK_NE(s.flags, -1);\n\n    if (!isatty(fd)) continue;\n    s.isatty = true;\n    do {\n      err = tcgetattr(fd, &s.termios);\n    } while (err == -1 && errno == EINTR);\n    CHECK_EQ(err, 0);\n  }\n\n  Register"],[123674,0,"// This function must be safe to call more than once and from signal handlers.\ninline "],[123766,0,"latfo"],[123772,0,"mExit() {\n#ifdef __POSIX__\n  for (auto& s : stdio) {\n    const int fd = &s - stdi"],[123854,0,";\n\n    stru"],[123866,0,"t stat tmp;\n    if (-1 == fstat(fd, &tmp)) {\n      CHECK_EQ("],[123927,0,"rrno, EBADF);  // Program closed file descriptor.\n      continue;\n    }\n\n    bool is_same_file =\n        (s.stat.st_dev == tmp.st_dev && s.stat.st_ino == tmp."],[124086,0,"t_ino);\n    if (!i"],[124105,0,"_same_file) continue;  // Program reopened file descriptor.\n\n    int flags = GetFileDescriptorFlags(fd);\n    CHECK_NE(flags, -1);\n\n    // Restore the O_NONBLOCK flag if it changed.\n    if (O_NONBLOCK & (flags ^ s.flags)) {\n      flags &= ~O_NONBLOCK;\n      flags |= s.flags & O_NONBLOCK;\n\n      int err;\n      do {\n        err = fcntl(fd, F_SETFL, flags);\n      } while (err == -1 && errno == EINTR);\n      CHECK_NE(err, -1);\n    }\n\n    if (s.isatty) {\n      int err;\n      do {\n        err = tcsetattr(fd, TCSANOW, &s.termios);\n      } while (err == -1 && errno == EINTR);\n      CHECK_NE(err, -1);\n    }\n  }\n#endif  // __POSIX__\n}\n\n\nvoid Process"],[138554,3,""],[138554,0,"Pla"],[138558,3,""],[138558,0,"fo"],[138561,5,""],[138562,3,""],[138562,0,"Exit"]],"_dtSpan":[698519,700746]},{"parents":[763],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[134595,0,"version\", \"node\", NODE_VERSION_STRING);\n  TRACE_EVENT_METADATA1(\"__metadata\", \""],[4252,32,""],[14891,3,""],[14892,10,""],[14893,21,""],[14894,14,""],[14896,261,""],[14897,1,""],[14898,2,""],[14900,9,""],[14901,8,""],[14902,59,""],[14903,114,""],[14904,279,""],[14905,8,""],[14906,5,""],[14907,2,""],[14908,6,""],[14909,1249,""],[14910,12,""],[14911,248,""],[14912,19,""],[14913,15,""],[14914,3,""],[14915,10,""],[14916,13,""],[14917,1,""],[14918,24,""],[14919,18,""],[14920,11,""],[14921,14,""],[14922,45,""],[14923,61,""],[14924,142,""],[14925,65,""],[14926,8,""],[14927,18,""],[14928,4,""],[14929,2,""],[14930,15,""],[14931,3,""],[14932,39,""],[14934,68,""],[33950,7,""],[34954,7,""],[37974,7,""],[38459,7,""],[38947,7,""],[39432,7,""],[40794,7,""],[41582,7,""],[43862,7,""],[45621,7,""],[46383,7,""],[80689,12,""],[80690,14,""],[80691,40,""],[80692,191,""],[80693,26,""],[80695,40,""],[85498,45,""],[85531,51,""],[85532,6,""],[85534,80,""],[85535,3,""],[85595,1,""],[85636,39,""],[85638,12,""],[85647,53,""],[86113,1,""],[86114,190,""],[86721,7,""],[91406,0,"Object> bootstrapper = Object::New(env->isolate());\n  SetupBootstrapObject(env, bootstrapper);\n  Local<"],[91621,0,"r,\n    bootstrappe"]],"_dtSpan":[700746,704775]},{"parents":[764],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[7332,0,"worker is used.\n// Used in node_config.cc to set a constant on process.binding('config')\n// that is used by lib/worker.js\nbool config_experimental_worker = false;\n\n// Set in node.cc by ParseArgs when --experimental-"],[93514,0,"         \"  --experimental-worker      experimental threaded Worker support\\n\"\n"],[101475,0,"experimental-worker\",\n    \"--"],[108605,0,"worker\") == 0) {\n      config_experimental_worker = true;\n    } else if (strcmp(arg, \"--experimental-"],[28188,7,""],[28227,1,""],[28248,6,""],[28265,1,""],[28286,6,""],[31031,0,"Maybe"],[31115,0,"     "],[31176,0,"     "],[31630,0,"nv->E"],[31645,0,"  return MaybeLocal<Value>();\n  "],[31785,0,"if (try_catch.HasTerminated()) {\n      env->isolate()->CancelTerminateExecution();\n      return MaybeLocal<Value>();\n    }\n    "],[31950,0,"nv->E"],[31965,0,"  return MaybeLocal<Value>();\n  "],[34466,0,"  CHECK(env->is_main_thread());\n"],[38523,0,"  CHECK(env->is_main_thread());\n"],[39041,0,"  CHECK(env->is_main_thread());\n"],[39560,0,"  CHECK(env->is_main_thread());\n"],[40078,0,"  CHECK(env->is_main_thread());\n"],[44001,2,""],[44001,0,"Env"],[44005,3,""],[44006,13,""],[44008,0,"me"],[44011,0,"t* "],[44015,3,""],[44015,0,"nv = "],[44049,0,";\n  WaitForInspectorDisconnect(env"],[44123,0,"nv->E"],[56953,0,"Terminated())\n      return;\n\n    if (fatal_try_catch.Has"],[57320,0,"// If we try to print out a termination exception, we'd just get 'null',\n  // so just crashing here with that information seems like a better idea,\n  // and in particular it seems like we should handle terminations at the call\n  // site for this function rather than by printing them out somewhere.\n  CHECK(!try_catch.HasTerminated());\n\n  "],[75671,0,"\n      "],[75694,22,""],[75700,1,""],[75714,14,""],[75720,9,""],[75740,6,""],[75746,15,""],[75746,0,"env->is_main_thread()"],[75768,0,"?"],[75788,0," : nullptr"],[75800,12,""],[75806,11,""],[85581,0,"env->is_main_thread() ? "],[85620,0," : nullptr"],[85734,0,"if ("],[85743,0,"is_main_thread()) {\n    env->"],[85808,0,"  "],[85857,0,"  "],[85889,0,"  "],[85932,0,"  "],[85980,0,"  "],[86011,0,"  "],[86038,16,""],[86038,0,"abor"],[86043,1,""],[86046,3,""],[86047,11,""],[86047,0,"bor"],[86051,1,""],[86056,0,"  "],[86083,5,""],[86084,7,""],[86084,0,"h"],[86086,3,""],[86086,0,"ir"],[86091,6,""],[86091,0,"Chd"],[86095,9,""],[86095,0,"r"],[86101,0,"  "],[86128,2,""],[86128,0,"um"],[86131,7,""],[86131,0,"sk"],[86136,4,""],[86136,0,"Umask"],[86146,0,"}\n\n  "],[86176,4,""],[86176,0,"_getActiveReques"],[86193,0,"s"],[86197,0,"Get"],[86201,3,""],[86201,0,"ctiveReques"],[86213,0,"s"],[86244,0,"_getA"],[86250,2,""],[86250,0,"t"],[86252,1,""],[86252,0,"veHandles"],[86264,3,""],[86264,0,"GetAct"],[86271,1,""],[86271,0,"veHandles"],[86310,3,""],[86310,0,"reallyExit"],[86323,3,""],[86323,0,"Exit"],[86330,1,""],[86357,5,""],[86357,0,"cwd"],[86363,5,""],[86363,0,"Cwd"],[86794,0,"  env->SetMethod(process, \"dlopen\", DLOpen);\n"],[86842,0,"if ("],[86851,0,"is_main_thread()) {\n    env->"],[86933,0,"  "],[86983,0,"  }\n"],[87111,46,""],[88071,0,"Maybe"],[88108,0,"\n    "],[88130,0,"\n   "],[88157,22,""],[88161,8,""],[88526,0,"Maybe"],[88608,0,"bootstrapper_v.IsEmpty())  // This happens when execution was interrupted.\n    return MaybeLocal<Function>();\n\n  if ("],[88829,10,""],[88829,0,".T"],[88832,8,""],[88837,4,""],[88837,0,"Che"],[88841,4,""],[88841,0,"ked()-"],[88848,5,""],[88848,0,"I"],[88850,16,""],[88858,7,""],[88859,14,""],[88860,0,")"],[88862,1,""],[88897,0,"_v.ToLocalChecked().As<Function>()"],[90435,0,"Maybe"],[90658,0,"Maybe"],[90770,0,"if (loaders_bootstrapper.IsEmpty() || node_bootstrapper.IsEmpty()) {\n    // Execution was interrupted.\n    return;\n  }\n\n  "],[92470,0,".ToLocalChecked()"],[93006,0,".ToLocalChecked()"],[133980,0,"stop_sub_worker_contexts();\n  env."]],"_dtSpan":[704775,707104]},{"parents":[765],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[9495,0,"*"],[9497,1,""],[9868,0,"*"],[9870,1,""],[10557,1,""],[10558,0," "],[11205,0,"*"],[11207,1,""],[12342,0,"*"],[12344,1,""],[70245,1,""],[70246,0," "]],"_dtSpan":[707104,707116]},{"parents":[766],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[128258,22,""],[128263,6,""],[128264,6,""],[128267,1,""],[128267,0,"_c"],[128272,1,""],[128272,0,"_string("],[128391,0,"nv->context(), e"],[128416,0,".ToLocalChecked()\n        "],[128859,0,"FIXED_ONE_BYTE_STRING("],[128886,0,"isolat"],[128893,0,"(), \"_e"],[128906,8,""],[128906,0,"\""],[128909,0,"\n                     "],[128976,1,""],[128976,0,"_c"],[129043,0,"nv->context(), e"],[129062,1,""],[129062,0,"_c"],[129068,0,".ToLocalChecked()\n      "],[129105,0,"env->context()"],[129120,0,".ToChecked()"],[129165,0,"FIXED_ONE_BYTE_STRING("],[129192,2,""],[129193,2,""],[129194,0,"ola"],[129198,4,""],[129198,0,"e"],[129202,0," \"exit\"),"],[129481,0,"nv->context(), e"],[129500,1,""],[129500,0,"_c"],[129506,0,".ToLocalChecked()\n      "],[129543,0,"env->context()).ToChecked("],[20195,3535,""]],"_dtSpan":[707116,710989]},{"parents":[767],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[68392,3,""],[68392,0,"HAV"],[68396,2,""],[68397,2,""],[68397,0,"O"],[68400,39,""],[68400,0,"NSSL"],[68422,3,""],[68422,0,"have"],[68427,2,""],[68427,0,"o"],[68429,0,"e"],[68431,0,"ssl"],[68482,4,""],[68482,0,"h"],[68484,1,""],[68484,0,"ve_o"],[68489,0,"e"],[68491,0,"ssl"],[68527,0,"\n"],[68590,58,""],[68590,0,"h"],[68592,28,""],[68593,8,""],[68594,21,""],[68594,0,"_"],[68596,1,""],[68596,0,"p"],[68598,1,""],[68599,15,""],[68600,8,""],[68601,1,""],[68602,4,""],[68603,1,""],[68604,7,""],[68666,75,""],[68666,0,"h"],[68668,43,""],[68669,32,""],[68670,7,""],[68672,2,""],[68673,7,""],[68674,2,""],[68675,4,""],[68676,68,""],[68677,4,""],[68678,14,""],[68679,0,";"],[68743,3,""],[68743,0,"have"],[68749,2,""],[68750,0,"enssl"],[68758,1,""],[68814,1,""],[68815,15,""],[68815,0,"h"],[68817,9,""],[68818,38,""],[68819,1,""],[68820,9,""],[68821,3,""],[68821,0,"p"],[68823,14,""],[68824,2,""],[68824,0,"ss"],[68827,4,""]],"_dtSpan":[710989,711603]},{"parents":[768],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[130179,0,"uv_tty_reset_mode();\n  "]],"_dtSpan":[711603,711626]},{"parents":[769],"numChildren":1,"agent":44,"time":"1970-01-01T00:00:00Z","patches":[[2791,46,""],[4459,27,""],[4460,40,""],[4461,15,""],[4462,4,""],[24299,3,""],[24299,0,"uv_"],[24303,2,""],[24303,0,"ty_"],[24307,0,"eset_"],[24313,4,""],[24313,0,"ode"],[83060,3,""],[83060,0,"uv_"],[83064,2,""],[83064,0,"ty_"],[83068,0,"eset_"],[83074,4,""],[83074,0,"ode"],[113914,1,""],[113915,34,""],[113916,14,""],[113917,1,""],[113918,231,""],[113919,11,""],[113920,4,""],[113921,23,""],[114237,2,""],[114237,0,"in"],[114240,2,""],[114241,1,""],[114241,0,"fd"],[114244,1,""],[114244,0,"="],[114246,2,""],[114246,0,"STDIN_FILENO; fd <= STDERR_FILENO; f"],[114283,2,""],[114283,0," += 1"],[114296,3,""],[114298,3,""],[114298,0,"ruc"],[114302,5,""],[114303,1,""],[114304,4,""],[114305,1,""],[114305,0,"at "],[114309,0,"gn"],[114312,0,"red"],[114336,6,""],[114336,0,"ignored"],[114580,13,""],[114581,30,""],[114582,5,""],[115298,1,""],[115299,2,""],[115301,35,""],[115302,78,""],[115303,2,""],[115304,19,""],[115305,7,""],[115306,1,""],[115307,36,""],[115308,316,""],[116480,79,""],[116481,7,""],[116487,5,""],[116488,81,""],[116489,11,""],[116490,60,""],[116491,158,""],[116492,18,""],[116493,646,""],[130660,3,""],[130660,0,"uv_t"],[130665,2,""],[130665,0,"y_"],[130668,4,""],[130668,0,"ese"],[130672,0,"_mode"]],"_dtSpan":[711626,713853]},{"parents":[770],"numChildren":1,"agent":175,"time":"1970-01-01T00:00:00Z","patches":[[98279,0,"// Please, update NODE_OPTIONS section in cli.md if changed.\n    "]],"_dtSpan":[713853,713918]},{"parents":[771],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[3755,13,""],[3756,2,""],[3757,9,""],[3829,26,""],[4275,1,""],[4276,40,""],[8361,7,""],[11139,7,""],[30463,2,""],[30464,1,""],[30465,2,""],[30466,126,""],[30467,81,""],[30468,153,""],[30469,90,""],[30470,5,""],[30471,6801,""],[30472,165,""],[30473,57,""],[30474,84,""],[30475,8,""],[30476,15,""],[30477,42,""],[30478,1,""],[30479,15,""],[30480,118,""],[30485,21,""],[30486,152,""],[30487,4,""],[30489,7,""],[30490,78,""],[30491,15,""],[30492,33,""],[30493,1,""],[30494,116,""],[30495,30,""],[30496,8,""],[30497,5,""],[30498,27,""],[30499,50,""],[30501,103,""],[30502,15,""],[30503,2,""],[30504,13,""],[30505,81,""],[30506,14,""],[30507,9,""],[30508,58,""],[30509,17,""],[30510,4,""],[30513,91,""],[30514,43,""],[30516,18,""],[30517,10,""],[30518,69,""],[30519,17,""],[30520,6,""],[30521,29,""],[30522,74,""],[31393,256,""],[31396,10,""],[31397,21,""],[31399,16,""],[31404,760,""],[31405,45,""],[31406,20,""],[31407,17,""],[31408,57,""],[31409,20,""],[31410,17,""],[31411,4,""],[31412,2,""],[31413,107,""],[31414,192,""],[31415,2203,""],[56733,330,""],[68436,0," \"_debugProcess\", DebugProcess);\n    env->SetMethod(process, \"_debugEnd\", DebugEnd);\n    env->SetMethod(process,"],[68905,1,""],[69067,0,"_kill\", Kill);\n\n  env->SetMethod(process, \"cwd\", Cwd);\n  env->SetMethod(process, \"dlopen\", DLOpen);\n  env->SetMethod(process, \""],[69241,3,""],[69241,0,"uptime"],[69250,3,""],[69250,0,"Uptime"],[69637,106,""],[69638,4,""],[69639,221,""],[69640,2,""],[69641,100,""],[69990,50,""],[69991,25,""],[69992,452,""]],"_dtSpan":[713918,728304]},{"parents":[772],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[9564,11,""]],"_dtSpan":[728304,728315]},{"parents":[773],"numChildren":1,"agent":60,"time":"1970-01-01T00:00:00Z","patches":[[111780,0,"context->SetEmbedderD"],[111802,0,"ta(\n      ContextEmbedderIndex::kAllowWasmCodeGeneration, True(isolate));\n\n  a"],[112012,0,"Local<Value> intl_v;\n  if ("],[112048,1,""],[112048,0,"Global()->G"],[112061,3,""],[112061,0,"(cont"],[112067,2,""],[112067,0,"xt, intl_k"],[112078,2,""],[112078,0,"y).ToLoc"],[112087,0,"l(&intl_v) &&\n      intl_v->IsObjec"],[112123,1,""],[112124,0,")) {"],[112133,0,"Local<Object> intl = intl_v.As<Object>();\n  "],[112179,1,""],[112179,0,"intl->Delete(c"],[112199,1,""],[112199,0,", break_iter_key).Fro"],[112221,0,"Just();\n  }\n\n  // https://githu"],[112253,0,".com/nod"],[112262,0,"js/no"],[112268,0,"e/issues/21219\n  // TODO("],[112295,2,""],[112295,0,"vs"],[112298,1,""],[112299,3,""],[112300,8,""],[112300,0,"): re"],[112306,1,""],[112307,1,""],[112307,0,"v"],[112309,1,""],[112309,0," wh"],[112314,1,""],[112314,0," v8 suppo"],[112324,1,""],[112325,0,"s Atom"],[112332,0,"cs.n"],[112337,2,""],[112337,0,"tify\n "],[112344,2,""],[112344,0,"a"],[112346,0,"to atomics_k"],[112359,0,"y = FIXED_ONE_BYTE_STRING"],[112392,1,""],[112392,0,", \"Atomics\""],[112421,0,"atom"],[112426,3,""],[112426,0,"cs"],[112470,2,""],[112470,0,"a"],[112472,1,""],[112472,0,"omics"],[112492,2,""],[112492,0,"a"],[112494,1,""],[112494,0,"omics"],[112512,0,"atom"],[112517,3,""],[112517,0,"cs"],[112555,2,""],[112555,0,"a"],[112557,1,""],[112557,0,"omics"],[112565,0,"atom"],[112570,3,""],[112570,0,"cs"],[112593,0,"auto wake_key = FIXED_ONE_BYTE_STRING("],[112632,2,""],[112632,0,"so"],[112635,3,""],[112635,0,"at"],[112638,0,", \"wake\");\n\n    Loca"],[112659,0,"<Valu"],[112665,0,"> wake = a"],[112676,0,"omics->G"],[112685,0,"t"],[112696,2,""],[112696,0,"wak"],[112700,0,"_key).ToLoc"],[112712,0,"lChec"],[112718,0,"ed();\n    auto notify"],[112740,0,"key = FIXED_ONE_BYTE_STRING("],[112769,0,"sola"],[112775,0,", \"notify\");\n\n    v8::P"],[112799,1,""],[112799,0,"opertyDescriptor desc(wa"],[112825,1,""],[112825,0,", true"],[112832,0,";\n    desc"],[112843,1,""],[112843,0,"set_enume"],[112853,0,"able(false);\n    desc.set_configurable(true);\n\n    at"],[112908,2,""],[112908,0,"ic"],[112911,0,"->DefineProperty(context, no"],[112940,0,"ify_key, desc).ToChecked"],[112972,0,"\n"]],"_dtSpan":[728315,729186]},{"parents":[774],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[66477,0,"if (debug_options.break_node_first_line()) {\n    READONLY_DONT_ENUM_PROPERTY(process,\n                                \"_breakNodeFirstLine\", True(env->isolate()));\n  }\n\n  "],[74437,0,",\n    Boolean::New(env->isolate(), debug_options.break_node_first_line())"]],"_dtSpan":[729186,729430]},{"parents":[775],"numChildren":1,"agent":162,"time":"1970-01-01T00:00:00Z","patches":[[4237,0,"ideEffec"],[4246,0,"Type;\nusing v8::St"],[58485,0,",\n      v8::DEFAULT,\n      v8::None,\n      SideEffectType::kHasNoSideEffect"],[69360,0,"NoSideEffect"],[69503,0,"NoSideEffect"],[69635,0,"NoSideEffect"],[69692,0,"NoSideEffect"],[69751,0,"NoSideEffect"],[69808,0,"NoSideEffect"],[69867,0,"NoSideEffect"]],"_dtSpan":[729430,729615]},{"parents":[776],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[1231,0,"code_cache.h\"\n#include \"node_"],[46311,0,"  Local<Object> exports;\n"],[46400,1,""],[46400,0,"!"],[46412,0,"{\n    expo"],[46423,1,""],[46424,3,""],[46424,0,"s ="],[46428,5,""],[46429,7,""],[46429,0,"nit"],[46444,0,"mod, module);\n  } else if (!strcmp("],[46488,0,", \"code_cache\""],[46503,1,""],[46503,0,") {"],[46509,1,""],[46509,0,"  // internalBinding('c"],[46533,0,"de_"],[46538,2,""],[46538,0,"che')\n    exports = "],[46564,0,"::New(env-"],[46575,0,"isolate());\n"],[46588,0,"   D"],[46593,0,"fineCodeCache(env, e"],[46619,0,");\n"],[46623,1,""],[46624,3,""],[46624,0,"} else {\n    re"],[46640,0,"urn ThrowIfNoSuch"],[46669,5,""],[46669,0,"*"],[46676,0,"_v"],[46681,0,"  }\n"]],"_dtSpan":[729615,729902]},{"parents":[777],"numChildren":1,"agent":60,"time":"1970-01-01T00:00:00Z","patches":[[112434,0,"\n"],[112536,4,""],[112536,0,"{\n"],[112539,8,""],[112540,1,""],[112541,30,""],[112542,10,""],[112542,0,"//"],[112545,1,""],[112545,0,"R"],[112547,2,""],[112547,0,"n"],[112549,0,"li"],[112552,5,""],[112552,0,"/"],[112554,0,"n"],[112558,2,""],[112558,0,"nal/p"],[112564,13,""],[112564,0,"r"],[112566,14,""],[112566,0,"c"],[112568,2,""],[112568,0,"n"],[112571,11,""],[112571,0,"x"],[112573,9,""],[112573,0,".js"],[112578,13,""],[112579,8,""],[112581,5,""],[112581,0,"C"],[112588,4,""],[112588,0,"::Sc"],[112593,8,""],[112593,0,"p"],[112595,2,""],[112595,0," "],[112603,6,""],[112604,1,""],[112604,0,"scop"],[112609,10,""],[112610,19,""],[112610,0,"co"],[112614,10,""],[112615,1,""],[112615,0,"x"],[112617,1,""],[112618,3,""],[112618,0,";"],[112630,5,""],[112630,0,"S"],[112632,2,""],[112632,0,"r"],[112635,21,""],[112635,0,"g"],[112637,6,""],[112638,8,""],[112638,0,"p"],[112640,5,""],[112640,0,"r_"],[112649,1,""],[112650,37,""],[112650,0,"="],[112652,20,""],[112652,0,"N"],[112656,36,""],[112656,0,"P"],[112658,4,""],[112659,2,""],[112659,0,"C"],[112661,6,""],[112662,10,""],[112663,3,""],[112663,0,"ex"],[112666,7,""],[112666,0,"S"],[112668,8,""],[112669,8,""],[112669,0,"r"],[112671,3,""],[112672,25,""],[112680,11,""],[112685,12,""],[112686,1,""],[112686,0," v8::Scrip"],[112697,0,"C"],[112700,0,"p"],[112702,0,"ler::Sour"],[112712,1,""],[112712,0,"e per"],[112718,9,""],[112725,8,""],[112725,0,"_src"],[112730,4,""],[112730,0,"p"],[112732,2,""],[112732,0,"r_"],[112743,19,""],[112743,0,"nul"],[112747,3,""],[112747,0,"p"],[112749,7,""],[112749,0,"r"],[112751,34,""],[112751,0,";"],[112763,4,""],[112763,0,"v8::S"],[112769,0,"rip"],[112775,6,""],[112779,1,""],[112779,0,"v8::Scrip"],[112789,0,"C"],[112792,0,"p"],[112794,11,""],[112794,0,"l"],[112796,3,""],[112796,0,"r::Compile"],[112807,2,""],[112812,4,""],[112813,8,""],[112814,1,""],[112815,24,""],[112815,0," c"],[112818,2,""],[112818,0,"n"],[112821,0,"xt"],[112824,10,""],[112829,12,""],[112830,4,""],[112831,1,""],[112832,10,""],[112832,0," &p"],[112836,2,""],[112836,0,"r_"],[112845,6,""],[112846,3,""],[112846,0,"src"],[112873,79,""],[112874,103,""],[112876,4,""],[112876,0,"Ru"],[112879,9,""],[112887,18,""],[112891,0,"Local"]],"_dtSpan":[729902,730901]},{"parents":[778],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[48552,0,"TRACE_EVENT_METADATA1(\"__metadata\", \"process_name\", \"name\",\n                        TRACE_STR_COPY(*title));\n  "],[113489,0,"char name_buffer[512];\n  if (uv_get_process_title(name_buffer, sizeof(name_buffer)) == 0) {\n    // Only emit the metadata event if the title can be retrieved successfully.\n    // Ignore it otherwise.\n    TRACE_EVENT_METADATA1(\"__metadata\", \"process_name\", \"name\",\n                          TRACE_STR_COPY(name_buffer));\n  }\n  "],[8298,0,"std::string config_process_title;  // NOLINT(runtime/string)\n\n"],[79870,0,"         \"  --title=title              the process title to use on start up\\n\"\n"],[85853,0,"itle\",\n    \"--t"],[92014,0,"n"],[92027,0,"title=\", 8) == 0) {\n      config_"],[92062,0,"oc"],[92066,0,"s_titl"],[92073,0," = a"],[92078,0,"g + 8;\n    } else if (strcmp(arg, \"--preser"],[107711,0,"  // Set the process.title immediately after processing argv if --title is set.\n  if (!config_process_title.empty())\n    uv_set_process_title(config_process_title.c_str());\n\n"]],"_dtSpan":[730901,731757]},{"parents":[779],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[9681,0,"\n        script_path == nullptr ? \"\" : "],[9829,4,""],[9829,0,"Lis"],[9834,1,""],[9834,0,"ning"],[30772,2,""],[30772,0,"I"],[30774,5,""],[30774,0,"A"],[30777,3,""],[30777,0,"iv"],[30780,6,""],[96777,4,""],[96777,0,"Lis"],[96782,1,""],[96782,0,"ning"],[101063,4,""],[101063,0,"Lis"],[101068,1,""],[101068,0,"ning"]],"_dtSpan":[731757,731852]},{"parents":[780],"numChildren":1,"agent":39,"time":"1970-01-01T00:00:00Z","patches":[[40857,0,"\n      // fatal_exception_function call before may have set a new exit code ->\n      // read it again, otherwise use default for uncaughtException 1\n      Local<String> exit_code = env->exit_code_string();\n  "],[41069,0,"Local<Value>"],[41082,0,"code;\n      if (!process_object->Get(env->context(),"],[41139,0,"_code).ToLocal"],[41154,0,"&code) ||\n          !code->IsInt32()) {\n        exit("],[41215,0,"  }\n      exit(code.As<v8::Int32>()->Value());\n    "]],"_dtSpan":[731852,732242]},{"parents":[781],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[1437,0,"#include \"tracing/traced_value.h\"\n"],[8634,0,"// Ensure"],[8644,0," "],[8646,0,"h"],[8649,0," __metadata trace events are only em"],[8686,0,"tted\n// when tra"],[8703,0,"ing"],[8707,0,"i"],[8709,0," enabled.\nclass NodeTraceSta"],[8738,0,"eObserve"],[8747,0," :\n    p"],[8756,0,"blic v8::Tra"],[8769,0,"ingCon"],[8776,0,"roller::TraceStateObserver {\n public:\n  void OnTraceEnabled() override"],[8849,0,"    char name_buffer[512];\n    if (uv_get_process_title(name_buffer, sizeof(name_buffer)) == 0) {\n      // Only emit the metadata event if the title can be retrieved\n      // successfully. Ignore it otherwise.\n      TRACE_EVENT_METADATA1(\"__metadata\", \"process_name\",\n                            \"name\", TRACE_STR_COPY(name_buffer));\n    }\n    TRACE_EVENT_METADATA1(\"__metadata\", \"version\",\n                          \"node\", NODE_VERSION_STRING);\n    TRACE_EVENT_METADATA1(\"__metadata\", \"thread_name\",\n                          \"name\", \"JavaScriptMainThread\");\n\n    auto trace_process = tracing::TracedValue::Create();\n    trace_process->BeginDictionary(\"versions\");\n\n    const char http_parser_version[] =\n        NODE_STRINGIFY(HTTP_PARSER_VERSION_MAJOR)\n        \".\"\n        NODE_STRINGIFY(HTTP_PARSER_VERSION_MINOR)\n        \".\"\n        NODE_STRINGIFY(HTTP_PARSER_VERSION_PATCH);\n\n    const char node_napi_version[] = NODE_STRINGIFY(NAPI_VERSION);\n    const char node_modules_version[] = NODE_STRINGIFY(NODE_MODULE_VERSION);\n\n    trace_process->SetString(\"http_parser\", http_parser_version);\n    trace_process->SetString(\"node\", NODE_VERSION_STRING);\n    trace_process->SetString(\"v8\", V8::GetVersion());\n    trace_process->SetString(\"uv\", uv_version_string());\n    trace_process->SetString(\"zlib\", ZLIB_VERSION);\n    trace_process->SetString(\"ares\", ARES_VERSION_STR);\n    trace_process->SetString(\"modules\", node_modules_version);\n    trace_process->SetString(\"nghttp2\", NGHTTP2_VERSION);\n    trace_process->SetString(\"napi\", node_napi_version);\n\n"],[10404,0,"HAVE_OPE"],[10413,0,"SSL\n    // Stupid code to slice out the version string.\n    {  // N"],[10481,0,"LINT(whitespace/braces)\n      size_t i, j, k;\n      int c;\n      for (i = j = 0, k = sizeof(OPENSSL_VERSION_TEXT) - 1; i < k; ++i) {\n        c = OPENSSL_VERSION_TEXT[i];\n        if ('0' <= c && c <= '9') {\n          for (j = i + 1; j < k; ++j) {\n            c = OPENSSL_VERSION_TEXT[j];\n            if (c == ' ')\n              break;\n          }\n          break;\n        }\n      }\n      trace_process->SetString(\"openssl\",\n                              std::string(&OPENSSL_VERSION_TEXT[i], j - i));\n    }\n#endif\n    trace_process->EndDictionary();\n\n    trace_process->SetString(\"arch\", NODE_ARCH);\n    trace_process->SetString(\"platform\", NODE_PLATFORM);\n\n    trace_process->BeginDictionary(\"release\");\n    trace_process->SetString(\"name\", NODE_RELEASE);\n#if NO"],[11246,0,"VERSION_IS_LTS\n    trace_process->SetString(\"lts\", NODE_VERSION_LTS_CODENAME);\n#endif\n    trace_process->EndDictionary();\n    TRACE_EVENT_METADATA1(\"__metadata\", \"node\",\n                          \"process\", std::move(trace_process));\n\n    // This only runs the first time tracing is enabled\n    controller_->RemoveTraceStateObserver(this);\n    delete this;\n  }\n\n  void OnTraceDisabled() override {\n    // Do nothing here. This should never be called because the\n    // observer removes itself when OnTraceEnabled() is called.\n    "],[11777,0,"NREACHABLE();\n  }\n\n  explicit NodeTrace"],[11817,0,"tateObserver(v8::TracingController* controller) :\n      controller_(controller) {}\n  ~NodeTraceStateObserver() override {}\n\n private:\n  v8::TracingController* controller_;\n};\n\nstatic struct {\n#if NODE_US"],[12208,0,"controller->AddTraceStateObserver(new NodeTraceStateObserver(controller));\n    "],[63620,1,""],[64506,1,""],[64645,1,""],[117794,516,""]],"_dtSpan":[732242,736233]},{"parents":[782],"numChildren":1,"agent":53,"time":"1970-01-01T00:00:00Z","patches":[[12674,10,""]],"_dtSpan":[736233,736243]},{"parents":[783],"numChildren":1,"agent":172,"time":"1970-01-01T00:00:00Z","patches":[[27213,0,",\n      v8::NewStringType::kNormal"],[27248,0,".ToLocalChecked()"],[51461,0,",\n      v8::NewStringType::kNormal).ToLocalChecked("],[52359,0,",\n      v8::NewStringType::kNormal).ToLocalChecked("],[53241,0,",\n        v8::NewStringType::kNormal"],[53278,0,".ToLocalChecked()"],[57754,0,"v8::New"],[57767,0,"Type"],[57780,6,""],[57825,0,".ToLocalChecked()"],[67644,0,",\n        v8::NewStringType::kNormal).ToLocalChecked("],[67988,0,",\n        v8::NewStringType::kNormal).ToLocalChecked("],[69170,0,",\n                          v8::NewStringType::kNormal).ToLocalChecked("],[69912,0,",\n                                                 v8::NewStringType::kNormal)\n                                 .ToLocalChecked("],[72766,0,"v8::New"],[72779,0,"Type"],[72792,6,""],[72850,0,".ToLocalChecked()"],[72945,0,",\n        v8::NewStringType::kNormal).ToLocalChecked("],[72786,2,""],[72786,0,"Inte"],[72791,1,""],[72791,0,"n"],[72794,0,"ized"],[72981,2,""],[72981,0,"Inte"],[72986,1,""],[72986,0,"n"],[72989,0,"ized"]],"_dtSpan":[736243,736899]},{"parents":[784],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[12120,18,""],[13358,0,"file_writer_ = tracing_"],[13389,4,""],[13389,0,"AddC"],[13394,0,"i"],[13396,0,"nt"],[13399,0,"\n        "],[13432,0,",\n        new tracing::NodeTraceWriter(trace_file_pattern)"],[13530,4,""],[13538,2,""],[13538,0,"fil"],[13542,2,""],[13543,9,""],[13543,0,"w"],[13545,2,""],[13546,2,""],[13546,0,"ter"],[13550,2,""],[13550,0,".r"],[13553,6,""],[13553,0,"se"],[13556,2,""],[13755,0,"tracing::AgentWriterHandle tracing_file_writer_;\n  "],[2017,0,"tracing/node_trace_writer.h\"\n#include \""],[13389,0,"if (trace_enabled_categories.empty()) {\n      "],[13474,0,"DefaultHandle();\n    } else {\n      tracing_file_writer_ = tracing_agent_->"],[13568,0,"  ParseCommaSeparatedSet("],[13617,0,")"],[13628,0,"  std::unique_ptr<tracing::AsyncTraceWriter>(\n              "],[13735,0,",\n                                           tracing_agent_->loop()"],[13804,0,",\n          tracing::Agent::kUseDefaultCategories)"],[13858,0,"  "],[13862,0,"  }\n"],[13950,0,"WriterHandle"],[13979,0,"Writer"],[13987,6,""],[14001,0,"&"],[14010,2,""],[14010,0,"fil"],[14014,1,""],[14014,0,"_wri"],[14019,0,"er"],[14022,6,""],[14858,0,"WriterHandle"],[14887,0,"Writer"],[14896,5,""],[14896,0,"{\n  "],[14901,1,""],[14917,0,"\n "],[117195,0,"Writer"],[118850,0,"Writer"],[13735,67,""],[12525,0,"tracing_agent_.reset(nullptr);\n    "],[12628,35,""],[32842,3,""],[32842,0,"G"],[32844,1,""],[32845,0,"Owner"],[33553,50,""],[33609,29,""],[33653,3,""],[33654,9,""],[33654,0,"rgv[idx]"],[33663,7,""],[33664,30,""],[33665,1,""],[33666,12,""],[33671,22,""],[33671,0,"O"],[33676,13,""],[33678,45,""],[20141,10,""],[20141,0,"Mayb"],[20146,6,""],[20146,0,"L"],[20148,0,"ca"],[20151,0,"<V"],[20154,1,""],[20154,0,"lu"],[20157,0,">"],[20159,1,""],[20619,115,""],[20657,13,""],[20659,6,""],[20659,0,"y"],[20661,9,""],[20662,21,""],[20662,0,"L"],[20664,0,"ca"],[20667,0,"<V"],[20670,1,""],[20670,0,"lu"],[20673,0,">"],[20675,1,""],[20735,10,""],[20735,0,"Mayb"],[20740,6,""],[20740,0,"L"],[20742,0,"ca"],[20745,0,"<V"],[20748,1,""],[20748,0,"lu"],[20751,0,">"],[20753,1,""],[22664,1,""],[22664,0,"Mayb"],[22669,1,""],[22669,0,"Local<Val"],[22679,0,"e> "],[22683,1,""],[22683,0,"et ="],[22760,0,"                 "],[22804,0,"  if (ret.IsEmpty() && env->makecallback_depth() == 0) {\n    // This is only for legacy compatiblity and we may want to look into\n    // removing/adjusting it.\n    return Undefined(env->isolate());\n  }\n  return ret;\n"]],"_dtSpan":[736899,738433]},{"parents":[785],"numChildren":1,"agent":133,"time":"1970-01-01T00:00:00Z","patches":[[97204,167,""]],"_dtSpan":[738433,738600]},{"parents":[786],"numChildren":1,"agent":60,"time":"1970-01-01T00:00:00Z","patches":[[81632,3,""],[81633,32,""],[81641,1,""],[81766,43,""],[81894,3,""],[81895,33,""],[82021,43,""],[83810,36,""],[84031,7,""],[88444,3,""],[88445,33,""],[88598,7,""]],"_dtSpan":[738600,738844]},{"parents":[787],"numChildren":1,"agent":140,"time":"1970-01-01T00:00:00Z","patches":[[5129,0,"uv_o"],[5134,2,""],[5134,0,"c"],[5137,0,"t init_"],[5147,0,"pending_once = UV_ONCE_INIT;\nstatic "],[5184,1,""],[5184,0,"v_k"],[5188,1,""],[5188,0,"y_t"],[5192,0,"thread_local_"],[36027,0,"uv_key_set(&thread_local_"],[36062,2,""],[36062,0,","],[36066,0,")"],[38856,0,"void InitModpendingOnce() {\n  CHECK_EQ(0, uv_key_create(&thread_local_modpending));\n}\n\n"],[39439,0,"uv_once(&init_modpending_once, InitModpendingOnce);\n  "],[39504,0,"uv_key_get(&thread_local_"],[39540,0,")"],[40480,0,"static_cast<node_"],[40500,0,"ule*>(\n      uv_key_get(&thread_local_mod"],[40548,0,"))"],[40554,0,"uv_key_set(&thread_local_"],[40589,2,""],[40589,0,","],[40598,0,")"]],"_dtSpan":[738844,739200]},{"parents":[788],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[51275,0,"if (!strcmp(*module_v, \"code_cache_hash\")) {\n    // internalBinding('code_cache_hash')\n    exports = Object::New(env->isolate());\n    DefineCodeCacheHash(env, exports);\n  } else if (!strcmp(*module_v, \"natives_hash\")) {\n    // internalBinding('natives_hash')\n    exports = Object::New(env->isolate());\n    DefineJavaScriptHash(env, exports);\n  } else "]],"_dtSpan":[739200,739551]},{"parents":[789],"numChildren":1,"agent":145,"time":"1970-01-01T00:00:00Z","patches":[[83794,0,"loader=file              (with --experimental-modules) use the \\n\"\n         \"                             specified file as a custom loader\\n\"\n         \"                             for ECMAScript Modules \\n\"\n         \"  --"]],"_dtSpan":[739551,739774]},{"parents":[790],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[1366,32,""],[4482,7,""],[4483,535,""],[4789,46,""],[4789,0,"\n"],[4793,1,""],[4793,0,"TOD"],[4797,4,""],[4798,18,""],[4799,6,""],[4800,11,""],[4800,0,"d"],[4802,5,""],[4804,2,""],[4805,5,""],[4805,0,"x):"],[4809,11,""],[4810,5,""],[4810,0,"h"],[4812,3,""],[4813,7,""],[4814,0,"should"],[4821,1,""],[4823,3,""],[4824,3,""],[4824,0," b"],[4827,4,""],[4827,0," gl"],[4831,1,""],[4831,0,"b"],[4833,6,""],[4834,4,""],[4834,0,"."],[4977,45,""],[4977,0,"b"],[4979,12,""],[4980,1,""],[4980,0,"l"],[4982,2,""],[4982,0,"v"],[4984,25,""],[4985,6,""],[4986,16,""],[4987,1,""],[4988,4,""],[4989,1,""],[4990,35,""],[4991,5,""],[4992,13,""],[4992,0,"iz"],[4995,6,""],[4995,0,"d"],[5005,1,""],[5006,16,""],[5007,39,""],[5008,14,""],[5012,2,""],[5013,29,""],[5015,38,""],[5016,41,""],[5016,0,"x"],[5018,4,""],[5018,0,"at"],[5021,9,""],[5023,5,""],[5024,9,""],[5025,21,""],[5026,11,""],[5027,6,""],[5028,18,""],[5034,44,""],[5035,11,""],[5036,51,""],[5041,8,""],[5048,24,""],[5048,0,"-"],[5051,8,""],[5052,24,""],[5053,10,""],[5054,9,""],[5055,58,""],[5056,16,""],[5057,91,""],[5058,10,""],[5059,18,""],[5060,32,""],[5061,1,""],[5062,41,""],[5063,16,""],[5064,5,""],[5065,52,""],[5066,22,""],[5067,3,""],[5068,3,""],[5069,23,""],[5069,0,","],[5071,4,""],[5072,16,""],[5073,5,""],[5074,17,""],[5075,1,""],[5076,40,""],[5078,9,""],[5079,59,""],[5079,0,"z"],[5081,6,""],[5082,16,""],[5083,2,""],[5084,48,""],[5085,12,""],[5086,3,""],[5087,9,""],[5088,16,""],[5090,23,""],[5091,2,""],[5092,6,""],[5093,60,""],[5094,24,""],[5095,14,""],[5096,43,""],[5097,1,""],[5098,32,""],[5099,30,""],[5100,22,""],[5101,4,""],[5102,36,""],[5105,19,""],[5106,47,""],[5107,25,""],[5108,9,""],[5109,16,""],[5111,23,""],[5112,38,""],[5113,10,""],[5114,54,""],[5115,41,""],[5116,7,""],[5117,16,""],[5118,128,""],[5119,49,""],[5125,50,""],[5126,29,""],[5127,19,""],[5128,6,""],[5129,34,""],[5131,13,""],[5133,14,""],[5134,35,""],[5134,0,"r<"],[5137,3,""],[5138,1,""],[5139,14,""],[5139,0,"P"],[5141,1,""],[5141,0,"o"],[5143,17,""],[5144,3,""],[5145,4,""],[5146,32,""],[5147,14,""],[5147,0,"p"],[5149,1,""],[5150,16,""],[5151,22,""],[5152,7,""],[5153,14,""],[5153,0,">"],[5155,4,""],[5156,2,""],[5157,5,""],[5158,32,""],[5159,31,""],[5166,80,""],[5167,3,""],[5168,5,""],[5168,0,"p"],[5170,5,""],[5171,2,""],[5172,6,""],[5172,0,"{"],[5174,12,""],[5175,21,""],[5177,2,""],[5178,9,""],[5179,3,""],[5180,31,""],[5180,0,"w"],[5182,23,""],[5182,0,"P"],[5184,2,""],[5185,16,""],[5185,0,"P"],[5192,11,""],[5192,0,"O"],[5196,10,""],[5196,0,"o"],[5198,13,""],[5199,14,""],[5199,0,"()"],[5202,15,""],[5202,0,"}"],[5274,29,""],[9520,3,""],[9522,1,""],[9522,0,"d::shared_ptr<"],[9548,1,""],[9548,0,">"],[10004,0,"per_process_op"],[10019,0,"s->t"],[10029,4,""],[10029,0,"v"],[10031,1,""],[10031,0,"nt"],[10220,0,"per_process_opts->"],[10245,0,"ve"],[10248,5,""],[10248,0,"t"],[10360,0,"\n                  per_process_opts->"],[10403,0,"event_"],[51959,2,""],[51959,0,"e"],[51961,1,""],[51961,0,"v->opt"],[51968,2,""],[51968,0,"ons()->"],[58178,0,"Environment* env = Environment::GetCurrent(info);\n  "],[58282,0,"env->options()->"],[58311,1,""],[58311,0,"->"],[58363,3,""],[58364,41,""],[58365,5,""],[58366,5,""],[58671,0,"Environment* env = Environment::GetCurrent(info);\n  "],[58764,0,"env->options()->"],[58793,1,""],[58793,0,"->ho"],[58798,1,""],[58804,1,""],[58804,0,".port =\n      "],[58836,0,"env->context()"],[58851,0,".FromMaybe(0"],[60231,34,""],[60263,0,"std::ve"],[60271,6,""],[60271,0,"t"],[60273,1,""],[60273,0,"r<"],[60277,3,""],[60277,0,"d::st"],[60283,28,""],[60285,1,""],[60285,0,"g>&"],[60289,5,""],[60292,1,""],[60292,0,"s"],[60325,6,""],[60325,0,"std::ve"],[60333,0,"t"],[60335,1,""],[60335,0,"r<std::"],[60344,1,""],[60344,0,"ring>&"],[60359,1,""],[60359,0,"s"],[65250,1,""],[65250,0,"s.size()"],[65268,0,"s"],[65270,1,""],[65270,0,"ze_"],[65289,1,""],[65289,0,"s.size()"],[65325,0,"env->context(), "],[65343,0,"\n       "],[65391,1,""],[65391,0,"s"],[65395,0,".c_str()"],[65413,0,"                    "],[65478,0,"\n        .FromJust()"],[65668,1,""],[65668,0,"s.size()"],[65686,0,"s"],[65688,1,""],[65688,0,"ze_"],[65712,1,""],[65712,0,"s.size()"],[65753,0,"env->context(), "],[65771,0,"\n       "],[65824,1,""],[65824,0,"s"],[65828,0,".c_str()"],[65846,0,"                    "],[65911,0,"\n        .FromJust()"],[66913,0,"n"],[66915,0,"->options()->h"],[66930,0,"s_eva"],[67051,0,"\n                          "],[67093,0,"\n                     "],[67116,0,"    env->options()->"],[67147,0,".c_str()"],[67258,0,"env->o"],[67265,0,"tions()->p"],[67385,0,"env->options()->"],[67532,0,"env->options()->"],[67656,0,"std::vector<std::string> preload_modules =\n      std::move(env->options()->preload_modules);\n  "],[68368,0,"// TODO(addaleax): Uncomment the commented part.\n  "],[68423,0,"/*env->options()->*/"],[68562,0,"e"],[68564,0,"v->"],[68568,1,""],[68569,1,""],[68569,0,"ti"],[68572,2,""],[68572,0,"n"],[68574,1,""],[68574,0,"()->no"],[68701,0,"env->op"],[68709,0,"ions()->t"],[68849,0,"env->options()->"],[69167,0,"env->o"],[69174,0,"tions()->p"],[69304,0,"env->op"],[69312,0,"ions()->t"],[69458,1,""],[69458,0,"4"],[69502,0,"env->options()->"],[69531,1,""],[69531,0,"->"],[69681,0,"env->options()->"],[69710,1,""],[69710,0,"->"],[69733,2,""],[69894,0,"env->options()->"],[69923,1,""],[69923,0,"->"],[70129,0,"env->options()->"],[70158,1,""],[70158,0,"->"],[71284,1,""],[71284,0,"s"],[71288,0,".c_str()"],[77899,0,"\n                "],[77917,0,"env->options()->"],[77946,1,""],[77946,0,"->"],[77969,2,""],[87301,131,""],[87302,16,""],[87303,1,""],[87305,7,""],[87306,15,""],[87307,3,""],[87308,533,""],[87309,25,""],[87310,12,""],[87311,105,""],[87312,3,""],[87313,11,""],[87314,4,""],[87315,19,""],[87316,38,""],[87317,4,""],[87318,823,""],[87318,0,"I"],[87320,95,""],[87321,13,""],[87323,7,""],[87324,35,""],[87325,27,""],[87326,24,""],[87327,7,""],[87328,161,""],[87329,9,""],[87330,115,""],[87331,75,""],[87332,3,""],[87333,2,""],[87334,23,""],[87335,29,""],[87336,9,""],[87337,13,""],[87338,4,""],[87339,9,""],[87340,18,""],[87341,5,""],[87343,168,""],[87344,23,""],[87345,4,""],[87346,18,""],[87356,1,""],[87357,184,""],[87358,306,""],[87359,12,""],[87360,48,""],[87361,148,""],[87362,14,""],[87363,209,""],[87366,4,""],[87367,13,""],[87368,1,""],[87369,7,""],[87371,5,""],[87372,6,""],[87373,1,""],[87374,5,""],[87375,2,""],[87376,14,""],[87377,2,""],[87378,3,""],[87379,2,""],[87380,60,""],[87383,8,""],[87384,56,""],[87385,7,""],[87386,7,""],[87390,2,""],[87391,18,""],[87392,3,""],[87393,43,""],[87394,16,""],[87396,155,""],[87397,14,""],[87398,21,""],[87400,29,""],[87401,402,""],[87402,45,""],[87403,132,""],[87404,3,""],[87405,23,""],[87406,91,""],[87407,4759,""],[87408,8,""],[87409,26,""],[87410,47,""],[87411,27,""],[87412,79,""],[87413,862,""],[87418,5,""],[87419,1245,""],[87420,22,""],[87421,3,""],[87422,10,""],[87423,70,""],[87426,13,""],[94410,0,"// TODO(addaleax): Remove, both from the public API and in implementation.\nbool no_deprecation = false;\n#if HAVE_OPENSSL\nbool ssl_openssl_cert_store = false;\n#if NODE_FIPS_MODE\nbool enable_fips_crypto = false;"],[94620,0,"bool force_fips_crypto = false;\n#endif\n#endif\n\n"],[94684,0,"std::vector<std::str"],[94706,1,""],[94706,0,"g>"],[94713,1,""],[94713,0,"s"],[94733,0,"std::ve"],[94741,0,"t"],[94743,1,""],[94743,0,"r<std::"],[94752,4,""],[94753,1,""],[94753,0,"ing>"],[94759,0,"exec_"],[94767,1,""],[94767,0,"s"],[94787,0,"bool "],[94793,0,"s_env) {\n  // Parse a few argume"],[94827,1,""],[94827,0,"s"],[94829,0,"which ar"],[94838,1,""],[94838,0," sp"],[94843,0,"ific to Node.\n  std::vector<std::string> v8"],[94890,0,"s;\n  std::string error;\n  PerProcessOptionsParser::instan"],[94948,0,"e.Parse(\n      args"],[94975,0,"exec_args,\n "],[94992,0,"&v8_args,\n"],[95008,0,"per_pro"],[95016,0,"ess_"],[95021,1,""],[95021,0,"pt"],[95024,0,".ge"],[95028,0,"(),\n   "],[95036,2,""],[95036,0,"  is_env ? kAllowedInEnvironment : kDis"],[95076,0,"llowedInEnvi"],[95089,3,""],[95089,0,"onment,\n"],[95098,0,"     &"],[95105,1,""],[95105,0,"rror);\n  if (!error.empty()) {\n    fprintf(std"],[95152,2,""],[95152,0,"rr, \"%s: %s\\n\", "],[95171,1,""],[95171,0,"s->at(0).c_str()"],[95188,0," error.c_str());"],[95209,0,"exit(9);\n"],[95220,0,"}\n\n"],[95225,0,"if (per_process_opts->print_version) {\n    printf(\"%s\\n\", NODE_VERSION);\n"],[95302,0,"exit(0);\n"],[95313,0,"}\n\n"],[95318,0,"if"],[95321,1,""],[95321,0,"(per_pr"],[95329,0,"cess_"],[95335,0,"pts->print_he"],[95349,0,"p)"],[95352,0,"{\n    PrintHelp();\n    ex"],[95378,1,""],[95378,0,"t(0);\n  }\n\n  if (per"],[95399,0,"proc"],[95404,0,"ss_opts->pri"],[95417,0,"t_"],[95420,0,"8_help)"],[95428,1,""],[95428,0,"{\n"],[95431,1,""],[95431,0,"   V8::SetFl"],[95444,0,"gsFromString(\"--he"],[95463,0,"p\", 6);\n    exit(0);\n  }\n\n  for (const std::string& cve : per_proces"],[95532,0,"_opts->s"],[95541,0,"curity_reverts"],[95556,0,"\n   "],[95561,1,""],[95561,0,"Revert(cve.c_str());\n"],[95588,1,""],[95588,0,"TODO(addale"],[95600,2,""],[95600,0,"x): Mov"],[95609,0,"this v"],[95616,0,"lidation to"],[95628,1,""],[95628,0,"th"],[95631,1,""],[95632,0,"option p"],[95642,1,""],[95642,0,"sers.\n  a"],[95652,1,""],[95652,0,"to "],[95657,0,"v_op"],[95664,3,""],[95664,0,"= per_pro"],[95674,1,""],[95674,0,"ess_opts->per_isolate->per_env;\n "],[95708,0,"if (!env_opts->userl"],[95729,0,"nd_loade"],[95738,0,"."],[95740,0,"mpty() &&\n "],[95752,0,"    !env_opt"],[95765,0,"->ex"],[95771,1,""],[95771,0,"r"],[95773,0,"mental_modules) {\n    "],[95796,0,"pr"],[95799,2,""],[95799,0,"ntf(s"],[95805,0,"derr, \"%s: --l"],[95820,0,"ader"],[95825,1,""],[95825,0,"requires --experimental-m"],[95852,0,"ules b"],[95859,0," enabled\\n\",\n            args->at(0)"],[95896,0,"c_str());\n    exit(9);\n  }\n"],[95927,0,"f (e"],[95932,0,"v_op"],[95937,0,"s->syntax_check_only"],[95958,0,"&& en"],[95964,1,""],[95965,0,"opts->has_ev"],[95978,0,"l_st"],[95983,0,"in"],[95986,2,""],[95986,0,") {"],[95992,2,""],[95992,0,"  fpri"],[95999,0,"tf("],[96004,0,"derr,"],[96010,0,"\"%s: either --"],[96026,1,""],[96026,0,"eck o"],[96032,2,""],[96033,0,"--e"],[96037,2,""],[96038,0,"l can be used, not both\\n\",\n            a"],[96081,1,""],[96081,0,"s->at(0).c_str())"],[96102,2,""],[96102,0,"  exit(9);\n  }\n\n  if (per_p"],[96130,0,"oces"],[96135,0,"_opts->us"],[96145,1,""],[96145,0,"_openssl_ca && per_p"],[96166,1,""],[96166,0,"oces"],[96171,0,"_opts->use_bundled_ca) {\n    fprintf"],[96208,0,"stderr, \"%s: either --use-openssl-c"],[96244,0," o"],[96247,1,""],[96247,0," --use-bundled-ca "],[96266,0,"an be \"\n                    \"used, not both\\n\""],[96313,0,"\n           "],[96329,2,""],[96329,0,"s->at(0).c_str());\n   "],[96354,0,"it(9);\n  }\n\n  if (std::find(v8_args.b"],[96392,1,""],[96392,0,"gin(), v8"],[96405,1,""],[96405,0,"s.end()"],[96413,0,"\n          "],[96425,0,"     \"--abort-on-uncaught-"],[96453,0,"c"],[96455,1,""],[96455,0,"ption\") != v8"],[96472,2,""],[96472,0,"s.end() ||\n  "],[96486,1,""],[96486,0,"   std::find("],[96505,1,""],[96505,0,"s.begin()"],[96516,1,""],[96522,1,""],[96522,0,"s.end()"],[96530,0,"\n"],[96532,0,"               \"--abort_on_uncaught_except"],[96575,0,"on\") != v8_arg"],[96590,1,""],[96590,0,"."],[96593,1,""],[96593,0,"d()"],[96597,0," {\n    abort_on_uncaught_exception = true"],[96640,0,"  }\n"],[96912,0,"i"],[96914,2,""],[96916,2,""],[96916,0,"s"],[96918,8,""],[96918,0,"d::f"],[96923,3,""],[96923,0,"nd("],[96932,5,""],[96932,0,"s.beg"],[96938,0,"n("],[96941,3,""],[96941,0,","],[96943,15,""],[96949,16,""],[96950,2,""],[96950,0,"."],[96952,2,""],[96952,0,"nd"],[96955,0,"), "],[96967,2,""],[96968,4,""],[96968,0,"!"],[96971,1,""],[96971,0,"v8_args.end()"],[96992,2,""],[97015,19,""],[97384,4,""],[97385,3,""],[97386,3,""],[97388,6,""],[97389,1,""],[97389,0,"::v"],[97393,3,""],[97393,0,"c"],[97395,3,""],[97396,1,""],[97396,0,"r<ch"],[97401,2,""],[97401,0,"r*>"],[97405,3,""],[97405,0,"v8_args_as_"],[97417,1,""],[97417,0,"har_"],[97423,1,""],[97423,0,"r(v8_"],[97429,5,""],[97429,0,"rgs."],[97434,3,""],[97434,0,"iz"],[97437,0,"());\n  if (v8_arg"],[97455,0,"."],[97457,1,""],[97457,0,"ize()"],[97463,0,">"],[97465,2,""],[97465,0,"0)"],[97468,1,""],[97468,0,"{\n    f"],[97476,0,"r (siz"],[97483,3,""],[97483,0,"_"],[97486,3,""],[97487,3,""],[97488,0,"="],[97490,2,""],[97490,0,"0;"],[97493,3,""],[97493,0,"i"],[97495,0,"< v8_"],[97503,1,""],[97503,0,"s.size();"],[97513,0,"++i)\n      v8_"],[97529,1,""],[97529,0,"gs_as_ch"],[97538,3,""],[97539,1,""],[97539,0,"_p"],[97542,2,""],[97542,0,"r[i]"],[97547,8,""],[97547,0,"="],[97549,0,"&v8_args["],[97559,1,""],[97559,0,"][0];\n   "],[97569,2,""],[97572,6,""],[97573,0,"argc"],[97578,2,""],[97578,0,"="],[97580,1,""],[97586,5,""],[97586,0,"s.size("],[97594,0,";"],[97629,3,""],[97635,3,""],[97635,0,"&v8_arg"],[97643,1,""],[97644,1,""],[97646,2,""],[97646,0,"_"],[97651,4,""],[97651,0,"_ptr[0], true);\n    "],[97677,4,""],[97677,0,"s_as_char_p"],[97690,1,""],[97690,0,".resiz"],[97697,0,"(argc"],[97705,0,"  }\n"],[97785,0,"s"],[97787,1,""],[97787,0,"ze_"],[97809,0,"s_as_"],[97815,0,"har_ptr.size()"],[97881,0,"\n           "],[97897,2,""],[97897,0,"s->at("],[97904,1,""],[97904,0,").c_str()"],[97921,1,""],[97921,0,"s_as_char_ptr"],[97944,0,"\n"],[97947,8,""],[97947,0,"if"],[97950,0,"("],[97957,7,""],[97957,0,"s_as"],[97962,0,"ch"],[97966,9,""],[97966,0,"_"],[97970,5,""],[97970,0,".s"],[97973,2,""],[97973,0,"ze"],[97976,7,""],[97976,0,")"],[98002,1,""],[98003,0,"  // TODO(addaleax): Remove."],[98032,2,""],[98032,0,"  zero_fill_all_buffers = per_process_opts->zer"],[98080,0,"_f"],[98083,1,""],[98083,0,"ll_all_buffers;\n "],[98101,1,""],[98102,1,""],[98102,0,"o_depreca"],[98112,1,""],[98113,0,"o"],[98115,2,""],[98116,0,"= per_process_opts->per_isol"],[98145,0,"te->per_env->no_dep"],[98165,1,""],[98165,0,"e"],[98167,1,""],[98167,0,"ation;"],[98174,0,"#if"],[98178,0,"HAVE_OPENSSL\n"],[98193,0,"ssl_openssl_cert_store"],[98216,0,"="],[98218,5,""],[98218,0,"per_pro"],[98226,0,"ess_"],[98231,0,"pts->ssl_ope"],[98245,2,""],[98245,0,"sl_"],[98249,2,""],[98249,0,"e"],[98251,4,""],[98251,0,"t_sto"],[98257,3,""],[98257,0,"e;"],[98260,0,"#if"],[98264,0,"NODE_FIPS_MODE\n"],[98281,1,""],[98281,0,"enable_fips_crypto"],[98300,0,"="],[98302,0,"per_process_opts->enable_fips_crypto;\n"],[98342,0,"force_fips_crypto"],[98360,0,"="],[98362,0,"per_process_opts->force_fips_crypto;\n#endif\n#end"],[98411,0,"f\n}\n\n\nvoid I"],[98424,0,"i"],[98426,0,"(std::vector<std::string>"],[98453,5,""],[98456,1,""],[98456,0,"v"],[98469,0,"std::ve"],[98477,0,"t"],[98479,1,""],[98479,0,"r<std::"],[98488,4,""],[98489,2,""],[98489,0,"ing>"],[99051,0,"std::shared_ptr<EnvironmentOptions> default_env_options =\n      per_process_opts->per_isolate->per_env;\n  "],[99185,3,""],[99185,0,"de"],[99188,2,""],[99188,0,"ault_env"],[99197,0,"o"],[99199,0,"tions->p"],[99388,1,""],[99388,0,"default_env_"],[99401,0,"ptio"],[99406,4,""],[99406,0,"s->"],[99535,1,""],[99535,0,"default_env_"],[99548,0,"ptio"],[99553,4,""],[99553,0,"s->"],[99668,1,""],[99668,0,"default_env_opti"],[99686,1,""],[99686,0,"s->red"],[99693,1,""],[99693,0,"rect"],[99705,5,""],[99705,0,"s"],[99715,0," {"],[99758,0,"\n              "],[99775,1,""],[99775,0,"default_env_opti"],[99793,1,""],[99793,0,"s->red"],[99800,1,""],[99800,0,"rect"],[99812,5,""],[99812,0,"s"],[99816,0,"  }\n"],[99840,0,"std::string* openssl_config = &per_process_opts->openssl_config;\n  "],[99925,1,""],[99925,0,"->"],[99935,0," {"],[99969,1,""],[99986,0,"  }\n"],[100121,9,""],[100122,2,""],[100123,33,""],[100124,18,""],[100124,0,"::v"],[100128,1,""],[100128,0,"c"],[100130,11,""],[100131,4,""],[100132,0,"<"],[100134,6,""],[100135,9,""],[100136,42,""],[100136,0,"::s"],[100140,1,""],[100141,36,""],[100142,1,""],[100143,5,""],[100144,31,""],[100144,0,">"],[100146,10,""],[100149,22,""],[100150,14,""],[100153,9,""],[100154,4,""],[100238,10,""],[100241,1,""],[100241,0,"_"],[100245,9,""],[100246,6,""],[100246,0,".push_b"],[100254,0,"ck(a"],[100261,1,""],[100261,0,"->at("],[100267,1,""],[100267,0,"))"],[100276,0,"// Split NODE_OPTIONS at each ' ' "],[100314,2,""],[100314,0,"a"],[100316,1,""],[100317,0,"e"],[100319,0,".\n  "],[100324,1,""],[100327,1,""],[100328,10,""],[100328,0,"::s"],[100332,0,"r"],[100334,1,""],[100335,0,"g::"],[100339,2,""],[100339,0,"ize"],[100343,1,""],[100344,15,""],[100344,0,"ype"],[100350,5,""],[100350,0,"dex"],[100356,1,""],[100358,0,"d::st"],[100364,0,"ing::npos"],[100379,5,""],[100379,0,"do"],[100382,6,""],[100382,0,"{"],[100388,5,""],[100389,7,""],[100390,2,""],[100392,1,""],[100392,0,"d::s"],[100397,3,""],[100397,0,"r"],[100400,0,"g::s"],[100405,0,"ze_"],[100409,0,"y"],[100411,1,""],[100411,0,"e p"],[100415,1,""],[100415,0,"ev_index"],[100424,1,""],[100424,0,"= index;\n"],[100434,4,""],[100435,1,""],[100437,2,""],[100438,9,""],[100438,0," i"],[100441,8,""],[100441,0,"d"],[100443,1,""],[100443,0,"x = no"],[100450,3,""],[100452,0,"options."],[100461,0,"ind(' ', i"],[100472,0,"dex + 1"],[100480,0,";"],[100489,1,""],[100489,0,"f ("],[100493,1,""],[100493,0,"ndex - "],[100501,1,""],[100502,0,"ev_index"],[100512,0,"= 1)"],[100517,0,"co"],[100520,4,""],[100521,1,""],[100521,0,"inue"],[100527,0,"\n"],[100534,7,""],[100534,0,"c"],[100536,3,""],[100537,3,""],[100537,0,"st std::st"],[100548,0,"in"],[100551,4,""],[100551,0," "],[100553,3,""],[100553,0,"ptio"],[100558,4,""],[100561,0,"node_op"],[100569,0,"i"],[100571,1,""],[100571,0,"ns.substr(pr"],[100584,0,"v_i"],[100588,2,""],[100588,0,"dex"],[100592,1,""],[100592,0,"+"],[100594,0,"1,"],[100597,1,""],[100597,0,"index);"],[100609,5,""],[100609,0,"  i"],[100613,1,""],[100613,0," (!opti"],[100621,3,""],[100622,10,""],[100622,0,".e"],[100625,12,""],[100627,2,""],[100627,0,"y())"],[100636,3,""],[100637,0,"   "],[100641,3,""],[100641,0,"nv"],[100647,0,"v.empla"],[100655,0,"e"],[100657,0,"back(std::move(option))"],[100686,5,""],[100686,0,"}"],[100688,1,""],[100688,0,"w"],[100690,4,""],[100690,0,"ile"],[100694,0,"(ind"],[100700,8,""],[100701,0,"!"],[100704,5,""],[100704,0,"s"],[100706,0,"d::st"],[100712,0,"ing::npos)"],[100724,0,"\n\n"],[100743,25,""],[100746,7,""],[100750,13,""],[100751,1,""],[100753,2,""],[100753,0,"n"],[100755,10,""],[100756,1,""],[100756,0,"lp"],[100759,10,""],[100760,8,""],[100760,0,","],[100762,4,""],[100763,24,""],[100764,1,""],[100764,0,"u"],[100766,5,""],[100798,6,""],[100809,1,""],[100809,0,"v"],[100812,5,""],[100812,0,"f"],[100814,3,""],[100814,0,"lse"],[100908,6,""],[100908,0,"per"],[100920,0,"op"],[100923,0,"s->t"],[100966,6,""],[100966,0,"per"],[100978,0,"opts->"],[101100,0,"per_process_opts->"],[101173,0,"per_process_opts->"],[101332,0,"per_process_opts->"],[101515,1,""],[101515,0,"->at("],[101521,1,""],[101522,0,".c_str())"],[101804,0,"// TODO(addaleax): Deprecate and eventually remove this."],[101866,0,"Init(int* argc,\n          const char** argv,\n          int* exec_argc,\n          const char*** exec_argv) {\n  std::vector<std::string> argv_(argv, argv + *argc);  // NOLINT\n  std::vector<std::string> exec_argv_;\n\n  Init(&argv_, &exec_argv_);\n\n  *argc = argv_.size();\n  *exec_argc = exec_argv_.size();\n  // These leak memory, because, in the original code of this function, no\n  // extra allocations were visible. This should be okay because this function\n  // is only supposed to be called once per process, though.\n  *exec_argv = Malloc<const char*>(*exec_argc);\n  for (int i = 0; i < *exec_argc; ++i)\n    (*exec_argv)[i] = strdup(exec_argv_[i].c_str());\n  for (int i = 0; i < *argc; ++i)\n    argv[i] = strdup(argv_[i].c_str());\n}\n\nvoid "],[106057,0,"// TODO("],[106066,0,"ddaleax): This is a m"],[106088,0,"ch be"],[106094,0,"ter place f"],[106106,0,"r parsing"],[106116,0,"p"],[106118,0,"r-E"],[106123,0,"ironment\n  // options than the"],[106154,0,"global parse call.\n  std::vector<std::string> args(argv, argv + argc);\n  std::vector<std::string> exec_args(exec_argv, exec_argv + exec_argc);\n  Environment* env "],[106386,0,"        "],[106445,6,""],[106448,12,""],[106448,0,"s"],[106459,1,""],[106459,0,"s"],[107766,7,""],[107767,3,""],[107772,0,"std::ve"],[107780,2,""],[107780,0,"to"],[107783,5,""],[107783,0,"<std::"],[107791,1,""],[107791,0,"ring>&"],[107801,1,""],[107801,0,"s"],[107819,5,""],[107820,10,""],[107827,6,""],[107827,0,"std::ve"],[107835,0,"t"],[107837,1,""],[107837,0,"r<std::"],[107846,1,""],[107846,0,"ring>&"],[107861,1,""],[107861,0,"s"],[108086,7,""],[108086,0,"s"],[108097,12,""],[108097,0,"s"],[108143,1,""],[108143,0,"s.size()"],[108161,1,""],[108161,0,"s"],[108165,0,".c_str()"],[108214,0,"env.options()->"],[108252,0,"env.options()->"],[108280,1,""],[108280,0,"->"],[108299,2,""],[108302,0,"\n     "],[108345,0," {"],[108390,0,"  }\n"],[108466,0,"// TODO(addaleax): Maybe access this option directly "],[108520,0,"nstead o"],[108530,0,"setting\n  // a boolean member of Environment. Ditto below for trace_sync_io.\n  if "],[108613,0,"e"],[108615,0,"v.options()->n"],[108909,0,"env.options()->"],[110979,1,""],[110995,3,""],[110996,6,""],[111001,6,""],[111002,0,"std::ve"],[111010,0,"t"],[111012,1,""],[111012,0,"r<std::"],[111021,1,""],[111021,0,"ring>&"],[111031,1,""],[111031,0,"s"],[111051,1,""],[111051,0,"co"],[111054,0,"s"],[111057,2,""],[111057,0,"std::v"],[111065,2,""],[111065,0,"to"],[111068,7,""],[111068,0,"<std::"],[111076,4,""],[111077,4,""],[111077,0,"i"],[111079,3,""],[111079,0,"g>&"],[111091,1,""],[111091,0,"s"],[111869,0,"// TODO(addaleax): Th"],[111891,0,"s should load a real per-Isolate option, currently\n    // this is still ef"],[111966,0,"ectively"],[111975,0,"per-process.\n    if (isolate_data->options"],[112018,0,")->"],[112177,18,""],[112177,0,"s"],[112188,1,""],[112188,0,"s"],[112659,1,""],[112660,2,""],[112661,3,""],[112662,7,""],[112663,17,""],[112663,0,"d"],[112666,17,""],[112666,0,"v"],[112668,1,""],[112669,3,""],[112670,3,""],[112670,0,"or<"],[112675,2,""],[112675,0,"d::"],[112679,3,""],[112680,16,""],[112680,0,"r"],[112683,0,"g>"],[112686,1,""],[112687,0,"rg"],[112690,6,""],[112690,0,"(a"],[112693,1,""],[112693,0,"gv,"],[112697,5,""],[112697,0,"a"],[112699,2,""],[112700,3,""],[112700,0,"v"],[112702,3,""],[112702,0,"+"],[112704,5,""],[112708,0,")"],[112713,0,"std::ve"],[112721,0,"t"],[112723,1,""],[112723,0,"r<"],[112727,4,""],[112727,0,"d::st"],[112733,2,""],[112733,0,"ing>"],[112746,1,""],[112746,0,"s"],[112751,2,""],[112751,0,"// Th"],[112757,8,""],[112757,0,"s"],[112759,2,""],[112760,0,"eed"],[112764,0," "],[112766,7,""],[112767,3,""],[112768,3,""],[112769,0,"un "],[112773,0,"before"],[112780,2,""],[112780,0," V8::Initi"],[112791,3,""],[112791,0,"lize("],[112797,1,""],[112797,0,".\n "],[112801,0,"Init("],[112807,5,""],[112810,1,""],[112810,0,"s"],[112822,1,""],[112822,0,"s"],[113352,0,"\n      per_process_opts->"],[113559,7,""],[113559,0,"s"],[113570,12,""],[113570,0,"s"],[114077,46,""]],"_dtSpan":[739774,762968]},{"parents":[791],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[3094,133,""],[4286,6,""],[4287,51,""],[49445,86,""],[49446,32,""],[49447,637,""],[49448,34,""],[49449,85,""],[49450,17,""],[49451,2,""],[49452,45,""],[49454,30,""],[49455,17,""],[49457,9,""],[49458,12,""],[49460,5,""],[49461,90,""],[49462,7,""],[49463,10,""],[49464,82,""],[49465,81,""],[49466,40,""],[49470,114,""],[49472,405,""],[49473,116,""],[49476,5,""],[49477,4,""],[49478,2,""],[49479,31,""],[49480,40,""],[49502,10,""],[49503,3,""],[49504,137,""],[49505,93,""],[49506,11,""],[49507,344,""],[49508,7,""],[49509,28,""],[49510,78,""],[49511,18,""],[49512,3,""],[49514,207,""],[49515,1,""],[49516,2,""],[49518,38,""],[49519,65,""],[49522,162,""],[49523,4044,""]],"_dtSpan":[762968,770447]},{"parents":[792],"numChildren":1,"agent":65,"time":"1970-01-01T00:00:00Z","patches":[[88639,0,"#if HAVE_OPENSSL\n"],[88903,0,"#endif\n"]],"_dtSpan":[770447,770471]},{"parents":[793],"numChildren":1,"agent":31,"time":"1970-01-01T00:00:00Z","patches":[[14570,0,"These are all flags available for use with NODE_OPTIONS.\n//\n// Disallowed flags:\n//  These flags cause Node to do things other than run scripts:\n//    --version / -v\n//    --eval / -e\n//    --print / -p\n//    --check / -c\n//    --interactive / -i\n//    --prof-process\n//    --v8-options\n//  These flags are disallowed because security:\n//    --preserve-symlinks\nconst char* const environment_flags[] = {\n  // Node options, sorted in `node --help` order for ease of comparison.\n  \"--enable-fips\",\n  \"--experimental-modules\",\n  \"--experimenatl-repl-await\",\n  \"--experimental-vm-modules\",\n  \"--experimental-worker\",\n  \"--force-fips\",\n  \"--icu-data-dir\",\n  \"--inspect\",\n  \"--inspect-brk\",\n  \"--inspect-port\",\n  \"--loader\",\n  \"--napi-modules\",\n  \"--no-deprecation\",\n  \"--no-force-async-hooks-checks\",\n  \"--no-warnings\",\n  \"--openssl-config\",\n  \"--pending-deprecation\",\n  \"--redirect-warnings\",\n  \"--require\",\n  \"--throw-deprecation\",\n  \"--tls-cipher-list\",\n  \"--trace-deprecation\",\n  \"--trace-event-categories\",\n  \"--trace-event-file-pattern\",\n  \"--trace-events-enabled\",\n  \"--trace-sync-io\",\n  \"--trace-warnings\",\n  \"--track-heap-objects\",\n  \"--use-bundled-ca\",\n  \"--use-openssl-ca\",\n  \"--v8-pool-size\",\n  \"--zero-fill-buffers\",\n  \"-r\"\n};\n\n  // V8 options (define with '_', which allows '-' or '_')\nconst char* const v8_environment_flags[] = {\n  \"--abort_on_uncaught_exception\",\n  \"--max_old_space_size\",\n  \"--perf_basic_prof\",\n  \"--perf_prof\",\n  \"--stack_trace_limit\",\n};\n\nint v8_environment_flags_count = arraysize(v8_environment_flags);\nint environment_flags_count = arraysize(environment_flags);\n\n// "]],"_dtSpan":[770471,772071]},{"parents":[794],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[94726,0,"\n          "],[94758,0," - prev_index - 1"],[99216,36,""],[99219,6,""],[99220,3,""],[99228,77,""],[99294,1,""],[99294,0,",\n "],[99298,2,""],[99300,0,"A"],[99302,3,""],[99303,3,""],[99303,0,"ayBuff"],[99310,4,""],[99310,0,"rAll"],[99315,5,""],[99315,0,"c"],[99318,4,""],[99319,1,""],[99319,0,"r* "],[99323,4,""],[99324,0,"l"],[99326,6,""],[99326,0,"c"],[99329,1,""],[99331,1,""],[99332,1,""],[99332,0," {"],[99335,16,""],[99336,1,""],[99336,0," "],[99339,1,""],[99340,0,"urn n"],[99346,0,"w "],[99365,8,""],[99366,0,"   "],[99382,10,""],[99383,0,"   "],[99396,21,""],[99397,0,"   "],[99414,21,""],[99415,0,"   "],[99427,1,""],[99428,10,""],[99428,0,"!="],[99432,6,""],[99432,0,"u"],[99434,17,""],[99435,2,""],[99436,5,""],[99437,2,""],[99438,2,""],[99439,0,"? "],[99469,0," : nullptr"]],"_dtSpan":[772071,772437]},{"parents":[795],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[38859,7,""],[38860,17,""],[38868,1,""],[38868,0,"env->isolate(),"],[38884,0,"errmsg,"]],"_dtSpan":[772437,772484]},{"parents":[796],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[3556,0,"options_parser::kAllowedInEnvironment;\nusing options_parser::kDisallowedInEnvironment;\nusing "],[5023,0,"Mutex per_proces"],[5040,0,"_op"],[5044,0,"s_mutex;\nst"],[73102,1,""],[73103,21,""],[73104,1,""],[73105,7,""],[73106,19,""],[73107,17,""],[73108,28,""],[89061,0,"\n  {\n  "],[89070,0,"// TODO(addaleax): The mutex here should ideally be held during the\n    // entire function, but that doesn't play well with the exit() calls below.\n    Mutex::ScopedLock lock(per_process_opts_mutex);\n    options_parser::"],[89337,0,"  "],[89351,0,"  "],[89370,0,"  "],[89388,0,"  "],[89420,0,"  "],[89487,0,"  "],[89500,0,"}\n\n  "],[73076,6712,""],[73077,72,""],[73078,247,""],[73079,17,""],[73080,103,""],[73081,3,""],[73082,9,""],[73083,94,""],[73084,25,""],[73085,2,""],[73086,49,""],[73087,31,""],[73088,6,""],[73089,33,""],[73090,232,""],[73091,12,""],[73093,5,""],[73094,36,""],[73095,89,""],[73096,47,""],[73097,11,""],[73098,6,""],[73099,8,""],[73100,269,""],[73101,13,""],[73103,240,""],[81315,73,""]],"_dtSpan":[772484,781389]},{"parents":[797],"numChildren":1,"agent":165,"time":"1970-01-01T00:00:00Z","patches":[[42200,1,""],[42200,0,"Val"],[42204,6,""],[42204,0,"e"],[42283,15,""],[42823,0,".As<Function>()\n            "]],"_dtSpan":[781389,781443]},{"parents":[798],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[33546,1,""],[33546,0,"i"],[33548,6,""],[33549,1,""],[33549,0," code = "],[33577,0,"env->context()).FromMaybe(0"],[33605,0,";\n  env->Exit(code"]],"_dtSpan":[781443,781505]},{"parents":[799],"numChildren":1,"agent":58,"time":"1970-01-01T00:00:00Z","patches":[[3731,0,"DEFAULT;\nusing v8::DontEnum;\nusing v8::"],[3901,0,"32;\nusing v8::Int"],[4062,0,"MicrotasksPolicy;\nusing v8::"],[4152,0,"ewStringType;\nusing v8::None;\nusing v8::N"],[4316,0,"Attribute;\nusing v8::Property"],[4369,0,"ReadOnly;\nusing v8::Script;\nusing v8::ScriptCompiler;\nusing v8::"],[4530,0,"acingController;\nusing v8::Tr"],[5426,4,""],[5577,4,""],[8642,4,""],[8761,4,""],[17463,4,""],[17637,4,""],[17880,4,""],[19625,4,""],[26175,4,""],[30324,4,""],[30347,4,""],[43813,4,""],[45569,4,""],[45828,4,""],[46130,4,""],[50866,4,""],[53921,4,""],[53968,0,"    "],[54428,4,""],[54447,4,""],[54455,1,""],[54456,70,""],[54467,1,""],[55112,4,""],[55127,4,""],[59825,4,""],[60254,4,""],[61567,4,""],[62471,4,""],[65479,4,""],[65678,4,""],[71622,4,""],[71628,4,""],[71759,4,""],[71765,4,""],[71909,4,""],[71915,4,""],[88800,4,""],[92617,4,""],[93310,4,""],[93382,4,""],[93394,4,""],[96614,4,""]],"_dtSpan":[781505,781984]},{"parents":[800],"numChildren":1,"agent":172,"time":"1970-01-01T00:00:00Z","patches":[[74296,9,""],[74296,0,"CHECK(args[0]->IsNumber())"],[74326,0,"p"],[74328,1,""],[74328,0,"d_"],[74331,5,""],[74332,1,""],[74345,2,""],[74345,0,".As<"],[74356,0,">()->"],[74372,0,"int "],[74400,0,"\n"],[74835,13,""],[75092,3,""],[75092,0,"CHECK(args[0]->IsNumber());\n"],[75121,1,""],[75122,1,""],[75127,1,""],[75128,0,"pid = "],[75141,2,""],[75141,0,".As<"],[75152,0,">()->"]],"_dtSpan":[781984,782109]},{"parents":[801],"numChildren":1,"agent":8,"time":"1970-01-01T00:00:00Z","patches":[[96229,0,", uv_loop_t* event_loop"],[96471,1,""],[96471,0,"Allocat"],[96479,1,""],[96480,6,""],[96532,0,"// Register the isolate on the platform before the isolate gets initialized,\n  // so that the isolate can access the platform during initialization.\n  v8_platform.Platform()->RegisterIsolate(isolate, event_loop);\n  Isolate::Initialize(isolate, params);\n\n  "],[97479,0,", event_loop"],[98539,0,"  v8_platform.Platform()->UnregisterIsolate(isolate);\n"]],"_dtSpan":[782109,782469]},{"parents":[802],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[92774,0,"MultiIsolatePlatform* InitializeV8Platform(int thread_pool_size) {\n  "],[92844,0,"8_platf"],[92852,0,"rm.In"],[92858,0,"tialize(thread_pool_size);\n  return v8_platform.Platform();\n}\n\n\nvoi"],[99722,12,""],[99732,0,"V8Platform"],[99743,7,""],[4943,96,""],[82629,0,"env_opts->"],[94360,69,""],[94785,56,""]],"_dtSpan":[782469,782877]},{"parents":[803],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[14828,1600,""]],"_dtSpan":[782877,784477]},{"parents":[804],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[29191,1523,""],[4337,32,""],[49277,815,""],[49281,1,""]],"_dtSpan":[784477,786848]},{"parents":[805],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[63613,34,""]],"_dtSpan":[786848,786882]},{"parents":[806],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[90359,242,""]],"_dtSpan":[786882,787124]},{"parents":[807],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[15582,0," != nullptr &&\n         env"],[15872,0,"CHECK_NOT_NULL(env);\n  "],[16133,0,"CHECK_NOT_NULL("],[16151,0,");\n  env"],[16405,0,"CHECK_NOT_NULL("],[16423,0,");\n  env"],[19419,0,"HECK_NOT_NULL(env);\n  C"],[39183,0,"CHECK_NOT_NULL(env);  // TODO(addaleax): Handle nullptr here.\n  "],[47170,6,""],[47171,6,""],[47172,1,""],[84985,0,"Loc"],[84989,2,""],[84989,0,"l<C"],[84993,0,"ntext>"],[85087,0,"Envi"],[85092,0,"onm"],[85096,0,"n"],[85098,2,""],[85098,0,"* e"],[85102,0,"v ="],[85138,0,";\n  if (env == nullptr)\n    return nullptr;\n  return env"]],"_dtSpan":[787124,787406]},{"parents":[808],"numChildren":1,"agent":43,"time":"1970-01-01T00:00:00Z","patches":[[9870,0,", true"]],"_dtSpan":[787406,787412]},{"parents":[809],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[1444,8,""],[1448,23,""],[1449,29,""],[66945,33,""],[66946,33,""]],"_dtSpan":[787412,787538]},{"parents":[810],"numChildren":1,"agent":74,"time":"1970-01-01T00:00:00Z","patches":[[70938,0,"  DWORD pid = 0;\n"],[71086,1,""],[71087,5,""]],"_dtSpan":[787538,787561]},{"parents":[811],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[76786,0,"vector<"],[76795,0,"d::st"],[76804,0,">"],[76811,0,"s{}"],[77250,0,"s"],[77271,0,"s"],[77289,0,"or (auto const& error : errors) {\n      f"],[77398,0,"}\n    "],[77703,1,""],[77704,64,""],[77755,27,""],[77757,4,""],[77758,7,""],[77759,258,""],[77760,37,""],[77761,61,""],[77762,290,""]],"_dtSpan":[787561,788375]},{"parents":[812],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[70782,0,"\n  if (args.Length() != 1) {\n    env->ThrowError(\"Invalid"],[70840,0,"number of"],[70850,0,"arguments.\");\n    return;\n  }\n\n  "],[71057,0,"OnScopeLeave cleanup([&]() {\n    "],[71094,1,""],[71094,0,"process != nullpt"],[71112,1,""],[71112,0,")\n      Clo"],[71124,2,""],[71125,0,"Ha"],[71128,1,""],[71128,0,"dle(process);\n    if ("],[71152,2,""],[71152,0,"read"],[71160,1,""],[71160,0,"nullptr"],[71168,0,"\n "],[71171,2,""],[71175,0,"Clos"],[71180,0,"Ha"],[71183,4,""],[71183,0,"dle(t"],[71190,12,""],[71190,0,"e"],[71192,1,""],[71192,0,"d);\n    "],[71201,0,"f (han"],[71208,0,"ler !="],[71217,0,"llptr)\n      Un"],[71233,1,""],[71233,0,"apVi"],[71238,0,"wOfFile(handle"],[71253,0,");\n   "],[71260,1,""],[71260,0,"i"],[71263,0,"(m"],[71266,1,""],[71266,0,"ppin"],[71271,0," != n"],[71277,3,""],[71277,0,"llp"],[71281,3,""],[71281,0,"r"],[71283,1,""],[71288,4,""],[71289,0," Cl"],[71293,2,""],[71293,0,"seHandle(mapping)"],[71315,0,");"],[71774,2,""],[71774,0,"re"],[71777,3,""],[71778,1,""],[71778,0,"rn"],[72007,2,""],[72007,0,"re"],[72010,3,""],[72011,1,""],[72011,0,"rn"],[72304,2,""],[72304,0,"re"],[72307,3,""],[72308,1,""],[72308,0,"rn"],[72678,2,""],[72678,0,"re"],[72681,3,""],[72682,1,""],[72682,0,"rn"],[73181,2,""],[73181,0,"re"],[73184,3,""],[73185,1,""],[73185,0,"rn"],[73489,1,""],[73490,76,""],[73495,2,""],[73496,7,""],[73497,9,""],[73498,10,""],[73499,7,""],[73500,26,""],[73501,4,""],[73502,7,""],[73503,22,""],[73505,1,""],[73506,11,""],[73507,37,""],[73507,0,"}"]],"_dtSpan":[788375,788995]},{"parents":[813],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[2317,20,""],[3590,23,""],[3975,16,""],[4096,18,""],[4139,19,""]],"_dtSpan":[788995,789091]},{"parents":[814],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[15165,0,"per_process_opts->"],[58714,29,""],[58715,22,""],[58719,2,""],[58735,2,""],[76197,23,""],[76198,10,""],[76199,10,""],[76200,8,""],[76201,3,""],[76202,55,""],[76203,25,""],[76204,4,""],[76205,48,""],[76206,12,""],[76207,59,""],[79052,411,""]],"_dtSpan":[789091,789832]},{"parents":[815],"numChildren":1,"agent":4,"time":"1970-01-01T00:00:00Z","patches":[[8879,0,"// Tracing must be initialized before "],[8925,0," threads are created.\n    platform"],[9073,35,""],[9150,0,"  // Destroy tracing after the platform (and platform threads) have been\n    // stopped.\n    tracing_agent_.reset(nullptr);\n  "]],"_dtSpan":[789832,790065]},{"parents":[816],"numChildren":1,"agent":126,"time":"1970-01-01T00:00:00Z","patches":[[29309,9,""],[29309,0,"[[noreturn]]"],[29408,9,""],[29408,0,"[[noreturn]]"],[38703,9,""],[38703,0,"[[noreturn]]"]],"_dtSpan":[790065,790128]},{"parents":[817],"numChildren":1,"agent":58,"time":"1970-01-01T00:00:00Z","patches":[[6949,41,""],[6951,35,""],[6953,68,""],[6954,18,""],[6955,285,""],[6984,29,""],[6985,2,""],[6985,0,"cryp"],[6990,1,""],[6990,0,"o"],[6993,1,""],[6993,0,"Ge"],[6996,6,""],[6997,3,""],[6997,0,"pen"],[7003,1,""],[7004,12,""],[7004,0,"ers"],[7008,8,""],[7008,0,"on("],[7014,6,""],[52799,316,""],[52806,17,""],[52807,7,""],[52809,77,""],[52828,1,""],[52834,1,""],[52844,1,""],[52850,1,""],[52861,1,""],[52867,1,""],[52897,1,""],[52897,0,"crypto::Get"],[52909,3,""],[52909,0,"pen"],[52915,1,""],[52916,12,""],[52916,0,"ers"],[52920,8,""],[52920,0,"on().c_str()"],[52935,4,""]],"_dtSpan":[790128,791141]},{"parents":[818],"numChildren":1,"agent":4,"time":"1970-01-01T00:00:00Z","patches":[[8148,0,"node::tr"],[8157,0,"cing::TraceEventHelper::SetAgent(tracing_agent_.get());\n    a"],[8358,65,""],[86514,0,"node::tracing::"]],"_dtSpan":[791141,791290]},{"parents":[819],"numChildren":1,"agent":155,"time":"1970-01-01T00:00:00Z","patches":[[2226,0,"fdef NODE_ENABLE_LARGE_CODE_PAGES\n#i"],[2269,0,"\"large_pages/node_large_page.h\"\n#endif\n\n#include "],[92525,0,"#ifdef NODE_ENABLE_LARGE_CODE_PAGES\n  if (node::IsLargePagesEnabled()) {\n    if (node::MapStaticCodeToLargePages() != 0) {\n      fprintf(stderr, \"Reverting to default page size\\n\");\n    }\n  }\n#endif\n\n"]],"_dtSpan":[791290,791575]},{"parents":[820],"numChildren":1,"agent":148,"time":"1970-01-01T00:00:00Z","patches":[[86434,0,"Environment* GetCurrentEnvironment(Local<Context> context) {\n  return Environment::GetCurrent(context);\n}\n\n\n"]],"_dtSpan":[791575,791683]},{"parents":[821],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[45182,377,""],[45717,0,"nstants\")) {\n    exports = Object::New(env->isolate());\n    CHECK(exports->SetPrototype(env->context(),\n                                Null(env->isolate())).FromJust());\n    DefineConstants(env->isolate(), exports);\n  } else if (!strcmp(*module_v, \"natives\")) {\n    exports = Object::New(env->isolate());\n    DefineJavaScript(env, exports);\n  } else if (!strcmp(*module_v, \"co"]],"_dtSpan":[791683,792437]},{"parents":[822],"numChildren":1,"agent":60,"time":"1970-01-01T00:00:00Z","patches":[[40969,0,"FatalException(const FunctionCallbackInfo<Value>& args) {\n  Isolate* isolate = args.GetIsolate();\n  Environment* env = Environment::GetCurrent(isolate);\n  if (env != nullptr && env->abort_on_uncaught_exception()) {\n    Abort();\n  }\n  Local<Value> exception = args[0];\n  Local<Message> message = Exception::CreateMessage(isolate, exception);\n  FatalException(isolate, exception, message);\n}\n\n\nstatic void "],[68210,0,"Local<Function> trigger_fatal_exception =\n      env->NewFunctionTemplate(FatalException)->GetFunction(env->context())\n          .ToLocalChecked();\n\n  "],[68631,0,",\n    trigger_fatal_exception,"]],"_dtSpan":[792437,793021]},{"parents":[823],"numChildren":1,"agent":131,"time":"1970-01-01T00:00:00Z","patches":[[39579,0,"Maybe"],[39605,3,""],[39606,5,""],[39645,0,"->Call("],[39661,4,""],[39661,0,"env"],[39666,4,""],[39666,0,"context"],[39674,0,"), "],[39943,0,".ToLocalChecked()"]],"_dtSpan":[793021,793079]},{"parents":[824],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[11447,0,"tracing::AgentWriterHandle* GetTracingAgentWriter() {\n  return v8_platform.GetTracingAgentWriter();\n}\n\n"],[86923,46,""],[86924,28,""],[88781,37,""]],"_dtSpan":[793079,793293]},{"parents":[825],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[1202,0,"context_data.h\"\n#include \"node_errors.h\"\n#include \"node_internals.h\"\n#include \"node_"],[1450,1,""],[1450,0,"v"],[1453,6,""],[1453,0,"s"],[1455,9,""],[1456,5,""],[1457,9,""],[11657,106,""],[11658,4,""],[11660,792,""],[11663,3,""],[11664,8,""],[11665,5,""],[11666,22,""],[11668,16,""],[19640,1244,""],[19642,66,""],[19643,7,""],[19644,7,""],[19645,4,""],[19647,2,""],[19648,111,""],[19649,40,""],[19650,2,""],[19651,15,""],[19652,9,""],[19653,8,""],[19654,4,""],[19655,38,""],[19657,4,""],[19658,13,""],[19659,35,""],[19660,3,""],[19661,196,""],[19662,7,""],[19665,29,""],[19666,58,""],[19667,98,""],[19668,45,""],[19669,8,""],[19670,40,""],[19671,159,""],[19672,314,""],[19673,14,""],[19674,26,""],[19675,29,""],[19676,162,""],[19677,151,""],[19678,15,""],[19679,11,""],[19680,5,""],[19681,2,""],[19682,153,""],[19683,171,""],[19684,100,""],[19685,14,""],[19686,35,""],[19687,58,""],[19689,106,""],[19690,782,""],[19691,105,""],[19692,1,""],[19703,12,""],[19705,156,""],[19706,40,""],[19707,16,""],[19708,49,""],[19709,1102,""],[19710,55,""],[19711,67,""],[19712,1,""],[19713,2,""],[19714,11,""],[19715,313,""],[19716,6,""],[19717,49,""],[19718,11,""],[19719,109,""],[19720,331,""],[19721,192,""],[19722,35,""],[19724,6,""],[19725,31,""],[19726,86,""],[19727,43,""],[19728,46,""],[19729,21,""],[19733,1,""],[20791,49,""],[20793,267,""],[20794,1,""],[20795,171,""],[20796,6,""],[20797,11,""],[20801,1,""],[29418,275,""],[29419,2337,""],[29420,15,""],[29421,23,""],[29422,13,""],[29423,113,""],[29424,45,""],[29425,34,""],[29426,175,""],[29427,3,""],[29428,5,""],[29429,8,""],[29430,113,""],[29431,1,""],[29432,53,""],[29433,14,""],[29434,1,""],[29435,120,""],[29436,1,""]],"_dtSpan":[793293,805517]},{"parents":[826],"numChildren":1,"agent":46,"time":"1970-01-01T00:00:00Z","patches":[[1837,0,"fdef NODE_EXPERIMENTAL_HTTP\n# i"],[1876,0,"ll"],[1882,0,".h\"\n#else  /* !NODE_EXPERIMENTAL"],[1915,0,"HTTP */\n# include \"http_"],[1950,0,"endif  /* NODE_EXPERIMENTAL_HTTP */\n#"],[5019,0,"#ifdef NODE_EXPERIMENTAL_HTTP\nstatic const char llhttp_version[] =\n    NODE_STRINGIFY(LLHTTP_VERSION_MAJOR)\n    \".\"\n    NODE_STRINGIFY(LLHTTP_VERSION_MINOR)\n    \".\"\n    NODE_STRINGIFY(LLHTTP_VERSION_PATCH);\n#else  /* !NODE_EXPERIMENTAL_HTTP */\nstatic const char http_parser_version[] =\n    NODE_STRINGIFY(HTTP_PARSER_VERSION_MAJOR)\n    \".\"\n    NODE_STRINGIFY(HTTP_PARSER_VERSION_MINOR)\n    \".\"\n    NODE_STRINGIFY(HTTP_PARSER_VERSION_PATCH);\n#endif  /* NODE_EXPERIMENTAL_HTTP */\n\n"],[6791,0,"#ifdef NODE_EXPERIMENTAL_HTTP\n"],[6825,0,"tra"],[6829,0,"e_pr"],[6834,1,""],[6834,0,"ces"],[6838,0,"->Se"],[6843,2,""],[6843,0,"String(\"ll"],[6854,2,""],[6854,0,"ttp\","],[6860,0,"ll"],[6866,7,""],[6874,4,""],[6874,0,");"],[6877,5,""],[6877,0,"#else"],[6884,0,"/*"],[6887,0,"!"],[6893,2,""],[6893,0,"EXPE"],[6899,0,"ME"],[6902,5,""],[6902,0,"TAL_"],[6910,23,""],[6911,10,""],[6911,0,"*/"],[6918,8,""],[6918,0,"trace"],[6924,0,"process->"],[6934,8,""],[6934,0,"etString"],[6943,4,""],[6943,0,"\"http"],[6949,6,""],[6949,0,"parser\", http"],[6963,7,""],[6963,0,"parser"],[6970,5,""],[6970,0,"version"],[6978,12,""],[6978,0,";"],[6980,3,""],[6980,0,"#endif"],[6988,0,"/*"],[6991,2,""],[6996,2,""],[6996,0,"EXPE"],[7002,0,"ME"],[7005,5,""],[7005,0,"TAL_"],[7013,23,""],[7013,0," */"],[7162,66,""],[40238,22,""],[40238,0,"#ifd"],[40243,13,""],[40243,0,"f"],[40250,2,""],[40250,0,"EXPE"],[40256,0,"ME"],[40259,5,""],[40259,0,"TAL_"],[40267,6,""],[40267,0,"\n  "],[40271,2,""],[40272,3,""],[40272,0,"AD"],[40276,0,"LY"],[40279,3,""],[40279,0,"PR"],[40282,0,"PE"],[40285,1,""],[40285,0,"TY(versions,"],[40298,5,""],[40318,12,""],[40319,1,""],[40319,0,"llhttp"],[40326,0,","],[40328,1,""],[40348,16,""],[40348,0,"FIXED_O"],[40356,2,""],[40358,0,"BYTE_"],[40369,3,""],[40370,25,""],[40370,0,"env->isolate("],[40384,13,""],[40384,0,","],[40386,27,""],[40386,0,"llhttp_version));"],[40404,8,""],[40404,0,"#else"],[40411,2,""],[40411,0,"/*"],[40414,24,""],[40414,0,"!"],[40420,2,""],[40420,0,"EXPE"],[40426,0,"ME"],[40429,5,""],[40429,0,"TAL_"],[40437,23,""],[40437,0," */"],[40587,0,"#endif  /* NODE_EXPERIMENTAL_HTTP */\n\n"]],"_dtSpan":[805517,806865]},{"parents":[827],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[17848,0,"i"],[17850,0,"olate->GetCurrentContext(),\n                                      s"],[17923,0,".ToLocalChecked()"],[36588,0,"nv->context(), e"],[36625,0,".FromJust()"],[37110,0,"nv->conte"],[37120,0,"t(),\n                                       ex"],[37177,0,".ToLocalChecked()"],[37571,0,"env->context(),\n           "],[37645,0,"\n          "],[37663,0,".FromJust()"],[37687,0,"env->context(),\n           "],[37758,0,"\n          "],[37791,0,".FromJust()"],[37848,0,"env->context(),\n           "],[37921,0,"\n          "],[37954,0,".FromJust()"],[38122,0,"env->context(),\n           "],[38199,0,"\n          "],[38224,0,".FromJust()"],[38248,0,"env->context(),\n           "],[38324,0,"\n          "],[38349,0,".FromJust()"],[38373,0,"env->context(),\n           "],[38450,0,"\n          "],[38475,0,".FromJust()"],[38499,0,"env->context(),\n           "],[38571,0,"\n          "],[38596,0,".FromJust()"],[44696,0,"env->context(),\n               "],[44773,0,"\n              "],[44799,0,".FromJust()"],[45182,0,"env->context(),\n               "],[45294,0,".FromJust()"],[45753,0,"env->context(),\n               "],[45829,0,"\n              "],[45857,0,".FromJust()"],[47509,0,"env->context(), "],[47535,0,".FromJust()"],[50662,0,"env->context(),\n               "],[50775,0,".FromJust()"],[56392,0,"env->context(),\n              "],[56470,0,"\n             "],[56492,0,".FromJust()"],[74132,0,"env->context(),\n                      "],[74264,0,".FromJust()"]],"_dtSpan":[806865,807721]},{"parents":[828],"numChildren":1,"agent":178,"time":"1970-01-01T00:00:00Z","patches":[[80813,0,"  v8::CpuProfiler::UseDetailedSourcePositionsForProfiling(isolate);\n"]],"_dtSpan":[807721,807789]},{"parents":[829],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[1315,6,""],[1315,0,"n"],[1317,8,""],[1317,0,"t"],[1319,5,""],[1319,0,"v"],[1321,3,""],[1321,0,"_m"],[1325,3,""],[1325,0,"u"],[1327,6,""],[1327,0,"e"],[1347,1,""],[1347,0,"p"],[1350,4,""],[1350,0,"f"],[1370,2,""],[1370,0,"pla"],[1374,1,""],[1374,0,"fo"],[1377,4,""],[1377,0,"m"],[3715,0,"native_m"],[3724,0,"dule::NativeModule;\nusing o"],[20871,0,"\n"],[35147,122,""],[35152,18,""],[35153,12,""],[35155,13,""],[35156,14,""],[35157,2,""],[35158,32,""],[35158,0,"M"],[35163,9,""],[35164,79,""],[35166,167,""],[35166,0,"G"],[35168,1,""],[35169,2,""],[35170,12,""],[35172,13,""],[35173,4,""],[35174,9,""],[35174,0,"e"],[35176,1,""],[54641,0,"\n  // TODO(joyeecheung): use NativeModule::Compile\n"],[56789,0,"NativeModule::LoadBindings(env);\n\n  "],[76999,0,"\n    // TODO(joyeecheung): use NativeModule::Compile\n"]],"_dtSpan":[807789,808536]},{"parents":[830],"numChildren":1,"agent":60,"time":"1970-01-01T00:00:00Z","patches":[[30089,7,""],[30090,38,""],[30091,102,""],[30092,78,""],[32837,0,"static void OnMessage(Local<Message> message, Local<Value> error) {"],[32905,0,"  Isolate* isolate = mes"],[32930,0,"age->Ge"],[32938,0,"Isol"],[32944,0,"e();\n  sw"],[32954,0,"t"],[32956,0,"h"],[32958,0,"(message->Error"],[32974,0,"evel()) {\n    case Is"],[32996,0,"late::MessageErrorLevel::kMessageWarning: {\n      Environment* env = Environment::GetCurrent(isolate);\n      if (!env) {\n        break;\n      }\n      Utf8Value filename(isolate,\n          message->GetS"],[33198,0,"riptOrigin().ResourceN"],[33221,0,"me());\n      // (fi"],[33241,0,"ename):(line) (message)\n      std::stringstream warning;\n      warning "],[33313,0,"< *filename;\n      warning << \":\";\n      warning << message->GetLineNumber(env->context()).FromMaybe(-1);\n      warning << \" \";\n      v8::String::Utf8Value msg(isolate, message->Get());\n      warning << *msg;\n      USE(ProcessEmitWarningGeneric(env, warning.str().c_str(), \"V8\"));\n      break;\n    }\n    case Isolate::MessageErrorLevel::kMessageError:\n      FatalException(isolate, error, message);\n      break;\n  }\n}\n\n\nstatic Local<"],[80843,0,"WithErrorLevel"],[80867,0,",\n      Isolate::MessageErrorLevel::kMessageError |\n      Isolate::MessageErrorLevel::kMessageWarning"]],"_dtSpan":[808536,809771]},{"parents":[831],"numChildren":1,"agent":126,"time":"1970-01-01T00:00:00Z","patches":[[81239,68,""]],"_dtSpan":[809771,809839]},{"parents":[832],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[1286,24,""],[1287,5,""],[3713,0,"Loader"],[5831,0,"NativeModuleLoader per_process_loader;"],[35804,3,""],[35804,0,"p"],[35806,0,"r_pro"],[35812,7,""],[35813,5,""],[35814,0,"s_l"],[35818,1,""],[35819,1,""],[35819,0,"d"],[35821,14,""],[35821,0,"r.G"],[35825,1,""],[35825,0,"tS"],[35828,1,""],[35829,1,""],[35829,0,"rc"],[35832,3,""],[35832,0,"Obj"],[35836,3,""],[35836,0,"c"],[35838,4,""],[35842,2,""],[35842,0,"->cont"],[35850,3,""],[35851,1,""],[35851,0,"()"],[55223,30,""],[55258,5,""],[55311,0,"Loader"],[55329,0,"// We duplicate the string literals here since once we refactor the bootstrap\n  // compilation out to NativeModuleLoader none of this is going to matter\n  Isolate* isolate = env->isolate();\n  "],[55578,5,""],[55585,2,""],[55623,0,"Local<String> loaders_source =\n      per_process_loader.GetSource(isolate, \"internal/bootstrap/loaders\");\n  "],[55802,1,""],[55802,0,"l"],[55809,4,""],[55809,0,"_"],[55811,8,""],[55816,5,""],[55889,0,"isolate, \"internal/bootstrap/nod"],[55922,0,".js\");\n  Local<Stri"],[55942,2,""],[55942,0,"g"],[55944,0," node_source =\n      per_process_loader.GetSource("],[56001,2,""],[56027,3,""],[56101,1,""],[56101,0,"n"],[56105,4,""],[56105,0,"_"],[56107,8,""],[56112,5,""],[57780,36,""],[77512,1,""],[77996,0,"Loader"],[78043,0,"\n   "],[78048,1,""],[78048,0,"    per_pr"],[78059,1,""],[78059,0,"c"],[78061,1,""],[78061,0,"ss_load"],[78070,4,""],[78070,0,".G"],[78073,1,""],[78088,0,", \"internal/per_context\""]],"_dtSpan":[809839,810587]},{"parents":[833],"numChildren":1,"agent":178,"time":"1970-01-01T00:00:00Z","patches":[[81569,0,"  v8::CpuProfiler::UseDetailedSourcePositionsForProfiling(isolate);\n"]],"_dtSpan":[810587,810655]},{"parents":[834],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[4476,26,""],[77932,9,""],[77932,0,"std::vect"],[77942,3,""],[77942,0,"r<Lo"],[77947,3,""],[77947,0,"al<Stri"],[77956,2,""],[77956,0,">>"],[77959,2,""],[77959,0,"paramet"],[77967,0,"rs = {\n  "],[77977,0,"     FIXED_O"],[77990,2,""],[77990,0,"E_BYTE_STRING("],[78005,3,""],[78005,0,"s"],[78007,2,""],[78008,3,""],[78009,1,""],[78009,0,"t"],[78011,4,""],[78011,0,", \"gl"],[78017,3,""],[78017,0,"ba"],[78020,1,""],[78020,0,"\")};"],[78029,0,"std::vector<"],[78047,6,""],[78047,0,"Value>"],[78055,1,""],[78055,0,"argum"],[78061,2,""],[78061,0,"nts = {"],[78075,2,""],[78075,0,"->Global()};"],[78092,1,""],[78092,0,"MaybeLocal<Value>"],[78110,0,"result"],[78117,0,"="],[78138,4,""],[78138,0,"C"],[78140,5,""],[78140,0,"mp"],[78143,2,""],[78144,0,"eAndC"],[78150,0,"ll(\n        con"],[78167,0,"xt"],[78193,6,""],[78193,0,","],[78195,9,""],[78195,0,"&"],[78197,9,""],[78197,0,"a"],[78199,4,""],[78199,0,"am"],[78202,5,""],[78204,3,""],[78204,0,"r"],[78206,0,", &a"],[78211,3,""],[78211,0,"gum"],[78215,4,""],[78217,3,""],[78217,0,"s"],[78234,9,""],[78235,3,""],[78235,0,"f"],[78237,6,""],[78237,0,"("],[78239,8,""],[78239,0,"esu"],[78243,6,""],[78243,0,"t.IsE"],[78250,3,""],[78250,0,"ty"],[78253,0,")) {"],[78264,0,"// Execution failed"],[78284,0,"during"],[78298,1,""],[78298,0," creation."],[78315,0,"//"],[78318,0,"TODO(joyeecheung):"],[78337,2,""],[78337,0,"d"],[78339,0,"p"],[78341,1,""],[78341,0,"e"],[78343,1,""],[78343,0,"ate this sig"],[78356,0,"a"],[78358,0,"ure and r"],[78368,1,""],[78369,2,""],[78369,0,"u"],[78371,5,""],[78371,0,"n a Maybe"],[78385,10,""],[78385,0,"."],[78391,11,""],[78391,0,"  r"],[78395,1,""],[78396,4,""],[78396,0,"urn "],[78405,0,"<"],[78407,1,""],[78407,0,"ont"],[78411,4,""],[78411,0,"xt>"],[78420,0,"  }\n  "],[1150,0,"inding.h\"\n#incl"],[1166,0,"de \"node_bu"],[3189,22,""],[3190,9,""],[3193,6,""],[3194,6,""],[3195,34,""],[3196,7,""],[3197,20,""],[3198,6,""],[3199,64,""],[3200,5,""],[3201,11,""],[3202,12,""],[3203,4,""],[3205,3,""],[3206,63,""],[3207,5,""],[3208,15,""],[3210,17,""],[3211,7,""],[3213,2,""],[3214,2,""],[3215,168,""],[4222,41,""],[4230,241,""],[21557,3966,""],[21560,51,""],[21561,2,""],[21562,2,""],[21563,24,""],[21574,128,""],[21575,1,""],[21577,4,""],[21578,31,""],[21579,87,""],[21580,1172,""],[21581,348,""],[21582,19,""],[21583,102,""],[21584,213,""],[21586,165,""],[21587,7,""],[21588,45,""],[21589,64,""],[21590,705,""],[21595,2,""],[21600,5,""],[21601,214,""],[21602,5,""],[21603,1,""],[21604,7,""],[21605,17,""],[21607,105,""],[21608,2,""],[21609,13,""],[21612,2,""],[21613,7,""],[21614,17,""],[21615,30,""],[21616,35,""],[21617,95,""],[21618,19,""],[25184,107,""],[25185,148,""],[25186,5,""],[25187,21,""],[25188,21,""],[25189,8,""],[25190,11,""],[25191,38,""],[25192,16,""],[25193,6,""],[25194,26,""],[25195,14,""],[25196,430,""],[25197,5,""],[25198,8,""],[25201,47,""],[25202,4,""],[25203,16,""],[25205,203,""],[25207,72,""],[25208,35,""],[25209,232,""],[25210,380,""],[25211,12,""],[25212,4,""],[25213,48,""],[25214,65,""],[25215,26,""],[25216,3,""],[25217,4,""],[25218,2,""],[25219,5,""],[25226,2,""],[25229,3,""],[25230,21,""],[25231,6,""],[25232,107,""],[25233,25,""],[25235,1,""],[25236,23,""],[25237,25,""],[25238,253,""],[25239,71,""],[25240,101,""],[25241,90,""],[25242,21,""],[25247,25,""],[25248,1,""],[25249,29,""],[25251,7,""],[25252,10,""],[25253,102,""],[25254,44,""],[25255,461,""],[25256,40,""],[25261,127,""],[25262,49,""],[40018,0,"binding::"],[44972,3,""],[44973,3,""],[44998,0,"binding::"],[45018,0,"\n                                       "],[45098,0,"                             "],[45220,0,"binding::"],[45246,0,"\n          "],[45392,0,"binding::"],[45420,0,"\n          "],[57100,0,"binding::"],[73181,212,""]],"_dtSpan":[810655,823704]},{"parents":[835],"numChildren":1,"agent":60,"time":"1970-01-01T00:00:00Z","patches":[[3224,0,"errors::TryCatchScope;\nusing "],[4148,14,""],[4149,6,""],[19920,0,"Scope"],[19939,10,""],[19940,1,""],[41092,0,"Scope"],[41111,11,""],[42703,0,"Scope"],[42722,11,""]],"_dtSpan":[823704,823801]},{"parents":[836],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[3224,26,""],[3225,3,""],[3879,1,""],[3880,14,""],[3881,1,""],[19585,1,""],[19586,48,""],[19592,9,""],[19593,9,""],[19594,16,""],[19595,55,""],[19596,7,""],[19597,91,""],[19598,7,""],[19599,820,""],[39800,1,""],[39818,1,""],[39818,0,"Val"],[39822,6,""],[39822,0,"e"],[39825,1,""],[39825,0,"Ex"],[39828,0,"cu"],[39831,0,"e"],[39868,1,""],[39871,13,""],[39872,4,""],[39873,8,""],[39874,8,""],[39875,3,""],[39876,4,""],[39877,6,""],[39878,20,""],[39879,37,""],[39880,11,""],[39881,26,""],[39882,17,""],[39882,0,"*"],[39884,11,""],[39885,8,""],[39886,15,""],[39886,0,","],[39890,2,""],[39891,2,""],[39892,7,""],[39892,0,"s"],[39894,3,""],[39894,0,"d::v"],[39899,1,""],[39900,2,""],[39901,1,""],[39902,4,""],[39903,1,""],[39903,0,"<L"],[39906,9,""],[39906,0,"c"],[39908,1,""],[39909,10,""],[39909,0,"<S"],[39912,1,""],[39913,20,""],[39913,0,"i"],[39915,2,""],[39915,0,"g>>*"],[39920,1,""],[39920,0,"p"],[39922,10,""],[39923,10,""],[39924,5,""],[39924,0,"m"],[39927,1,""],[39929,2,""],[39930,10,""],[39930,0,","],[39934,2,""],[39935,7,""],[39936,8,""],[39938,9,""],[39938,0,"d::"],[39942,2,""],[39942,0,"e"],[39944,0,"to"],[39947,16,""],[39947,0,"<"],[39960,0,">*"],[39963,7,""],[39964,3,""],[39965,17,""],[39966,8,""],[39967,14,""],[39969,55,""],[39970,6,""],[39971,6,""],[39972,0,")"],[39974,12,""],[39974,0,"{"],[39976,1,""],[39978,8,""],[39989,25,""],[39989,0,"V"],[39991,9,""],[39991,0,"l"],[39993,15,""],[39994,18,""],[39994,0,">"],[39996,1,""],[39997,14,""],[39998,2,""],[39999,7,""],[40000,4,""],[40000,0,"="],[40002,15,""],[40006,47,""],[40007,15,""],[40008,9,""],[40009,8,""],[40010,1,""],[40011,5,""],[40012,18,""],[40013,9,""],[40013,0,"_"],[40015,10,""],[40016,4,""],[40017,2,""],[40017,0,"d"],[40020,6,""],[40020,0,".C"],[40023,1,""],[40024,35,""],[40025,36,""],[40026,17,""],[40027,1,""],[40028,90,""],[40028,0,"And"],[40059,10,""],[40060,3,""],[40060,0,"d, par"],[40067,0,"me"],[40071,3,""],[40071,0,"rs"],[40078,1,""],[40078,0,"uments"],[40086,3,""],[40086,0,"en"],[40089,13,""],[40545,1,""],[40548,0,".IsEmpty()"],[40630,1,""],[40716,431,""],[40718,3,""],[40719,208,""],[40762,53,""],[40762,0,"C"],[40764,8,""],[40767,38,""],[40767,0,"x"],[40769,4,""],[40771,12,""],[40772,16,""],[40773,33,""],[40776,62,""],[40776,0,"x"],[40778,6,""],[40780,2,""],[40781,5,""],[40782,15,""],[40784,143,""],[40784,0,"-"],[40786,47,""],[40787,4,""],[40788,12,""],[40789,8,""],[40790,7,""],[40791,163,""],[40791,0,"x"],[40793,1,""],[40794,1,""],[40795,47,""],[40796,4,""],[40865,5,""],[40872,2,""],[40966,5,""],[40966,0,"Loc"],[40970,1,""],[40971,0,"<Obj"],[40976,15,""],[40977,4,""],[40978,0,">"],[40980,4,""],[40981,2,""],[40981,0,"r"],[40983,1,""],[40983,0,"ces"],[40987,2,""],[40988,2,""],[40988,0,"="],[40990,9,""],[40991,4,""],[40992,5,""],[40992,0,"v->p"],[40997,4,""],[40998,13,""],[41000,3,""],[41000,0,"ss_"],[41004,7,""],[41005,3,""],[41005,0,"j"],[41007,1,""],[41007,0,"ct("],[41011,0,";"],[41013,4,""],[41018,5,""],[41019,5,""],[41019,0,"Se"],[41022,2,""],[41023,18,""],[41025,7,""],[41025,0,"g"],[41027,1,""],[41027,0,"g"],[41029,1,""],[41030,2,""],[41030,0,"bal"],[41034,2,""],[41035,0,"r"],[41037,2,""],[41037,0,"pert"],[41042,2,""],[41043,2,""],[41043,0,"s"],[41045,4,""],[41045,0,"f"],[41047,7,""],[41047,0,"r"],[41053,2,""],[41054,13,""],[41055,5,""],[41056,2,""],[41056,0,"tst"],[41060,1,""],[41061,1,""],[41061,0,"ppers"],[41067,0,"t"],[41069,1,""],[41070,3,""],[41070,0,"us"],[41073,5,""],[41073,0,":"],[41080,6,""],[41080,0,"-"],[41082,5,""],[41083,3,""],[41083,0,"l"],[41085,7,""],[41085,0,"b"],[41087,5,""],[41087,0,"l"],[41091,29,""],[41091,0,"//"],[41094,0,"-"],[41096,20,""],[41103,12,""],[41103,0,"."],[41106,11,""],[41113,3,""],[41254,5,""],[41261,2,""],[41262,12,""],[41263,2,""],[41311,9,""],[41312,5,""],[41319,0,"\n      "],[41339,0,"  env->SetMethod(process, \"_rawDebug\", RawDebug);\n"],[41420,0,"std::vector<"],[41438,4,""],[41438,0,"S"],[41440,0,"r"],[41442,1,""],[41443,0,"g>"],[41447,1,""],[41447,0,"load"],[41452,9,""],[41452,0,"rs"],[41455,2,""],[41455,0,"params"],[41464,0,"{\n      "],[41477,6,""],[41477,0,"pro"],[41481,0,"ess_s"],[41487,0,"r"],[41489,1,""],[41490,0,"g(),\n      FIXED_ONE_BYTE_S"],[41518,3,""],[41518,0,"RING(iso"],[41530,2,""],[41530,0,", \"getB"],[41543,2,""],[41543,0,"\"),\n      FIXED_ONE_BYTE_STRIN"],[41574,0,"(isolat"],[41582,0,", \"ge"],[41588,0,"Linked"],[41601,0,"\""],[41603,0,","],[41611,0,"FIXED_ONE_BYTE_STRING(isolate, \"getInternalBinding\"),\n "],[41671,0,"FIXED_ONE_BYTE_STRING(isolate,"],[41702,0,"\"debugBreak\")};\n"],[41720,0,"std::vector<Local<Value>>"],[41746,0,"loaders_args"],[41759,0,"="],[41761,0,"{\n"],[41769,0,"process,\n"],[41784,0,"env->NewFunctionTemplate(binding::GetBinding)\n"],[41854,5,""],[41861,1,""],[41862,1,""],[41863,12,""],[41873,17,""],[41890,44,""],[41890,0,","],[41974,5,""],[41981,1,""],[41982,1,""],[42010,46,""],[42010,0,","],[42096,5,""],[42103,2,""],[42132,95,""],[42134,1,""],[42136,24,""],[42140,29,""],[42153,5,""],[42160,2,""],[42179,0,"  "],[42234,0,"};\n"],[42240,1,""],[42240,0,"MaybeLocal<Value> loader_exports"],[42274,1,""],[42308,1,""],[42308,0,"l"],[42310,1,""],[42311,6,""],[42311,0,"d"],[42313,8,""],[42314,5,""],[42315,4,""],[42316,0,"xpo"],[42320,0,"t"],[42322,3,""],[42323,2,""],[42323,0,"="],[42325,2,""],[42345,0,"\n      "],[42357,4,""],[42357,0,"\"int"],[42363,2,""],[42363,0,"nal/"],[42376,5,""],[42376,0,"/l"],[42379,3,""],[42380,7,""],[42381,33,""],[42381,0,"e"],[42383,2,""],[42384,4,""],[42384,0,"\", &"],[42396,7,""],[42396,0,"p"],[42398,3,""],[42399,1,""],[42400,2,""],[42400,0,"m"],[42402,1,""],[42403,22,""],[42404,5,""],[42404,0,"&"],[42411,6,""],[42412,7,""],[42417,1,""],[42417,0,");"],[42422,12,""],[42422,0,"if"],[42425,14,""],[42425,0,"(l"],[42428,5,""],[42429,3,""],[42430,0,"er"],[42433,4,""],[42434,0,"xpo"],[42438,0,"t"],[42440,0,".IsEmpty("],[42469,121,""],[42470,28,""],[42471,1,""],[42597,0,"\n "],[42600,0,"//"],[42603,1,""],[42603,0,"pr"],[42607,7,""],[42608,1,""],[42608,0,"ss,"],[42623,3,""],[42623,0,"rs, l"],[42629,0,"a"],[42632,1,""],[42632,0,"rExports, triggerFatalException"],[42666,0,"std::vector<"],[42684,5,""],[42684,0,"String>"],[42698,7,""],[42698,0,"p"],[42700,3,""],[42701,1,""],[42702,2,""],[42702,0,"m"],[42704,2,""],[42713,0,"  "],[42728,5,""],[42728,0,"s"],[42730,0,"ring"],[42742,0,"  FIXED_ONE_BYTE_STRING(isolate, \""],[42788,0,"s\")"],[42797,4,""],[42797,0,"  FIXED_ONE_BYTE_STRING(i"],[42823,2,""],[42823,0,"ol"],[42826,2,""],[42826,0,"t"],[42828,2,""],[42828,0,", \""],[42837,0,"Export"],[42844,0,"\")"],[42852,0,"  FIXED_ONE_BYTE_STRING(isolate, \""],[42893,2,""],[42893,0,"F"],[42898,2,""],[42898,0,"E"],[42907,4,""],[42907,0,"\")"],[42914,7,""],[42914,0,"std::v"],[42922,1,""],[42923,3,""],[42924,3,""],[42925,0,"<Loc"],[42930,5,""],[42930,0,"l<Valu"],[42937,3,""],[42937,0,">>"],[42945,0,"args = {\n      process,\n      "],[42987,0,",\n      loader_exports"],[43034,1,""],[43034,0,"env->NewFunctionTemplate(FatalException)\n"],[43085,0,"->GetFunction(context)\n"],[43118,0,".ToLoc"],[43125,7,""],[43125,0,"lCh"],[43129,3,""],[43129,0,"cke"],[43133,0,"()};\n\n  if (Ex"],[43148,2,""],[43148,0,"cuteB"],[43164,7,""],[43164,0,"("],[43166,13,""],[43176,3,""],[43176,0,"env,"],[43181,0,"\"i"],[43184,2,""],[43184,0,"t"],[43186,1,""],[43186,0,"rnal/"],[43200,0,"/node\", &node_"],[43215,0,"arams, &nod"],[43227,1,""],[43232,1,""],[43232,0,")"],[43234,8,""],[43244,14,""],[43244,0,".I"],[43247,4,""],[43247,0,"Em"],[43250,7,""],[43250,0,"ty("],[3436,4,""],[3437,6,""],[3438,10,""],[3905,49,""],[25613,13,""],[25615,36,""],[25616,46,""],[25617,88,""],[25618,257,""],[25619,136,""],[25620,534,""],[25790,0,"Isolate* isolate = env->isolate();\n  "],[25845,0,"isolate);\n  Local<Context> context = "],[25887,2,""],[25887,0,"c"],[25889,2,""],[25889,0,"n"],[25892,0,"xt"],[25895,1,""],[38372,27,""],[1312,0,"metadata.h\"\n#include \"node_"],[1750,2,""],[1751,16,""],[1807,111,""],[1808,68,""],[1809,4,""],[2084,17,""],[2085,1,""],[3934,68,""],[3935,40,""],[3936,106,""],[3937,27,""],[3938,46,""],[3939,192,""],[5268,2,""],[5271,0,"ine"],[5275,23,""],[5275,0,"V(key) "],[5286,34,""],[5287,22,""],[5289,2,""],[5290,23,""],[5291,3,""],[5295,39,""],[5296,28,""],[5298,2,""],[5299,22,""],[5300,4,""],[5304,5,""],[5305,4,""],[5306,19,""],[5307,1,""],[5308,30,""],[5312,5,""],[5313,4,""],[5314,22,""],[5315,1,""],[5316,38,""],[5320,32,""],[5321,22,""],[5325,30,""],[5326,19,""],[5330,30,""],[5331,22,""],[5335,32,""],[5336,15,""],[5340,32,""],[5341,19,""],[5345,35,""],[5346,22,""],[5346,0,"\\"],[5350,2,""],[5375,9,""],[5375,0,"#key"],[5381,23,""],[5381,0,"pe"],[5384,3,""],[5392,3,""],[5392,0,"::m"],[5396,2,""],[5397,7,""],[5398,7,""],[5399,3,""],[5400,3,""],[5400,0,"ta."],[5410,0,"s.key.c_str()"],[5426,17,""],[5431,5,""],[5431,0,"NODE"],[5436,12,""],[5436,0,"VER"],[5440,28,""],[5440,0,"I"],[5442,3,""],[5442,0,"N"],[5444,0,"_KEY"],[5449,8,""],[5450,1,""],[5450,0,"V"],[5452,1,""],[5454,1,""],[5454,0,"u"],[5457,1,""],[5457,0,"e"],[5459,0," V\n"],[25174,2,""],[25177,336,""],[25178,1,""],[25179,5,""],[25180,5,""],[25181,87,""],[25181,0,"V"],[25183,60,""],[25183,0,"k"],[25185,1,""],[25186,22,""],[25187,1,""],[25188,12,""],[25189,1,""],[25190,5,""],[25192,28,""],[25212,6,""],[25232,29,""],[25233,55,""],[25248,6,""],[25252,68,""],[25252,0,"\\"],[25264,77,""],[25265,5,""],[25271,21,""],[25272,22,""],[25290,3,""],[25291,20,""],[25291,0,"#k"],[25294,2,""],[25294,0,"y"],[25296,2,""],[25297,51,""],[25297,0,"p"],[25299,36,""],[25300,5,""],[25301,10,""],[25301,0,"p"],[25303,2,""],[25304,71,""],[25304,0,"c"],[25306,1,""],[25307,3,""],[25308,9,""],[25308,0,"::"],[25311,4,""],[25312,42,""],[25313,7,""],[25313,0,"a"],[25315,41,""],[25315,0,"ata."],[25327,75,""],[25327,0,".k"],[25330,31,""],[25330,0,"y"],[25334,32,""],[25335,1,""],[25340,15,""],[25348,75,""],[25349,26,""],[25350,49,""],[25350,0,"K"],[25352,2,""],[25353,48,""],[25354,18,""],[25355,21,""],[25356,15,""],[25357,3,""],[25359,1,""],[25359,0,"u"],[25362,1,""],[25362,0,"e"],[25364,0," V"],[1371,0,"options-inl.h\"\n#include \"node_"],[7512,27,""],[7513,4,""],[7514,30,""],[7783,0,"\n"],[7785,0,"       env->options()->debug_"],[7821,0,"()"],[7824,0,"\n   "],[7829,0,"    env->inspec"],[7845,0,"o"],[7847,0,"_host_port(),\n        tr"],[9112,51,""],[31673,2,""],[31673,0,"()."],[31853,2,""],[31853,0,"()."],[32067,2,""],[32067,0,"()."],[32303,2,""],[32303,0,"()."],[38124,2,""],[38124,0,"()."],[39190,1,""],[39253,72,""],[39363,15,""],[59262,30,""],[59300,2,""],[59300,0,"()."]],"_dtSpan":[823801,834172]},{"parents":[837],"numChildren":1,"agent":19,"time":"1970-01-01T00:00:00Z","patches":[[65540,8,""],[65560,0,"_INTERNAL"]],"_dtSpan":[834172,834189]},{"parents":[838],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[38824,0,",\n      FIXED_ONE_BYTE_STRING(isolate, \"isMainThread\")"],[39104,0,",\n      Boolean::New(isolate, env->is_main_thread())"],[3595,45,""],[28138,15,""],[28139,7,""],[28145,15,""],[28152,23,""],[28154,36,""],[28157,7,""],[28158,52,""],[28159,14,""],[28161,230,""],[28174,2,""],[28186,1,""],[28244,4,""],[28244,0,"CreateEnvVarP"],[28259,0,"xy("],[28263,0,"ont"],[28267,0,"xt, i"],[28273,0,"olate, env->a"],[28289,0,"xter"],[28294,1,""],[28294,0,"al())"],[28300,0,"\n      "],[3062,28,""],[3063,13,""],[4227,39,""],[35448,0,"::native_module"],[58095,0,"::native_module"],[2866,2,""],[2867,7,""],[2868,18,""],[2869,18,""],[2870,2,""],[2871,13,""],[2871,0," // ST"],[2878,2,""],[2879,2,""],[2879,0,"N"],[2881,4,""],[2881,0,"FILENO,"],[2889,10,""],[2889,0,"STDERR"],[2896,7,""],[2896,0,"F"],[2898,67,""],[2898,0,"LENO"],[3874,31,""],[11609,13,""],[11610,2,""],[11611,9,""],[11612,28,""],[11613,51,""],[11614,12,""],[11615,16,""],[11616,45,""],[11617,111,""],[11618,27,""],[11619,20,""],[11620,110,""],[33894,1,""],[33895,441,""],[48592,0,"credentials::"],[48653,0,"\n       "],[48814,0,"credentials::"],[48873,0,"\n       "],[48987,0,"credentials::"],[49051,0,"\n       "],[49141,0,"credentials::"],[49206,0,"             "],[49387,0,"credentials::"],[49530,0,"credentials::"],[50643,0,"credentials::"],[63006,0,"credentials::"],[24523,0,"if (!per_process::metadata.versions.key.empty()) {                           \\\n    "],[24631,0,"                                                  \\\n        "],[24743,0,"                   \\\n  }"],[51229,0,"  per_process::metadata.versions.InitializeIntlVersions();\n"]],"_dtSpan":[834189,836371]},{"parents":[839],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[32015,0,"{\n    "],[32060,0,"  std::vector<"],[32078,1,""],[32078,0,">"],[32089,12,""],[32089,0,"("],[32103,1,""],[32103,0,")"],[32108,0,"  "],[32143,0,"  "],[32169,0,".data()"],[32206,0,"  "],[32304,0,"  "],[32315,0,".data()"],[32366,0,"  "],[32440,0,"  "],[32477,0,"  "],[32492,0,"  "],[32573,0,"  "],[32625,0,"  "],[32631,0,"  "],[32677,0,"  "],[32745,0,"  "],[32778,19,""],[32778,0,"}"],[28172,0,"// TODO(addaleax): Remove th"],[28201,0,"s.\n  i"],[28548,0,"// TODO(addaleax): Remove this.\n  "],[28709,0,"// TODO(addaleax): Remove this.\n  "],[28890,0,"// TODO(addaleax): Remove this.\n  "],[29052,0,"// TODO(addaleax): Remove this.\n  con"],[29091,0," st"],[29116,0,"&"],[29142,8,""],[29143,2,""],[29173,1,""],[29755,30,""],[30527,0,"// TODO(addaleax): Remove this.\n  "]],"_dtSpan":[836371,836720]},{"parents":[840],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[2727,41,""],[18000,1,""],[18002,7,""],[33261,69,""],[33262,883,""],[37957,10,""],[37958,13,""],[37959,15,""],[37960,4,""],[37961,21,""],[37962,126,""],[37963,64,""],[37964,3,""],[37965,8,""],[37966,27,""],[37967,20,""],[37968,13,""],[37969,9,""],[37970,53,""],[37973,2,""],[37975,1,""],[37994,3244,""],[37995,44,""],[37996,30,""],[36250,127,""],[36423,55,""],[36613,20,""]],"_dtSpan":[836720,841630]},{"parents":[841],"numChildren":1,"agent":186,"time":"1970-01-01T00:00:00Z","patches":[[23304,131,""]],"_dtSpan":[841630,841761]},{"parents":[842],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[5763,17,""],[6347,0,"node::tr"],[6356,1,""],[6356,0,"cing::TracingCon"],[6373,0,"r"],[6375,0,"ller*"],[6393,0,"\n       "],[6446,3,""],[6447,12,""],[6451,1,""],[6451,0,"_s"],[6457,1,""],[6457,0,"_o"],[6466,0,"_.reset"],[6519,0,"controller->AddTrace"],[6542,0,"teObserver(t"],[6555,0,"ace_sta"],[6563,0,"e_observer_.get());\n    Start"],[7009,0,"  trace_state_observer_.reset(nullptr);\n  "],[8561,0,"NodeTraceStateObserver> trace_state_observer_;\n  std::unique_ptr<"]],"_dtSpan":[841761,842020]},{"parents":[843],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[36317,15,""],[36332,2,""],[36333,5,""],[36333,0,"sM"],[36336,9,""],[36337,1,""],[36338,0,"Thread"],[36469,34,""],[36470,29,""],[36606,109,""],[22100,209,""],[22101,4,""],[22102,65,""],[22103,6,""],[22104,24,""],[22105,6,""],[22108,183,""],[22109,72,""],[22110,154,""],[22111,369,""],[22112,91,""],[22114,24,""],[22115,1,""],[22117,59,""],[22118,100,""],[22120,12,""],[22121,6,""],[22122,8,""],[26520,2,""],[26521,58,""]],"_dtSpan":[842020,843685]},{"parents":[844],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[25281,53,""],[25281,0,"p"],[25283,15,""],[25284,6,""],[25284,0,"c"],[25286,17,""],[25287,1,""],[25288,27,""],[25309,0,"\n      "],[25317,3,""],[25325,0,"FIXED_ONE_BYTE_"],[25341,7,""],[25341,0,"TRI"],[25345,10,""],[25345,0,"G"],[25363,0,"\""],[25367,11,""],[25367,0,"v\""],[25372,2,""],[25387,20,""],[25388,7,""],[25389,2,""],[25389,0,"V8V"],[25394,0,"ue(env->context(), args"],[25436,9,""],[25449,0,"\n "],[25452,0,"//"],[25455,1,""],[25455,0,"process.execArgv"],[25556,5,""],[25557,55,""],[25565,57,""],[25565,0,"\""],[25568,19,""],[25571,3,""],[25572,7,""],[25573,1,""],[25574,1,""],[25575,2,""],[25576,1,""],[25577,1,""],[25578,17,""],[25579,4,""],[25580,2,""],[25584,5,""],[25584,0,"ToV8V"],[25590,2,""],[25590,0,"l"],[25592,8,""],[25593,1,""],[25608,3,""],[25609,4,""],[25610,35,""],[25611,5,""],[25618,7,""],[25619,3,""],[25620,1,""],[25621,3,""],[25640,29,""],[25655,109,""],[25657,12,""],[25658,32,""],[27228,21,""],[27228,0,"RE"],[27231,6,""],[27231,0,"DO"],[27234,28,""],[27234,0,"LY_PROPERTY"],[27246,24,""],[27248,36,""],[27250,29,""],[27251,16,""],[27252,7,""],[27252,0,"s"],[27255,17,""],[27277,10,""],[27277,0,"\"_"],[27294,11,""],[27294,0,"\""],[27297,12,""],[27319,24,""],[27320,7,""],[27321,2,""],[27321,0,"V8V"],[27326,45,""],[27326,0,"u"],[27328,4,""],[27329,17,""],[27330,3,""],[27343,3,""],[27345,81,""],[27360,2,""],[27360,0,")"],[27384,0,"    .ToLoc"],[27395,4,""],[27395,0,"lChecked()"],[32147,0,"RunBootstrapping(env);\n  StartExecution(env);\n}\n\nvoid RunBootstrapping(Environment* env) {\n  C"],[32242,0,"ECK(!env->has_run_bootstr"],[32268,0,"ppi"],[32272,0,"g_co"],[32277,0,"e());\n  env->set_has_run_bootstrapping_code(true);\n\n  Hand"],[34506,0,"Local<Value> start_execution;\n  "],[34542,0,"!"],[34643,0,"ToLocal(&start_execution)) {\n    return;\n  }\n\n  if (start_execution->"],[34714,0,"Function())\n    env->set_start_execution_function(start_execution.As<Function>());\n}\n\nvoid Start"],[34811,0,"xecution(Environ"],[34828,0,"ent* env) {\n  HandleScope handle_scope(env->isolate());\n  // We have to use Local<>::New because of the o"],[34935,0,"imized wa"],[34945,0," in which we access\n  // the object in the env->..."],[34998,0," getters, which does not play well with\n  // resetting the handle while we're accessing the object through the Local<>.\n  Local<Function> start_execution =\n      Local<Function>::New(env->isolate("],[35195,0,","],[35197,1,""],[35197,0,"env->start_execution_function());\n  env->set_start_execution_function(Local<Function>());\n"],[35290,0,"if"],[35293,0,"(start_execution.IsEmpty())"],[35331,1,""],[35331,0,"USE(start_execution->Call(\n      env->context(), Undefined(env->isolate()), 0, nullptr));"]],"_dtSpan":[843685,845817]},{"parents":[845],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[4684,0,"\n                         "],[4755,0,"\n                       "],[4780,4,""],[4780,0,"  per"],[4786,7,""],[4786,0,"process::metadata.versions.node.c"],[4820,6,""],[4820,0,"str()"],[5319,4,""],[5319,0,"per"],[5323,4,""],[5323,0,"process::metadata.arch.c_str()"],[5396,0,"\n              "],[5412,4,""],[5412,0,"              per_process::metadata.platform.c"],[5459,8,""],[5459,0,"str()"],[5551,0,"\n                            "],[5581,4,""],[5581,0,"per"],[5585,7,""],[5585,0,"process::metadata.release.name.c_str()"],[5686,4,""],[5686,0,"per"],[5690,11,""],[5690,0,"process::metadata.release.lts.c"],[5722,8,""],[5722,0,"str()"],[23677,0,"STRING_"],[23710,2,""],[23710,0,"p"],[23712,6,""],[23713,4,""],[23713,0,"_proc"],[23719,5,""],[23720,2,""],[23720,0,"s::metad"],[23730,15,""],[23730,0,"a.arch"],[23773,0,"STRING_"],[23797,12,""],[23798,8,""],[23809,7,""],[23810,15,""],[23810,0,"p"],[23812,6,""],[23813,4,""],[23813,0,"_proc"],[23819,5,""],[23820,1,""],[23820,0,"s::metadata.p"],[23836,18,""],[23836,0,"form"],[23841,1,""],[23981,0,"STRING_"],[24013,1,""],[24014,21,""],[24014,0,"per_process::m"],[24029,2,""],[24030,2,""],[24030,0,"ada"],[24034,0,"a."],[24037,4,""],[24038,7,""],[24039,0,"e"],[24041,1,""],[24041,0,"s"],[24043,17,""],[24043,0,".name"],[24050,1,""],[24086,0,"STRING_"],[24117,4,""],[24118,18,""],[24118,0,"p"],[24120,6,""],[24121,24,""],[24122,48,""],[24122,0,"p"],[24124,18,""],[24125,6,""],[24126,18,""],[24127,5,""],[24128,2,""],[24129,5,""],[24129,0,"::m"],[24133,1,""],[24134,5,""],[24135,1,""],[24137,3,""],[24137,0,"ta."],[24147,5,""],[24147,0,"."],[24149,7,""],[24149,0,"ts);"],[24155,2,""],[24155,0,"e"],[24158,1,""],[24158,0,"i"],[24161,22,""],[24162,2,""],[24162,0,"//"],[24181,2,""],[24182,2,""],[24182,0,"T"],[24184,1,""],[24185,69,""],[24187,16,""],[24189,1,""],[24192,36,""],[24198,4,""],[24198,0,"H"],[24201,13,""],[24213,22,""],[24214,9,""],[24215,1,""],[24216,7,""],[24217,5,""],[24219,2,""],[24220,13,""],[24221,27,""],[24222,9,""],[24223,0,"LY"],[24232,12,""],[24242,0,"\n      "],[24257,12,""],[24258,8,""],[24270,7,""],[24271,15,""],[24271,0,"per_process::m"],[24286,2,""],[24287,2,""],[24287,0,"ada"],[24291,0,"a."],[24294,4,""],[24295,5,""],[24295,0,"lease."],[24303,3,""],[24303,0,"urc"],[24307,28,""],[24308,20,""],[24308,0,"u"],[24310,5,""],[24310,0,"l"],[24325,0,"STRING_"],[24341,0,"\n      "],[24356,13,""],[24357,7,""],[24370,7,""],[24371,15,""],[24371,0,"per_process::m"],[24386,2,""],[24387,2,""],[24387,0,"ada"],[24391,0,"a."],[24394,4,""],[24395,7,""],[24396,0,"e"],[24398,1,""],[24398,0,"s"],[24400,47,""],[24400,0,"."],[24408,3,""],[24408,0,"_u"],[24411,4,""],[24411,0,"l"],[24413,1,""],[24416,2,""],[24440,0,"STRING_"],[24456,0,"\n      "],[24471,14,""],[24472,6,""],[24481,1,""],[24482,21,""],[24482,0,"per_process::m"],[24497,2,""],[24498,2,""],[24498,0,"ada"],[24502,0,"a."],[24505,4,""],[24506,7,""],[24507,0,"e"],[24509,1,""],[24509,0,"s"],[24511,1,""],[24511,0,".lib_url"],[24520,1,""],[24520,0,";"],[24522,9,""],[24522,0,"#endif"],[24530,3,""],[24530,0,"//"],[24533,12,""],[24533,0,"_WI"],[24537,13,""],[24539,31,""],[24540,60,""],[24540,0,"#e"],[24543,1,""],[24544,3,""],[24545,37,""],[24545,0,"f"],[24548,7,""],[24548,0,"//"],[24551,4,""],[24556,0,"HAS_"],[24571,89,""],[24571,0,"S"],[3674,0,"namespace per_process {\n// Tell"],[3706,0," whe"],[3711,0,"her --prof is p"],[3727,0,"ssed.\n// TODO(joyeecheung): move env->op"],[3769,0,"ons()->prof_pro"],[3785,0,"ess"],[3789,0,"to\n// per_process::cli_options.prof_process and use that instead.\nstatic "],[3896,2,""],[3896,0,"TODO(joyeecheung): "],[3916,0,"hese are"],[3925,1,""],[3925,0,"no "],[3929,0,"onger necess"],[3942,1,""],[3942,0,"ry. Remove them.\n//"],[3962,0,"See: https://gith"],[3980,0,"b.com/nodej"],[3992,0,"/nod"],[3997,0,"/pull/25302#"],[4010,0,"iscussion_r244924196\n//"],[4034,0,"Isola"],[4040,0,"e "],[4043,0,"n the main"],[4055,0,"h"],[4057,0,"e"],[4059,0,"d\nstati"],[4067,1,""],[4068,0,"Mutex main_i"],[4081,0,"olat"],[4086,1,""],[4086,0,"_m"],[4089,1,""],[4089,0,"tex;\nstat"],[4099,0,"c Isola"],[4107,1,""],[4107,0,"e*"],[4110,0,"main_isolate;\n\n// node_"],[4139,1,""],[4139,0,".h\n//"],[4145,1,""],[4145,0,"Bit flag u"],[4156,1,""],[4157,0,"d"],[4159,1,""],[4159,0,"t"],[4161,1,""],[4161,0," track s"],[4170,1,""],[4170,0,"curity "],[4183,0,"s"],[4185,2,""],[4207,0,"_cve"],[4218,0,"// util.h\n// Tells whether the per-process V8::Initialize() is called and\n// if it is safe to call v8::Isolate::GetCurrent().\n"],[4377,0,"node_internals.h\n// "],[4475,6,""],[4475,0,"}  //"],[4481,17,""],[4481,0,"na"],[4484,2,""],[4485,8,""],[4486,6,""],[4487,9,""],[4487,0,"a"],[4490,10,""],[4500,1,""],[4501,4,""],[4502,2,""],[4503,30,""],[4504,64,""],[8494,0,"::cli"],[8503,0,"ion"],[8707,0,"\n              "],[8733,0,"::cli"],[8742,0,"ion"],[8900,0,"::cli"],[8909,0,"ion"],[12525,0,"::cli"],[12534,0,"ion"],[39059,0,"::cli"],[39068,0,"ion"],[39212,0,"::cli"],[39221,0,"ion"],[39499,0,"::cli"],[39508,0,"ion"],[39600,0,"::cli"],[39609,0,"ion"],[39734,0,"::cli"],[39743,0,"ion"],[39822,0,"::cli"],[39831,0,"ion"],[40495,0,"per_process::"],[40796,0,"per_process::"],[41685,0,"er_process::p"],[42266,0,"::cli"],[42275,0,"ion"],[43119,0,"::cli"],[43128,0,"ion"],[44218,0,"::cli"],[44227,0,"ion"],[44284,0,"::cli"],[44293,0,"ion"],[44426,0,"::cli"],[44435,0,"ion"],[44507,0,"\n                           "],[44548,0,"::cli"],[44557,0,"ion"],[44715,0,"::cli"],[44724,0,"ion"],[49726,0,"per_process::"],[51831,0,"per_process::"],[55227,1,""],[55227,0,"per_pr"],[55234,1,""],[55234,0,"c"],[55236,0,"ss::main"],[55276,1,""],[55276,0,"per_pr"],[55283,1,""],[55283,0,"c"],[55285,0,"ss::main"],[55308,1,""],[55308,0,"per_pr"],[55315,1,""],[55315,0,"c"],[55317,0,"ss::main"],[56091,1,""],[56091,0,"per_pr"],[56098,1,""],[56098,0,"c"],[56100,0,"ss::main"],[56138,1,""],[56138,0,"per_pr"],[56145,1,""],[56145,0,"c"],[56147,0,"ss::main"],[56179,1,""],[56179,0,"per_pr"],[56186,1,""],[56186,0,"c"],[56188,0,"ss::main"],[57523,0,"::cli"],[57532,0,"ion"],[57639,0,"per_process::"],[57784,0,"per_process::"]],"_dtSpan":[845817,848764]},{"parents":[846],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[8624,0,"std::vector<std::string> categories =\n          SplitString(per_process::cli_options->trace_even"],[8721,0,"_categories, ',');\n\n      t"],[8807,2,""],[8807,0,"std::set<std::st"],[8824,0,"ing>("],[8830,0,"td::mak"],[8838,1,""],[8838,0,"_m"],[8841,4,""],[8841,0,"ve_it"],[8847,1,""],[8847,0,"r"],[8849,0,"to"],[8852,0,"(c"],[8857,2,""],[8857,0,"gories.b"],[8866,1,""],[8866,0,"gin"],[8870,0,")),"],[8888,1,""],[8888,0,"                  std::mak"],[8915,1,""],[8916,2,""],[8916,0,"m"],[8918,1,""],[8918,0,"v"],[8920,7,""],[8921,3,""],[8922,5,""],[8923,0,"e"],[8926,7,""],[8927,1,""],[8927,0,"or("],[8940,0,".end())"],[43564,39,""],[43636,9,""],[43637,20,""],[43641,10,""],[43648,19,""],[43650,1,""],[43650,0,"nd"],[43653,0,"us"],[43656,3,""],[43658,0,"x'"],[43661,1,""],[43661,0,"as"],[43664,2,""],[43665,1,""],[43665,0," pl"],[43670,1,""],[43671,9,""],[43671,0,"hol"],[43675,4,""],[43675,0,"e"],[43677,14,""],[43678,0,"wh"],[43681,2,""],[43681,0,"l"],[43683,1,""],[43684,2,""],[43684,0,"par"],[43688,7,""],[43691,16,""],[43691,0,"."],[43697,2,""],[43702,0,"vector<"],[43711,4,""],[43711,0,"d"],[43715,4,""],[43716,5,""],[43717,3,""],[43719,14,""],[43719,0,"g>"],[43722,7,""],[43723,4,""],[43724,3,""],[43724,0,"v"],[43726,49,""],[43726,0,"a"],[43728,1,""],[43728,0,"g"],[43730,6,""],[43731,1,""],[43733,7,""],[43733,0,"Spl"],[43737,16,""],[43738,7,""],[43738,0,"S"],[43744,0,"(\"x"],[43748,6,""],[43748,0,"\""],[43750,1,""],[43750,0,"+"],[43764,33,""],[43766,5,""],[43766,0,"'"],[43768,16,""],[43768,0,"'"],[43772,1,""],[43775,4,""],[43776,9,""],[43777,17,""],[43783,22,""],[43784,30,""],[43784,0,"[0]"],[43788,1,""],[43790,7,""],[43790,0,"a"],[43792,2,""],[43793,6,""],[43793,0,"v->at(0"],[43802,1,""]],"_dtSpan":[848764,849531]},{"parents":[847],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[3066,32,""],[13804,1274,""],[13805,47,""],[13806,3,""],[13807,91,""],[13808,45,""],[13809,8,""],[13810,16,""],[13811,10,""],[13812,44,""],[13813,19,""],[13814,50,""],[13815,537,""],[13816,914,""],[13817,56,""],[13818,18,""],[13819,36,""],[13821,270,""],[13822,31,""],[13823,157,""],[13824,15,""],[13825,1,""],[13826,29,""],[13829,861,""]],"_dtSpan":[849531,854095]},{"parents":[848],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[34214,2,""],[34215,1,""],[34215,0,"nt"],[34225,0,"Global"],[34234,1,""],[34234,0,"s"],[34285,0,"     "],[34344,0,"     std::vector<std::string>* errors,\n                      "],[34506,26,""],[34507,2,""],[34508,7,""],[34509,2,""],[34514,158,""],[34572,2,""],[34629,2,""],[34647,2,""],[34658,2,""],[34680,2,""],[34712,2,""],[34783,3,""],[34791,4,""],[34806,1,""],[34806,0,"->"],[34816,5,""],[34817,3,""],[34818,22,""],[34819,20,""],[34820,7,""],[34820,0,"u"],[34822,10,""],[34823,42,""],[34824,12,""],[34825,210,""],[34826,4,""],[36501,2,""],[36506,11,""],[36509,4,""],[36509,0,"ors->pu"],[36517,2,""],[36517,0,"h_"],[36521,0,"ck(\"ba"],[36537,4,""],[36538,9,""],[36539,3,""],[36539,0,"+"],[36541,3,""],[36542,3,""],[36543,6,""],[36543,0,"d::"],[36549,0,"ing"],[36553,3,""],[36576,0,")"],[36578,4,""],[36617,3,""],[36618,3,""],[36618,0,"r"],[36620,2,""],[36621,1,""],[36621,0,"urn "],[36626,1,""],[36628,0,"\n "],[36631,0,"return"],[36638,1,""],[36638,0,"0;"],[36644,3,""],[36645,1,""],[36645,0,"nt"],[36694,1,""],[36729,0,",\n         std::vector<std::string>* errors"],[38781,0,"const int exit_code = "],[38810,0,"Global"],[38819,1,""],[38819,0,"s"],[38841,0,"errors, "],[38858,0,"  if (exit_code != 0) return exit_code;\n  "],[38912,0,"const int exit_code = "],[38941,0,"Global"],[38950,1,""],[38950,0,"s"],[38969,0,"errors, "],[38985,0,"  if (exit_code != 0) return exit_code;\n"],[39657,2,""],[39657,0,"e"],[39659,9,""],[39660,0,"o"],[39662,16,""],[39663,2,""],[39663,0,"->push_back(\""],[39715,0,"          "],[39779,1,""],[39779,0,");"],[39782,1,""],[39786,8,""],[39787,5,""],[39787,0,"e"],[39789,8,""],[39789,0,"u"],[39791,5,""],[39791,0,"n"],[39793,8,""],[39794,1,""],[40110,0,"  return 0;\n"],[40399,0,"  std::vector<std::string> errors;\n"],[40437,0,"// This (approximately) duplicates some logic that has been moved to\n  // node::Start(), with the difference that here we explicitly call `exit()`.\n  int exit_code = "],[40627,0,", &errors"],[40642,0,"for (const std::string& error : errors)\n    fprintf(stderr, \"%s: %s\\n\", argv_.at(0).c_str(), error.c_str());\n  if (exit_code != 0) exit(exit_code);\n\n  if (per_process::cli_options->print_version) {\n    printf(\"%s\\n\", NODE_VERSION);\n    exit(0);\n  }\n\n  if (per_process::cli_options->print_v8_help) {\n    V8::SetFlagsFromString(\"--help\", 6);  // Doesn't return.\n    UNREACHABLE();\n  }\n\n  "],[50669,0,"if (per_process::cli_options->print_version) {\n    printf(\"%s\\n\", NODE_VERSION);\n    return 0;\n  }\n\n  if (per_process::cli_options->print_v8_help) {\n    V8::SetFlagsFromString(\"--help\", 6);  // Doesn't return.\n    UNREACHABLE();\n  }\n\n  "],[52614,0,"std::vector<std::string> errors;\n  "],[52699,0,"{\n    const int exit_code = "],[52749,0,", &errors);\n    for (const std::string& error : errors)\n      fprintf(stderr, \"%s: %s\\n\", args.at(0).c_str(), error.c_str());\n    if (exit_code != 0"],[52898,0," return exit_code"],[52917,0,"  }\n"]],"_dtSpan":[854095,856210]},{"parents":[849],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[3380,16,""],[3511,8,""],[3512,18,""],[18283,95,""],[18284,3,""],[18285,3,""],[18286,53,""],[18287,60,""],[18289,4,""],[18290,133,""],[18293,13,""],[18294,7,""],[18295,1,""],[18296,24,""],[18297,21,""],[18298,3701,""],[18299,88,""],[18300,13,""],[18301,6,""],[18302,55,""],[18303,97,""],[18304,53,""],[18305,4,""],[18306,183,""],[18311,1,""],[18312,10,""],[18313,2,""],[18314,68,""],[18317,258,""],[18318,8,""],[18319,7,""],[18321,5,""],[18322,110,""],[18323,12,""],[18325,3,""],[18326,8,""],[18327,100,""],[18328,2,""],[18329,136,""],[18330,27,""],[18331,53,""],[18332,5,""],[18333,146,""],[18334,24,""],[18335,3,""],[18336,117,""],[18339,4,""],[18341,2,""],[18342,99,""],[18344,32,""],[18349,37,""],[18354,28,""],[18355,413,""],[18356,1611,""],[1451,0,"p"],[1453,0,"oc"],[1456,0,"ss.h\"\n#include \"node_re"],[14797,5,""],[14835,2,""],[14856,6,""],[14894,1,""],[14922,6,""],[14960,1,""],[20142,25,""],[20364,20,""],[20365,30,""],[3379,44,""],[14693,26,""],[14694,4,""],[14695,8,""],[14696,13,""],[14697,2,""],[14698,41,""],[14699,14,""],[14700,122,""],[14701,1,""],[14702,114,""],[14703,18,""],[14704,1244,""],[14705,18,""],[14706,9,""],[14707,1083,""],[14708,1,""],[14709,16,""],[31588,3,""],[31588,0,"Valu"],[31593,2,""],[31595,4,""],[31596,2,""],[31596,0,"xit"],[31600,0,"c"],[31602,2,""],[31602,0,"d"],[31604,2,""],[31628,1,""],[31631,13,""],[31632,9,""],[31633,1,""],[31634,25,""],[31636,12,""],[31637,6,""],[31638,1,""],[31639,2,""],[31643,37,""],[31644,15,""],[31648,14,""],[31648,0,"            "],[31683,0,"nv->e"],[31696,0,"_string()"],[31706,0,"\n                               "],[31764,0,"                       "],[31814,0,"\n                               "],[31863,4,""],[31867,45,""],[31867,0,"P"],[31874,6,""],[31874,0,"Emi"],[31878,0,"(env"],[31885,0,"b"],[31887,1,""],[31887,0,"foreEx"],[31898,6,""],[31898,0,"ex"],[31901,1,""],[31901,0,"t_cod"],[31907,35,""],[31928,1,""],[32482,1,""],[32485,1,""],[32485,0,"Pr"],[32489,7,""],[32490,5,""],[32491,14,""],[32491,0,"s"],[32493,17,""],[32493,0,"mit"],[32500,11,""],[32508,1,""],[32509,2,""],[32510,2,""],[32544,138,""]],"_dtSpan":[856210,867699]},{"parents":[850],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[10529,0,"void DisposePlatform() {\n  v8_platform.Dispose();\n}\n\n"]],"_dtSpan":[867699,867752]},{"parents":[851],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[16843,0,"\n  // To allow people to extend Node in different ways, this hook allows\n  // one to drop a file lib/_third_party_main.js into the build\n  // directory which will be executed instead of Node's normal loading.\n  if (per_process::native_module_loader.Exists(\"_third_party_main\")) {\n  "],[17145,0,", \"_third_party_main\""],[17169,0,"  "],[17172,0," else {\n    // TODO(joyeecheung): create different scripts for different"],[17245,0,"    // execution modes:"],[17269,0,"    // - `main_thread_main.js` when env->is_main_thread()\n    // - `worker_thread_main.js` when !en"],[17369,0,"->is_main_thread()\n    // - `run_third_party_main.js` for `_third_party_main`\n    // - `inspect_main.js` f"],[17476,0,"r `node inspect`\n    // - `mkcodecache_ma"],[17518,0,"n.js` for the co"],[17535,0,"e"],[17537,0,"cache generator\n    // - `print_help_main.js` for --help\n    // - `bash_completion_main.js` for --completion-bash\n    // - `internal/v8_prof_processor` for --prof-process\n    // And leave bootstrap/node.js dedicated to the setup of the environment.\n    // We may want to move this switch out of LoadEnvironment, especially for\n    // the per-process options.\n    StartExecution(env, nullptr);\n  }\n}\n\nvoid "],[20502,0,", const char* main_script_id"],[21023,0,"\n"],[21026,0,"Local<Value> main_script_v;\n  if (main_script_id == nullptr) {\n    // TODO(joyeecheung): make this mandatory - we may also create an overload\n    // for main_script that is a Local<Function>.\n    main_script_v = "],[21239,0,"ndefined(env->isolate());\n  } else {\n    main_script_v = OneByte"],[21304,0,"tring(env->isolate(), main_script_id);\n  }\n\n  Local<Value> argv[] = {main_script_v};\n  US"],[21467,1,""],[21467,0,"arraysize(argv)"],[21484,6,""],[21484,0,"a"],[21486,0,"gv"],[18993,0,"// --inspect-brk-node\n      "],[19065,0,",\n      // --experimental-modules\n      FIXED_ONE_BYTE_STRING(isolate, \"experimentalModules\"),\n      // --expose-internals\n      FIXED_ONE_BYTE_STRING(isolate, \"exposeInternals\")"],[19763,0,",\n      Boolean::New(isolate,\n                   env->options()->experimental_modules),\n      Boolean::New(isolate,\n                   env->options()->expose_internals)"]],"_dtSpan":[867752,869613]},{"parents":[852],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[7359,0,"StopTracingAgent();\n    "],[14644,6,""],[14645,28,""],[44444,34,""]],"_dtSpan":[869613,869705]},{"parents":[853],"numChildren":1,"agent":58,"time":"1970-01-01T00:00:00Z","patches":[[2623,0,"def NODE_REPORT\n#include \"node_report.h\"\n#endif\n\n#if"],[20210,0,"#ifdef NODE_REPORT\n  if (env->options()->experimental_report) {\n    report::InitializeReport(env->isolate(), env);\n  }\n#endif  // NODE_REPORT\n\n"],[28312,0,"def NODE_REPORT\n  // Cache the original command line to be\n  // used in diagnostic reports.\n  per_process::cli_options->cmdline = *argv;\n#endif  //  NODE_REPORT\n\n#if"]],"_dtSpan":[869705,870065]},{"parents":[854],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[26077,0,"std::string revert_error;\n  "],[26178,0," {"],[26203,0,", &revert_error);\n    if (!revert_error.empty()) {\n      errors->emplace_back(std::move(revert_error)"],[26307,0,"      return 12;\n    }\n  }\n"],[20210,143,""]],"_dtSpan":[870065,870366]},{"parents":[855],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[7856,455,""],[7857,47,""],[7858,2,""],[7859,9,""],[7860,19,""],[7861,13,""],[7862,3,""],[7863,10,""],[7864,16,""],[9180,66,""],[9181,2,""],[9183,2,""],[9184,15,""],[9185,7,""],[9186,2,""],[9187,5,""],[9188,6,""],[9189,30,""],[9190,19,""],[9549,1,""],[9550,93,""],[9551,4,""],[9552,6,""],[9553,10,""],[9554,31,""],[9571,1,""],[9592,19,""],[21010,15,""],[21011,53,""],[21012,52,""],[21013,16,""],[21015,67,""],[37373,0,"#if HAVE_INSPECTOR"],[37392,0,"&&"],[37395,0,"NODE_USE_V8_PLATFORM\n  CHECK(!env.inspe"],[37435,0,"t"],[37437,0,"r_age"],[37443,0,"t()->IsLi"],[37454,0,"ening());\n  //"],[37469,0,"Inspe"],[37475,0,"tor agent can't fail to start, but if it was configured to listen\n  // rig"],[37550,0,"t "],[37553,2,""],[37553,0,"way"],[37557,0,"on the websocket "],[37575,0,"ort and f"],[37585,0,"ils "],[37590,0,"o bind/etc, t"],[37604,0,"is will return\n  // false.\n"],[37632,1,""],[37633,0,"env.inspector_agent()->St"],[37660,0,"t(ar"],[37698,0,"\"\",\n                               env.optio"],[37743,0,"s()->deb"],[37752,2,""],[37752,0,"g_o"],[37757,2,""],[37757,0,"ions(),"],[37767,6,""],[37767,0,"                             e"],[37798,0,"v.in"],[37809,0,"_host_port"],[37820,4,""],[37820,0,")"],[37822,0,"\n                              "],[37854,2,""],[37855,1,""],[37855,0,"rue"],[37860,1,""],[37926,0,"en"],[37929,10,""],[37930,1,""],[37930,0,"i"],[37939,2,""],[37939,0,"_"],[37941,2,""],[37941,0,"g"],[37943,1,""],[37943,0,"nt"],[37946,1,""],[37946,0,")->IsList"],[37957,1,""],[37957,0,"ing("],[38012,0,"#else\n  // inspector_enabled can't be true if !HAVE_INSPECTOR or !NODE_USE_V8_PLATFORM\n  // - the option parser should not allow that.\n  CHECK(!env.options()->debug_options().inspector_enabled);\n#endif  // HAVE_INSPECTOR && NODE_USE_V8_PLATFORM\n"]],"_dtSpan":[870366,872178]},{"parents":[856],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[35219,17,""],[35252,0,"env->CreateProcessObject(args, exec_args);\n  "],[37352,17,""],[37383,0,"  env.CreateProcessObject(args, exec_args);\n"]],"_dtSpan":[872178,872301]},{"parents":[857],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[2805,0,"define STDIN_FILENO 0\n#"],[3167,0,"scapableHandleScope;\nusing v8::E"],[15312,0,"EscapableHandleScope scope(env->isolate());\n  "],[15369,3,""],[15369,0,"F"],[15371,1,""],[15371,0,"nction"],[15379,1,""],[15379,0,"mayb"],[15384,1,""],[15384,0,"_fn"],[15389,0,"\n     "],[15430,1,""],[15430,0,"L"],[15432,1,""],[15432,0,"oku"],[15436,3,""],[15440,2,""],[15440,0,"ompi"],[15445,0,"e"],[15454,0,"    "],[15490,0,"env);\n\n  if (maybe_fn.IsEmpty()) {\n    return MaybeLocal<Value>();\n  }\n\n  Local<Function> fn = maybe_fn.ToLocalChecked();\n  MaybeLocal<Value> result = fn->Call(env->context(),\n                                      Undefined(env->isolate()),\n                                      "],[15778,0,"->size()"],[15787,0,"\n                              "],[15819,0,"       argum"],[15833,1,""],[15833,0,"ts->data()"],[16301,0,"sul"],[16381,58,""],[16382,27,""],[16382,0,"c"],[16384,2,""],[16386,42,""],[16386,0,".E"],[16389,6,""],[16389,0,"c"],[16391,21,""],[16392,6,""],[16393,13,""],[16393,0,"M"],[16395,2,""],[16396,18,""],[16397,36,""],[16398,45,""],[16399,2,""],[16400,5,""],[16401,1,""],[16402,12,""],[16403,3,""],[16404,42,""],[16405,37,""],[16408,2,""],[16409,154,""],[16410,60,""],[16411,48,""],[16411,0,"M"],[16413,2,""],[16414,164,""],[16415,9,""],[16416,217,""],[16418,19,""],[16419,1,""],[16421,0,"<Va"],[16425,51,""],[16426,5,""],[16427,25,""],[16427,0,">"],[16511,0,"\n"],[16514,5,""],[16514,0,"E"],[16516,4,""],[16516,0,"cap"],[16520,6,""],[16521,16,""],[16521,0,"l"],[16523,11,""],[16535,7,""],[18381,36,""],[18413,0,"MaybeLocal<Value> "],[18587,0," MaybeLocal<Value>()"],[18616,0,"Local<Object> loader_exports_obj =\n      loader_exports.ToLocalChecked().As<Object>();\n  Local<Value> internal_binding_loader =\n      loader_exports_obj->Get(context, env->internal_binding_string())\n          .ToLocalChecked();\n  env->set_internal_binding_loader(internal_binding_loader.As<Function>());\n\n  Local<Value> require =\n      loader_exports_obj->Get(context, env->require_string()).ToLocalChecked();\n  env->set_native_module_require(require.As<Function>());\n\n  "],[19388,2,""],[19388,0,"_"],[19390,14,""],[19390,0,"bj"],[19450,0,"Maybe"],[19468,3,""],[19469,2,""],[19470,3,""],[19470,0,"s"],[19472,0,"l"],[19474,5,""],[19475,3,""],[19475,0,"="],[19477,2,""],[19498,2,""],[19504,2,""],[19561,0,";\n"],[19566,10,""],[19566,0,"env->set_has_run_b"],[19585,1,""],[19586,5,""],[19586,0,"t"],[19589,0,"r"],[19591,2,""],[19591,0,"pping"],[19597,0,"cod"],[19601,1,""],[19601,0,"(tru"],[19606,6,""],[19607,3,""],[19607,0,";\n"],[19610,1,""],[19612,1,""],[19618,0," scope.EscapeMaybe(result)"],[19646,2,""],[19649,2,""],[19649,0,"vo"],[19652,1,""],[19652,0,"d"],[19654,1,""],[19654,0,"MarkBoot"],[19664,0,"r"],[19666,3,""],[19666,0,"pCompl"],[19673,1,""],[19673,0,"t"],[19675,0,"("],[19677,3,""],[19679,3,""],[19680,0,"t "],[19690,2,""],[19690,0,"CallbackInfo<Value>& args"],[19716,0," {"],[19721,1,""],[19721,0,"Environment*"],[19737,3,""],[19737,0," = Environm"],[19749,0,"n"],[19751,2,""],[19751,0,"::Ge"],[19756,0,"Current("],[19766,2,""],[19766,0,"gs);\n  "],[19774,1,""],[19774,0,"nv->p"],[19780,4,""],[19780,0,"rf"],[19783,0,"rma"],[19787,0,"ce"],[19790,9,""],[19793,1,""],[19794,1,""],[19795,1,""],[19795,0,"()->Mark(\n      p"],[19813,4,""],[19813,0,"rf"],[19816,7,""],[19816,0,"rma"],[19821,7,""],[19821,0,"e::NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE"],[19875,1,""],[19875,0,"MaybeL"],[19882,2,""],[19882,0,"cal<Value>"],[19958,0,"Escapable"],[19979,7,""],[20004,2,""],[20004,0,"CHECK_NE(main_script_id,"],[20029,2,""],[20029,0,"nullptr);\n\n "],[20042,2,""],[20042,0,"std::"],[20049,1,""],[20049,0,"c"],[20052,5,""],[20052,0,"r<"],[20060,0,"String>"],[20068,3,""],[20068,0," param"],[20075,1,""],[20075,0,"ters = {\n     "],[20090,1,""],[20091,0,"nv->pro"],[20099,1,""],[20099,0,"ess_string(),\n      env->req"],[20128,0,"ire_"],[20133,0,"tring(),\n      env->int"],[20157,0,"rnal_binding_string(),\n "],[20182,2,""],[20183,0,"   FIXED_ONE_BYTE_STRING(env->isola"],[20219,1,""],[20220,0,"(),"],[20224,0,"\"markB"],[20231,1,""],[20231,0,"ots"],[20235,1,""],[20235,0,"rapCo"],[20241,2,""],[20241,0,"plet"],[20246,0,"\")};\n\n  st"],[20257,0,"::vector<Local<Value>>"],[20280,1,""],[20281,1,""],[20281,0,"rguments = {\n   "],[20298,2,""],[20299,5,""],[20300,1,""],[20301,3,""],[20301,0,"nv->pro"],[20312,0,"_object(),"],[20325,2,""],[20326,0,"   env->na"],[20337,1,""],[20337,0,"iv"],[20340,1,""],[20340,0,"_m"],[20343,0,"dule_require(),\n      env->internal_"],[20380,1,""],[20380,0,"inding_loader(),\n      env->N"],[20410,0,"wFun"],[20416,1,""],[20417,0,"o"],[20419,1,""],[20419,0,"Template(MarkBootstrapComple"],[20448,1,""],[20449,0,")\n     "],[20457,0,"    ->G"],[20465,0,"tFu"],[20469,0,"ction(en"],[20480,2,""],[20480,0,"context())\n          "],[20502,0,"ToLocalChecked"],[20518,0,"};\n\n  MaybeLocal<Value>"],[20542,1,""],[20542,0,"r"],[20544,0,"sul"],[20548,0," =\n      Execu"],[20564,0,"Bootst"],[20571,1,""],[20571,0,"apper(env"],[20582,2,""],[20582,0,"ma"],[20585,0,"n_s"],[20589,2,""],[20589,0,"ript_i"],[20596,1,""],[20596,0,", &paramet"],[20607,0,"r"],[20609,0,","],[20611,0,"&argume"],[20619,1,""],[20620,0,"s);\n "],[20626,0,"return scope.Esca"],[20644,0,"eMaybe(resu"],[20656,0,"t);\n}\n\nM"],[20666,2,""],[20666,0,"b"],[20668,0,"Loca"],[20673,0,"<Va"],[20677,0,"ue>"],[20681,2,""],[20681,0,"Star"],[20686,0,"MainT"],[20692,0,"readExecution(Environment* env) {"],[20731,1,""],[20731,0,"To allow p"],[20742,1,""],[20742,0,"opl"],[20746,0," "],[20748,0,"o ex"],[20753,1,""],[20753,0,"e"],[20755,1,""],[20755,0,"d"],[20757,2,""],[20757,0,"Nod"],[20762,2,""],[20762,0,"i"],[20764,0," "],[20766,1,""],[20766,0,"iffer"],[20772,0,"nt"],[20776,0,"ays, t"],[20784,2,""],[20784,0,"s hook"],[20791,0,"allo"],[20796,0,"s\n  // on"],[20806,1,""],[20806,0," to d"],[20812,0,"op a fil"],[20822,0,"lib/_third_p"],[20835,3,""],[20835,0,"rty_main.j"],[20846,1,""],[20846,0," "],[20849,1,""],[20849,0,"to"],[20856,1,""],[20857,1,""],[20857,0,"uild\n  // dir"],[20873,0,"ory"],[20877,1,""],[20877,0,"w"],[20879,4,""],[20879,0,"ic"],[20883,0,"will be executed ins"],[20904,1,""],[20905,0,"ad of Node's"],[20918,1,""],[20918,0,"n"],[20920,1,""],[20920,0,"rm"],[20924,2,""],[20924,0," loading"],[20936,1,""],[20936,0,"if (per_pr"],[20948,0,"ess::n"],[20955,0,"tive_module_"],[20968,2,""],[20968,0,"oader.Exists(\"_third_party_main\")) {\n    ret"],[21013,0,"r"],[21015,0," StartExe"],[21025,0,"u"],[21030,1,""],[21030,0,"(env,"],[21036,1,""],[21036,0,"\"internal/main/run_"],[21056,0,"hird_p"],[21065,0,"y"],[21067,0,"main\");\n  }\n\n  if (env->"],[21100,0,"_mode()"],[21109,1,""],[21109,0,"="],[21111,6,""],[21111,0,"Envir"],[21117,0,"nment::Exe"],[21128,4,""],[21129,2,""],[21133,1,""],[21133,0,"Mode"],[21139,1,""],[21139,0,"kInsp"],[21145,2,""],[21145,0,"ct ||\n      "],[21162,0,"execut"],[21169,1,""],[21170,3,""],[21170,0,"n_mod"],[21178,1,""],[21179,1,""],[21179,0,"== E"],[21185,5,""],[21185,0,"i"],[21187,2,""],[21187,0,"onm"],[21191,0,"nt::E"],[21204,2,""],[21204,0,"Mode::kDebug) {\n    ret"],[21228,0,"r"],[21230,0," StartExe"],[21240,0,"u"],[21246,0,"env, \"internal/main/inspect\""],[21275,1,""],[21279,0,"}\n\n  if (per_proc"],[21297,0,"ss::cli_options->print_help) {\n    e"],[21339,6,""],[21351,2,""],[21351,0,"mode(Environme"],[21366,0,"t::Exe"],[21373,0,"u"],[21378,2,""],[21378,0,"M"],[21380,2,""],[21380,0,"de::kPrintHe"],[21393,2,""],[21393,0,"p);\n    ret"],[21405,0,"r"],[21407,0," StartExe"],[21417,0,"u"],[21422,1,""],[21423,1,""],[21423,0,"env, \"internal/main/print_help\""],[21457,0,"  }\n"],[21468,0,"per_proces"],[21479,0,"::cli_op"],[21488,1,""],[21488,0,"ions->p"],[21496,0,"in"],[21500,0,"bash_compl"],[21511,0,"tion) {\n    env->set_e"],[21541,3,""],[21541,0,"_mode("],[21548,0,"nviron"],[21555,0,"ent::ExecutionMode::kPrintBashCom"],[21589,0,"le"],[21592,2,""],[21592,0,"ion"],[21596,1,""],[21596,0,";\n   "],[21608,3,""],[21609,4,""],[21609,0,"St"],[21612,5,""],[21612,0,"rtExec"],[21619,0,"tion("],[21625,1,""],[21625,0,"nv,"],[21629,0,"\"internal/"],[21643,0,"/print"],[21650,0,"ba"],[21653,0,"h_"],[21656,2,""],[21656,0,"om"],[21659,0,"le"],[21662,2,""],[21662,0,"ion\")"],[21671,0,"}\n\n  "],[21680,2,""],[21680,0,"env->opt"],[21689,0,"o"],[21691,1,""],[21692,1,""],[21692,0,"()->p"],[21698,3,""],[21698,0,"of"],[21701,10,""],[21702,1,""],[21703,0,"ocess"],[21716,11,""],[21717,0,"nv->set_ex"],[21729,2,""],[21730,0,"tio"],[21734,4,""],[21734,0,"_"],[21736,2,""],[21736,0,"od"],[21739,3,""],[21739,0,"(Env"],[21744,2,""],[21744,0,"ron"],[21748,1,""],[21748,0,"e"],[21750,0,"t::ExecutionMo"],[21765,0,"e::kPrintB"],[21776,0,"shComple"],[21785,0,"i"],[21787,2,""],[21787,0,"n);\n"],[21792,1,""],[21793,2,""],[21794,3,""],[21795,6,""],[21797,1,""],[21798,3,""],[21798,0,"ur"],[21802,0,"StartExecuti"],[21815,0,"n(en"],[21820,0,", \"int"],[21828,0,"na"],[21831,0,"/main/pr"],[21840,2,""],[21840,0,"f_process\");"],[21855,0,"}\n\n"],[21863,1,""],[21863,0,"-e/--eval with"],[21878,1,""],[21878,0,"ut"],[21881,2,""],[21881,0,"-i/--"],[21888,2,""],[21888,0,"tera"],[21893,1,""],[21893,0,"t"],[21895,0,"ve\n  if (env->o"],[21912,2,""],[21912,0,"ions()->"],[21922,0,"s_eval_s"],[21931,1,""],[21931,0,"r"],[21933,1,""],[21933,0,"ng"],[21936,1,""],[21936,0,"&&"],[21939,1,""],[21939,0,"!env->"],[21946,0,"ptions()->for"],[21960,1,""],[21960,0,"e_rep"],[21966,2,""],[21966,0,") {\n    env->set_exec"],[21988,0,"tio"],[21992,0,"_mode(Environment::Exe"],[22015,0,"u"],[22020,2,""],[22020,0,"Mode::kEvalString);"],[22044,0,"return StartExecution(env, \"internal/"],[22085,0,"/eval"],[22092,1,""],[22092,0,"t"],[22095,0,"ng\");\n  }\n\n  if (env->o"],[22120,0,"ions()->syntax_check"],[22141,1,""],[22141,0,"only) {\n  "],[22152,1,""],[22153,1,""],[22153,0,"e"],[22155,1,""],[22155,0,"v->set_ex"],[22165,1,""],[22165,0,"cut"],[22169,0,"o"],[22171,0,"_mod"],[22176,1,""],[22177,1,""],[22177,0,"E"],[22180,2,""],[22181,1,""],[22181,0,"r"],[22183,2,""],[22183,0,"nmen"],[22188,0,"::Ex"],[22193,2,""],[22193,0,"cutionMode::kCheckSyntax"],[22222,1,""],[22223,0," return StartExecution(env, \"int"],[22256,0,"rna"],[22260,0,"/main/check_"],[22273,3,""],[22273,0,"yntax\");"],[22284,0,"}\n\n"],[22289,2,""],[22290,0,"f (e"],[22295,2,""],[22295,0,"v->exe"],[22302,3,""],[22302,0,"u"],[22304,0,"ion"],[22308,1,""],[22308,0,"mode()"],[22316,0,"="],[22318,1,""],[22318,0,"E"],[22320,0,"vironm"],[22327,2,""],[22327,0,"n"],[22329,0,"::Ex"],[22334,1,""],[22334,0,"cu"],[22337,1,""],[22338,0,"o"],[22340,2,""],[22340,0,"Mod"],[22344,0,"::kRu"],[22350,3,""],[22350,0,"Ma"],[22353,1,""],[22353,0,"nM"],[22356,0,"du"],[22359,0,"e) {\n    return St"],[22378,0,"r"],[22380,0,"Ex"],[22383,0,"cution"],[22390,1,""],[22390,0,"env"],[22395,0,"\"internal/"],[22409,3,""],[22409,0,"/"],[22411,0,"un_ma"],[22417,2,""],[22417,0,"n"],[22419,1,""],[22419,0,"mo"],[22422,0,"ule\""],[22436,1,""],[22436,0,"if (env->opti"],[22450,0,"ns()->for"],[22460,1,""],[22460,0,"e_rep"],[22466,4,""],[22466,0," || uv_g"],[22476,2,""],[22476,0,"ss_h"],[22481,5,""],[22481,0,"ndle(STDIN_FILENO)"],[22501,0,"="],[22503,0,"UV_TTY) "],[22512,3,""],[22512,0,"\n    e"],[22519,1,""],[22519,0,"v->"],[22523,0,"et_exe"],[22530,1,""],[22530,0,"ut"],[22533,2,""],[22533,0,"on"],[22536,0,"mode(En"],[22544,1,""],[22544,0,"ironment::ExecutionMode::kRepl)"],[22579,1,""],[22579,0,"  return "],[22589,3,""],[22593,2,""],[22593,0,"E"],[22602,3,""],[22602,0,"(env, \"intern"],[22617,0,"/main/rep"],[22627,1,""],[22627,0,"\");"],[22631,1,""],[22633,0,"}\n\n"],[22638,1,""],[22643,0,"set_exe"],[22651,0,"uti"],[22656,0,"_mode(Environment::ExecutionMode::kEvalS"],[22697,0,"din);\n  r"],[22707,0,"turn StartE"],[22719,0,"ecu"],[22723,0,"ion"],[22727,1,""],[22727,0,"env"],[22732,1,""],[22732,0,"\"internal/mai"],[22746,0,"/eval_stdin\");\n}\n\nvoid Loa"],[22773,0,"Environm"],[22782,1,""],[22782,0,"nt(Env"],[22789,0,"ro"],[22792,0,"m"],[22794,1,""],[22794,0,"nt* env) {\n  CHECK"],[22820,0,"_main_thread());\n  // TODO(j"],[22849,0,"yeecheung): Not a"],[22867,0,"l of the execution modes in\n  // St"],[22903,0,"r"],[22905,0,"MainThr"],[22913,0,"adExecution"],[22926,1,""],[22926,0," make sense for embedders. Pick the\n  // useful ones out"],[22985,0,"nd allow embedde"],[23002,0,"s to customize the entry\n  // point more directly without using _thi"],[23071,0,"d_p"],[23075,0,"rt"],[23078,0,"_main.j"],[23086,0,"\n  "],[23090,2,""],[23090,0,"f "],[23093,1,""],[23093,0,"!RunBootst"],[23104,0,"appin"],[23110,0,"(en"],[23115,1,""],[23115,0,".IsEmpty()) {\n  "],[23132,0," USE(StartM"],[23144,0,"inTh"],[23149,1,""],[23149,0,"eadExecution(en"],[23169,0,"  }\n"],[37415,6,""],[37422,6,""],[37422,0,"CliArgs"],[38279,0,"Loc"],[38283,1,""],[38283,0,"l<Contex"],[38292,1,""],[38292,0,">"],[38719,12,""],[38730,1,""],[38741,0,"[]"],[38782,3,""],[38782,0,"F"],[38784,1,""],[38784,0,"nction"],[38792,1,""],[38792,0,"mayb"],[38797,4,""],[38797,0,"_fn"],[38802,0,"\n       "],[38845,0,"LookupAnd"],[38861,7,""],[38871,0,"    "],[38917,6,""],[38918,6,""],[38939,1,""],[38939,0,"mayb"],[38944,4,""],[38944,0,"_fn"],[38967,0,"return Local<Context>();\n    }\n    Local<Function> fn = maybe_fn.ToLocalChecked();\n    MaybeLocal<Value> result =\n        fn->Call(context, Undefined(isolate), arraysize(arguments), arguments);\n    "],[39210,1,""],[39214,1,""],[39290,0,"if (result.IsEmpty()) {\n    "],[39774,6,""],[39781,6,""],[39781,0,"CliArgs"],[1503,1,""],[1503,0,"8_platfo"],[1512,1,""],[1512,0,"m-"],[1515,1,""],[1516,0,"l"],[1531,5,""],[1532,6,""],[1532,0,"od"],[1535,1,""],[1537,3,""],[1538,0,"rsion"],[1931,22,""],[1932,4,""],[1933,3,""],[1934,37,""],[4423,28,""],[4424,57,""],[4427,548,""],[4428,16,""],[4429,90,""],[4430,51,""],[4431,10,""],[4432,2,""],[4433,44,""],[4434,444,""],[4434,0,"8"],[4436,20,""],[4441,196,""],[4442,15,""],[4443,9,""],[4444,53,""],[4445,7,""],[4447,3,""],[4448,26,""],[4449,277,""],[4450,45,""],[4451,744,""],[4452,6,""],[4454,69,""],[4455,106,""],[4456,2,""],[4457,9,""],[4458,3,""],[4460,471,""],[4461,22,""],[4464,43,""],[4465,8,""],[4466,20,""],[4467,22,""],[4468,86,""],[4469,8,""],[4470,698,""],[4470,0,"8"],[4472,54,""],[4480,1,""],[4482,2,""],[4483,43,""],[4484,24,""],[4485,133,""],[4487,24,""],[4488,6,""],[4489,3,""],[4490,198,""],[4491,26,""],[4492,91,""],[4493,41,""],[4494,54,""],[4496,12,""],[4497,6,""],[4498,14,""],[4499,14,""],[4500,31,""],[4501,52,""],[4503,29,""],[4504,51,""],[4505,9,""],[4506,32,""],[4507,29,""],[4508,2,""],[4509,6,""],[32414,0,"per_process::"],[32717,0,"per_process::"],[32781,0,"per_process::"],[35822,0,"per_process::"],[36528,0,"per_process::"],[36578,0,"per_process::"],[37478,0,"per_process::"],[39183,0,"isolate,"],[39204,9,""],[39216,0,"  "],[39242,0,"              per_process::"],[39305,0,"              "],[39888,0,"per_process::"],[42097,0,"per_process::"],[3246,19,""],[3339,36,""],[3340,3,""],[3341,5,""],[3342,3,""],[3372,44,""],[3378,6,""],[3435,29,""],[3506,195,""],[4084,0,"// Tells whether --prof is passed."],[4119,0,"bool v8_is_profiling = false;\n\n"],[4289,694,""],[4290,1056,""],[4291,8,""],[4299,15,""],[4300,192,""],[4301,4,""],[4302,168,""],[4303,21,""],[4304,29,""],[4305,25,""],[4306,14,""],[4307,3,""],[4308,2,""],[4309,16,""],[4310,76,""],[4311,39,""],[4312,820,""],[5181,7,""],[5186,347,""],[5187,82,""],[5188,1,""],[5189,12,""],[5190,10,""],[5191,12,""],[5192,211,""],[5193,213,""],[24352,627,""],[24484,2,""],[24485,39,""],[24486,32,""],[24487,49,""],[24488,19,""],[24489,98,""],[24490,110,""],[24491,58,""],[24492,5,""],[24493,10,""],[24494,3,""],[24495,13,""],[24496,2,""],[24497,4203,""],[27084,1397,""]],"_dtSpan":[872301,894922]},{"parents":[858],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[24830,0,", Environment::kIsMainThread"]],"_dtSpan":[894922,894950]},{"parents":[859],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[7500,0,"Store primordials\n  env->set_primordials(Object::New(isolate));\n  std::vector<Local<String>> primordials_params = {\n    FIXED_ONE_BYTE_STRING(isolate, \"breakAtBootstrap\"),\n    env->primordials_string()\n  };\n  std::vector<Local<Value>> primordials_args = {\n    Boolean::New(isolate,\n                  env->options()->debug_options().break_node_first_line),\n    env->primordials()\n  };\n  MaybeLocal<Value> primordials_ret =\n      ExecuteBootstrapper(env,\n                          \"internal/bootstrap/primordials\",\n                          &primordials_params,\n                          &primordials_args);\n  if (primordials_ret.IsEmpty()) {\n    return MaybeLocal<Value>();\n  }\n\n  // "],[8446,18,""],[8447,11,""],[8448,46,""],[8449,5,""],[8629,0,",\n      env->primordials_string()"],[9108,11,""],[9109,8,""],[9125,1,""],[9126,5,""],[9126,0,"x"],[9128,1,""],[9128,0,"er"],[9131,1,""],[9131,0,"me"],[9134,7,""],[9134,0,"t"],[9136,1,""],[9136,0,"l"],[9138,1,""],[9138,0,"m"],[9141,0,"ul"],[9144,4,""],[9145,6,""],[9175,3,""],[9176,16,""],[9195,0,"os"],[9198,1,""],[9198,0,"_"],[9200,2,""],[9202,0,"ern"],[9206,6,""],[9207,1,""],[9217,4,""],[9218,1,""],[9219,36,""],[9222,1,""],[9223,1,""],[9223,0,"r"],[9225,10,""],[9225,0,"m"],[9227,3,""],[9227,0,"rd"],[9230,5,""],[9233,0,"("],[10168,0,",\n      env->primordials_string()"],[10337,0,",\n      env->primordials()"]],"_dtSpan":[894950,895962]},{"parents":[860],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[8324,52,""],[8671,114,""],[3502,231,""],[27971,32,""],[27972,56,""],[27973,7,""],[27974,25,""],[27975,41,""],[28718,113,""],[28719,14,""],[28720,41,""],[9589,0,", ownsProcessState, primordials"],[9810,0,"FIXED_ONE_BYTE_STRING(isolate, \"ownsProcessState\"),\n      "],[10037,0,"Boolean::New(isolate, env->owns_process_state()),\n      "],[25137,0,"\n      "],[25157,0,"\n     "],[25172,0,"\n    "],[25178,0," static_cast<Environment::Flags>("],[25237,0," |\n                                      Environment::kOwnsProcessState |\n                                      Environment::kOwnsInspector)"]],"_dtSpan":[895962,897024]},{"parents":[861],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[3229,17,""],[4052,7,""],[4695,8,""],[4696,31,""],[4697,186,""]],"_dtSpan":[897024,897273]},{"parents":[862],"numChildren":1,"agent":182,"time":"1970-01-01T00:00:00Z","patches":[[10429,1,""],[10429,0,"OT_NULL"],[10451,9,""]],"_dtSpan":[897273,897290]},{"parents":[863],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[7140,34,""],[7141,22,""],[7224,4,""],[7225,1,""],[7226,6,""],[7226,0,"v->pr"],[7232,1,""],[7232,0,"m"],[7234,0,"rdia"],[7239,4,""],[7239,0,"s()"],[7243,2,""],[7245,0,"};\n\n#if"],[7253,3,""],[7253,0,"HAVE_INSPECTOR\n"],[7270,0,"if"],[7273,7,""],[7273,0,"("],[7328,1,""],[7328,0," {"],[7340,0,"ins"],[7344,0,"ector_agent()->PauseOnNextJavasc"],[7378,0,"ptState"],[7386,1,""],[7386,0,"ent(\n        \"B"],[7402,2,""],[7402,0,"e"],[7404,1,""],[7404,0,"k at boot"],[7414,1,""],[7414,0,"trap\""],[7420,0,";"],[7425,1,""],[7426,0,"#endif  // HAVE_INSPECTOR\n"],[1144,0,"debug_utils.h\"\n#i"],[1162,0,"clude \"n"],[6525,0,"std::string coverage;\n  bool rc = credentials::SafeGetenv(\"NODE_V8_COVERAGE\", &coverage);\n  if (rc && !coverage.empty()) {\n#if HAVE_INSPECTOR\n    if (!coverage::StartCoverageCollection(env)) {\n      return MaybeLocal<Value>();\n    }\n#else\n    fprintf(stderr, \"NODE_V8_COVERAGE cannot be used without inspector\");\n#endif  // HAVE_INSPECTOR\n  }\n\n  "],[3811,0," in nanoseconds"],[3840,2,""],[3840,0,"in"],[3843,1,""],[3843,0,"node::S"],[3854,3,""],[3854,0,"()"],[3857,2,""],[3858,3,""],[3858,0,"int64_t"],[3866,2,""],[3866,0,"n"],[3868,1,""],[3868,0,"de"],[19961,138,""],[29327,10,""],[29327,0,"_"],[29329,1,""],[29330,1,""],[29331,4,""],[29333,1,""],[29333,0,"ss::"],[29347,0,"_time"],[29355,11,""],[29355,0,"uv"],[29358,3,""],[29358,0,"hrtime"]],"_dtSpan":[897290,898128]},{"parents":[864],"numChildren":1,"agent":188,"time":"1970-01-01T00:00:00Z","patches":[[2293,0,"c"],[2299,2,""],[2342,0,"c"],[2349,2,""],[2374,0,"c"],[2381,2,""],[2393,0,"c"],[2399,2,""],[2411,0,"c"],[2418,2,""],[2430,0,"c"],[2437,2,""]],"_dtSpan":[898128,898146]},{"parents":[865],"numChildren":1,"agent":126,"time":"1970-01-01T00:00:00Z","patches":[[17605,34,""]],"_dtSpan":[898146,898180]},{"parents":[866],"numChildren":1,"agent":188,"time":"1970-01-01T00:00:00Z","patches":[[12621,8,""],[12622,3,""],[12622,0,"fProc"],[12628,4,""],[12628,0,"ss"]],"_dtSpan":[898180,898202]},{"parents":[867],"numChildren":1,"agent":58,"time":"1970-01-01T00:00:00Z","patches":[[25124,0,"int exit_code = 0;\n  "],[26084,1,""],[26085,0,"xi"],[26088,3,""],[26088,0,"_code"],[26094,0,"= "],[26129,0,"  goto exit;\n  "],[27287,10,""],[27353,0,"exit:\n"]],"_dtSpan":[898202,898267]},{"parents":[868],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[19776,0,"static std::atomic_bool init_called{false};\n\n"],[19958,0,"Make sure Init() is called only once.\n  CHECK(!init_called.exchange(true));\n\n  // "]],"_dtSpan":[898267,898394]},{"parents":[869],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[10419,0,"Local<Object> env_var_proxy;\n  if (!CreateEnvVarProxy(context, isolate, env->as_callback_data())\n           .ToLocal(&env_var_proxy) ||\n      process\n          ->Set(env->context(),\n                FIXED_ONE_BYTE_STRING(env->isolate(), \"env\"),\n                env_var_proxy)\n          .IsNothing())\n    return MaybeLocal<Value>();\n\n  "],[20163,0,"ializeNodeWithArgs"],[20223,0,"                  "],[20287,0,"                  "],[20360,0,"ializeNodeWithArgs"],[24299,0,"ializeNodeWithArgs"],[25384,0,"NodeWithIsolate"],[25417,0,"\n                               "],[25494,0,"               "],[25564,0,"               "],[26038,1,""],[26038,0,"Ini"],[26042,0,"i"],[26044,2,""],[26044,0,"lizeLibuv"],[28331,0,"NodeWithLoopAndArgs"],[28391,0,"                   "],[28465,0,"                   "],[28807,155,""],[28808,5,""],[28809,8,""],[28810,7,""],[28811,4,""],[28812,23,""],[28813,6,""],[28814,5,""],[28815,19,""],[28816,3,""],[28817,1,""],[29509,0,"NodeWithIsolate"],[30373,0,"ializeNodeWithArgs"],[30582,0,"  if (per_process::cli_options->print_version) {\n    printf(\"%s\\n\", NODE_VERSION);\n    return 0;\n  }\n\n  if (per_process::cli_options->print_v8_help) {\n    V8::SetFlagsFromString(\"--help\", 6);  // Doesn't return.\n    UNREACHABLE();\n  }\n\n"],[31552,0,"NodeWithLoopAndArgs"],[6687,6,""],[6687,0,"pr"],[6690,1,""],[6690,0,"fil"],[6695,3,""],[6725,36,""],[6726,6,""]],"_dtSpan":[898394,899549]},{"parents":[870],"numChildren":1,"agent":126,"time":"1970-01-01T00:00:00Z","patches":[[1144,0,"node.h\"\n\n// ========== local hea"],[1178,0,"rs ==========\n\n#include \"de"],[2344,4,""],[2344,0,"f"],[2347,0,"f"],[2349,8,""],[2349,0,"NODE_REPORT"],[2370,3,""],[2370,0,"\""],[2372,0,"ode_repor"],[2382,1,""],[2384,13,""],[2384,0,"\""],[2387,1,""],[2387,0,"e"],[2389,3,""],[2390,5,""],[2391,7,""],[2391,0,"f\n\n"],[2397,17,""],[2397,0,"=========="],[2408,4,""],[2409,2,""],[2410,6,""],[2410,0,"oba"],[2414,1,""],[2414,0," C hea"],[2422,3,""],[2422,0,"r"],[2424,5,""],[2424,0," ==========\n"],[2447,0,"f"],[2449,1,""],[2449,0,"n"],[2451,1,""],[2452,2,""],[2452,0,".h"],[2455,9,""],[2456,9,""],[2456,0," // _O_RDWR"],[2494,37,""],[2565,18,""],[2568,33,""],[2865,0,"// ========== global C++ headers ==========\n\n#include <cerrno>\n#include <climits>  // PATH_MAX\n#include <csignal>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\n#include <string>\n#include <vector>\n\n"]],"_dtSpan":[899549,900084]},{"parents":[871],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[7134,8,""]],"_dtSpan":[900084,900092]},{"parents":[872],"numChildren":1,"agent":58,"time":"1970-01-01T00:00:00Z","patches":[[27632,2,""],[27633,0,"&&"],[27636,5,""],[27636,0,"!env.GetAsyncRequest()->IsStopped())"],[27906,0," && !env.GetAsyncRequest()->IsStopped()"],[32294,0,"int Stop(Environment* env) {\n  env->ExitEnv();\n  return 0;\n}\n\n"]],"_dtSpan":[900092,900238]},{"parents":[873],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[8464,93,""],[8867,44,""],[8869,23,""],[9682,4,""],[9682,0,"r"],[9684,5,""],[9684,0,"qui"],[9688,0,"e, in"],[9694,1,""],[9694,0,"ernalBinding"],[9721,0,"\n  //"],[9837,14,""],[9837,0,"env->require"],[9850,6,""],[9850,0,"string"],[9857,0,"),\n      env->"],[9872,4,""],[9872,0,"n"],[9875,5,""],[9875,0,"rn"],[9878,0,"l_bin"],[9884,6,""],[9884,0,"ing_st"],[9891,3,""],[9891,0,"ing("],[10107,0,"require,\n      interna"],[10130,0,"_binding_l"],[10143,3,""],[10144,3,""],[10145,6,""],[10735,0,"// Make sure that no request or handle is created during bootstrap -\n  // if necessary those should be done in pre-exeuction.\n  // TODO(joyeecheung): print handles/requests before aborting\n  CHECK(env->req_wrap_queue()->IsEmpty());\n  CHECK(env->handle_wrap_queue()->IsEmpty());\n\n  "]],"_dtSpan":[900238,900847]},{"parents":[874],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[27810,13,""],[27810,0,"i"],[27812,6,""],[27812,0,"_"],[27814,1,""],[27818,2,""],[27818,0,"ing"],[28067,13,""],[28067,0,"i"],[28069,6,""],[28069,0,"_"],[28071,1,""],[28075,2,""],[28075,0,"ing"]],"_dtSpan":[900847,900901]},{"parents":[875],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[28290,0,"#if HAVE_INSPECTOR && NODE_USE_V8_PLATFORM\n"],[28339,0,"#endif\n"]],"_dtSpan":[900901,900951]},{"parents":[876],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[8456,85,""],[8782,44,""],[8783,19,""],[27153,13,""],[5183,7,""],[5221,5,""],[5243,0,"                                  "],[5297,0,"                                  "],[5375,0,"                                  "],[14466,32,""],[14467,10,""],[14468,1,""],[14470,1,""],[14506,2,""],[14508,1,""],[14510,1,""],[25525,1,""],[25525,0,"// TODO(joyeecheu"],[25543,0,"g): a"],[25550,0,"g"],[25552,1,""],[25553,0,"th"],[25556,1,""],[25556,0,"s wi"],[25561,0,"h"],[25563,1,""],[25564,1,""],[25564,0,"he C"],[25569,0,"ea"],[25572,3,""],[25573,1,""],[25573,0,"Env"],[25577,4,""],[25577,0,"r"],[25579,2,""],[25579,0,"nmen"],[25584,0," "],[25586,3,""],[25586,0,"xp"],[25589,3,""],[25589,0,"s"],[25591,1,""],[25591,0,"d"],[25594,1,""],[25594,0,"n n"],[25598,3,""],[25598,0,"d"],[25600,1,""],[25600,0,".h"],[25603,0,"//"],[25606,0,"and"],[25610,0,"the"],[25614,0,"environment"],[25626,0,"creation"],[25635,3,""],[25635,0,"routine"],[25643,15,""],[25643,0,"in"],[25646,0,"workers"],[25654,0,"somehow.\ninline"],[25670,0,"std::unique_ptr<Environment>"],[25699,0,"CreateMainEnvironment(\n"],[25753,16,""],[25757,12,""],[25795,17,""],[25799,11,""],[25840,0,",\n    int* exit_code"],[25866,0,"Isolate* isolate = isolate_data->isolate();\n  "],[25947,0,"\n  // TODO(addaleax): This should load a real per-Isolate option, currently\n  // this is still effectively per-process.\n"],[26069,0,"if (isolate_data->options()->track_heap_objects) {\n    isolate->GetHeapProfiler()->StartTrackingHeapObjects(true);\n  }\n\n  "],[26278,0,"\n"],[26281,0,"std::un"],[26289,3,""],[26289,0,"qu"],[26292,1,""],[26292,0,"_ptr<Env"],[26301,3,""],[26301,0,"r"],[26303,1,""],[26303,0,"nm"],[26306,2,""],[26306,0,"nt>"],[26310,3,""],[26310,0,"env"],[26314,0,"="],[26316,0,"std::make_unique<"],[26344,4,""],[26344,0,">"],[26594,1,""],[26594,0,"->"],[26648,1,""],[26648,0,"->"],[26739,1,""],[26739,0,"->"],[26948,1,""],[26948,0,"->"],[27046,0," "],[27050,1,""],[27050,0,"->"],[27111,0," "],[27115,1,""],[27115,0,"->"],[27171,0," "],[27188,1,""],[27188,0,"->"],[27248,1,""],[27248,0,"->"],[27290,0,"*"],[27338,2,""],[27338,0,"re"],[27341,1,""],[27341,0,"urn"],[27346,3,""],[27346,0,"nv"],[27501,1,""],[27501,0,"->"],[27603,0,"if (RunBootstrapping(env.get()).IsEmpty()) "],[27652,0,"*exit_code = 1;\n  }\n\n  return env;\n}\n\ninline int StartNodeWithIsolate(Isolate* isolate,\n                                IsolateData* isolate_data,\n                                const std::vector<std::string>& args,\n                                const std::vector<std::string>& exec_args) {\n  int exit_code = 0;\n  std::unique_ptr<Environment> env =\n      CreateMainEnvironment(isolate_data, args, exec_args, &exit_code);\n  CHECK_NOT_NULL(env);\n  HandleScope handle_scope(env->isolate());\n  Context::Scope context_scope(env->context());\n\n  if (exit_code == 0) {\n    {\n      "],[28262,1,""],[28265,0,".get()"],[28278,0,"  "],[28283,1,""],[28283,0,"->"],[28326,0,"  "],[28344,1,""],[28347,0,".get()"],[28360,0,"  "],[28365,1,""],[28365,0,"->"],[28401,0,"  "],[28408,0,"  "],[28416,0,"  "],[28453,0,"  "],[28470,0,"  "],[28475,1,""],[28475,0,"->"],[28512,0,"  "],[28577,0,"  "],[28590,0,"  "],[28602,1,""],[28602,0,"->"],[28642,0,"  "],[28699,0,"  "],[28725,1,""],[28725,0,"->"],[28748,0,"  "],[28766,1,""],[28766,0,"->"],[28800,0,"  "],[28816,1,""],[28819,0,".get()"],[28835,0,"  "],[28911,0,"  "],[28962,0,"  "],[28988,1,""],[28988,0,"->"],[29009,0,"  "],[29040,1,""],[29040,0,"->"],[29062,0,"  "],[29067,1,""],[29067,0,"->"],[29104,0,"  "],[29166,0,"  "],[29173,0,"  "],[29178,1,""],[29178,0,"->"],[29206,1,""],[29208,0,"  "],[29231,1,""],[29234,0,".get()"],[29243,1,""],[29245,0,"  "],[29274,1,""],[29277,0,".get()"],[29286,4,""],[29287,14,""],[29288,23,""],[29288,0,"}"],[29290,5,""],[29291,7,""],[29296,1,""],[29296,0,"->"],[29332,1,""],[29332,0,"->"],[29390,1,""],[29390,0,"->"],[29418,1,""],[29421,0,".get()"],[29532,0,"\n"],[30526,16,""],[30527,27,""],[30528,23,""],[30529,126,""],[30530,20,""],[30531,32,""],[30532,6,""],[12471,0,"std::string first_argv;\n  "],[12506,6,""],[12506,0,"argv().s"],[12515,6,""],[12515,0,"z"],[12520,2,""],[12520,0,">"],[12522,36,""],[12522,0,"1)"],[12525,2,""],[12525,0,"{"],[12531,0,"first_argv"],[12542,0,"="],[12549,5,""],[12549,0,"argv()[1];\n  }\n\n  if (firs"],[12576,3,""],[12577,6,""],[12577,0,"argv"],[12585,3,""],[12585,0,"\""],[12587,2,""],[12588,8,""],[12588,0,"sp"],[12592,1,""],[12593,0,"\" || f"],[12600,4,""],[12600,0,"rst_argv == \""],[12615,5,""],[12618,0,"\""],[12735,69,""],[12852,79,""],[12966,71,""],[13145,70,""],[13254,71,""],[13328,2,""],[13328,0,"!first_arg"],[13339,2,""],[13339,0,"."],[13341,4,""],[13341,0,"mp"],[13344,8,""],[13344,0,"y"],[13348,2,""],[13348,0,"&&"],[13351,3,""],[13351,0,"f"],[13354,5,""],[13354,0,"s"],[13356,22,""],[13356,0,"_"],[13358,8,""],[13358,0,"rgv != \"-\""],[13520,64,""],[13578,1,""],[13579,66,""],[4315,0,"profiler::EndStartedProf"],[4340,0,"lers(env);\n\n  i"],[6819,6,""],[6819,0,"Local<S"],[6831,0,">"],[6841,9,""],[6841,0,"_st"],[6845,1,""],[6848,2,""],[6849,1,""],[6849,0,"nv->"],[6855,0,"v_vars()->Ge"],[6868,0,"(\n      "],[6877,1,""],[6877,0,"so"],[6880,4,""],[6881,1,""],[6881,0,"t"],[6883,0,", FIXED_ONE_BYTE_STRIN"],[6906,1,""],[6906,0,"(isola"],[6914,3,""],[6914,0,", "],[6934,1,""],[6934,0,"));\n  if"],[6943,1,""],[6943,0,"(!"],[6953,0,"_str.IsEmpty("],[6967,10,""],[6971,1,""],[6979,1,""],[6979,0,"_str->L"],[6987,2,""],[6987,0,"ng"],[6990,1,""],[6990,0,"h"],[6993,0," > 0"],[7140,0,"\\n"]],"_dtSpan":[900951,903971]},{"parents":[877],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[11675,0,"env->primordials_string(),\n      "],[11930,0,"primordials(),\n      env->"]],"_dtSpan":[903971,904030]},{"parents":[878],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[3415,16,""],[7657,8,""],[7657,0,"Check"]],"_dtSpan":[904030,904059]},{"parents":[879],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[1436,0,"_env"],[3101,0,"native_module::NativeModuleEnv;\nusing "],[3226,0,"\n"],[5601,14,""],[5601,0,"N"],[5607,2,""],[5607,0,"M"],[5613,8,""],[5613,0,"Env::"],[5635,11,""],[12484,14,""],[12484,0,"N"],[12490,2,""],[12490,0,"M"],[12496,8,""],[12497,0,"nv::E"],[23352,0,"NativeModuleEnv::InitializeCodeCache();\n\n  "],[7704,1,""],[7705,0,"setup"],[7711,0,"by th"],[7717,2,""],[7717,0," per"],[7722,2,""],[7722,0,"cont"],[7727,0,"x"],[7729,1,""],[7729,0," scri"],[7735,0,"t in the envi"],[7749,1,""],[7749,0,"on"],[7752,0,"ent.\n  L"],[7761,3,""],[7761,0,"c"],[7764,2,""],[7764,0,"<"],[7771,3,""],[7771,0,"> p"],[7775,4,""],[7775,0,"r_c"],[7779,2,""],[7779,0,"n"],[7782,2,""],[7782,0,"xt_bindings"],[7797,12,""],[7803,6,""],[7803,0,"Value"],[7809,1,""],[7821,1,""],[7821,0,";\n  if (!GetPerContextEx"],[7846,1,""],[7846,0,"o"],[7848,0,"ts(context).ToLoc"],[7866,1,""],[7866,0,"l(&per_context_binding"],[7889,2,""],[7889,0,")"],[7891,1,""],[7891,0,"||"],[7898,0,"  !per_context_bindings->Get(context, "],[7961,0,")"],[7965,3,""],[7967,9,""],[7967,0,"       .T"],[7977,2,""],[7982,2,""],[7982,0,"(&primordi"],[7994,4,""],[7994,0,"s)"],[7997,0,"||\n      !"],[8018,4,""],[8018,0,"->I"],[8022,2,""],[8022,0,"Object())"],[8038,0,"return MaybeLocal<Value>();\n  }\n  "],[8077,0,"set_"],[8093,0,"primordials.As<Object>()"],[8118,4,""],[8323,293,""],[1259,11,""],[1261,10,""],[1261,0,"t"],[1263,3,""],[1263,0,"r"],[1265,2,""],[1266,2,""],[1266,0,"l"],[1287,11,""],[1287,0,"m"],[1289,5,""],[1290,8,""],[1291,3,""],[1292,11,""],[1294,0,"stan"],[1299,9,""],[1300,10,""],[1415,24,""],[1416,3,""],[1777,101,""],[1778,59,""],[2961,1,""],[2962,16,""],[3011,1,""],[3012,8,""],[3013,10,""],[3175,18,""],[3251,27,""],[24625,371,""],[24626,88,""],[24627,4,""],[24629,23,""],[24630,2,""],[24631,43,""],[24632,23,""],[24633,40,""],[24634,11,""],[24635,41,""],[24636,34,""],[24638,18,""],[24639,5,""],[24640,22,""],[24641,32,""],[24642,3,""],[24643,5,""],[24644,89,""],[24645,110,""],[24646,6,""],[24648,67,""],[24649,2,""],[24650,46,""],[24651,1160,""],[24652,76,""],[24654,4,""],[24655,120,""],[24656,2,""],[24657,52,""],[24658,29,""],[24662,15,""],[24663,1,""],[24664,1553,""],[24665,9,""],[24666,76,""],[24668,33,""],[24670,12,""],[24671,1133,""],[26454,0,"\n"],[26457,6,""],[26472,0," 0;"],[26478,0,"{\n"],[26484,5,""],[26488,1,""],[26488,0,"Ma"],[26491,0,"nIns"],[26496,6,""],[26496,0,"ance main_i"],[26508,4,""],[26509,0,"tance"],[26554,0,"  exit_code = main_instance.Run();\n  }\n\n  "]],"_dtSpan":[904059,910685]},{"parents":[880],"numChildren":1,"agent":99,"time":"1970-01-01T00:00:00Z","patches":[[21524,0,"\n"],[21593,0,"std::vector<std::string> env_argv;\n    "],[21704,0,".\n    env_argv.push_back(argv->at(0));\n\n    bool is_in_string = false;"],[21779,2,""],[21779,0,"bool"],[21784,0,"will_st"],[21792,0,"rt_"],[21796,1,""],[21796,0,"ew_arg ="],[21805,0,"tr"],[21808,0,"e;\n    for (std::string::"],[21834,0,"ize_type ind"],[21847,0,"x = 0;\n        "],[21863,1,""],[21863,0,"inde"],[21868,1,""],[21869,1,""],[21869,0,"< node_option"],[21883,0,".size();\n         ++index) {\n     "],[21918,0,"ch"],[21921,0,"r"],[21923,0,"c = node_o"],[21934,0,"tions.at(index);\n\n      // Backs"],[21968,0,"shes es"],[21976,0,"ap"],[21979,0," t"],[21982,0,"e f"],[21987,1,""],[21987,0,"lowing charact"],[22003,0,"\n      if (c == '\\\\' && is_in_string) {\n       "],[22051,2,""],[22052,1,""],[22052,0,"f (ind"],[22059,0,"x"],[22061,0,"+ 1 == node_o"],[22075,3,""],[22075,0,"t"],[22077,0,"o"],[22079,1,""],[22079,0,"s"],[22081,0,"size()) {"],[22095,0,"      error"],[22107,1,""],[22107,0,"->push_back(\"invali"],[22127,2,""],[22127,0," "],[22129,0,"alu"],[22133,0," for NODE_OPTIONS \"\n                            \"(invalid es"],[22194,0,"ape)\\n\");\n          re"],[22217,1,""],[22217,0,"u"],[22219,1,""],[22219,0,"n 9;\n        } el"],[22237,0,"e {\n          c = node_op"],[22263,0,"ions.at(++in"],[22276,2,""],[22276,0,"ex);\n        }\n      } else if (c == ' ' && !is_in_"],[22333,1,""],[22333,0,") {\n"],[22338,1,""],[22338,0,"       will_start_"],[22357,1,""],[22357,0,"ew"],[22363,1,""],[22366,2,""],[22366,0,"true;\n        continue;\n      } e"],[22400,0,"se if (c == '\"') {\n        "],[22428,0,"s_in_s"],[22435,1,""],[22435,0,"ring = !is_in_s"],[22455,0,";\n        continue;\n      }\n\n      if "],[22494,2,""],[22494,0,"will_start_new_arg) {\n     "],[22522,1,""],[22523,1,""],[22524,0,"e"],[22526,3,""],[22526,0,"v"],[22528,1,""],[22528,0,"argv."],[22534,0,"ush_back(s"],[22545,0,"d::str"],[22552,1,""],[22553,0,"g(1, c));\n        will_"],[22577,1,""],[22577,0,"tart_new_arg"],[22590,1,""],[22590,0,"="],[22592,2,""],[22592,0,"false"],[22603,0,"  } else {\n        "],[22630,3,""],[22630,0,".back()"],[22638,0,"+"],[22641,1,""],[22641,0,"c;\n      }\n    }\n\n    if (is_in_st"],[22676,0,"in"],[22679,1,""],[22679,0,") {\n      errors"],[22697,0,"push_b"],[22704,1,""],[22704,0,"ck"],[22707,1,""],[22707,0,"\"invalid value for NODE_OPTIONS \"\n                        \"(unterminated string"],[22787,0,"\\n\")"],[22793,0,"      return 9;\n    }\n"]],"_dtSpan":[910685,911770]},{"parents":[881],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[6831,0,"#if HAVE_INSPECTOR\n  if (env->options()->cpu_prof) {\n    profiler::StartCpuProfiling(env, env->options()->cpu_prof_path);\n  }\n#endif  // HAVE_INSPECTOR\n\n"],[25769,0,"Initial"],[25777,0,"zatio"],[25783,0,"Resul"],[25790,1,""],[25790,0,"Ini"],[25794,0,"i"],[25796,0,"lizeOncePe"],[25807,1,""],[25807,0,"Process"],[26281,1,""],[26281,0,"Ini"],[26285,6,""],[26285,0,"ializa"],[26292,0,"i"],[26294,2,""],[26294,0,"nRe"],[26298,0,"ul"],[26301,3,""],[26301,0," re"],[26305,0,"ul"],[26308,5,""],[26308,0,";\n "],[26312,1,""],[26313,1,""],[26313,0,"e"],[26315,14,""],[26315,0,"ult."],[26322,4,""],[26322,0,"s"],[26324,0,"="],[26350,0,"(argv,"],[26357,5,""],[26360,1,""],[26360,0,"v + argc)"],[26406,0,"\n"],[26465,3,""],[26465,0,"re"],[26468,4,""],[26468,0,"ul"],[26471,1,""],[26471,0,"."],[26483,0,"\n       "],[26516,0,"(result."],[26528,0,")"],[26532,0,"(r"],[26535,0,"sult.e"],[26549,0,")"],[26640,0,"result."],[26691,0,"result."],[26714,0,"{\n      result.early_"],[26742,0,"= tru"],[26748,2,""],[26748,0,";\n      re"],[26759,4,""],[26759,0,"urn r"],[26765,0,"sult"],[26773,0,"  "],[26777,0,"  }\n"],[26871,0,"sult.exit_code = 0;\n    result.early_re"],[26915,1,""],[26915,0,"= true"],[26925,0,"  return result;\n  "],[27779,1,""],[27782,1,""],[27782,0,"retur"],[27788,1,""],[27789,0,"r"],[27791,2,""],[27791,0,"sul"],[27795,9,""],[27797,3,""],[27797,0,"}\n"],[27800,5,""],[27800,0,"v"],[27802,4,""],[27803,9,""],[27803,0,"d"],[27805,1,""],[27805,0,"Te"],[27808,4,""],[27808,0,"rDow"],[27813,3,""],[27813,0,"O"],[27817,5,""],[27817,0,"P"],[27819,15,""],[27820,10,""],[27820,0,"P"],[27822,14,""],[27822,0,"o"],[27824,2,""],[27825,10,""],[27826,9,""],[27826,0,"s"],[27829,2,""],[27830,3,""],[27830,0,"{"],[28329,0,"}\n"],[28332,0,"int Start(int"],[28346,0,"argc, char**"],[28359,0,"a"],[28361,0,"gv) {\n  InitializationR"],[28385,0,"sul"],[28389,0," res"],[28394,0,"lt = InitializeOncePerP"],[28418,0,"ocess(argc, argv);\n  if (result.early_retur"],[28462,0,") {\n   "],[28470,0,"return result.exit_code;\n  }\n\n  {\n    NodeMainInstance main_instance(\n        uv_default_loop(), result.args, result.exec_args);\n    result.exit_code = main_instance.Run();\n  }\n\n  TearDownOncePerProcess();\n  return result."],[6888,0,"env->InitializeCPUProfDir(env->o"],[6921,0,"tions()->cpu_p"],[6938,0,"_d"],[6941,0,"r);\n    profi"],[7007,1,""],[7007,0,"n"],[7009,2,""],[7009,0,"me"],[28569,0,"Isolate::CreateParams params;\n    "],[28634,0,"&params,"],[28651,0,"                           "],[28696,0,"\n          "],[28708,0,"                        pe"],[28735,0,"_proc"],[28742,0,"s::v8_platform.Platform(),\n                                   res"],[28816,0,"\n                                  "],[28603,0,"// TODO(joyeecheung): collect external references and set it in\n    // params.external_references.\n    std::vector<intptr_t> external_references = {\n        reinterpret_cast<intptr_t>(nullptr)};\n    v8::StartupData* blob = "],[28842,0,"::GetEmbeddedSnapshotBlob();\n    const"],[28881,0,"NodeMainInstance::IndexArray* indexes =\n        NodeMainInstance::GetIsolateDataIndexes();\n    if (blob != nullptr) {\n      params.external_references = external_references.data();\n      para"],[29073,0,"s.sn"],[29078,0,"pshot_blob = blob;\n    }\n\n    NodeMainInstance ma"],[29373,0,",\n                                   indexes"],[28881,10,""],[28883,4,""],[28883,0,"d"],[28886,3,""],[28886,0,"v"],[28888,3,""],[28888,0,"cto"],[28892,2,""],[28892,0,"<size_t>"],[11849,5,""],[11868,2,""],[11868,0,";"],[11870,1,""],[11872,0,"if"],[11875,2,""],[11875,0,"(!"],[11942,0,"\n           .ToLocal(&result) ||\n      !task_queue::RunNextTicksNative(env)) {\n    return MaybeLocal<Value>()"],[12055,0,"}\n  "],[12077,5,""],[6471,184,""],[6490,2,""],[6507,126,""],[6508,57,""],[6511,15,""],[6512,3,""],[6513,2,""],[6514,4,""],[6515,17,""],[6517,55,""],[6520,26,""],[6522,4,""]],"_dtSpan":[911770,914208]},{"parents":[882],"numChildren":1,"agent":188,"time":"1970-01-01T00:00:00Z","patches":[[10177,0,"c"],[10179,1,""]],"_dtSpan":[914208,914210]},{"parents":[883],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[1228,0,"env-inl.h\"\n#include \""]],"_dtSpan":[914210,914231]},{"parents":[884],"numChildren":1,"agent":60,"time":"1970-01-01T00:00:00Z","patches":[[2155,0,"#if defined(__APPLE__) || defined(__linux__)\n#define NODE_USE_V8_WASM_TRAP_HANDLER 1\n#else\n#define NODE_USE_V8_WASM_TRAP_HANDLER 0\n#endif\n\n#if NODE_USE_V8_WASM_TRAP_HANDLER\n#include <atomic>\n#include \"v8-wasm-trap-handler-posix.h\"\n#endif  // NODE_USE_V8_WASM_TRAP_HANDLER\n\n"],[4906,0,"#ifdef __POSIX__\n"],[4948,0,", siginfo_t* info, void* ucontext"],[5247,0,"#endif  // __POSIX__\n"],[13897,0,"#if NODE_USE_V8_WASM_TRAP_HANDLER\nstatic std::atomic<void (*)(int signo, siginfo_t* info, void* ucontext)>\n    previous_sigsegv_action;\n\nvoid TrapWebAssemblyOrContinue(int signo, siginfo_t* info, void* ucontext) {\n  if (!v8::TryHandleWebAssemblyTrapPosix(signo, info, ucontext)) {\n    auto prev = previous_sigsegv_action.load();\n    if (prev != nullptr) {\n      prev(signo, info, ucontext);\n    } else {\n      uv_tty_reset_mode();\n      raise(signo);\n    }\n  }\n}"],[14361,0,"end"],[14366,0,"  // NODE_USE_V8_WASM_TRAP_HANDLER\n\n#if"],[14511,0,",\n                                           siginfo_t* info,\n                                           void* ucontext"],[14682,0,"#if NODE_USE_V8_WASM_TRAP_HANDLER\n  if (signal == SIGSEGV) {\n  "],[14747,0,"CHECK(previou"],[14761,0,"_sigsegv_action.is_lock_free());\n    previous_sigsegv_action.store(handler);\n    return;\n  }\n#endif  // NODE_USE_V8_WASM_TRAP_HANDLER\n  s"],[14956,1,""],[14956,0,"sig"],[14960,0,"ctio"],[14965,4,""],[16861,0,"#if NODE_USE_V8_WASM_TRAP_HANDLER\n  // Tell V8 to disable emitting WebAssembly\n  // memory bounds checks. This means that we have\n  // to catch the SIGSEGV in TrapWebAssemblyOrContinue\n  // and pass the signal context to V8.\n  {\n    struct sigaction sa;\n    memset(&sa, 0, sizeof(sa));\n    sa.sa_sigaction = TrapWebAssemblyOrContinue;\n    CHECK_EQ(sigaction(SIGSEGV, &sa, nullptr), 0);\n  }\n  V8::EnableWebAssemblyTrapHandler(false);\n#endif  // NODE_USE_V8_WASM_TRAP_HANDLER\n\n"]],"_dtSpan":[914231,915898]},{"parents":[885],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[5008,140,""],[5010,12,""],[5011,69,""],[14756,7,""],[14757,24,""],[14758,2,""],[14759,1,""],[14760,205,""],[14805,7,""],[16186,0," || nr == SIGXFSZ"]],"_dtSpan":[915898,916382]},{"parents":[886],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[1249,0,"memory_tracker-inl.h\"\n#include \""]],"_dtSpan":[916382,916414]},{"parents":[887],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[7232,439,""],[1741,0,"agent.h\"\n#"],[1752,0,"nclude \"inspect"],[1768,0,"r_io"],[1984,0," HAVE_INSPECTOR\n#inclu"],[2008,0," \"inspector/worker_inspector.h\"  // ParentInspectorHandle\n#endi"],[2072,0,"\n\n#ifdef"],[3681,4,""],[3682,14,""],[6523,0,"#if HAVE_INSPECTOR && NODE_USE_V8_PLATFOR"],[6565,0,"\nint Environment::Initi"],[6589,2,""],[6589,0,"liz"],[6593,1,""],[6593,0,"Inspect"],[6601,0,"r(\n    inspe"],[6614,0,"tor::P"],[6621,3,""],[6621,0,"rentInspectorH"],[6636,0,"nd"],[6639,1,""],[6640,1,""],[6640,0,"*"],[6642,2,""],[6642,0,"pare"],[6647,3,""],[6648,0,"_handle) {\n  std::"],[6669,3,""],[6672,2,""],[6672,0," i"],[6675,1,""],[6675,0,"spector_path;\n  "],[6692,0,"f (pa"],[6698,3,""],[6701,2,""],[6701,0,"_handl"],[6708,0," != "],[6713,1,""],[6713,0,"ullptr"],[6725,0,"  D"],[6735,7,""],[6735,0,"i"],[6738,2,""],[6738,0,"mai"],[6743,3,""],[6744,0,"hread());\n    in"],[6761,0,"pec"],[6765,0,"o"],[6767,0,"_p"],[6770,0,"th = "],[6776,2,""],[6776,0,"are"],[6780,1,""],[6780,0,"t"],[6782,2,""],[6782,0,"han"],[6786,0,"l"],[6788,0,"->url"],[6794,1,""],[6797,1,""],[6799,1,""],[6799,0,"  in"],[6804,0,"pe"],[6807,0,"tor_"],[6812,1,""],[6812,0,"gent_->SetP"],[6824,2,""],[6824,0,"r"],[6826,0,"nt"],[6834,1,""],[6834,0,"(\n        std::unique_ptr<inspe"],[6866,0,"t"],[6868,0,"r::ParentIns"],[6882,0,"ctorHandle>(parent_handle));\n"],[6912,0," } el"],[6918,0,"e {\n    inspe"],[6932,0,"t"],[6934,0,"r_"],[6937,0,"ath = argv_.siz"],[6954,0,") > 1 ? argv_[1].c_str() : \"\";\n  }\n\n  CHECK(!inspector_ag"],[7013,1,""],[7013,0,"t_"],[7017,0,"IsL"],[7022,3,""],[7024,0,"ning"],[7035,0,"// "],[7039,0,"n"],[7041,0,"pect"],[7046,1,""],[7046,0,"r "],[7049,0,"gen"],[7053,2,""],[7054,0,"can't fa"],[7063,2,""],[7064,0," to st"],[7071,0,"r"],[7073,1,""],[7073,0,", but"],[7079,1,""],[7079,0,"if it was"],[7089,1,""],[7089,0,"co"],[7092,3,""],[7092,0,"f"],[7094,1,""],[7094,0,"gured t"],[7102,0," "],[7104,1,""],[7104,0,"is"],[7108,3,""],[7108,0,"n"],[7112,1,""],[7112,0,"// right away "],[7127,0,"n the webso"],[7139,0,"ket port and f"],[7154,0,"i"],[7156,2,""],[7156,0,"s t"],[7160,0," bi"],[7164,0,"d/e"],[7168,0,"c, this will r"],[7183,1,""],[7184,1,""],[7184,0,"urn\n  //"],[7193,0,"false.\n  inspe"],[7208,0,"t"],[7210,0,"r_age"],[7217,0,"_->Start(insp"],[7231,1,""],[7231,0,"ctor_pa"],[7239,0,"h,\n                      "],[7265,1,""],[7266,1,""],[7266,0,"  optio"],[7274,1,""],[7274,0,"s_"],[7278,0,"debug_options(),\n                          inspe"],[7327,0,"t"],[7329,0,"r_host_port(),\n                          is_mai"],[7377,0,"_"],[7379,0,"hr"],[7382,2,""],[7382,0,"ad"],[7386,0,")"],[7388,1,""],[7389,1,""],[7389,0,"  "],[7394,4,""],[7394,0,"(options_->debug"],[7411,0,"options().inspector_enabled &&\n      !inspector_agent_->"],[7468,1,""],[7468,0,"sListening()) {\n    return 12;  // "],[7504,6,""],[7504,0,"ignal internal error\n  }\n"],[7557,0,"this);\n\n  if (options_->debug_options().break_node_first_line) {\n    inspector_ag"],[7640,0,"t_->PauseOnNextJa"],[7658,0,"ascriptStatement(\"Break at bootstrap\""],[7698,0,"  }\n\n  return 0;\n}\n"],[7742,3,""],[7743,2,""],[7743,0,"&&"],[7746,0,"NODE_USE_V8_PL"],[7761,0,"TFORM\n\nvoi"],[7772,1,""],[7773,2,""],[7773,0,"Envi"],[7778,4,""],[7778,0,"onm"],[7783,3,""],[7784,2,""],[7784,0,"::Ini"],[7790,7,""],[7790,0,"i"],[7793,4,""],[7793,0,"iz"],[7796,1,""],[7796,0,"Diagnos"],[7804,0,"ics() {"],[7814,1,""],[7814,0,"is"],[7817,1,""],[7817,0,"l"],[7819,0,"te_->GetHeapProfi"],[7837,4,""],[7838,2,""],[7838,0,"r()-"],[7843,2,""],[7843,0,"AddBui"],[7850,1,""],[7850,0,"dEm"],[7854,0,"edderGraphC"],[7867,0,"lback(\n    "],[7879,1,""],[7880,1,""],[7880,0,"Envir"],[7887,1,""],[7887,0,"m"],[7889,1,""],[7889,0,"n"],[7891,3,""],[7891,0,"::Bui"],[7897,1,""],[7897,0,"dEm"],[7901,0,"edderGr"],[7909,2,""],[7909,0,"ph, this"],[7978,0,"this);\n#endif\n}\n\nMaybeLocal<Value> RunBootstrapping(Environment* env) {\n  CHECK(!"],[8062,0,"->has_run_bootstrapping_code()"],[8095,1,""],[8095,0,"\n  Escapabl"],[8107,0,"Ha"],[8111,0,"leScope scope(env->isolate());\n  Isolate* "],[8154,0,"solate = env->isolate();\n  Local<Context> context = env->context();\n\n\n  // Add a re"],[8238,0,"erence to the global object"],[8266,0,"  Local<Object> global = context->Global();"],[8652,67,""],[8653,78,""],[8654,29,""],[8656,4,""],[8657,25,""],[3440,19,""],[7994,17,""],[8005,32,""],[8005,0,"::B"],[8015,42,""],[8016,21,""],[8017,44,""],[8019,45,""],[8020,2,""],[8021,1,""],[8022,14,""],[8024,10,""],[8026,1,""],[8027,5,""],[8027,0,"d"],[8029,28,""],[8029,0,"rs"],[8033,2,""],[8034,14,""],[8034,0,"{\n"],[8037,7,""],[8038,12,""],[8038,0,"E"],[8040,6,""],[8041,23,""],[8042,5,""],[8043,22,""],[8044,24,""],[8045,1,""],[8046,11,""],[8047,9,""],[8047,0,"H"],[8049,0,"nd"],[8052,4,""],[8053,0,"S"],[8055,9,""],[8058,6,""],[8059,2,""],[8060,34,""],[8060,0,"c"],[8062,36,""],[8063,15,""],[8064,1,""],[8065,36,""],[8072,21,""],[8072,0,"_"],[8074,15,""],[8075,1,""],[8159,5,""],[8212,0,"_"],[8271,0,"_"],[8303,5,""],[8384,0,"_object()"],[8401,5,""],[8479,0,"()"],[8518,5,""],[8598,0,"()"],[8637,5,""],[8688,5,""],[8715,0,";\n "],[8719,1,""],[8719,0,"if"],[8722,0,"(!"],[8751,3,""],[8751,0,"     this"],[8823,1,""],[8826,2,""],[8827,0,"        .ToLocal"],[8844,0,"&"],[8858,3,""],[8859,6,""],[8900,0,"  CHECK(loader_exports->IsObject());"],[8973,4,""],[8974,2,""],[8989,17,""],[9081,0,"()"],[9085,5,""],[9143,0,"CHECK(int"],[9153,0,"r"],[9155,1,""],[9155,0,"al_binding_loader"],[9174,0,"I"],[9176,0,"Function());\n  s"],[9259,1,""],[9322,0,"()"],[9326,5,""],[9364,0,"CHECK(requir"],[9377,2,""],[9379,0,"I"],[9381,0,"Function());\n  s"],[9450,0,"return scope.Escape(loader_exports);\n}\n\nMaybeLocal<Value> Environment::BootstrapNode() {\n  EscapableHandleScope scope(isolate_);\n\n  Local<Object> global = context()->Global();\n  // TODO(joyeecheung): this can be done in JS land now.\n  global->Set(context(), FIXED_ONE_BYTE_STRING(isolate_, \"global\"), global)\n      .Check();\n\n  "],[9916,5,""],[9940,5,""],[9964,5,""],[10026,0,"_"],[10081,0,"_"],[10111,5,""],[10189,0,"_object()"],[10206,0,"native_module_"],[10227,0,"()"],[10260,0,"()"],[10290,0,"_"],[10293,5,""],[10338,0,"_"],[10341,5,""],[10370,5,""],[10443,3,""],[10443,0,"this"],[10567,0,"()"],[10578,0,"_"],[10581,5,""],[10653,0,"_object()"],[10679,15,""],[10680,1,""],[10694,0,"context(),"],[10727,5,""],[10734,2,""],[10734,0,"_"],[10744,0," env_var_proxy)"],[10770,0,".IsNothing()) {\n "],[10790,0,"return"],[10797,0,"MaybeLocal<Value>();\n  }\n\n"],[10825,0,"return scope.Escap"],[10844,0,"Maybe(result);\n}\n\nMaybeLocal<Value> E"],[10883,0,"ironment::RunBootstrapping() {\n  EscapableHandleScope scope(isolate"],[10951,1,""],[10951,0,");\n\n  CHECK(!h"],[10966,0,"s_"],[10969,0,"un_bootstrapping"],[10986,0,"code());\n\n  if (Bootstra"],[11011,0,"Inte"],[11016,0,"nalL"],[11021,1,""],[11021,0,"aders().IsEmpt"],[11036,0,"()"],[11039,0," {"],[11046,0,"return"],[11053,0,"MaybeLocal<Value>();\n"],[11076,0,"}\n\n"],[11081,0,"Local<Value>"],[11094,2,""],[11094,0,"re"],[11097,2,""],[11097,0,"ul"],[11100,1,""],[11100,0,";\n  "],[11105,2,""],[11105,0,"f "],[11108,0,"!BootstrapNode().ToLocal(&result"],[11142,0," {"],[11177,0,"  }\n"],[11381,5,""],[11419,5,""],[11455,5,""],[11514,5,""]],"_dtSpan":[916414,920501]},{"parents":[888],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[2997,0,"termios.h>       // tcgetattr, tcsetattr\n#include <"],[5155,8,""],[5155,0,"R"],[5160,3,""],[5160,0,"St"],[5163,1,""],[5163,0,"io"],[15091,8,""],[15091,0,"R"],[15096,3,""],[15096,0,"St"],[15099,1,""],[15099,0,"io"],[15904,0,"#ifdef __POSIX__\nstatic struct {\n  "],[15941,0,"t f"],[15945,0,"ags;\n  bool isatty;\n  struct stat stat;\n  struct termios termios;\n} stdio[1 + STDERR_FILENO];\n#endif  // __POSIX__\n\n\n"],[16064,0,"lin"],[16385,2,""],[16385,0,"au"],[16388,0,"o&"],[16391,2,""],[16391,0,"s"],[16393,1,""],[16393,0,":"],[16395,15,""],[16395,0,"st"],[16398,26,""],[16398,0,"io"],[16408,0,"con"],[16413,3,""],[16413,0," in"],[16418,0,"fd = &s - "],[16429,2,""],[16430,1,""],[16430,0,"d"],[16432,2,""],[16433,3,""],[16454,7,""],[16454,0,"s.stat"],[16718,0,"  if (fstat(fd, &s.stat) != 0)\n      ABORT();\n  "],[17482,0,"// "],[17487,0,"cord the state of the stdio file descriptors so we can restore it\n  // on exit.  Needs to happen before installin"],[17601,0," s"],[17604,0,"gnal handlers becau"],[17624,0,"e\n  // "],[17632,0,"hey mak"],[17640,0," use of that info"],[17658,0,"mation.\n  for (auto& s : stdio) {\n    const int fd = &s - stdio;\n    int err;\n\n    do\n      s.flags = fcntl(fd, F_GETFL);\n    while (s.flags == -1 && errno == EINTR);  // NOLINT\n    CHECK_NE(s.flags, -1);\n\n    if (!isatty(fd)) continue;\n    s.isatty = true;\n\n    do\n      err = tcgetattr(fd, &s.termios);\n    while (err == -1 && errno == EINTR);  // NOLINT\n    CHECK_EQ(err, 0);\n  }\n\n  Register"],[19699,0,"\n// Safe to call more than once and from signal handlers.\nvoid ResetStdio() {\n  uv_tty_reset_mode();\n#ifdef __POSIX__\n  for (auto& s : stdio) {\n    const int fd = &s - stdio;\n\n    struct stat tmp;\n    if (-1 == fstat(fd, &tmp)) {\n      CHECK_EQ(errno, EBADF);  // Program closed file descriptor.\n      continue;\n    }\n\n    bool is_same_file =\n        (s.stat.st_dev == tmp.st_dev && s.stat.st_ino == tmp.st_ino);\n    "],[20117,0,"f (!is_same_file) co"],[20139,0,"inue;  //"],[20152,0,"gram reopened file des"],[20175,0,"riptor.\n\n    int flags;\n    do\n      flags = fcntl(fd, F_GETFL);\n    whil"],[20249,0," (flags == -1 && errno == EINTR);  // NOLINT\n    CHECK_NE(flag"],[20312,0,", -1);\n\n    // Re"],[20330,0,"tore the O_NONBLOCK flag if it changed.\n    if (O_NONBLOCK & (flags ^ s.flags)) {\n      flags &= ~O_NONBLOCK;\n      flags |= s.flags & O_NONBLOCK;\n\n      int err;\n      do\n        err = fcntl(fd, F_SETFL, flags);\n      while (err == -1 && errno == EINTR);  // NOLINT\n      CHECK_NE(err, -1);\n    }\n\n    if (s.isatty) {\n      int err;\n      do\n        err = tcsetattr(fd, TCSANOW, &s.termios);\n      while (err == -1 && errno == EINTR);  // NOLINT\n      CHECK_NE(err, -1);\n    }\n  }\n#endif  // __POSIX__\n}\n\n\nint Process"],[29619,16,""],[29619,0,"R"],[29624,2,""],[29624,0,"Stdi"],[29629,7,""]],"_dtSpan":[920501,922619]},{"parents":[889],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[15091,0,"// Reset to the default signal handler, i.e. cause a hard crash.\n      struct sigaction sa;\n      memset(&sa, 0, sizeof(sa));\n      sa.sa_handler = SIG_DFL;\n      CHECK_EQ(sigaction(signo, &sa, nullptr), 0);\n\n      "],[14684,0,"def"],[14688,4,""],[14689,3,""],[14690,5,""],[14690,0,"PO"],[14693,1,""],[14693,0,"IX"],[14696,4,""],[14697,7,""],[14698,1,""],[14699,7,""],[14699,0,"ype"],[14703,9,""],[14703,0,"ef "],[14713,0,"sigaction_cb"],[14770,1,""],[14770,0,";"],[14772,0,"#endif\n#if"],[14783,0,"NODE_USE_V8_WASM_TRAP_HANDLER\nstatic"],[14820,1,""],[14820,0,"std::atomic<sigaction_cb>"],[15020,0,"sig"],[15024,1,""],[15024,0,"c"],[15026,0,"i"],[15028,0,"n_cb"],[15539,20,""],[15542,1,""],[15543,49,""],[15543,0,"ct"],[15546,2,""],[15547,0,"n"],[15549,2,""],[15549,0,"cb"],[15552,1,""],[15552,0,"ha"],[15555,50,""],[15556,7,""],[15556,0,"l"],[15558,3,""],[15558,0,"r"],[15610,0,"  CHECK_NOT_NULL(handler);\n"],[15753,0,"CHECK(!reset_handler);\n    "]],"_dtSpan":[922619,923182]},{"parents":[890],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[3523,21,""],[6006,5,""],[6006,0,","],[6011,2,""],[6011,0,"mu"],[6014,3,""],[6015,11,""],[6017,4,""],[6018,2,""],[6019,34,""],[6032,0,"\n  //"],[6058,5,""],[6070,13,""],[6070,0,"C"],[6097,0,"\n  //"],[6121,5,""]],"_dtSpan":[923182,923301]},{"parents":[891],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[20897,0,"// EIO has been observed to be returned by the Linux kernel under some\n      // circumstances. Reading through drivers/tty/tty_io*.c, it seems to\n      // indicate the tty went away. Of course none of this is documented.\n      "],[21130,1,""],[21130,0,"IMPLI"],[21136,0,"S"],[21141,1,""],[21142,0,"== "],[21147,0,", errno == EIO"],[20769,0,"s"],[20771,1,""],[20771,0,"gset_"],[20778,3,""],[20778,0,"sa"],[20788,2,""],[20788,0,"int err;\n"],[20804,0,"//"],[20807,0,"We"],[20810,0,"might b"],[20818,2,""],[20819,1,""],[20819,0,"a"],[20821,1,""],[20821,0,"ba"],[20824,6,""],[20824,0,"kg"],[20827,2,""],[20827,0,"oun"],[20831,1,""],[20832,8,""],[20832,0,"job"],[20836,3,""],[20837,4,""],[20837,0,"hat d"],[20843,0,"e"],[20845,8,""],[20845,0,"n't"],[20849,0,"o"],[20851,0,"n t"],[20855,2,""],[20857,4,""],[20857,0,"TTY"],[20861,5,""],[20861,0,"so"],[20864,7,""],[20864,0,"bl"],[20867,3,""],[20867,0,"ck"],[20870,1,""],[20870,0,"S"],[20872,1,""],[20872,0,"G"],[20874,13,""],[20875,0,"OU"],[20886,8,""],[20888,1,""],[20889,2,""],[20889,0,"f"],[20891,3,""],[20892,1,""],[20893,1,""],[20894,2,""],[20894,0,"making"],[20901,1,""],[20901,0,"th"],[20905,1,""],[20905,0,"tcs"],[20910,1,""],[20910,0,"att"],[20914,3,""],[20914,0,"()"],[20917,2,""],[20917,0,"call,"],[20923,0,"o"],[20927,2,""],[20927,0,"rw"],[20930,5,""],[20930,0,"s"],[20932,1,""],[20932,0," that sig"],[20942,1,""],[20942,0,"a"],[20945,0,"s"],[20947,0,"spe"],[20952,2,""],[20952,0,"s"],[20954,0,"u"],[20956,3,""],[20956,0,"."],[20964,4,""],[20964,0,"s"],[20966,3,""],[20966,0,"ge"],[20969,0,"pty"],[20973,0,"e"],[20975,0,"(&s"],[20979,2,""],[20979,0,");\n      sigadds"],[20996,0,"t(&"],[21000,1,""],[21000,0,"a,"],[21003,1,""],[21003,0,"SIGTTOU);\n\n      CHECK_EQ(0, pthr"],[21039,0,"_s"],[21042,1,""],[21043,0,"mask(SIG_BLOCK, &sa,"],[21064,0,"nullp"],[21070,1,""],[21071,4,""],[21071,0,"));\n     "],[21082,3,""],[21082,0,"o\n        "],[21094,2,""],[21094,0,"r = "],[21099,0,"cse"],[21103,2,""],[21103,0,"a"],[21106,7,""],[21106,0,"r(fd"],[21112,2,""],[21112,0,"TCSANOW,"],[21121,0,"&"],[21123,1,""],[21123,0,".t"],[21126,0,"r"],[21128,0,"io"],[21131,3,""],[21131,0,");"],[21140,6,""],[21140,0,"wh"],[21143,3,""],[21143,0,"l"],[21146,2,""],[21146,0,"("],[21148,0,"rr"],[21151,3,""],[21151,0,"== -1 &&"],[21160,1,""],[21161,0,"rr"],[21164,1,""],[21164,0,"o"],[21166,5,""],[21166,0,"== EINTR);  //"],[21181,0,"N"],[21183,1,""],[21183,0,"LINT\n  "],[21191,6,""],[21192,4,""],[21193,2,""],[21194,0,"CHECK_EQ(0, p"],[21209,0,"read_s"],[21216,0,"gma"],[21220,0,"k(SIG_UNBLOCK,"],[21235,1,""],[21235,0,"&"],[21237,0,"a,"],[21240,3,""],[21240,0,"n"],[21242,3,""],[21242,0,"llp"],[21246,3,""],[21246,0,"r));"],[21263,5,""],[21264,1,""],[21264,0,"Q"],[21266,9,""],[21266,0,"0"],[21272,9,""]],"_dtSpan":[923301,924110]},{"parents":[892],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[32765,13,""],[32766,9,""],[32767,4,""],[32767,0,"ns"],[32771,2,""],[32771,0,"s"],[32773,7,""],[32773,0,"d::v"],[32778,2,""],[32778,0,"cto"],[32782,4,""],[32782,0,"<"],[32784,6,""],[32784,0,"iz"],[32787,0,"_"],[32789,3,""],[32789,0,">*"],[32794,15,""],[32794,0,"d"],[32797,1,""],[32798,1,""],[32798,0,"s = "],[32803,1,""],[32803,0,"ul"],[32806,5,""],[32806,0,"pt"],[32809,6,""],[32809,0,";"],[32856,0,";\n\n    bool force_no_snapshot"],[32887,2,""],[32896,5,""],[32896,0,"p"],[32899,0,"_"],[32902,3,""],[32902,0,"o"],[32904,1,""],[32904,0,"es"],[32907,0,"::cli_op"],[32916,1,""],[32917,0,"o"],[32919,1,""],[32919,0,"s->"],[32923,1,""],[32923,0,"e"],[32926,0,"isola"],[32932,0,"e-"],[32935,0,"no_node_snapshot;\n    if "],[32961,0,"!force_no_s"],[32973,3,""],[32973,0,"a"],[32975,0,"sho"],[32979,1,""],[32980,2,""],[32980,0," {"],[32987,0,"  "],[33062,1,""],[33062,0,"  if (bl"],[33071,0,"b != "],[33077,1,""],[33077,0,"ullp"],[33082,0,"r) {\n     "],[33093,4,""],[33093,0,"  // TODO(joyeecheung)"],[33116,1,""],[33116,0," coll"],[33124,1,""],[33124,0," exte"],[33130,1,""],[33130,0,"nal references and "],[33150,0,"et "],[33154,3,""],[33155,2,""],[33158,1,""],[33158,0,"\n        // params."],[33179,0,"t"],[33181,0,"rnal_reference"],[33196,2,""],[33196,0,"."],[33206,3,""],[33207,3,""],[33207,0,"xter"],[33212,4,""],[33213,0,"l_refere"],[33224,6,""],[33225,2,""],[33225,0,".push_b"],[33233,1,""],[33233,0,"ck(r"],[33238,2,""],[33238,0,"in"],[33241,4,""],[33242,1,""],[33242,0,"rpr"],[33246,0,"t_ca"],[33251,8,""],[33251,0,"t<"],[33254,2,""],[33254,0,"ntptr_t>"],[33263,8,""],[33271,0,");\n "],[33276,2,""],[33345,0,"  "],[33380,0,"    indexes = NodeMainInstance::GetIsolateDataIndexes();\n      }\n    "]],"_dtSpan":[924110,924629]},{"parents":[893],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[2093,98,""]],"_dtSpan":[924629,924727]},{"parents":[894],"numChildren":1,"agent":100,"time":"1970-01-01T00:00:00Z","patches":[[24102,0,"Initialize node_start_time to get relative uptime.\n  per_process::node_start_time = uv_hrtime();\n\n  // "],[30121,22,""],[30122,11,""],[30123,10,""],[30124,3,""]],"_dtSpan":[924727,924876]},{"parents":[895],"numChildren":1,"agent":144,"time":"1970-01-01T00:00:00Z","patches":[[7407,1,""],[7407,0,"ins"],[7411,0,"ec"],[7414,1,""],[7415,0,"r_age"],[7421,1,""],[7421,0,"t"],[7425,6,""]],"_dtSpan":[924876,924896]},{"parents":[896],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[29448,0,"// Doesn't return.\n    "],[29504,11,""],[29505,2,""],[29506,2,""],[29506,0,"atic_cast<siz"],[29520,0,"_"],[29522,4,""],[29522,0,">(6));"],[31208,0,"// Doesn't return.\n    "],[31264,11,""],[31265,2,""],[31266,2,""],[31266,0,"atic_cast<siz"],[31280,0,"_"],[31282,4,""],[31282,0,">(6));"]],"_dtSpan":[924896,925020]},{"parents":[897],"numChildren":1,"agent":143,"time":"1970-01-01T00:00:00Z","patches":[[25665,198,""]],"_dtSpan":[925020,925218]},{"parents":[898],"numChildren":1,"agent":148,"time":"1970-01-01T00:00:00Z","patches":[[6377,24,""]],"_dtSpan":[925218,925242]},{"parents":[899],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[7734,0,"  if (options_->trace_uncaught)\n    isolate_->SetCaptureStackTraceForUncaughtExceptions(true);\n"],[12387,1,""],[12387,0,"return sc"],[12397,0,"pe.Es"],[12404,6,""],[12404,0,"p"],[12406,3,""],[12406,0,"Mayb"],[12411,5,""],[12411,0,"("],[12415,2,""],[12416,2,""],[12416,0,"   "],[12484,143,""],[4338,38,""],[4220,47,""],[4225,58,""],[4226,43,""],[4227,25,""],[4231,122,""],[4232,419,""],[16033,0,"  // TODO(addaleax): NODE_SHARED_MODE does not really make sense here.\n"],[5668,0,"std::un"],[5676,0,"que_ptr<i"],[5716,1,""],[5716,0,">"],[5784,11,""],[5900,9,""],[5905,18,""],[5905,0,"m"],[5907,23,""],[5907,0,"v"],[5909,1,""],[10447,6,""],[10447,0,"Usually, doing so w"],[10467,1,""],[10467,0,"uld trigg"],[10477,0,"r th"],[10482,0," "],[10486,5,""],[10486,0,"cks"],[10492,0,"esent "],[10500,0," "],[10502,0,"he ReqWrap and\n  //"],[10522,1,""],[10522,0,"H"],[10528,0,"Wrap clas"],[10538,2,""],[10539,3,""],[10540,0,", so "],[10546,0,"his i"],[10553,3,""],[10554,2,""],[10554,0,"nly"],[10559,1,""],[10559,0," c"],[10562,1,""],[10562,0,"nsis"],[10567,1,""],[10567,0,"e"],[10569,1,""],[10569,0,"cy check."]],"_dtSpan":[925242,926555]},{"parents":[900],"numChildren":1,"agent":148,"time":"1970-01-01T00:00:00Z","patches":[[3270,92,""],[3271,1,""],[20593,1,""],[20593,0,"Opti"],[20598,3,""],[20598,0,"nEnvvarSett"],[20610,0,"ngs "],[20615,1,""],[20616,0,"tti"],[20620,1,""],[20620,0,"gs"],[20890,1,""],[20891,1,""],[20892,18,""],[20892,0,"tt"],[20895,2,""],[20896,10,""],[20896,0,"g"],[20898,20,""],[26232,0,"\n                                           "],[26285,0,"\n                                           "],[26337,0,"\n                                 "],[26372,1,""],[26372,0,"          kAllowedInEnvi"],[26397,1,""],[26397,0,"onm"],[26401,0,"nt"],[26507,0,"\n                                         "],[26560,0,"\n                                         "],[26610,0,"\n                                         "],[26653,1,""],[26653,0,"kDis"],[26659,1,""],[26659,0,"low"],[26663,0,"dInEnvironment"]],"_dtSpan":[926555,927035]},{"parents":[901],"numChildren":1,"agent":177,"time":"1970-01-01T00:00:00Z","patches":[[3006,0,"#ifdef __PASE__\n#include <sys/ioctl.h>  "],[3049,0,"ioctl\n#endif\n// "],[17126,0,"#ifdef __PASE__\n    // On IBMi PASE isatty() always returns true for stdin, stdout and stderr.\n    // Use ioctl() instead to identify whether it's actually a TTY.\n    if (ioctl(fd, TXISATTY + 0x81, nullptr) == -1 && errno == ENOTTY)\n      continue;\n#else\n"],[17412,0,"#endif\n"]],"_dtSpan":[927035,927353]},{"parents":[902],"numChildren":1,"agent":151,"time":"1970-01-01T00:00:00Z","patches":[[2648,0,"include <unicode/utypes.h>\n#"],[27525,0,"\n#ifdef NODE_ICU_DEFAULT_DATA_DIR\n  // If neither the CLI option nor the environment variable was specified,\n  // fall back to the configured default\n  if (per_process::cli_options->icu_data_dir.empty()) {\n    // Check whether the NODE_ICU_DEFAULT_DATA_DIR contains the right data\n    // file and can be read.\n    static const char full_path[] =\n        NODE_ICU_DEFAULT_DATA_DIR \"/\" U_ICUDATA_NAME \".dat\";\n\n    FILE* f = fopen(full_path, \"rb\");\n\n    if (f != nullptr) {\n      fclose(f);\n      per_process::cli_options->icu_data_dir = NODE_ICU_DEFAULT_DATA_DIR;\n    }\n  }\n#endif  // NODE_ICU_DEFAULT_DATA_DIR\n\n"]],"_dtSpan":[927353,927991]},{"parents":[903],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[3365,19,""],[8920,37,""],[9054,31,""],[9055,24,""],[9058,1,""],[9063,31,""],[9064,27,""],[9223,1,""],[9223,0,"prim"],[9228,0,"rdials()};\n\n  MaybeL"],[9249,0,"cal<Value> resu"],[9265,0,"t = Ex"],[9272,0,"cuteBootstr"],[9284,4,""],[9284,0,"pp"],[9287,1,""],[9287,0,"r"],[9289,0,"\n      th"],[9300,0,", \"internal/b"],[9314,1,""],[9314,0,"otstr"],[9320,1,""],[9320,0,"p/node\", &nod"],[9335,0,"params"],[9343,0,"&node_args);\n\n  if (result.IsEmpty()) {\n    return scope.EscapeMaybe(result);\n  }\n\n  if ("],[9449,1,""],[9449,0," {"],[9456,0,"result"],[9463,0,"="],[9465,0,"Execute"],[9475,0,"tstrapper(this,\n                                 \"internal/bootstrap/switches/is_main_thread\",\n                                 &node_params,\n                                 &node_args);\n  } e"],[9669,0,"se {\n    r"],[9680,0,"sult =\n        ExecuteBootstr"],[9710,0,"pper(this,\n                            \"i"],[9752,3,""],[9752,0,"t"],[9754,0,"rnal/bootstrap/s"],[9771,1,""],[9772,0,"tches/i"],[9780,0,"_n"],[9783,1,""],[9783,0,"t_m"],[9787,0,"in_"],[9791,0,"hr"],[9794,0,"ad\",\n                            &node"],[9833,0,"params"],[9840,0,"\n                   "],[9861,0,"        &n"],[9872,0,"de_args);\n  }\n\n  if (result.IsEmpty()) {\n    return scope.EscapeMaybe(result);\n  }\n\n  if (o"],[9983,1,""],[9983,0," {"],[9990,0,"result"],[9997,0,"="],[9999,4,""],[9999,0,"ExecuteB"],[10008,0,"otst"],[10013,2,""],[10014,2,""],[10014,0,"pper"],[10019,3,""],[10020,0,"        this,"],[10036,1,""],[10036,0,"      \"intern"],[10050,1,""],[10050,0,"l/"],[10053,0,"ootstrap/switches/do"],[10074,1,""],[10074,0,"s_"],[10077,0,"wn_pro"],[10084,0,"ess_st"],[10091,3,""],[10091,0,"te\",\n        &node_params,\n        &node_"],[10133,0,"rgs);\n  } e"],[10145,1,""],[10145,0,"s"],[10147,1,""],[10148,0,"{\n    "],[10190,0,"  "],[10197,0,"\n       "],[10226,0,"switches/does_"],[10242,1,""],[10242,0,"t_own_process_stat"],[10263,0,"\n       "],[10285,0,"\n       "],[10307,0,"  }\n\n  if (result.IsEmpty()) {\n    return scope.EscapeMaybe(result);\n  }\n"]],"_dtSpan":[927991,929155]},{"parents":[904],"numChildren":1,"agent":54,"time":"1970-01-01T00:00:00Z","patches":[[2076,36,""],[2115,6,""],[2116,1,""],[31095,37,""],[31096,36,""],[31099,127,""],[31710,0,"#if defined(NODE_ENABLE_LARGE_CODE_PAGES) && NODE_ENABLE_LARGE_CODE_PAGES\n  if (per_process::cli_options->use_largepages == \"on\" ||\n      per_process::cli_options->use_largepages == \"silent\") {\n    if (node::IsLargePagesEnabled()) {\n      if (node::MapStaticCodeToLargePages() != 0 &&\n          per_process::cli_options->use_largepages != \"silent\") {\n        fprintf(stderr,\n                \"Mapping code to large pages failed. Reverting to default page \"\n                \"size.\\n\");\n      }\n    } else if (per_process::cli_options->use_largepages != \"silent\") {\n      fprintf(stderr, \"Large pages are not enabled.\\n\");\n    }\n  }\n#else\n  if (per_process::cli_options->use_largepages == \"on\") {\n    fprintf(stderr, \"Mapping to large pages is not supported.\\n\");\n  }\n#endif  // NODE_ENABLE_LARGE_CODE_PAGES\n\n"]],"_dtSpan":[929155,930204]},{"parents":[905],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[13197,56,""],[13198,10,""],[13199,19,""],[13200,17,""],[13201,30,""],[30221,0,"bash_completion) {\n    std::string completion = options_parser::GetBashCompletion();\n    printf(\"%s\\n\", completion.c_str());\n    exit(0);\n  }\n\n  if (per_process::cli_options->print_"],[32768,0,"bash_completion) {\n    std::string completion = options_parser::GetBashCompletion();\n    printf(\"%s\\n\", completion.c_str());\n    exit(0);\n  }\n\n  if (per_process::cli_options->print_"]],"_dtSpan":[930204,930698]},{"parents":[906],"numChildren":1,"agent":39,"time":"1970-01-01T00:00:00Z","patches":[[2076,0,"fdef NODE_ENABLE_LARGE_CODE_PAGES\n#i"],[2151,0,"#endif\n"]],"_dtSpan":[930698,930741]},{"parents":[907],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[33627,0,"per_process::v8_platform."],[33662,10,""],[33663,0,"\n      "]],"_dtSpan":[930741,930783]},{"parents":[908],"numChildren":1,"agent":188,"time":"1970-01-01T00:00:00Z","patches":[[26863,0,"em"],[26866,3,""],[26866,0,"lace"]],"_dtSpan":[930783,930792]},{"parents":[909],"numChildren":1,"agent":186,"time":"1970-01-01T00:00:00Z","patches":[[3034,40,""],[3037,16,""],[17718,1,""],[17719,15,""],[17720,1,""],[17722,3,""],[17723,2,""],[17724,3,""],[17725,5,""],[17725,0,"f"],[17727,6,""],[17728,12,""],[17729,6,""],[17729,0,"v_g"],[17734,5,""],[17735,6,""],[17736,6,""],[17736,0,"_h"],[17740,4,""],[17741,20,""],[17742,28,""],[17743,36,""],[17746,26,""],[17748,1,""],[17748,0,"!"],[17751,18,""],[17751,0,"UV_"],[17757,43,""],[17768,7,""]],"_dtSpan":[930792,931112]},{"parents":[910],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[1214,0,"-inl"]],"_dtSpan":[931112,931116]},{"parents":[911],"numChildren":1,"agent":39,"time":"1970-01-01T00:00:00Z","patches":[[9376,0,"auto thread_sw"],[9391,1,""],[9391,0,"tch_id =\n     "],[9406,1,""],[9421,1,""],[9422,4,""],[9423,10,""],[9423,0,"?"],[9425,5,""],[9425,0,"\"in"],[9430,1,""],[9430,0,"rnal/b"],[9444,4,""],[9444,0,"/swi"],[9449,0,"c"],[9451,0,"es/"],[9456,1,""],[9456,0,"_main_thread\""],[9470,4,""],[9493,5,""],[9493,0,":"],[9527,0,"not_"],[9543,93,""],[9545,3,""],[9546,7,""],[9547,3,""],[9562,2,""],[9587,17,""],[9588,14,""],[9589,12,""],[9589,0,"h"],[9591,0,"e"],[9593,2,""],[9593,0,"d_"],[9601,5,""],[9602,6,""],[9603,7,""],[9604,1,""],[9605,17,""],[9606,11,""],[9619,11,""],[9620,17,""],[9633,4,""],[9705,4,""],[9705,0,"aut"],[9709,4,""],[9709,0," "],[9723,3,""],[9723,0,"_switch_id"],[9734,1,""],[9734,0,"="],[9740,6,""],[9741,1,""],[9742,8,""],[9743,0,"wns_pr"],[9750,1,""],[9750,0,"ces"],[9754,0,"_s"],[9757,1,""],[9758,2,""],[9758,0,"t"],[9760,1,""],[9761,0,")"],[9771,7,""],[9773,1,""],[9773,0,"?"],[9775,3,""],[9827,1,""],[9836,1,""],[9836,0,"  : \"i"],[9843,2,""],[9843,0,"t"],[9845,2,""],[9845,0,"rn"],[9848,0,"l/bootst"],[9858,1,""],[9858,0,"p/switche"],[9868,11,""],[9868,0,"/does_"],[9876,2,""],[9876,0,"t"],[9878,1,""],[9878,0,"own_p"],[9884,9,""],[9884,0,"oc"],[9887,1,""],[9888,0,"s_stat"],[9895,2,""],[9895,0,"\";"],[9898,1,""],[9900,1,""],[9930,2,""],[9941,2,""],[9942,48,""],[9955,1,""],[9955,0,"_switch_id"],[9966,4,""],[9967,4,""],[9980,1,""],[9981,7,""],[9993,4,""],[10072,0,"String> env_string = FIXED_ONE_BYTE_STRING(isolate_, \"env\");\n  Local<"],[10291,11,""],[10297,15,""],[10308,9,""],[10308,0,"env"],[10312,13,""],[10313,3,""],[10314,6,""],[10314,0,"ri"],[10317,3,""],[10317,0,"g"],[10334,11,""]],"_dtSpan":[931116,931837]},{"parents":[912],"numChildren":1,"agent":60,"time":"1970-01-01T00:00:00Z","patches":[[1316,0,"errors.h\"\n#include \"node_"]],"_dtSpan":[931837,931862]},{"parents":[913],"numChildren":1,"agent":39,"time":"1970-01-01T00:00:00Z","patches":[[24387,7,""],[24387,0,"H"],[24389,24,""],[24390,3,""],[24391,4,""],[24392,2,""],[24393,0,"E"],[24396,2,""],[24396,0,"O"],[24403,9,""],[24403,0,"("],[24419,5,""],[24420,64,""],[24421,4,""],[24430,10,""],[24431,1,""],[24432,18,""],[24433,27,""],[24434,99,""],[24435,3,""],[24436,51,""],[24437,20,""],[24438,137,""],[24439,2,""],[24440,1,""],[24441,10,""],[24443,146,""],[24444,8,""],[24445,9,""],[24446,59,""],[24447,41,""],[24448,7,""],[24450,27,""],[24453,4,""],[24615,43,""],[24616,11,""],[24617,11,""],[24618,18,""],[24619,19,""],[24620,5,""],[24624,12,""],[24625,20,""],[24626,7,""],[24627,2,""],[24628,24,""],[24629,1,""],[24630,6,""],[24634,3,""],[24635,8,""],[24635,0,"Pa"],[24638,5,""],[24639,7,""],[24640,30,""],[24640,0,"N"],[24644,2,""],[24644,0,"O"],[24651,21,""],[24651,0,"E"],[24653,15,""],[24653,0,"vV"],[24657,5,""],[24657,0,"("],[24669,33,""],[24670,7,""],[24670,0,","],[24672,2,""],[24673,14,""],[24674,4,""],[24675,30,""],[24675,0,"or"],[24678,5,""],[24679,2,""],[24679,0,";\n"],[24682,1,""],[24686,3,""],[24690,46,""],[24690,0,"!"],[24699,23,""],[24700,49,""],[24700,0,"mpty"],[24705,14,""],[24706,3,""],[24707,2,""],[24708,9,""],[24718,16,""],[24719,5,""],[24723,0,"//"],[24726,3,""],[24726,0,"[0]"],[24730,8,""],[24731,2,""],[24732,27,""],[24733,4,""],[24734,2,""],[24734,0,"xp"],[24737,5,""],[24738,10,""],[24738,0,"ted"],[24742,8,""],[24743,5,""],[24743,0,"o"],[24745,2,""],[24745,0,"be"],[24748,13,""],[24749,5,""],[24749,0,"h"],[24751,3,""],[24751,0," p"],[24754,0,"o"],[24756,4,""],[24757,11,""],[24757,0,"am"],[24760,2,""],[24761,4,""],[24761,0,"am"],[24764,9,""],[24764,0,","],[24766,1,""],[24766,0,"fil"],[24770,2,""],[24772,22,""],[24772,0,"t"],[24775,3,""],[24776,9,""],[24777,9,""],[24777,0,"f"],[24779,6,""],[24779,0,"om"],[24782,9,""],[24783,3,""],[24783,0,"h"],[24785,2,""],[24786,26,""],[24787,3,""],[24788,2,""],[24789,0,"l a"],[24794,3,""],[24794,0,"v."],[24797,3,""],[24801,1,""],[24810,21,""],[24812,23,""],[24813,2,""],[24813,0,"e"],[24816,29,""],[24816,0,"("],[24818,12,""],[24827,44,""],[24827,0,"eg"],[24831,1,""],[24831,0,"("],[24833,5,""],[24833,0,","],[24835,7,""],[24835,0,"a"],[24837,1,""],[24837,0,"gv"],[24841,6,""],[24842,2,""],[24842,0,"t"],[24844,79,""],[24844,0,"0"],[24846,3,""],[24848,22,""]],"_dtSpan":[931862,933765]},{"parents":[914],"numChildren":1,"agent":54,"time":"1970-01-01T00:00:00Z","patches":[[2105,36,""],[2143,7,""],[29463,3,""],[29464,37,""],[29465,34,""],[29588,1,""],[29588,0,"nt"],[29591,11,""],[29592,1,""],[29593,4,""],[29594,4,""],[29594,0,"u"],[29596,10,""],[29596,0,"t"],[29598,5,""],[29598,0,"="],[29600,1,""],[29633,8,""],[29633,0,";"],[29635,3,""],[29639,0,"if"],[29642,2,""],[29642,0,"("],[29684,1,""],[29685,42,""],[29685,0,"="],[29687,10,""],[29688,9,""],[29689,33,""],[29690,18,""],[29691,3,""],[29692,46,""],[29692,0,"&&"],[29695,3,""],[29696,5,""],[29697,1,""],[29698,3,""],[29698,0,"u"],[29700,4,""],[29701,20,""],[29705,8,""],[29705,0,"0"],[29733,10,""],[29733,0,"%"],[29735,17,""],[29738,3,""],[29738,0,","],[29740,27,""],[29740,0,"n"],[29742,1,""],[29742,0,"d"],[29744,2,""],[29746,18,""],[29746,0,"L"],[29751,1,""],[29751,0,"P"],[29756,5,""],[29756,0,"Err"],[29760,12,""],[29761,4,""],[29762,22,""],[29763,1,""],[29764,8,""],[29765,6,""],[29766,4,""],[29766,0,"l"],[29768,6,""],[29769,0,")"],[29774,0,"  "],[29778,6,""],[29780,31,""],[29780,0,"}"]],"_dtSpan":[933765,934350]},{"parents":[915],"numChildren":1,"agent":148,"time":"1970-01-01T00:00:00Z","patches":[[12079,0,"InternalCallbackScope callback_scope(\n    env,\n    Object::New(env->isolate()),\n    { 1, 0 },\n    InternalCallbackScope::kSkipAsyncHooks);\n\n  "]],"_dtSpan":[934350,934492]},{"parents":[916],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[28931,0,"// Initialized the enabled list for Debug() calls with system\n  // environment variables.\n  per_process::enabled_debug_list.Parse(nullptr);\n\n  "]],"_dtSpan":[934492,934635]},{"parents":[917],"numChildren":1,"agent":186,"time":"1970-01-01T00:00:00Z","patches":[[1545,0,"port.h\"\n#include \"node_re"],[2164,41,""],[2165,4,""],[2168,7,""],[24014,19,""],[24135,24,""]],"_dtSpan":[934635,934755]},{"parents":[918],"numChildren":1,"agent":60,"time":"1970-01-01T00:00:00Z","patches":[[21721,0,"if (per_process::cli_options->disable_proto != \"delete\" &&\n      per_process::cli_options->disable_proto != \"throw\" &&\n      per_process::cli_options->disable_proto != \"\") {\n    errors->emplace_back(\"invalid mode passed to --disable-proto\");\n    return 12;\n  }\n\n  "]],"_dtSpan":[934755,935019]},{"parents":[919],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[5642,0,"bool "],[5648,1,""],[5648,0,"s_main ="],[5657,1,""],[5657,0,"!"],[5671,3,""],[5671,0,";"],[5675,1,""],[5675,0,"if"],[5678,6,""],[5679,5,""],[5679,0,"p"],[5681,1,""],[5681,0,"re"],[5684,1,""],[5685,0,"_"],[5687,2,""],[5688,0,"n"],[5690,1,""],[5690,0,"le"],[5693,2,""],[5693,0," {"],[6270,8,""],[6271,1,""],[12313,10,""],[12682,0,"if (env->worker_context() != nullptr) {\n    return StartExecution(env, \"internal/main/worker_thread\");\n  }\n\n  "],[13824,364,""],[11340,0,"static\n"],[12052,0,"return scope.EscapeMaybe(\n      ExecuteBootstrapper(env, main_script_id, &parameters, &arguments));\n}\n\nMaybeLocal<Value> StartExecution(Environment* env, StartExecutionCallback cb) {\n  "],[12279,0,"  "],[12290,0,"  "],[12325,0,"  "],[12341,0,"  "],[12387,2,""],[12387,0,"if (cb != nullp"],[12403,1,""],[12404,1,""],[12404,0,") {\n   "],[12412,0,"E"],[12415,0,"apableHandleSc"],[12432,2,""],[12432,0," "],[12435,1,""],[12435,0,"o"],[12438,1,""],[12438,0,"(env->isol"],[12449,2,""],[12449,0,"t"],[12452,0,"));\n"],[12461,0,"if"],[12464,1,""],[12464,0,"(Start"],[12476,2,""],[12476,0,"i"],[12478,10,""],[12478,0,"n"],[12485,2,""],[12485,0,"\""],[12488,6,""],[12489,8,""],[12489,0,"e"],[12491,0,"n"],[12493,2,""],[12493,0,"l/boo"],[12499,2,""],[12500,3,""],[12500,0,"tr"],[12503,0,"p/envi"],[12510,2,""],[12510,0,"on"],[12516,0,"\").I"],[12521,0,"Empty("],[12529,1,""],[12530,0,"      return {"],[12545,0,";"],[12548,17,""],[12549,0,"   "],[12566,2,""],[12566,0,"CallbackInfo info = {\n      e"],[12597,1,""],[12597,0,"->p"],[12602,0,"cess_object(),\n      env->"],[12629,0,"ative_"],[12636,0,"odule_require(),\n    };\n\n    r"],[12667,0,"tur"],[12671,2,""],[12672,0,"scope.EscapeMayb"],[12689,0,"(cb(i"],[12695,1,""],[12695,0,"fo"],[12698,0,");\n"],[12702,1,""],[12702,0," }\n"],[33487,3,""],[33487,0,"S"],[33489,3,""],[33489,0,"op"],[33487,1,""],[33487,0,"Exi"],[33491,2,""],[33491,0,"Env"],[10158,2,""],[10158,0,"current"]],"_dtSpan":[935019,936098]},{"parents":[920],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[10156,24,""],[10157,13,""]],"_dtSpan":[936098,936135]},{"parents":[921],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[4640,0,"Local<Funct"],[4652,0,"on> "],[4657,0,"n;\n"],[4661,0," if "],[4666,0,"!"],[4676,7,""],[4676,0,"ToLocal"],[4684,0,"&fn"],[4728,50,""],[3352,23,""],[3376,17,""]],"_dtSpan":[936135,936265]},{"parents":[922],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[6590,0,"#define ATOMIC_WAIT_EVENTS(V)                                               \\\n  V(kStartWait,           \"started\")                                        \\\n  V(kWokenUp,             \"was woken up by another thread\")                 \\\n  V(kTimedOut,            \"timed out\")                                      \\\n  V(kTerminatedExecution, \"was stopped by terminated execution\")            \\\n  V(kAPIStopped,          \"was stopped through the embedder API\")           \\\n  V(kNotEqual,            \"did not wait because the "],[7111,0,"alues mismatched\")     \\\n\nstatic v"],[7149,0,"AtomicsWaitCallback(Isolate::AtomicsWait"],[7190,0,"vent event,\n                                Local<v8::SharedArrayBuffer> array_buffer,\n                                size_t offset_in_bytes, int64_t value,\n                                double timeout_in_ms,\n                                Isolate::AtomicsWaitWakeHa"],[7461,0,"dle* stop_handle,\n                                "],[7512,0,"o"],[7514,0,"d* data) {\n  Environment* env = static_cast<Envi"],[7569,0,"*>(data);\n\n  const char* message;\n  switch (event) {\n#define V(key, msg)                         \\\n    case Isolate::AtomicsWaitEvent:"],[7704,0,"key"],[7708,0,"    \\\n      message = msg;                        \\\n      break;\n    ATOM"],[7782,0,"C_WAIT_EVENTS(V)\n#u"],[7802,0,"def V\n  }\n\n  fprintf(stderr,\n          \"(node:%d) [Thread %\" PRIu64 \"] Atomics.wa"],[7885,0,"(%p + %zx, %\" PRId64\n              \", %.f) %s\\n\",\n          stat"],[7950,0,"c_c"],[7954,0,"st<int>(uv_os_getpid()),\n          env->thread_id(),\n          array_buffer->GetBackingStore()->Data(),\n          offset_in_bytes,\n          value,\n          timeout_in_ms,\n          message);\n}\n\nvoid Environment::Initia"],[8397,0,"  if (options_->trace_atomics_wait) {\n    isolate_->SetAtomicsWaitCallback(AtomicsWaitCallback, this);\n    AddCleanupHook([](void* data) {\n      Environment* env = static_cast<Environment*>(data);\n      env->isolate()->SetAtomicsWaitCallback(nullptr, nullptr);\n    }, this);\n  }\n"],[7601,0," = \"(unknown event)\""]],"_dtSpan":[936265,938124]},{"parents":[923],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[1666,0,"allocated_buffer-inl.h\"  // Inlined functions needed by node_crypto.h\n#include \""],[15121,25,""]],"_dtSpan":[938124,938229]},{"parents":[924],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[14551,337,""]],"_dtSpan":[938229,938566]},{"parents":[925],"numChildren":1,"agent":196,"time":"1970-01-01T00:00:00Z","patches":[[22424,0,"\n      // Normally we expect err == 0. But if macOS App Sandbox is enabled,\n      // tcsetattr"],[22519,0,"will"],[22524,0,"fail"],[22529,0,"with"],[22534,0,"err"],[22538,0,"=="],[22541,0,"-1 and errno == EPERM.\n      "],[22576,0,"IMPLI"],[22582,1,""],[22582,0,"S"],[22584,0,"err != "],[22597,0," == -1 && errno == EPERM"]],"_dtSpan":[938566,938744]},{"parents":[926],"numChildren":1,"agent":16,"time":"1970-01-01T00:00:00Z","patches":[[3966,34,""],[3967,31,""],[24001,146,""],[24002,85,""],[24003,37,""],[24004,1,""],[24005,111,""],[24006,4,""],[24007,4,""],[24008,1,""],[24281,10,""],[24282,0,"td"],[24286,0,"find("],[24294,1,""],[24294,0,"arg"],[24298,0,".begin(), v8"],[24311,0,"args.end(), \"--"],[24330,3,""],[24330,0,"\") != v8_args.e"],[24346,1,""],[24346,0,"d()"]],"_dtSpan":[938744,939268]},{"parents":[927],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[29792,23,""],[29854,11,""],[29854,0,"exit"],[29859,0,"0"],[31900,0,"r"],[31902,0,"sult.e"],[31911,1,""],[31911,0,"_code = "],[31920,1,""],[31924,0,"  result.early_return = true;\n    return result;\n  "],[32031,23,""],[32093,13,""],[32093,0,"result.exit_code = 0;\n    result.early_return = true;\n    return result"]],"_dtSpan":[939268,939482]},{"parents":[928],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[34114,0," = NodeMainInstance::CollectExternalReferences();\n        external_references"],[33704,7,""],[33705,1,""],[33706,3,""],[33707,5,""],[33707,0,"s"],[33709,1,""],[33710,3,""],[33710,0,"EnvS"],[33716,1,""],[33716,0,"i"],[33719,2,""],[33719,0,"iz"],[33722,0,"In"],[33725,0,"o* "],[33729,0,"nv_info = nullpt"],[33746,5,""],[33748,1,""],[33976,2,""],[33982,2,""],[33983,18,""],[33984,53,""],[33991,5,""],[33991,0,"s"],[33994,0,"pshot_b"],[34002,12,""],[34002,0,"ob = blob;"],[34021,0,"ind"],[34026,15,""],[34049,4,""],[34049,0,"G"],[34051,1,""],[34052,17,""],[34052,0,"I"],[34054,19,""],[34054,0,"o"],[34056,18,""],[34057,7,""],[34059,7,""],[34059,0,"D"],[34061,1,""],[34062,33,""],[34063,8,""],[34063,0,"I"],[34065,16,""],[34065,0,"d"],[34068,1,""],[34069,14,""],[34070,5,""],[34082,8,""],[34082,0,"e"],[34084,6,""],[34084,0,"v"],[34086,21,""],[34088,5,""],[34088,0,"fo"],[34114,3,""],[34114,0,"EnvSeria"],[34123,2,""],[34123,0,"iz"],[34126,4,""],[34128,5,""],[34128,0,"fo"],[34506,0,"env_info"],[11134,0,"// TODO(joyeecheung): skip these in the snapshot building for workers.\n  "]],"_dtSpan":[939482,940053]},{"parents":[929],"numChildren":1,"agent":109,"time":"1970-01-01T00:00:00Z","patches":[[23742,0,"// TODO(mylesborins): remove this when the harmony-top-level-await flag\n  // is removed in V8\n  if (std::find(v8_args.begin(), v8_args.end(),\n                \"--no-harmony-top-level-await\") == v8_args.end()) {\n    v8_args.push_back(\"--harmony-top-level-await\");\n  }\n\n  "]],"_dtSpan":[940053,940322]},{"parents":[930],"numChildren":1,"agent":170,"time":"1970-01-01T00:00:00Z","patches":[[34490,0,"    uv_loop_configure(uv_default_loop(), UV_METRICS_IDLE_TIME);\n"]],"_dtSpan":[940322,940386]},{"parents":[931],"numChildren":1,"agent":60,"time":"1970-01-01T00:00:00Z","patches":[[2294,0," || defined(_WIN32)"],[2444,0,"f defined(_WIN32)\n#include \"v8-wasm-trap-handler-win.h\"\n#else\n#i"],[2570,0,"\n#endif"],[4057,0,"#if NODE_USE_V8_WASM_TRAP_HANDLER && defined(_WIN32)\nPVOID old_vectored_exception_handler;\n#endif\n\n"],[16003,0,"#if defined(_WIN32)\n"],[16030,0,"LONG TrapWebAs"],[16045,0,"emblyOrCon"],[16056,0,"inue(EXCEPTION_POINTERS* exception) {\n  if (v8::TryHandleWebAssemblyTrapWin"],[16132,0,"ows(exception)) {\n    return EXCEPTION_CONTINUE_EXECUTION;\n  }\n  return EXCEPTION_CONTINUE_SEARCH;\n}\n#else\nstatic std"],[16851,0,"defined(_WI"],[16863,0,"32)\n#endif  // N"],[17538,1,""],[19926,0,"#if defined(_WIN32)\n  {\n    constexpr ULONG first = TRUE;\n    per_process::old_vectored_exception_handler =\n        AddVectoredExceptionHandler(first, TrapWebAssemblyOrContinue);\n"],[20107,0,"}\n#else\n  "],[20471,0,"#endif "],[20479,0,"//"],[20482,0,"defined(_WIN32)\n  "],[34010,0,"#if NODE_USE_V8_WASM_TRAP_HANDLER && defined(_WIN32)\n  RemoveVectoredExceptionHandler(per_process::old_vectored_exception_handler);\n#endif\n\n"]],"_dtSpan":[940386,941195]},{"parents":[932],"numChildren":1,"agent":7,"time":"1970-01-01T00:00:00Z","patches":[[20420,0,"sa.sa_flags = SA_SIGINFO;\n    "]],"_dtSpan":[941195,941225]},{"parents":[933],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[8542,0,"heap_snapshot_near_heap_limit > 0) {\n    isolate_->AddNearHeapLimitCallback(Environment::NearHeapLimitCallback,\n                                       this);\n  }\n  if (options_->"]],"_dtSpan":[941225,941403]},{"parents":[934],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[29990,1585,""]],"_dtSpan":[941403,942988]},{"parents":[935],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[13259,10,""],[13259,0,"Do"],[13262,2,""],[13262,0,"eB"],[13276,5,""],[13277,4,""]],"_dtSpan":[942988,943013]},{"parents":[936],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[32344,0,"static_cast<int>("],[32407,0,")"]],"_dtSpan":[943013,943031]},{"parents":[937],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[1285,0,"histogram-inl.h\"\n#include \""]],"_dtSpan":[943031,943058]},{"parents":[938],"numChildren":1,"agent":176,"time":"1970-01-01T00:00:00Z","patches":[[31990,6,""],[31991,15,""],[31992,1,""],[32098,0,"if (FIPS_mode()) {\n    "],[32137,6,""],[32139,17,""],[32139,0,"}"]],"_dtSpan":[943058,943127]},{"parents":[939],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[32096,0,"#if"],[32100,0,"OPENSSL_VERSION_MAJOR"],[32122,0,">= 3\n  "],[32133,0,"EVP_default_properties_is_fips_enabled(nullptr)) {\n#else\n  if ("],[32231,0,"#endif\n"]],"_dtSpan":[943127,943228]},{"parents":[940],"numChildren":1,"agent":69,"time":"1970-01-01T00:00:00Z","patches":[[29691,0,"\n# ifndef __POSIX__\n  std::string tz;\n  if (credentials::SafeGetenv(\"TZ\", &tz) && !tz.empty()) {\n    i18n::SetDefaultTimeZone(tz.c_str());\n  }\n# endif\n\n"]],"_dtSpan":[943228,943380]},{"parents":[941],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[32281,0,"// Call OPENSSL_init_crypto to initialize OPENSSL_INIT_LOAD_CONFIG to\n  // avo"],[32360,0,"d the default behavior where errors raised during the parsing of the\n  // OpenSSL configuration file are not propagated and cannot be detected.\n  //\n  // I"],[32517,3,""],[32517,0,"FI"],[32520,1,""],[32520,0,"S is configure"],[32535,0," th"],[32539,0," OpenSSL con"],[32552,0,"igur"],[32557,0,"tion file will have an .incl"],[32586,0,"de\n  // pointing to the fipsmodu"],[32619,0,"e.cnf file generated by the openssl fipsinstall\n  // command. If the path "],[32694,0,"o this file is incorrect no error will be reported.\n  //\n  // For Node.js this will mean that EntropySource will be called by V8 as part\n  // of its initalization process, and EntropySource will in turn call\n  // CheckEntropy. CheckEntropy will call RAND"],[32949,0,"status which will now always\n  // return 0, leading to an endless loo"],[33019,0," and the node p"],[33036,0,"cess will ap"],[33050,0,"a"],[33052,0," "],[33054,0,"o\n  // hang/freeze.\n  std::str"],[33085,0,"ng "],[33089,0,"nv_opens"],[33098,0,"l"],[33100,0,"conf;\n  credent"],[33116,0,"als::SafeGetenv(\"OPENSSL_CONF\", &env_openssl_conf);\n\n  bool ha"],[33180,0,"cli_con"],[33188,0," = !per_process::cl"],[33208,0,"_o"],[33211,0,"tions->openssl_config.empty();\n  if (has_cli_conf || !env_openssl_conf.empty()) {\n    OPENSSL_INIT_SETTINGS* settings = OPENSSL_INIT_new();\n    OPENSSL_INIT_set_config_file_flags(settings, CONF_MFLAGS_DEFAULT_SECTION);\n    if (has_cli_conf) {\n      const char* conf = per_process::cli_options->openssl_config.c_"],[33523,0,"tr();\n      OPENSSL"],[33543,0,"INIT_s"],[33550,0,"t_co"],[33555,0,"fig_filen"],[33565,1,""],[33565,0,"me(settings, conf);\n    }\n    OPENSSL_init_crypto(OPENSSL_INIT_LOAD_CONFIG, settings);\n    OPENSSL_INIT_free(settings);\n\n    if (ERR_peek_error() != 0) {\n      resu"],[33730,0,"t."],[33733,0,"xit_co"],[33740,0,"e = ERR_GET_REASON"],[33759,1,""],[33759,0,"ERR_peek_error());\n      res"],[33789,0,"t.ear"],[33795,0,"y_return = true;\n      fprintf(stderr, \"O"],[33837,0,"enSSL configura"],[33853,0,"ion e"],[33859,0,"ror:\\n\""],[33867,0,";\n      ERR_print_errors_fp(stderr"],[33902,0,";\n      return result;\n   "],[33929,1,""],[33929,0,"}"],[33931,0,"  }\n"],[33982,0,"  }\n"],[33992,4,""]],"_dtSpan":[943380,945001]},{"parents":[942],"numChildren":1,"agent":35,"time":"1970-01-01T00:00:00Z","patches":[[1551,0,"-inl"]],"_dtSpan":[945001,945005]},{"parents":[943],"numChildren":1,"agent":184,"time":"1970-01-01T00:00:00Z","patches":[[32851,0,"i"]],"_dtSpan":[945005,945006]},{"parents":[944],"numChildren":1,"agent":148,"time":"1970-01-01T00:00:00Z","patches":[[6799,24,""],[30205,0,"return InitializeOncePerProcess(argc, argv, kDefaultInitialization);\n}\n\nInitializationResult InitializeOncePerProcess(\n  int argc,\n  char** argv,\n  InitializationSettingsFlags flags) {\n  uint64_t init_flags = flags;\n  if (init_flags & kDefaultInitialization) {\n    init_flags = init_flags | kInitializeV8 | kInitOpenSSL | kRunPlatformInit;\n  }\n\n  "],[30715,0,"\n"],[30718,0,"if (init_flags & kRun"],[30751,0,")\n    PlatformInit"],[32332,0,"  if (init_flags & kInitOpenSSL) {\n"],[32386,0,"  "],[32394,0,"  "],[32428,0,"  "],[32505,0,"  "],[32550,0,"  "],[32556,0,"  "],[32610,0,"  "],[32697,0,"  "],[32771,0,"  "],[32851,0,"  "],[32928,0,"  "],[32935,0,"  "],[33005,0,"\n    //"],[33021,5,""],[33082,0,"\n  "],[33086,0," // "],[33101,1,""],[33102,4,""],[33157,0,"\n"],[33159,0,"   // "],[33185,0,"  "],[33192,0,"  "],[33266,0,"\n    //"],[33278,2,""],[33279,3,""],[33348,0,"  "],[33426,0,"  "],[33506,0,"  "],[33526,0,"  "],[33560,0,"  "],[33625,0,"  "],[33700,0,"  "],[33755,0,"  "],[33815,0,"  "],[33896,0,"  "],[33924,0,"  "],[34001,0,"  "],[34057,0,"  "],[34065,0,"  "],[34128,0,"  "],[34164,0,"  "],[34201,0,"  "],[34262,0,"  "],[34298,0,"  "],[34357,0,"  "],[34394,0,"  "],[34415,0,"  "],[34421,0,"  "],[34433,0,"  "],[34458,0,"  "],[34478,0,"  "],[34491,0,"  "],[34564,0,"  "],[34587,0,"  "],[34658,0,"}"],[34773,0,"if (init_flags & kInitialize"],[34803,0,") {\n    V8"],[34831,0,"}\n\n  "],[34929,0,"\n"]],"_dtSpan":[945006,945626]},{"parents":[945],"numChildren":1,"agent":33,"time":"1970-01-01T00:00:00Z","patches":[[34491,0,"if (!crypto::ProcessFipsOptions()) {\n      result.exit_code = ERR_GET_REASON(ERR_peek_error());\n      result.early_return = true;\n   "],[34626,0," fprintf(stderr, \"OpenSSL error when trying to enable FIPS:\\n\");\n      ERR_print_errors_fp(stderr);\n      return result;\n  }\n\n  "],[34825,2,""],[34844,2,""]],"_dtSpan":[945626,945891]},{"parents":[946],"numChildren":1,"agent":83,"time":"1970-01-01T00:00:00Z","patches":[[36119,2,""],[36119,0,"ic"],[36459,2,""],[36459,0,"ic"],[36501,2,""],[36501,0,"ic"],[36957,2,""],[36957,0,"ic"]],"_dtSpan":[945891,945907]},{"parents":[947],"numChildren":1,"agent":103,"time":"1970-01-01T00:00:00Z","patches":[[36192,4,""],[36192,0,"us"],[36198,0,"de"],[36259,3,""],[36282,5,""],[36282,0,"us"],[36288,0,"de"]],"_dtSpan":[945907,945927]},{"parents":[948],"numChildren":1,"agent":148,"time":"1970-01-01T00:00:00Z","patches":[[32383,0," && !defined(OPENSSL_IS_BORINGSSL)"],[34948,0," && !defined(OPENSSL_IS_BORINGSSL)"]],"_dtSpan":[945927,945995]},{"parents":[949],"numChildren":1,"agent":11,"time":"1970-01-01T00:00:00Z","patches":[[3920,0,"Try"]],"_dtSpan":[945995,945998]},{"parents":[950],"numChildren":1,"agent":56,"time":"1970-01-01T00:00:00Z","patches":[[24610,269,""]],"_dtSpan":[945998,946267]},{"parents":[951],"numChildren":1,"agent":29,"time":"1970-01-01T00:00:00Z","patches":[[26206,0,"return InitializeNodeWithArgs(argv, exec_argv, errors,\n                                ProcessFlags::kNoFlags);\n}\n\nint InitializeNodeWithArgs(std::vector<std::string>* argv,\n                           std::vector<std::string>* exec_argv,\n                           std::vector<std::string>* errors,\n                           ProcessFlags::Flags flags) {\n  "],[26879,0,"if (!(flags & ProcessFlags::kEnableStdioInheritance))\n    "],[27480,0,"if (!(flags & ProcessFlags::kDi"],[27512,0,"ableNodeOp"],[27523,0,"ionsEnv)) {\n    st"],[27568,0,"  "],[27636,0,"  "],[27682,0,"  "],[27735,0,"  "],[27774,0,"  "],[27854,0,"  "],[27909,0,"  "],[28006,0,"  "],[28061,0,"  "],[28115,0,"  "],[28145,0,"  "],[28187,0,"  "],[28191,0,"  }\n"],[28205,0,"if (!(flags & ProcessFlags::kDisableCLIOptions)) {\n    "],[28348,0,"  "],[28403,0,"  "],[28455,0,"  "],[28486,0,"  "],[28526,0,"  }\n"],[28765,0,"if (!(flags & ProcessFlags::kNoICU)) {\n    "],[28865,0,"  "],[28923,0,"  "],[28994,0,"  "],[29074,0,"  "],[29151,0,"  "],[29194,0,"  "],[29254,0,"  "],[29331,0,"  "],[29362,0,"  "],[29404,0,"  "],[29464,0,"  "],[29505,0,"  "],[29533,0,"  "],[29552,0,"  "],[29626,0,"  "],[29632,0,"  "],[29676,0,"  "],[29699,0,"  "],[29770,0,"  "],[29853,0,"  "],[29923,0,"  "],[29986,0,"  "],[30000,0,"  "],[30006,0,"  "],[30065,0,"  }\n"],[30784,0,",\n  ProcessFlags::Flags process_flags"],[31545,5,""],[31546,3,""],[31569,0,"\n        "],[31622,0,", process_flags"]],"_dtSpan":[946267,947000]},{"parents":[952],"numChildren":1,"agent":13,"time":"1970-01-01T00:00:00Z","patches":[[24610,0,"// TODO(aduh95): remove this when the harmony-import-assertions flag\n  // is removed in V8.\n  if (std::find(v8_args.begin(), v8_args.end(),\n                \"--no-harmony-import-assertions\") == v8_args.end()) {\n    v8_args.push_back(\"--harmony-import-assertions\");\n  }\n\n  "]],"_dtSpan":[947000,947271]},{"parents":[953],"numChildren":0,"agent":165,"time":"1970-01-01T00:00:00Z","patches":[[30498,0,"  // defined(NODE_HAVE_I18N_SUPPORT)"],[35222,0,"  // OPENSSL_VERSION_MAJOR < 3"]],"_dtSpan":[947271,947337]}]}
